Section Header

  + name        := TYPES_SET;

  - comment     := "Aliser TYPE collection.";

Section Inherit

  - parent_types:TYPES := TYPES;

Section TYPES_SET

  + storage:NATIVE_ARRAY TYPE;  
  
Section Public
  
  - first_index:INTEGER <-
  ( + result:INTEGER;
    (count = 0).if {
      result := -1;
    };
    result
  );
  
  + count:INTEGER;
  
  - next_index i:INTEGER :INTEGER <-
  ( + result:INTEGER;
    
    (i < count-1).if {
      result := i + 1;
    } else {
      result := -1;
    };
    result
  );
  
  - first:TYPE <-
  (
    item 0
  );
  
  - item i:INTEGER :TYPE <-
  (
    storage.item i
  );
  
  //
  // Display.
  //

  - types_append_in buf:STRING_BUFFER <-
  ( 
    (! is_empty).if {
      0.to (count - 2) do { j:INTEGER;
	item j.append_name_in buf;
	buf.add_last '(';
	item j.index.append_in buf;
	buf.append ") x ";
      };
      item (count-1).append_name_in buf;
      buf.add_last '(';
      item (count-1).index.append_in buf;
      buf.add_last ')';
    } else {
      buf.append "<Vide>";
    };
  );

Section TYPES_TMP

  - create tab:TYPES_TMP :Strict TYPES_SET <-
  ( + result:SELF;

    result := clone;
    result.make tab;
    result
  );

  - make tab:TYPES_TMP <-
  ( 
    count := tab.count;
    storage := NATIVE_ARRAY TYPE .calloc_intern count;
    storage.copy_from (tab.storage) until (count-1);
  );
