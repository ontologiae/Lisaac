///////////////////////////////////////////////////////////////////////////////
//                              Lisaac Example                               //
//                                                                           //
//                   LSIIT - ULP - CNRS - INRIA - FRANCE                     //
//                                                                           //
//   This program is free software: you can redistribute it and/or modify    //
//   it under the terms of the GNU General Public License as published by    //
//   the Free Software Foundation, either version 3 of the License, or       //
//   (at your option) any later version.                                     //
//                                                                           //
//   This program is distributed in the hope that it will be useful,         //
//   but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           //
//   GNU General Public License for more details.                            //
//                                                                           //
//   You should have received a copy of the GNU General Public License       //
//   along with this program.  If not, see <http://www.gnu.org/licenses/>.   //
//                                                                           //
//                     http://isaacproject.u-strasbg.fr/                     //
///////////////////////////////////////////////////////////////////////////////
Section Header
  
  + name        := CALC;
  
  - author      := "Sonntag Benoit (bsonntag@loria.fr)";
  - comment     := "Calc application.";
  
Section Inherit
  
  - parent_object:OBJECT := OBJECT;
  
Section Public
  
  - main <-
  ( + e:EXPR;
    + result:INTEGER;
    
    (COMMAND_LINE.count != 2).if {
      "Usage :\n  ".print;
      COMMAND_LINE.executable_name.print;
      " <Arithmetic expression>\n\
      \Example :\n  ".print;
      COMMAND_LINE.executable_name.print;
      " \"(1-2)+(3+2*-5)\"\n".print;
    } else {
      e := PARSE_EXPR.parse (COMMAND_LINE.item 1);      
      result := e.value;
      "Result : ".print;
      result.print;
      '\n'.print;
    };
  );
