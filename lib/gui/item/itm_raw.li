/***************************************************************************
*                      Isaac Object Operating System                       *
*                             Isaac Library                                *
*                      LORIA - UHP - INRIA - FRANCE                        *
*                   Benoit SONNTAG - bsonntag@loria.fr                     *
*                          http://www.IsaacOS.com                          *
****************************************************************************/
section HEADER
  
  + name        := ITM_RAW;
  
  - comment     := "Raw plateform.";
  
  - category    := MICRO;
  
  - bibliography:= "http://IsaacOS.com";
  
  - author      := "Benoit Sonntag (bsonntag@loria.fr)";
  
section INHERIT
  
  * parent_gui_item:GUI_ITEM;
    
section PUBLIC  
  
  //
  // Creation.
  //
  
  - create_in f:AREA at x,y:INTEGER action a:INBOX with lab:GUI_LABEL :SELF <-
  ( + result:SELF;
        
    result:=clone;
    result.make_in f at x,y size (lab.width_min),(lab.height_min) action a with lab;
    
    result
  );
  
  //
  // Auto-position.
  //
  
  - create a:INBOX with lab:GUI_LABEL :SELF <-
  ( + result:SELF;
        
    result:=clone;
    result.make (lab.width_min),(lab.height_min) action a with lab;
    
    result
  );
  
  //
  // Action.
  // 
  
  - receive msg:EVENT <-
  (
    receive_nothing msg;
    label.receive msg;
  );
  
  //
  // Display.
  //
  
  - draw x0,y0:INTEGER to x1,y1:INTEGER <-
  ( + px0,py0,px1,py1:INTEGER;    
    
    clipping x0,y0 to x1,y1;
    
    px0 := (width  - label.width_min ) >> 1;
    py0 := (height - label.height_min) >> 1;
    px1 := px0 + label.width_min  - 1;
    py1 := py0 + label.height_min - 1;
    
    color color_back;
    (py0 > y_min).if { // Top
      rectangle_fill x_min,y_min to x_max,(py0-1);
    };
    (py1 < y_max).if { // Bottom
      rectangle_fill x_min,(py1+1) to x_max,y_max;      
    };
    (px0 > x_min).if { // Left
      rectangle_fill x_min,py0 to (px0-1),py1;
    };
    (px1 < x_max).if { // Right
      rectangle_fill (px1+1),py0 to x_max,py1;
    };
    backcolor color_back;
    color black;    
    label.display_in self to px0,py0;
  );
  





