/***************************************************************************
*                      Isaac Object Operating System                       *
*                             Isaac Library                                *
*                      LORIA - UHP - INRIA - FRANCE                        *
*                   Jerome BOUTET  - boutet@loria.fr                       *
*                   Benoit SONNTAG - bsonntag@loria.fr                     *
*                          http://www.IsaacOS.com                          *
****************************************************************************/

section HEADER
  
  + name        := GUI_CHECK_LIST;
  
  - comment     := "Check.";
  
  - category    := MICRO;
  
  - bibliography:= "http://IsaacOS.com";
  
  - author      := "Benoit Sonntag (bsonntag@loria.fr)";
  
section INHERIT
  
  * parent_item:ITEM;
    
section PUBLIC  
  
  - is_check:BOOLEAN <- (stat & 10b) != 0;

  + list:LINKED_LIST[GUI_CHECK_LIST];
  
  //
  // Creation.
  //
  
  - create_in f:AREA at x,y:INTEGER label txt:ABSTRACT_STRING action a:INBOX list lst:LINKED_LIST[GUI_CHECK_LIST] :SELF <-
  ( + result:SELF;
    
    result:=clone;
    result.make_in f at x,y label txt action a list lst;
    
    result
  );

  - make_in f:AREA at x,y:INTEGER label txt:ABSTRACT_STRING action a:INBOX list lst:LINKED_LIST[GUI_CHECK_LIST] <-
  ( + len:INTEGER;
    
    list := lst;
    list.add_last self;
    len := font_width txt + 20;
    make_in f at x,y size len,16 label txt action a;
  );
  
  //
  // Action.
  // 
  
  - receive msg:EVENT <-
  ( + mouse:EVENT_MOUSE;
    + win:AREA;    
    + new_stat, stat2:INTEGER;
    
    mouse ?= msg;
    (mouse != NULL).if {
      win := INTERFACE.get_object (mouse.x_current),(mouse.y_current);
      new_stat := (win = self).to_numeric | (stat & 10b) | (mouse.left_up.to_numeric.to_integer << 1);
      (new_stat != stat).if {
	(stat != -1).if {
	  ((new_stat = 3) && {(stat & 10b) = 0}).if {
	    (list.lower).to (list.upper) do { j:INTEGER;
	      stat2 := list.item j.stat;
	      (((stat2 & 10b) != 0) && {stat2 != -1}).if {
		list.item j.set_stat 0;
	      };
	    };
	    stat := 3;
	    // Action.
	    send action;
	  } else {
	    stat := new_stat;
	  };
	  refresh;
	};	  
	((new_stat & 01b) = 0).if {
	  // Change Focus.
	  INTERFACE.receive msg;
	};
      };
    };
  );
  
  //
  // Display.
  //
  
  - draw x0,y0:INTEGER to x1,y1:INTEGER <-
  (     
    clipping x0,y0 to x1,y1;
    
    rectangle_fill 0,0 to x_max,y_max color color_back;
    // Case
    color color_dark;
    move_to 1,7;
    line_to 7,1;
    line_to 13,7;
    color color_light;
    line_to 7,13;
    line_to 1,7;
    
    color color_back_light;
    poly_move_to 7,2;
    poly_line_to 12,7;
    poly_line_to 7,12;
    poly_line_to 2,7;
    poly_trace;
    
    ((stat & 10b) != 0).if {
      color black;
      poly_move_to 7,4;
      poly_line_to 10,7;
      poly_line_to 7,10;
      poly_line_to 4,7;
      poly_trace;
    };
    
    (stat = -1).if { 
      color color_dark;  
    }.elseif {(stat & 01b) = 0} then {
      color black;
    } else {
      color red;
    };
    print name to 19,0; 
  );
  





