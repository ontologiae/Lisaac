Section Header

  + name     := COLOR_BUFFER;

  - comment  := "abstract pixel color buffer";

Section Inherit

  - parent_object:OBJECT := OBJECT;

Section Public

  - rgb:INTEGER <- 0;
  - rgba:INTEGER <- 1;
  - red:INTEGER <- 2;
  - green:INTEGER <- 3;
  - blue:INTEGER <- 4;
  - alpha:INTEGER <- 5;
  - luminance:INTEGER <- 6; // grey (single component)
  - luminance_alpha:INTEGER <- 7; // grey+alpha
  - stencil_index:INTEGER <- 8;
  - depth_component:INTEGER <- 9;


  - clear <- deferred;
  - set_clear_value (r,g,b,a:REAL_32) <- deferred;

  - set_color c:COLOR <- deferred;
  - set_color3f (r,g,b:REAL_32) <- deferred;
  - set_color4f (r,g,b,a:REAL_32) <- deferred;

  - set_mask (r,g,b,a:BOOLEAN) <- deferred;

  - enable <- deferred;
  - disable <- deferred;

  //
  // FrameBuffer transfert functions
  //

  - read (x,y:INTEGER) size (w,h:INTEGER) type t:INTEGER in buf:FAST_ARRAY(UINTEGER_8) <- deferred;

  - read_rgb (x,y:INTEGER) size (w,h:INTEGER) in buf:FAST_ARRAY(UINTEGER_8) <- deferred;
  - read_rgba (x,y:INTEGER) size (w,h:INTEGER) in buf:FAST_ARRAY(UINTEGER_8) <- deferred;


  - draw_pixels pixels:FAST_ARRAY(UINTEGER_8) size (w,h:INTEGER) type t:INTEGER <- deferred;

  - draw_rgb_pixels pixels:FAST_ARRAY(UINTEGER_8) size (w,h:INTEGER) <- deferred;
  - draw_rgba_pixels pixels:FAST_ARRAY(UINTEGER_8) size (w,h:INTEGER) <- deferred;

  - copy (x,y:INTEGER) size (w,h:INTEGER) type t:INTEGER <- deferred;

  - copy_rgb (x,y:INTEGER) size (w,h:INTEGER) <- deferred;
  - copy_rgba (x,y:INTEGER) size (w,h:INTEGER) <- deferred;