/***************************************************************************
*                             Lisaac Library                               *
*                      (c) INRIA 2003 see 'licence.txt' for more details   *
*                      LORIA - UHP - INRIA - FRANCE                        *
*                   Jerome BOUTET  - boutet@loria.fr                       *
*                   Benoit SONNTAG - bsonntag@loria.fr                     *
*                          http://www.IsaacOS.com                          *
****************************************************************************/
section HEADER
  
  * name        := TIME;
  
  - category    := MICRO;
  
  - bibliography:= "http://IsaacOS.com";

  - author      := "Benoit Sonntag (bsonntag@loria.fr), Jerome Boutet (boutet@loria.fr)";  

  - comment     := "Time";
  
  - type        := `unsigned long`;
  
  - default     := `0`:TIME;
section INHERIT
  
  - parent_object:OBJECT := OBJECT;
  
section PRIVATE
  
  - to_raw:UINTEGER <-
  (
    UINTEGER.force_conversion self
  );
section PUBLIC

  - hour:USMALLINT <-
  (
    (to_raw >> 24).to_usmallint
  );
  
  - minute:USMALLINT <-
  (
    ((to_raw & 0FF0000h) >> 16).to_usmallint
  );
  
  - second:USMALLINT <-
  (
    ((to_raw & 0FF00h) >> 8).to_usmallint
  );

  - csecond:USMALLINT <-
  (
    (to_raw & 0FFh).to_usmallint
  );
  
section PUBLIC
  
  - '>' right 60 other:SELF :BOOLEAN <- to_raw > other.to_raw;
  
  - '<' right 60 other:SELF :BOOLEAN <- to_raw < other.to_raw;
  
  - '>=' right 60 other:SELF :BOOLEAN <- to_raw >= other.to_raw;
  
  - '<=' right 60 other:SELF :BOOLEAN <- to_raw <= other.to_raw;
  
  - to_csecond:INTEGER <- hour.to_integer * (60*60*100) + 
  minute.to_integer * (60*100) + 
  second.to_integer * 100 + 
  csecond;
  
  - '-' right 60 other:SELF :SELF <- 
  ( 
    create_csecond (self -# other)
  );
  
  // BSBS: A uniformiser -# +# ???
  
  - '-#' right 60 other:SELF :INTEGER <- to_csecond - other.to_csecond;
  
  - '+#' right 60 other:INTEGER :TIME <-
  ( 
    create_csecond (to_csecond + other)
  );
  
  - create h,m,s,cs:NUMERIC :TIME <-
  ( + t:UINTEGER;
    ? {h.in_range 0 to 23};
    ? {m.in_range 0 to 59};
    ? {s.in_range 0 to 59};
    ? {cs.in_range 0 to 99};
    
    t := h.to_uinteger <<24;
    t := t | (m.to_uinteger << 16);
    t := t | (s.to_uinteger << 8);
    t := t | cs;
    force_conversion t
  );
  
  - create_csecond csec:INTEGER :SELF <-
  ( + h,m,s,cs,diff:INTEGER;
    
    diff := csec;
    h := diff / (60*60*100);
    diff := diff % (60*60*100);
    
    m := diff / (60*100);
    diff := diff % (60*100);
    
    s := diff / 100;
    cs := diff % 100;    
    
    create h,m,s,cs
  );
  
  - to_string:STRING <-
  ( + result:STRING;
    result := STRING.create 8;
    append_in result;
    result
  );
  
  - append_in str:STRING <-
  (
    hour.append_in str format 2 with '0';
    str.add_last ':';
    minute.append_in str format 2 with '0';
    str.add_last ':';
    second.append_in str format 2 with '0';
    str.add_last ',';
    csecond.append_in str format 2 with '0';
  );
  
  - update <-
  (
    // JBJB A FAIRE !!    
  );
  
  - print <-
  (
    to_string.print;
  );



