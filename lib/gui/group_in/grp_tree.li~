/***************************************************************************
*                      Isaac Object Operating System                       *
*                             Isaac Library                                *
*                      LORIA - UHP - INRIA - FRANCE                        *
*                   Benoit SONNTAG - bsonntag@loria.fr                     *
*                          http://www.IsaacOS.com                          *
****************************************************************************/
section HEADER
  
  + name        := GRP_TREE;
  
  - comment     := "Tree representation";
  
  - category    := MICRO;
  
  - bibliography:= "http://IsaacOS.com";
  
  - author      := "Benoit Sonntag (bsonntag@loria.fr)";
  
section INHERIT
  
  * parent_gui:GUI;
  
section PUBLIC
  
  + root_item:GUI_ITEM;  
  
  + bmp_tree:AREA;
  
  //
  // Creation
  //
  
  - create_in f:AREA at x,y:INTEGER size w,h:INTEGER with itm:GUI_ITEM :SELF <- 
  ( + result:SELF;
    
    result := clone;
    result.make_in f at x,y size w,h with itm;
    result
  );

  - make_in f:AREA at x,y:INTEGER size w,h:INTEGER with itm:GUI_ITEM <-
  (
    root_item := itm;
    make_in f at x,y size w,h action self;
    // Clipping intern:
    bmp_tree := GUI_INTERN.create_in self at 1,1 size (w-2),(h-2).area;
    set_position itm at 2,2;
    refresh;
  );
  
  //
  // Line manager.
  //
  
  - set_position rac:GUI_ITEM at x,y:INTEGER :INTEGER <-
  ( + grp:ITM_GROUP;
    + itm:GUI_ITEM;
    + new_y,new_x:INTEGER;
    + is_open:BOOLEAN;
    
    grp ?= rac;
    (grp = NULL).if {
      rac.make bmp_tree from x,y size (rac.width_min),(rac.height_min);
      new_y := y + rac.height_min;
    } else {
      is_open := grp.operator = '|';
      new_x := x + 16;
      new_y := set_position (grp.itm_left) at new_x,y;
      (is_open).if {
	itm := grp.itm_right;
	grp ?= itm;
	{(grp != NULL) && {is_open}}.while_do {
	  is_open := grp.operator = '|';
	  new_y := set_position (grp.itm_left) at new_x,new_y;	
	  itm := grp.itm_right;
	  grp ?= itm;
	};
	(is_open).if {
	  new_y := set_position itm at new_x,new_y;
	};
      };
    };
    new_y
  );
  
  //
  // Display.
  //
  
  - draw x0,y0:INTEGER to x1,y1:INTEGER <-
  ( + h,w:INTEGER;
    + xx0,yy0,xx1,yy1:INTEGER;
    
    clipping x0,y0 to x1,y1;    
    border_in x_min,y_min to x_max,y_max;
    (bmp_tree != NULL).if {  
      xx0 := x0 + x_window - bmp_tree.x_window;
      yy0 := y0 + y_window - bmp_tree.y_window;
      xx1 := x1 + x_window - bmp_tree.x_window;
      yy1 := y1 + y_window - bmp_tree.y_window;            
      bmp_tree.clipping xx0,yy0 to xx1,yy1;      
      bmp_tree.rectangle_fill 0,0 to (bmp_tree.x_max),(bmp_tree.y_max) color color_back_light;
      bmp_width_max := width;
      h := (sub_draw root_item at 2,2 + 2).max height;
      w := bmp_width_max;
      ((h != bmp_tree.height) || {w != bmp_tree.width}).if {
	bmp_tree.resize w,h;
      };
    };
  );
  
section PRIVATE  
  
  + bmp_width_max:INTEGER;
  
  - sub_draw rac:GUI_ITEM at x,y:INTEGER :INTEGER <-
  ( + grp:ITM_GROUP;
    + itm:GUI_ITEM;
    + new_y,old_y,w:INTEGER;
    + is_open:BOOLEAN;
    
    grp ?= rac;
    (grp = NULL).if {      
      new_y := y + rac.height_min;
      w := rac.get_x_window + rac.width + 2;
      (bmp_width_max < w).if {
	bmp_width_max := w;
      };
    } else {
      is_open := grp.operator = '|';
      node x,(y+3) stat is_open;
      old_y := y+3+9;
      new_y := sub_draw (grp.itm_left) at (x+16),y;      
      (is_open).if {
	itm := grp.itm_right;
	grp ?= itm;
	{(grp != NULL) && {is_open}}.while_do {
	  bmp_tree.line_v (x+4),old_y until (new_y-1+3) color red; 
	  is_open := grp.operator = '|';
	  node x,(new_y+3) stat is_open;
	  old_y := new_y+3+9;
	  new_y := sub_draw (grp.itm_left) at (x+16),new_y;
	  itm := grp.itm_right;
	  grp ?= itm;
	};
	(is_open).if {
	  bmp_tree.line_v (x+4),old_y until (new_y+8) color red;       
	  bmp_tree.line_h_until (x+15) color red;      
	  new_y := sub_draw itm at (x+16),new_y;
	};
      };
    };
    new_y
  );
  
  - node x,y:INTEGER stat is_open:BOOLEAN <-
  (
    bmp_tree.rectangle_fill (x+1),(y+1) to (x+7),(y+7) color white;
    bmp_tree.rectangle x,y to (x+8),(y+8) color black;    
    bmp_tree.line_h (x+2),(y+4) until (x+6); 
    (is_open).if_false {
      bmp_tree.line_v (x+4),(y+2) until (y+6); 
    };
    bmp_tree.line_h (x+9),(y+4) until (x+15) color red;
  );
  
section PUBLIC
      
  //
  // Event.
  //  
  
  - receive msg:EVENT <-  
  ( + evt_mouse:EVENT_MOUSE;
    + win:AREA;    
    
    evt_mouse ?= msg;
    (evt_mouse != NULL).if { 
      win := INTERFACE.get_object (evt_mouse.x_current),(evt_mouse.y_current);
      (win != self).if {
	INTERFACE.receive msg;
      };
    };    
  );
  
  
