Section Header

  + name    := Expanded UREAL_26_6;

  - export  := REAL_32, REAL_64;

  - copyright   := "2003-2005 JÃ©rome Boutet, 2003-2007 Benoit Sonntag";

  - comment := "unsigned 26.6 fixed float.";

  - type    := `unsigned long`;
  - default := (0.to_raw_ureal_26_6);

Section Insert

  - parent_unsigned_fixed_real:UNSIGNED_FIXED_REAL := UNSIGNED_FIXED_REAL;

Section SELF

  - shift_bits:INTEGER <- 6;

Section Public

  //
  // Range.
  //

  - maximum:UINTEGER_64 <- 3FF_FFFFh.to_raw_uinteger_64;

  //
  // Convertion format with test.
  //

  - to_ureal_26_6:UREAL_26_6 <- Self;

  //
  // Convertion
  //

  - append_in buffer:STRING_BUFFER <-
  // Append in the `buffer' the equivalent of `to_string'. No new STRING_BUFFER
  // creation during the process.
  ( + val:UINTEGER_32;
    + old_count,new_count:INTEGER;
    ? {buffer!=NULL};

    val := to_raw_uinteger_32;
    (val >> 6).append_in buffer;
    buffer.extend '.';
    old_count:=buffer.count;
    //     1/64 = 0.015625 => 6 digit.
    (((val & 63) * 1000000)>>6).append_in buffer;
    new_count:=old_count+6;
    {buffer.count!=new_count}.while_do {
      buffer.insert '0' to old_count;
    };

  );










