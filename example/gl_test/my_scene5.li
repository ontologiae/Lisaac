Section Header
  
  + name     := MY_SCENE5;
  
  - comment   := "first program";
  
Section Inherit
  
  + parent_scene:Expanded SCENE;
    
  - parent_test_any:TEST_ANY := TEST_ANY;
  
Section Public  
  
  - main <-
  (
    start_test Self using CAPABILITIES;
  );
  
Section Public
  
  //
  //  test lighting
  //
  
  + sphere1:SPHERE;
  + sphere2:SPHERE;
  
  + light:LIGHT;
  + m1:MATERIAL;
  + m2:MATERIAL;
  
  + light_position:VECTOR3(REAL_32);
  
  - initialize:BOOLEAN <-
  (
    + ambient,diffuse,specular,emission:COLOR;
    + shine:REAL_32;
    
    sphere1 := SPHERE.create (VECTOR3(REAL_32).create (-0.2,0,-1),0.2,100,100);
    sphere2 := SPHERE.create (VECTOR3(REAL_32).create (0.2,0,-1),0.2,100,100);
    
    ambient := RGB.create (0.2, 0.2, 0.2); // lumiere blanche
    diffuse := RGB.create (1.0, 0.0, 1.0);
    specular := RGB.create (1.0, 1.0, 1.0);
    
    light_position := VECTOR3(REAL_32).create (0,0,1);
    light := renderer.light.create (ambient,diffuse,specular) at light_position;
    
    ambient := RGB.create (0.7, 0.7, 0.7); 
    diffuse := RGB.create (0.1, 0.5, 0.9);
    specular := RGB.create (0.0, 1.0, 1.0);
    emission := RGB.create (0.3, 0.2, 0.2);
    shine := 100.0;
    
    m1 := renderer.material.create (ambient,diffuse,specular,emission,shine);
    
    ambient := RGB.create (0.0, 0.0, 0.0); 
    diffuse := RGB.create (0.9, 0.5, 0.0);
    specular := RGB.create (1.0, 1.0, 1.0);
    emission := RGB.create (0.3, 0.2, 0.2);
    shine := 3.0;
    
    m2 := renderer.material.create (ambient,diffuse,specular,emission,shine);
    
    renderer.enable_lighting;    
    TRUE
  );
  
  + spin:INTEGER;
  
  - render t:REAL_32 <-
  (   
    spin := (spin + (t*300).to_integer) % 360;
    
    renderer.transform.push_matrix;
    //--
    renderer.transform.translatef(0.0, 0.0, -1.0);
    renderer.transform.rotatef(spin.to_real, 1.0, 0.0, 0.0);
    renderer.transform.rotatef(0.0, 1.0, 0.0, 0.0);

    light.set_position light_position;
    light.enable;
    //--
    renderer.transform.pop_matrix;
    
    m1.apply (MATERIAL.mode_front);
    sphere1.render;
    
    m2.apply (MATERIAL.mode_front);
    sphere2.render;
  );
  
