////////////////////////////////////////////////////////////////////////////////
//                                                                            //
//                               Lisaac Library                               //
//                                                                            //
//                        LORIA - UHP - INRIA - FRANCE                        //
//               (c) INRIA (see `licence.txt' for more details)               //
//                     Benoit SONNTAG - bsonntag@loria.fr                     //
//                     Jerome BOUTET  - boutet@loria.fr                       //
//                           http://www.IsaacOS.com                           //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////
/*
Copyright (C) 2005  Benoit Sonntag

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Library General Public
License as published by the Free Software Foundation; either
version 2 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Library General Public License for more details.

You should have received a copy of the GNU Library General Public
License along with this library; if not, write to the
Free Software Foundation, Inc., 51 Franklin St, Fifth Floor,
Boston, MA  02110-1301, USA.
*/
Section Header
  
  + name        := NODE_COMPOSITE;
  
  - bibliography:= "http://IsaacOS.com";
  - author      := "Sonntag Benoit (bsonntag@loria.fr)";
  - comment     := "The composite tree node.";
  
Section Inherit
  
  + parent_node:Expanded NODE;
  
Section Public  
  
  + children:LINKED_LIST[NODE];
  
  - add n:NODE <-
  (
    children.add_last n;
  );
  
  //
  // Creation.
  //
    
  - make lab:ABSTRACT_STRING <-
  ( 
    parent_node.make lab;
    children := LINKED_LIST[NODE].create;
  );
  
  //
  // Display.
  //
  
  - print <-
  (
    parent_node.print;
    (children.is_empty).if_false {
      indent.append "  ";
      (children.lower).to (children.upper) do { j:INTEGER; 
	children.item j.print;
      };
      indent.remove_last 2;
    };
  );














