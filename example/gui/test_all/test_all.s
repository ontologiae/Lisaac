	.file	"test_all.c"
gcc2_compiled.:
___gnu_compiled_c:
.globl ___index_font
.data
	.p2align 5
___index_font:
	.word 0
	.word 7
	.word 8
	.word 11
	.word 18
	.word 23
	.word 33
	.word 40
	.word 41
	.word 44
	.word 47
	.word 52
	.word 57
	.word 59
	.word 63
	.word 64
	.word 68
	.word 73
	.word 76
	.word 81
	.word 86
	.word 91
	.word 96
	.word 101
	.word 106
	.word 111
	.word 116
	.word 117
	.word 119
	.word 124
	.word 129
	.word 134
	.word 139
	.word 151
	.word 160
	.word 167
	.word 175
	.word 183
	.word 190
	.word 197
	.word 205
	.word 213
	.word 214
	.word 219
	.word 226
	.word 232
	.word 241
	.word 249
	.word 257
	.word 265
	.word 273
	.word 282
	.word 289
	.word 298
	.word 306
	.word 315
	.word 328
	.word 336
	.word 345
	.word 351
	.word 354
	.word 358
	.word 361
	.word 366
	.word 373
	.word 375
	.word 382
	.word 388
	.word 394
	.word 400
	.word 406
	.word 409
	.word 415
	.word 420
	.word 421
	.word 423
	.word 429
	.word 430
	.word 439
	.word 444
	.word 450
	.word 456
	.word 462
	.word 465
	.word 470
	.word 473
	.word 478
	.word 485
	.word 494
	.word 500
	.word 507
	.word 511
	.word 516
	.word 517
	.word 522
	.word 529
.globl ___graph_font
	.p2align 5
___graph_font:
	.word 0
	.word 0
	.word 0
	.word 0
	.word 0
	.word 0
	.word 0
	.word 6136
	.word 120
	.word 0
	.word 120
	.word 512
	.word 7744
	.word 960
	.word 7800
	.word 960
	.word 632
	.word 64
	.word 2272
	.word 4368
	.word 16376
	.word 4368
	.word 3680
	.word 48
	.word 2120
	.word 1096
	.word 560
	.word 256
	.word 128
	.word 3136
	.word 4640
	.word 4624
	.word 3072
	.word 3584
	.word 4464
	.word 4232
	.word 4488
	.word 5744
	.word 2048
	.word 5120
	.word 120
	.word 8128
	.word 24624
	.word 32776
	.word 32776
	.word 24624
	.word 8128
	.word 80
	.word 96
	.word 56
	.word 96
	.word 80
	.word 256
	.word 256
	.word 1984
	.word 256
	.word 256
	.word 8192
	.word 4096
	.word 256
	.word 256
	.word 256
	.word 256
	.word 4096
	.word 28672
	.word 3584
	.word 448
	.word 56
	.word 4080
	.word 4104
	.word 4104
	.word 4104
	.word 4080
	.word 16
	.word 16
	.word 8184
	.word 7216
	.word 4616
	.word 4360
	.word 4232
	.word 4208
	.word 2064
	.word 4104
	.word 4232
	.word 4232
	.word 3952
	.word 768
	.word 640
	.word 608
	.word 528
	.word 8184
	.word 2552
	.word 4232
	.word 4232
	.word 4232
	.word 3848
	.word 4080
	.word 4360
	.word 4232
	.word 4232
	.word 3856
	.word 8
	.word 7176
	.word 776
	.word 200
	.word 56
	.word 3952
	.word 4232
	.word 4232
	.word 4232
	.word 3952
	.word 2288
	.word 4360
	.word 4360
	.word 4232
	.word 4080
	.word 4160
	.word 8192
	.word 4160
	.word 256
	.word 896
	.word 1728
	.word 3168
	.word 2080
	.word 640
	.word 640
	.word 640
	.word 640
	.word 640
	.word 2080
	.word 3168
	.word 1728
	.word 896
	.word 256
	.word 48
	.word 8
	.word 5896
	.word 136
	.word 112
	.word 960
	.word 3120
	.word 4104
	.word 4104
	.word 9092
	.word 9284
	.word 9284
	.word 8772
	.word 9672
	.word 5128
	.word 5168
	.word 960
	.word 6144
	.word 1536
	.word 896
	.word 608
	.word 536
	.word 608
	.word 896
	.word 1536
	.word 6144
	.word 8184
	.word 4232
	.word 4232
	.word 4232
	.word 4232
	.word 4232
	.word 3952
	.word 2016
	.word 2064
	.word 4104
	.word 4104
	.word 4104
	.word 4104
	.word 2064
	.word 1056
	.word 8184
	.word 4104
	.word 4104
	.word 4104
	.word 4104
	.word 4104
	.word 2064
	.word 2016
	.word 8184
	.word 4232
	.word 4232
	.word 4232
	.word 4232
	.word 4232
	.word 4104
	.word 8184
	.word 136
	.word 136
	.word 136
	.word 136
	.word 136
	.word 8
	.word 2016
	.word 2064
	.word 4104
	.word 4104
	.word 4104
	.word 4360
	.word 2320
	.word 7968
	.word 8184
	.word 128
	.word 128
	.word 128
	.word 128
	.word 128
	.word 128
	.word 8184
	.word 8184
	.word 3072
	.word 4096
	.word 4096
	.word 4096
	.word 4088
	.word 8184
	.word 128
	.word 320
	.word 544
	.word 1040
	.word 2056
	.word 4096
	.word 8184
	.word 4096
	.word 4096
	.word 4096
	.word 4096
	.word 4096
	.word 8184
	.word 96
	.word 384
	.word 1536
	.word 6144
	.word 1536
	.word 384
	.word 96
	.word 8184
	.word 8184
	.word 16
	.word 96
	.word 128
	.word 256
	.word 1536
	.word 2048
	.word 8184
	.word 2016
	.word 2064
	.word 4104
	.word 4104
	.word 4104
	.word 4104
	.word 2064
	.word 2016
	.word 8184
	.word 264
	.word 264
	.word 264
	.word 264
	.word 264
	.word 144
	.word 96
	.word 2016
	.word 2064
	.word 4104
	.word 4104
	.word 4104
	.word 5128
	.word 2064
	.word 6112
	.word 8184
	.word 264
	.word 264
	.word 264
	.word 264
	.word 264
	.word 400
	.word 3680
	.word 4096
	.word 3184
	.word 4232
	.word 4232
	.word 4232
	.word 4360
	.word 4360
	.word 3632
	.word 8
	.word 8
	.word 8
	.word 8
	.word 8184
	.word 8
	.word 8
	.word 8
	.word 8
	.word 2040
	.word 2048
	.word 4096
	.word 4096
	.word 4096
	.word 4096
	.word 2048
	.word 2040
	.word 24
	.word 96
	.word 384
	.word 1536
	.word 6144
	.word 1536
	.word 384
	.word 96
	.word 24
	.word 56
	.word 192
	.word 1792
	.word 6144
	.word 1792
	.word 192
	.word 56
	.word 192
	.word 1792
	.word 6144
	.word 1792
	.word 192
	.word 56
	.word 6168
	.word 1056
	.word 576
	.word 384
	.word 384
	.word 576
	.word 1056
	.word 6168
	.word 24
	.word 32
	.word 64
	.word 128
	.word 7936
	.word 128
	.word 64
	.word 32
	.word 24
	.word 6152
	.word 5640
	.word 4360
	.word 4232
	.word 4200
	.word 4120
	.word 65528
	.word 32776
	.word 32776
	.word 56
	.word 448
	.word 3584
	.word 28672
	.word 32776
	.word 32776
	.word 65528
	.word 16
	.word 8
	.word 4
	.word 8
	.word 16
	.word 16384
	.word 16384
	.word 16384
	.word 16384
	.word 16384
	.word 16384
	.word 16384
	.word 8
	.word 16
	.word 3712
	.word 4416
	.word 4416
	.word 4416
	.word 4416
	.word 3968
	.word 4096
	.word 8184
	.word 2176
	.word 4160
	.word 4160
	.word 4160
	.word 3968
	.word 3968
	.word 4160
	.word 4160
	.word 4160
	.word 4160
	.word 2176
	.word 3968
	.word 4160
	.word 4160
	.word 4160
	.word 2176
	.word 8184
	.word 3968
	.word 4672
	.word 4672
	.word 4672
	.word 4672
	.word 2944
	.word 64
	.word 8176
	.word 72
	.word 3968
	.word 36928
	.word 36928
	.word 36928
	.word 34944
	.word 32704
	.word 8184
	.word 128
	.word 64
	.word 64
	.word 8064
	.word 8136
	.word 32768
	.word 32712
	.word 8184
	.word 512
	.word 768
	.word 1152
	.word 2112
	.word 4096
	.word 8184
	.word 8128
	.word 128
	.word 64
	.word 64
	.word 8064
	.word 128
	.word 64
	.word 64
	.word 8064
	.word 8128
	.word 128
	.word 64
	.word 64
	.word 8064
	.word 3968
	.word 4160
	.word 4160
	.word 4160
	.word 4160
	.word 3968
	.word 65472
	.word 2176
	.word 4160
	.word 4160
	.word 4160
	.word 3968
	.word 3968
	.word 4160
	.word 4160
	.word 4160
	.word 2176
	.word 65472
	.word 8128
	.word 128
	.word 64
	.word 2432
	.word 4672
	.word 4672
	.word 4672
	.word 3200
	.word 64
	.word 4080
	.word 4160
	.word 4032
	.word 4096
	.word 4096
	.word 2048
	.word 8128
	.word 192
	.word 768
	.word 3072
	.word 4096
	.word 3072
	.word 768
	.word 192
	.word 192
	.word 1792
	.word 6144
	.word 1792
	.word 192
	.word 1792
	.word 6144
	.word 1792
	.word 192
	.word 4160
	.word 2176
	.word 1792
	.word 1792
	.word 2176
	.word 4160
	.word 32960
	.word 33536
	.word 19456
	.word 12288
	.word 3072
	.word 768
	.word 192
	.word 6208
	.word 5696
	.word 4416
	.word 4288
	.word 512
	.word 512
	.word 32240
	.word 32776
	.word 32776
	.word 65528
	.word 32776
	.word 32776
	.word 32240
	.word 512
	.word 512
	.word 48
	.word 8
	.word 8
	.word 16
	.word 32
	.word 32
	.word 24
.globl ___string_0
.text
LC0:
	.ascii "\33\10\11\15\0"
.data
	.p2align 2
___string_0:
	.long LC0
.globl ___string_1
.text
LC1:
	.ascii "'\220~#{[|`\\^@]}\0"
.data
	.p2align 2
___string_1:
	.long LC1
.globl ___string_2
.text
	.p2align 5
LC2:
	.ascii "\0&\202\"'(-\212_\207\205)=\1\2azertyuiop^$\3^qsdfghjklm\227\375^*wxcvbn,;:!^*^ \0"
.data
	.p2align 2
___string_2:
	.long LC2
.globl ___string_3
.text
	.p2align 5
LC3:
	.ascii "\0"
	.ascii "1234567890\370+\1\2AZERTYUIOP\371\234\3^QSDFGHJKLM%\375^\346WXCVBN?./\25^*^ \0"
.data
	.p2align 2
___string_3:
	.long LC3
.globl ___string_4
.text
LC4:
	.ascii "789-456+1230.\0"
.data
	.p2align 2
___string_4:
	.long LC4
.globl ___string_5
.text
LC5:
	.ascii "\15BEISRLUDZAH\0"
.data
	.p2align 2
___string_5:
	.long LC5
.globl ___string_6
.text
LC6:
	.ascii "7\34"
	.ascii "4\33FNQRLJGOPH6\0"
.data
	.p2align 2
___string_6:
	.long LC6
.globl ___string_7
.text
LC7:
	.ascii "GUI_BUTTON\0"
.data
	.p2align 2
___string_7:
	.long LC7
.globl ___string_8
.text
LC8:
	.ascii "Object GUI_CHECK\0"
.data
	.p2align 2
___string_8:
	.long LC8
.globl ___string_9
.text
LC9:
	.ascii "Object GUI_CHECK_LIST 1\0"
.data
	.p2align 2
___string_9:
	.long LC9
.globl ___string_10
.text
LC10:
	.ascii "Object GUI_CHECK_LIST 2\0"
.data
	.p2align 2
___string_10:
	.long LC10
.globl ___string_11
.text
LC11:
	.ascii "Object GUI_CHECK_LIST 3\0"
.data
	.p2align 2
___string_11:
	.long LC11
.globl ___string_12
.text
LC12:
	.ascii "save.bmp\0"
.data
	.p2align 2
___string_12:
	.long LC12
.globl ___string_13
.text
LC13:
	.ascii "ERROR: File '\0"
.data
	.p2align 2
___string_13:
	.long LC13
.globl ___string_14
.text
LC14:
	.ascii "' not found.\12\0"
.data
	.p2align 2
___string_14:
	.long LC14
.globl ___string_15
.text
LC15:
	.ascii "Error: BMP format invalid.\12\0"
.data
	.p2align 2
___string_15:
	.long LC15
.globl ___string_16
.text
LC16:
	.ascii "object GUI_IN_INTEGER : \0"
.data
	.p2align 2
___string_16:
	.long LC16
.globl ___string_17
.text
LC17:
	.ascii "object GUI_IN_TEXT : \0"
.data
	.p2align 2
___string_17:
	.long LC17
.globl ___string_18
.text
LC18:
	.ascii "Vertical elevator\0"
.data
	.p2align 2
___string_18:
	.long LC18
.globl ___string_19
.text
LC19:
	.ascii "GUI_WINDOW\0"
.data
	.p2align 2
___string_19:
	.long LC19
.globl ___string_20
.text
LC20:
	.ascii "Exit\0"
.data
	.p2align 2
___string_20:
	.long LC20
.globl ___string_21
.text
LC21:
	.ascii "Reboot ...\12\0"
.data
	.p2align 2
___string_21:
	.long LC21
.globl ___string_22
.text
LC22:
	.ascii "cap:\0"
.data
	.p2align 2
___string_22:
	.long LC22
.globl ___string_23
.text
LC23:
	.ascii "new:\0"
.data
	.p2align 2
___string_23:
	.long LC23
.globl ___string_24
.text
LC24:
	.ascii "Crash !\12\0"
.data
	.p2align 2
___string_24:
	.long LC24
.globl ___string_25
.text
LC25:
	.ascii "Crash system.\12\0"
.data
	.p2align 2
___string_25:
	.long LC25
.globl ___string_26
.text
LC26:
	.ascii "Slot deferred.\12\0"
.data
	.p2align 2
___string_26:
	.long LC26
.globl _BITMAP__
	.p2align 5
_BITMAP__:
	.long 25
	.space 68
.globl _VIDEO__
	.p2align 5
_VIDEO__:
	.long 16
	.space 72
.globl _AREA__
	.p2align 5
_AREA__:
	.long 28
	.space 64
.globl _INTERFACE__
	.p2align 5
_INTERFACE__:
	.long 17
	.space 68
.globl _MOUSE__
	.p2align 5
_MOUSE__:
	.long 18
	.space 28
.globl _KEYBOARD__
	.p2align 2
_KEYBOARD__:
	.long 19
	.space 20
.globl _MY_WIN__
	.p2align 2
_MY_WIN__:
	.long 20
.globl _EVENT_MOUSE__
	.p2align 2
_EVENT_MOUSE__:
	.long 65
	.space 20
.globl _EVENT_KEYBOARD__
	.p2align 2
_EVENT_KEYBOARD__:
	.long 77
	.space 8
.globl _GUI_WINDOW__
	.p2align 5
_GUI_WINDOW__:
	.long 78
	.space 80
.globl _GUI_BUTTON__
	.p2align 5
_GUI_BUTTON__:
	.long 79
	.space 80
.globl _GUI_CHECK__
	.p2align 5
_GUI_CHECK__:
	.long 80
	.space 80
.globl _GUI_CHECK_LIST__
	.p2align 5
_GUI_CHECK_LIST__:
	.long 82
	.space 84
.globl _GUI_IMAGE__
	.p2align 5
_GUI_IMAGE__:
	.long 83
	.space 84
.globl _GUI_ICONE__
	.p2align 5
_GUI_ICONE__:
	.long 84
	.space 84
.globl _GUI_IN_INTEGER__
	.p2align 5
_GUI_IN_INTEGER__:
	.long 85
	.space 96
.globl _GUI_IN_TEXT__
	.p2align 5
_GUI_IN_TEXT__:
	.long 86
	.space 88
.globl _GUI_ELEVATOR__
	.p2align 5
_GUI_ELEVATOR__:
	.long 87
	.space 92
.text
	.p2align 2
.globl _main
_main:
	pushl %ebp
	movl %esp,%ebp
	subl $348,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	addl $-12,%esp
	pushl $268435456
	call _to_uinteger__SDB
	movl %eax,%ebx
	addl $-12,%esp
	pushl $16
	call _to_uinteger__SDB
	movl %eax,%esi
	addl $32,%esp
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	addl $-12,%esp
	pushl $8421504
	call _to_uinteger__SDB
	movl %eax,%edi
	addl $32,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	movl %eax,-60(%ebp)
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	movl %eax,-64(%ebp)
	addl $32,%esp
	addl $-12,%esp
	pushl $16777215
	call _to_uinteger__SDB
	movl %eax,-40(%ebp)
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	movl %eax,-68(%ebp)
	addl $32,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	movl %eax,-72(%ebp)
	addl $-12,%esp
	pushl $1987199
	call _to_uinteger__SDB
	movl %eax,-44(%ebp)
	addl $32,%esp
	addl $-12,%esp
	pushl $13689327
	call _to_uinteger__SDB
	movl %eax,-48(%ebp)
	addl $-12,%esp
	pushl $8628947
	call _to_uinteger__SDB
	movl %eax,-52(%ebp)
	addl $32,%esp
	addl $-12,%esp
	pushl $0
	call _to_uinteger__SDB
	movl %eax,-56(%ebp)
	addl $-12,%esp
	pushl $16711680
	call _to_uinteger__SDB
	movl %eax,-320(%ebp)
	addl $32,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	movl %eax,-76(%ebp)
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	addl $32,%esp
	addl $-12,%esp
	pushl $193
	call _to_integer__4N
	movl %eax,-80(%ebp)
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	movl %eax,-84(%ebp)
	addl $32,%esp
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	movl %eax,-88(%ebp)
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	movl %eax,-92(%ebp)
	addl $32,%esp
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	movl %eax,-96(%ebp)
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	addl $32,%esp
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	movl %eax,-100(%ebp)
	movl $0,_BITMAP__+8
	movl $0,_VIDEO__+12
	movl $0,_BITMAP_24__+8
	movl $0,_BITMAP__+4
	movl $0,_VIDEO__+8
	movl $0,_BITMAP_24__+4
	movl $_BITMAP__,_parent_video__C2
	movl $0,_capacity__G5
	movl %ebx,_get_capacity_memory__FP
	addl $-8,%esp
	pushl %ebx
	addl $-12,%esp
	pushl $0
	call _to_uinteger__SDB
	addl $16,%esp
	pushl %eax
	call _realloc_c__CEB
	movl %eax,_get_begin_memory__EP
	movl $0,_begin_memory__E5
	movl $0,_end_memory__F5
	movl $0,_small_fat__C5
	movl $0,_last_block__H5
	movl %esi,_object_size__97
	movl $0,_MEM_BLOCK__
	movl $0,_MEM_BLOCK__+12
	movl $0,_MEM_BLOCK__+8
	movl $0,_MEM_BLOCK__+4
	movl $0,_first_free__D5
	movw $0,_MEM_BLOCK__+16
	movw $0,_MEM_BLOCK__+18
	movl $0,_screen__GL
	movl $0,_AREA__+36
	movl $0,_INTERFACE__+40
	movl $0,_ITEM__+36
	movl $0,_GUI_BUTTON__+40
	movl $0,_GUI_CHECK__+40
	movl $0,_GUI_CHECK_LIST__+40
	movl $0,_GUI_IMAGE__+40
	movl $0,_GUI_ICONE__+40
	movl $0,_GUI_IN_INTEGER__+40
	movl $0,_GUI_IN_TEXT__+40
	movl $0,_GUI_ELEVATOR__+40
	movl $0,_GUI_WINDOW__+40
	movl $0,_AREA__+60
	movl $0,_INTERFACE__+64
	movl $0,_ITEM__+60
	movl $0,_GUI_BUTTON__+64
	movl $0,_GUI_CHECK__+64
	movl $0,_GUI_CHECK_LIST__+64
	movl $0,_GUI_IMAGE__+64
	movl $0,_GUI_ICONE__+64
	movl $0,_GUI_IN_INTEGER__+64
	movl $0,_GUI_IN_TEXT__+64
	movl $0,_GUI_ELEVATOR__+64
	movl $0,_GUI_WINDOW__+64
	movl $0,_AREA__+64
	movl $0,_INTERFACE__+68
	movl $0,_ITEM__+64
	movl $0,_GUI_BUTTON__+68
	movl $0,_GUI_CHECK__+68
	movl $0,_GUI_CHECK_LIST__+68
	movl $0,_GUI_IMAGE__+68
	movl $0,_GUI_ICONE__+68
	movl $0,_GUI_IN_INTEGER__+68
	movl $0,_GUI_IN_TEXT__+68
	movl $0,_GUI_ELEVATOR__+68
	movl $0,_GUI_WINDOW__+68
	movl $0,_AREA__+48
	movl $0,_INTERFACE__+52
	movl $0,_ITEM__+48
	movl $0,_GUI_BUTTON__+52
	movl $0,_GUI_CHECK__+52
	movl $0,_GUI_CHECK_LIST__+52
	movl $0,_GUI_IMAGE__+52
	movl $0,_GUI_ICONE__+52
	movl $0,_GUI_IN_INTEGER__+52
	movl $0,_GUI_IN_TEXT__+52
	movl $0,_GUI_ELEVATOR__+52
	movl $0,_GUI_WINDOW__+52
	movl $0,_AREA__+44
	movl $0,_INTERFACE__+48
	movl $0,_ITEM__+44
	movl $0,_GUI_BUTTON__+48
	movl $0,_GUI_CHECK__+48
	movl $0,_GUI_CHECK_LIST__+48
	movl $0,_GUI_IMAGE__+48
	movl $0,_GUI_ICONE__+48
	movl $0,_GUI_IN_INTEGER__+48
	movl $0,_GUI_IN_TEXT__+48
	movl $0,_GUI_ELEVATOR__+48
	movl $0,_GUI_WINDOW__+48
	movl $0,_AREA__+40
	movl $0,_INTERFACE__+44
	movl $0,_ITEM__+40
	movl $0,_GUI_BUTTON__+44
	movl $0,_GUI_CHECK__+44
	movl $0,_GUI_CHECK_LIST__+44
	movl $0,_GUI_IMAGE__+44
	movl $0,_GUI_ICONE__+44
	movl $0,_GUI_IN_INTEGER__+44
	movl $0,_GUI_IN_TEXT__+44
	movl $0,_GUI_ELEVATOR__+44
	movl $0,_GUI_WINDOW__+44
	movl $0,_AREA__+56
	movl $0,_INTERFACE__+60
	movl $0,_ITEM__+56
	movl $0,_GUI_BUTTON__+60
	movl $0,_GUI_CHECK__+60
	movl $0,_GUI_CHECK_LIST__+60
	movl $0,_GUI_IMAGE__+60
	movl $0,_GUI_ICONE__+60
	movl $0,_GUI_IN_INTEGER__+60
	movl $0,_GUI_IN_TEXT__+60
	movl $0,_GUI_ELEVATOR__+60
	movl $0,_GUI_WINDOW__+60
	movl $0,_AREA__+52
	movl $0,_INTERFACE__+56
	movl $0,_ITEM__+52
	movl $0,_GUI_BUTTON__+56
	movl $0,_GUI_CHECK__+56
	movl $0,_GUI_CHECK_LIST__+56
	movl $0,_GUI_IMAGE__+56
	movl $0,_GUI_ICONE__+56
	movl $0,_GUI_IN_INTEGER__+56
	movl $0,_GUI_IN_TEXT__+56
	movl $0,_GUI_ELEVATOR__+56
	movl $0,_GUI_WINDOW__+56
	movl $0,_AREA__+4
	movl $0,_INTERFACE__+8
	movl $0,_ITEM__+4
	movl $0,_GUI_BUTTON__+8
	movl $0,_GUI_CHECK__+8
	movl $0,_GUI_CHECK_LIST__+8
	movl $0,_GUI_IMAGE__+8
	movl $0,_GUI_ICONE__+8
	movl $0,_GUI_IN_INTEGER__+8
	movl $0,_GUI_IN_TEXT__+8
	movl $0,_GUI_ELEVATOR__+8
	movl $0,_GUI_WINDOW__+8
	movl $0,_AREA__+8
	movl $0,_INTERFACE__+12
	movl $0,_ITEM__+8
	movl $0,_GUI_BUTTON__+12
	movl $0,_GUI_CHECK__+12
	movl $0,_GUI_CHECK_LIST__+12
	movl $0,_GUI_IMAGE__+12
	movl $0,_GUI_ICONE__+12
	movl $0,_GUI_IN_INTEGER__+12
	movl $0,_GUI_IN_TEXT__+12
	movl $0,_GUI_ELEVATOR__+12
	movl $0,_GUI_WINDOW__+12
	movl $0,_AREA__+12
	movl $0,_INTERFACE__+16
	movl $0,_ITEM__+12
	movl $0,_GUI_BUTTON__+16
	movl $0,_GUI_CHECK__+16
	movl $0,_GUI_CHECK_LIST__+16
	movl $0,_GUI_IMAGE__+16
	movl $0,_GUI_ICONE__+16
	movl $0,_GUI_IN_INTEGER__+16
	movl $0,_GUI_IN_TEXT__+16
	movl $0,_GUI_ELEVATOR__+16
	movl $0,_GUI_WINDOW__+16
	movl $0,_AREA__+20
	movl $0,_INTERFACE__+24
	movl $0,_ITEM__+20
	movl $0,_GUI_BUTTON__+24
	movl $0,_GUI_CHECK__+24
	movl $0,_GUI_CHECK_LIST__+24
	movl $0,_GUI_IMAGE__+24
	movl $0,_GUI_ICONE__+24
	movl $0,_GUI_IN_INTEGER__+24
	movl $0,_GUI_IN_TEXT__+24
	movl $0,_GUI_ELEVATOR__+24
	movl $0,_GUI_WINDOW__+24
	movl $0,_AREA__+16
	movl $0,_INTERFACE__+20
	movl $0,_ITEM__+16
	movl $0,_GUI_BUTTON__+20
	movl $0,_GUI_CHECK__+20
	movl $0,_GUI_CHECK_LIST__+20
	movl $0,_GUI_IMAGE__+20
	movl $0,_GUI_ICONE__+20
	movl $0,_GUI_IN_INTEGER__+20
	movl $0,_GUI_IN_TEXT__+20
	movl $0,_GUI_ELEVATOR__+20
	movl $0,_GUI_WINDOW__+20
	movl $0,_AREA__+24
	movl $0,_INTERFACE__+28
	movl $0,_ITEM__+24
	movl $0,_GUI_BUTTON__+28
	movl $0,_GUI_CHECK__+28
	movl $0,_GUI_CHECK_LIST__+28
	movl $0,_GUI_IMAGE__+28
	movl $0,_GUI_ICONE__+28
	movl $0,_GUI_IN_INTEGER__+28
	movl $0,_GUI_IN_TEXT__+28
	movl $0,_GUI_ELEVATOR__+28
	movl $0,_GUI_WINDOW__+28
	movl $0,_PLAN__+12
	movl $0,_LIMIT_X__
	movl $0,_PLAN__+16
	movl $0,_PLAN__+20
	movl $0,_LIMIT_Y__
	movl $0,_PLAN__+24
	movl $0,_PLAN__+8
	movl $0,_PLAN__+32
	movl $0,_PLAN__+28
	movl $0,_PLAN__+4
	movl $0,_list_plan__J3
	movl $0,_LIMIT_X__+4
	movl $0,_list_x__K3
	movl $0,_LIMIT_X__+12
	movl $0,_LIMIT_X__+8
	movb $0,_LIMIT_Y__+8
	movl $0,_LIMIT_Y__+4
	movl $0,_list_y__L3
	movl $0,_LIMIT_Y__+12
	movl $0,_LIMIT_Y__+16
	movb $0,_PLAN__+1
	movl $0,_ARRAYED_COLLECTION__PLAN__+4
	movl $0,_FIXED_ARRAY__PLAN__+4
	movl $0,_ARRAYED_COLLECTION__PLAN__
	movl $0,_FIXED_ARRAY__PLAN__
	movl $0,_ARRAYED_COLLECTION__PLAN__+8
	movl $0,_FIXED_ARRAY__PLAN__+8
	addl $32,%esp
	addl $-12,%esp
	pushl $12
	call _allocation__C7
	movl %eax,%ebx
	addl $-4,%esp
	pushl $12
	pushl $_FIXED_ARRAY__PLAN__
	pushl %ebx
	call _copy__from__size__NPD
	movl %ebx,%esi
	addl $32,%esp
	addl $-8,%esp
	movl 4(%ebx),%eax
	pushl %eax
	addl $-12,%esp
	pushl $16
	call _to_integer__4N
	addl $16,%esp
	pushl %eax
	call ___infix_greater__PWB
	addl $16,%esp
	testb %al,%al
	je L29
	addl $-12,%esp
	addl $-12,%esp
	pushl $16
	call _to_integer__4N
	pushl %eax
	call _calloc__TUF
	movl %eax,(%ebx)
	addl $32,%esp
	addl $-12,%esp
	pushl $16
	call _to_integer__4N
	movl %eax,4(%ebx)
	movb $1,%al
	addl $16,%esp
	jmp L30
	.p2align 2
L29:
	movb $0,%al
L30:
	testb %al,%al
	jne L32
	movb $0,-174(%ebp)
	addl $-8,%esp
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	pushl %eax
	movl 4(%esi),%eax
	pushl %eax
	call ___infix_greater__G2F
	addl $32,%esp
	testb %al,%al
	je L33
	addl $-8,%esp
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	pushl %eax
	movl 8(%esi),%eax
	pushl %eax
	call ___infix_greater_equal__W2F
	addl $32,%esp
	testb %al,%al
	setne -174(%ebp)
L33:
	cmpb $0,-174(%ebp)
	je L32
	movl 8(%esi),%eax
	addl $-4,%esp
	pushl %eax
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	addl $16,%esp
	pushl %eax
	movl (%esi),%eax
	pushl %eax
	call _clear__to__Z3F
	addl $16,%esp
L32:
	addl $-12,%esp
	addl $-8,%esp
	pushl $1
	pushl $16
	call ___infix_sub__D1
	pushl %eax
	call _to_integer__4N
	movl %eax,8(%esi)
	movl %ebx,_stack_plan__N3
	movl $0,_first_clip__P3
	movl $0,_last_clip__O3
	movl $0,_top_clip__Q3
	movb $0,_PLAN__
	movl $0,_CLIP__
	movl $0,_CLIP__+8
	movl $0,_CLIP__+16
	movl $0,_CLIP__+24
	movl $0,_CLIP__+12
	movl $0,_CLIP__+4
	movl $0,_CLIP__+20
	movl $0,_CLIP__+28
	movl $0,_CLIP__+32
	movl %edi,_gray__CS
	movl $0,_BITMAP__+28
	movl $0,_VIDEO__+32
	movl $0,_BITMAP_24__+28
	movl $0,_AREA__+28
	movl $0,_INTERFACE__+32
	movl $0,_ITEM__+28
	movl $0,_GUI_BUTTON__+32
	movl $0,_GUI_CHECK__+32
	movl $0,_GUI_CHECK_LIST__+32
	movl $0,_GUI_IMAGE__+32
	movl $0,_GUI_ICONE__+32
	movl $0,_GUI_IN_INTEGER__+32
	movl $0,_GUI_IN_TEXT__+32
	movl $0,_GUI_ELEVATOR__+32
	movl $0,_GUI_WINDOW__+32
	movl $0,_AREA__+32
	movl $0,_INTERFACE__+36
	movl $0,_ITEM__+32
	movl $0,_GUI_BUTTON__+36
	movl $0,_GUI_CHECK__+36
	movl $0,_GUI_CHECK_LIST__+36
	movl $0,_GUI_IMAGE__+36
	movl $0,_GUI_ICONE__+36
	movl $0,_GUI_IN_INTEGER__+36
	movl $0,_GUI_IN_TEXT__+36
	movl $0,_GUI_ELEVATOR__+36
	movl $0,_GUI_WINDOW__+36
	movl $0,_ABSTRACT_STRING__
	movl $0,_STRING_CONSTANT__
	movl $0,_ABSTRACT_ENTRY__+4
	movl $0,_ENTRY__+4
	movl $0,_STRING__
	movl $0,_ABSTRACT_STRING__+4
	movl $0,_STRING_CONSTANT__+4
	movl $0,_ABSTRACT_ENTRY__+8
	movl $0,_ENTRY__+8
	movl $0,_STRING__+4
	movl -60(%ebp),%eax
	movl %eax,_lower__2WK
	movl -64(%ebp),%edx
	movl %edx,_exit_failure_code__QN
	movl $0,_GUI_WINDOW__+80
	movl -40(%ebp),%eax
	movl %eax,_white__5R
	movl $0,_focus__LL
	movl $0,_MOUSE__+8
	movl $0,_MOUSE__+12
	movl $0,_MAP_FIXED_ARRAY__EVENT_MOUSE__
	movl $0,_MOUSE__+28
	movl $0,_EVENT_MOUSE__+20
	movl $0,_INPUT__
	movl $0,_MOUSE__+4
	movl $0,_INPUT_KEYBOARD__
	movl $0,_KEYBOARD__+4
	movl $0,_LINKED_LIST__INBOX__+4
	movl $0,_LINKED_COLLECTION__INBOX__
	movl $0,_LINKED_LIST__INBOX__
	movl $0,_LINKED_LIST__INBOX__+8
	movl $0,_LINKED_LIST__INBOX__+12
	movl $0,_LINKED_LIST__INBOX__+16
	movl -68(%ebp),%edx
	movl %edx,_lower__1HM
	movl $0,_LINK__INBOX__
	movl $0,_LINK__INBOX__+4
	movl $0,_ARRAYED_COLLECTION__USMALLINT__+4
	movl $0,_FIXED_ARRAY__USMALLINT__+4
	movl -72(%ebp),%eax
	movl %eax,_object_size__NP
	movl $0,_ARRAYED_COLLECTION__USMALLINT__
	movl $0,_FIXED_ARRAY__USMALLINT__
	movl $0,_ARRAYED_COLLECTION__USMALLINT__+8
	movl $0,_FIXED_ARRAY__USMALLINT__+8
	movl $0,_KEYBOARD__+16
	movl $0,_MAP_FIXED_ARRAY__EVENT_KEYBOARD__
	movl $0,_INPUT_KEYBOARD__+4
	movl $0,_KEYBOARD__+8
	movb $0,_KEYBOARD__+20
	movl $0,_ITEM__+68
	movl $0,_GUI_BUTTON__+72
	movl $0,_GUI_CHECK__+72
	movl $0,_GUI_CHECK_LIST__+72
	movl $0,_GUI_IMAGE__+72
	movl $0,_GUI_ICONE__+72
	movl $0,_GUI_IN_INTEGER__+72
	movl $0,_GUI_IN_TEXT__+72
	movl $0,_GUI_ELEVATOR__+72
	movl $0,_ITEM__+72
	movl $0,_GUI_BUTTON__+76
	movl $0,_GUI_CHECK__+76
	movl $0,_GUI_CHECK_LIST__+76
	movl $0,_GUI_IMAGE__+76
	movl $0,_GUI_ICONE__+76
	movl $0,_GUI_IN_INTEGER__+76
	movl $0,_GUI_IN_TEXT__+76
	movl $0,_GUI_ELEVATOR__+76
	movl $0,_ITEM__+76
	movl $0,_GUI_BUTTON__+80
	movl $0,_GUI_CHECK__+80
	movl $0,_GUI_CHECK_LIST__+80
	movl $0,_GUI_IMAGE__+80
	movl $0,_GUI_ICONE__+80
	movl $0,_GUI_IN_INTEGER__+80
	movl $0,_GUI_IN_TEXT__+80
	movl $0,_GUI_ELEVATOR__+80
	movl -44(%ebp),%edx
	movl %edx,_color_dark__M2N
	movl -48(%ebp),%eax
	movl %eax,_color_light__N2N
	movl -52(%ebp),%edx
	movl %edx,_color_back__O2N
	movl -56(%ebp),%eax
	movl %eax,_black__4R
	movl -320(%ebp),%edx
	movl %edx,_red__6R
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1052688
	call _to_uinteger__SDB
	pushl %eax
	movl _color_back__O2N,%eax
	pushl %eax
	call ___infix_add__N0B
	movl %eax,_color_back_light__P2N
	movl $0,_LINKED_LIST__GUI_CHECK_LIST__+4
	movl $0,_LINKED_COLLECTION__GUI_CHECK_LIST__
	movl $0,_LINKED_LIST__GUI_CHECK_LIST__
	movl $0,_LINKED_LIST__GUI_CHECK_LIST__+8
	movl $0,_LINKED_LIST__GUI_CHECK_LIST__+12
	movl $0,_LINKED_LIST__GUI_CHECK_LIST__+16
	movl $0,_check_list__9M
	movl $0,_GUI_CHECK_LIST__+84
	movl -76(%ebp),%eax
	movl %eax,_lower__FQX
	movl $0,_LINK__GUI_CHECK_LIST__
	movl $0,_LINK__GUI_CHECK_LIST__+4
	movl $0,_BITMAP__+32
	movl $0,_VIDEO__+36
	movl $0,_BITMAP_24__+32
	movl $0,_ARRAYED_COLLECTION__EDGE__+4
	movl $0,_FIXED_ARRAY__EDGE__+4
	movl $0,_ARRAYED_COLLECTION__EDGE__
	movl $0,_FIXED_ARRAY__EDGE__
	movl $0,_ARRAYED_COLLECTION__EDGE__+8
	movl $0,_FIXED_ARRAY__EDGE__+8
	movl $0,_BITMAP__+44
	movl $0,_VIDEO__+48
	movl $0,_BITMAP_24__+44
	movl $0,_BITMAP__+36
	movl $0,_VIDEO__+40
	movl $0,_BITMAP_24__+36
	movl $0,_BITMAP__+64
	movl $0,_VIDEO__+68
	movl $0,_BITMAP_24__+64
	movl $0,_BITMAP__+68
	movl $0,_VIDEO__+72
	movl $0,_BITMAP_24__+68
	movl $0,_EDGE__+20
	movb $0,_EDGE__+17
	movl $0,_EDGE__+12
	movl $0,_EDGE__+8
	movl $0,_EDGE__+4
	movl $0,_EDGE__
	movb $0,_EDGE__+16
	movl $0,_BITMAP__+48
	movl $0,_VIDEO__+52
	movl $0,_BITMAP_24__+48
	movl $0,_BITMAP__+52
	movl $0,_VIDEO__+56
	movl $0,_BITMAP_24__+52
	movl $0,_BITMAP__+56
	movl $0,_VIDEO__+60
	movl $0,_BITMAP_24__+56
	movl $0,_BITMAP__+60
	movl $0,_VIDEO__+64
	movl $0,_BITMAP_24__+60
	addl $32,%esp
	addl $-8,%esp
	call _minimum__QJ4
	pushl %edx
	pushl %eax
	call _to_integer__3L4
	movl %eax,_BITMAP__+40
	movl %eax,_VIDEO__+44
	movl %eax,_BITMAP_24__+40
	movl $0,_EDGE__+28
	movl $0,_EDGE__+24
	movl -80(%ebp),%edx
	movl %edx,_default_size__O36
	movl $0,_DICTIONARY__ENTRY__ABSTRACT_STRING__
	movl $0,_DICTIONARY__ENTRY__ABSTRACT_STRING__+4
	movl $0,_DICTIONARY__ENTRY__ABSTRACT_STRING__+8
	addl $16,%esp
	addl $-12,%esp
	pushl $12
	call _allocation__C7
	movl %eax,%esi
	addl $-4,%esp
	pushl $12
	pushl $_DICTIONARY__ENTRY__ABSTRACT_STRING__
	pushl %esi
	call _copy__from__size__NPD
	movl _default_size__O36,%eax
	addl $32,%esp
	addl $-12,%esp
	pushl %eax
	call _prime_number_ceiling__PA7
	movl %eax,%ebx
	addl $-12,%esp
	pushl %ebx
	call _calloc__N17
	movl %eax,(%esi)
	movl %ebx,4(%esi)
	addl $32,%esp
	addl $-12,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__50
	pushl %eax
	call _to_integer__4N
	addl $32,%esp
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	movl %eax,8(%esi)
	movl %esi,_alias__Q26
	movl $0,_DICTIONARY_NODE__ENTRY__ABSTRACT_STRING__+4
	movl $0,_DICTIONARY_NODE__ENTRY__ABSTRACT_STRING__+8
	movl $0,_DICTIONARY_NODE__ENTRY__ABSTRACT_STRING__
	movl -84(%ebp),%eax
	movl %eax,_pointer_size__OD
	movl $0,_ABSTRACT_ENTRY__
	movl $_ENTRY__,%eax
	movl $0,_ENTRY__
	movl $0,_STRING__+8
	movb $0,_ABSTRACT_ENTRY__+16
	movb $0,_ENTRY__+16
	movl $0,_ABSTRACT_ENTRY__+20
	movl $0,_ENTRY__+20
	movl $0,_ABSTRACT_ENTRY__+12
	movl $0,_ENTRY__+12
	movl $0,_ABSTRACT_ENTRY__+24
	movl $0,_ENTRY__+24
	movl %eax,_ABSTRACT_FILE__
	movl %eax,_STD_FILE__
	movl %eax,_BMP_FILE__
	movl $0,_STD_FILE__+12
	movl $0,_BMP_FILE__+12
	movl $0,_bmp_buffer__K06
	movl $0,_ABSTRACT_FILE__+4
	movl $0,_STD_FILE__+4
	movl $0,_BMP_FILE__+4
	call _clone__VZM
	movl %eax,_ABSTRACT_FILE__+8
	movl %eax,_STD_FILE__+8
	movl %eax,_BMP_FILE__+8
	addl $-12,%esp
	addl $-12,%esp
	pushl $2048
	call _to_integer__4N
	pushl %eax
	call _calloc__53M
	movl %eax,_tmp_buffer__WABB
	movl -88(%ebp),%edx
	movl %edx,_object_size__3QD
	movl $0,_ARRAYED_COLLECTION__USMALLINT__+12
	movl $0,_FIXED_ARRAY__USMALLINT__+12
	movl $0,_header__L06
	movl $0,_pos_buffer__J06
	movb $0,_BMP_HEADER__
	movb $0,_BMP_HEADER__+1
	movl $0,_BMP_HEADER__+18
	movl $0,_BMP_HEADER__+22
	movl $0,_ARRAYED_COLLECTION__BMP_LINE__+4
	movl $0,_FIXED_ARRAY__BMP_LINE__+4
	movl $0,_ARRAYED_COLLECTION__BMP_LINE__
	movl $0,_FIXED_ARRAY__BMP_LINE__
	movl $0,_ARRAYED_COLLECTION__BMP_LINE__+8
	movl $0,_FIXED_ARRAY__BMP_LINE__+8
	movl $0,_BITMAP_24__+72
	movl $0,_BMP_LINE__+4
	movl $0,_BMP_LINE_24__+4
	movl $0,_BMP_LINE__
	movl $0,_BMP_LINE_24__
	movl $0,_BMP_LINE_24__+12
	movl $0,_BITMAP__+12
	movl $0,_VIDEO__+16
	movl $0,_BITMAP_24__+12
	movl $0,_BITMAP__+20
	movl $0,_VIDEO__+24
	movl $0,_BITMAP_24__+20
	movl $0,_BITMAP__+16
	movl $0,_VIDEO__+20
	movl $0,_BITMAP_24__+16
	movl $0,_BITMAP__+24
	movl $0,_VIDEO__+28
	movl $0,_BITMAP_24__+24
	movl $0,_GUI_IMAGE__+84
	movw $0,_BMP_HEADER__+28
	movl $0,_BMP_HEADER__+14
	movl $0,_BMP_HEADER__+46
	movl $0,_color_map__M06
	movl $0,_MAP_FIXED_ARRAY__PIXEL_24__
	movb $0,_PIXEL_24__+2
	movb $0,_PIXEL_24__+1
	movb $0,_PIXEL_24__
	movl $0,_BMP_HEADER__+30
	movl $0,_BMP_HEADER__+10
	movl $0,_BMP_LINE__+8
	movl $0,_BMP_LINE_24__+8
	addl $48,%esp
	addl $-12,%esp
	pushl $255
	call _create__AGCB
	movl %eax,_string_tmp__Y26
	movl $0,_GUI_ICONE__+84
	movl $0,_GUI_IN_INTEGER__+84
	addl $-12,%esp
	pushl $16
	call _create__AGCB
	movl %eax,_text_tmp__4ZN
	movl $0,_GUI_IN_INTEGER__+88
	movl $0,_GUI_IN_TEXT__+84
	movl $0,_GUI_IN_TEXT__+88
	movl $0,_GUI_ELEVATOR__+84
	movl -92(%ebp),%eax
	movl %eax,_GUI_ELEVATOR__+92
	movl $0,_GUI_ELEVATOR__+88
	movl -96(%ebp),%edx
	movl ___string_0,%eax
	movl %edx,_lower__R0N
	movl $0,_GUI_WINDOW__+76
	movl $0,_GUI_WINDOW__+72
	movl $0,_exit__8M
	movb $0,_KEYBOARD__+12
	addl $32,%esp
	addl $-8,%esp
	pushl $4
	pushl %eax
	call _new_intern__OWK
	movl %eax,_cmm__QM
	movl ___string_1,%eax
	addl $-8,%esp
	pushl $13
	pushl %eax
	call _new_intern__OWK
	movl %eax,_caltgr__RM
	movl ___string_2,%eax
	addl $32,%esp
	addl $-8,%esp
	pushl $57
	pushl %eax
	call _new_intern__OWK
	movl %eax,_cmin__OM
	movl ___string_3,%eax
	addl $-8,%esp
	pushl $57
	pushl %eax
	call _new_intern__OWK
	movl %eax,_cmaj__PM
	movl ___string_4,%eax
	addl $32,%esp
	addl $-8,%esp
	pushl $13
	pushl %eax
	call _new_intern__OWK
	movl %eax,_keynum0__SM
	movl ___string_5,%eax
	movb $0,_KEYBOARD__+21
	addl $-8,%esp
	pushl $12
	pushl %eax
	call _new_intern__OWK
	movl %eax,_buf_extk__VM
	movl ___string_6,%eax
	addl $32,%esp
	addl $-8,%esp
	pushl $15
	pushl %eax
	call _new_intern__OWK
	movl %eax,_ext_key__UM
	movb $0,_p_end__2VM
	movw $0,_EVENT_KEYBOARD__+8
	movl $0,_EVENT__
	movl $0,_EVENT_MOUSE__+4
	movl $0,_EVENT_KEYBOARD__+4
	movl $0,_EVENT_GUI__
	movb $0,_p_beg__1VM
	movl $0,_LINKED_LIST__EVENT__+4
	movl $0,_LINKED_COLLECTION__EVENT__
	movl $0,_LINKED_LIST__EVENT__
	movl $0,_LINKED_LIST__EVENT__+8
	movl $0,_LINKED_LIST__EVENT__+12
	addl $16,%esp
	addl $-12,%esp
	pushl $16
	call _allocation__C7
	movl %eax,%ebx
	addl $-4,%esp
	pushl $16
	pushl $_LINKED_LIST__EVENT__
	pushl %ebx
	call _copy__from__size__NPD
	addl $32,%esp
	addl $-12,%esp
	pushl %ebx
	call _make__98DC
	movl %ebx,_storage_message__NL
	movl $0,_LINK__EVENT__
	movl $0,_LINK__EVENT__+4
	movl $0,_MOUSE__+16
	movl $0,_MOUSE__+20
	movb $0,_MOUSE__+25
	movb $0,_MOUSE__+24
	movb $0,_p_end__5L
	movl $0,_EVENT_MOUSE__+8
	movl $0,_EVENT_MOUSE__+12
	movb $0,_EVENT_MOUSE__+17
	movb $0,_EVENT_MOUSE__+16
	movb $0,_p_beg__4L
	addl $-8,%esp
	call _minimum__QJ4
	pushl %edx
	pushl %eax
	call _to_integer__3L4
	movl %eax,_GUI_IN_INTEGER__+92
	addl $32,%esp
	addl $-8,%esp
	call _maximum__XJ4
	pushl %edx
	pushl %eax
	call _to_integer__3L4
	movl %eax,_GUI_IN_INTEGER__+96
	movb $0,_gui_p_end__JXL
	movb $0,_gui_p_beg__IXL
	movl $0,_MAP_FIXED_ARRAY__EVENT_GUI__
	addl $16,%esp
	addl $-12,%esp
	pushl $4
	call _allocation__C7
	movl %eax,-324(%ebp)
	addl $-4,%esp
	pushl $4
	pushl $_MAP_FIXED_ARRAY__EVENT_GUI__
	pushl %eax
	call _copy__from__size__NPD
	addl $32,%esp
	addl $-12,%esp
	pushl $16
	call _to_integer__4N
	movl %eax,%ebx
	addl $-8,%esp
	call _object_size__GQGC
	pushl %eax
	pushl %ebx
	call ___infix_mul__YWF
	addl $32,%esp
	addl $-12,%esp
	pushl %eax
	call _allocation__C7
	movl %eax,%edi
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	pushl %eax
	pushl %ebx
	call ___infix_sub__0YB
	movl %eax,%ebx
	addl $48,%esp
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	movl %eax,-172(%ebp)
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call ___infix_greater_equal__FWB
	addl $32,%esp
	leal -36(%ebp),%esi
	testb %al,%al
	je L41
	.p2align 2
L44:
	addl $-4,%esp
	call _object_size__GQGC
	pushl %eax
	addl $-12,%esp
	pushl $_EVENT_GUI__
	call _to_pointer__VTGC
	addl $16,%esp
	pushl %eax
	addl $-12,%esp
	addl $-8,%esp
	pushl %ebx
	pushl %edi
	call _item__3RGC
	addl $16,%esp
	pushl %eax
	call _to_pointer__VTGC
	addl $16,%esp
	pushl %eax
	call _copy__from__size__NPD
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	pushl %eax
	pushl %ebx
	call ___infix_sub__0YB
	movl %eax,%ebx
	addl $48,%esp
	movl -172(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %ebx
	call ___infix_greater_equal__FWB
	addl $16,%esp
	testb %al,%al
	jne L44
L41:
	movl -324(%ebp),%eax
	movl %edi,(%eax)
	addl $-12,%esp
	addl $-8,%esp
	pushl $1
	pushl $16
	call ___infix_sub__D1
	pushl %eax
	call _to_integer__4N
	addl $32,%esp
	addl $-12,%esp
	pushl $16
	call _to_integer__4N
	movl -324(%ebp),%edx
	movl %edx,_gui_buffer_event__HXL
	movl $0,_EVENT_GUI__+4
	movl -100(%ebp),%eax
	movl %eax,_exit_success_code__PN
	addl $-12,%esp
	pushl $320
	call _to_integer__4N
	movl %eax,%ebx
	addl $32,%esp
	addl $-12,%esp
	pushl $200
	call _to_integer__4N
	movl %ebx,_VIDEO__+12
	movl %eax,_VIDEO__+8
	addl $16,%esp
	addl $-12,%esp
	pushl $1
	call ___dpmi_allocate_ldt_descriptors
	movw %ax,___desc_video
	addl $-4,%esp
	pushl $655360
	pushl $64000
	pushl $655360
	call ___djgpp_map_physical_memory
	xorl %eax,%eax
	movw ___desc_video,%ax
	addl $32,%esp
	addl $-8,%esp
	pushl $655360
	pushl %eax
	call ___dpmi_set_segment_base_address
	xorl %eax,%eax
	movw ___desc_video,%ax
	addl $-8,%esp
	pushl $63999
	pushl %eax
	call ___dpmi_set_segment_limit
	xorl %eax,%eax
	movw ___desc_video,%ax
	addl $32,%esp
	addl $-8,%esp
	pushl $16627
	pushl %eax
	call ___dpmi_set_descriptor_access_rights
	movw $19,-8(%ebp)
	addl $-4,%esp
	pushl %esi
	pushl %esi
	pushl $16
	call _int86
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $968
	call _to_ushortint__ZV
	andl $65535,%eax
	pushl %eax
	addl $-12,%esp
	pushl $0
	call _to_usmallint__RU
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call _putb__to__EW
	xorl %esi,%esi
	addl $32,%esp
	jmp L47
	.p2align 2
L49:
	addl $-12,%esp
	pushl %esi
	call _to_integer__4N
	movb %al,%bl
	addl $-8,%esp
	pushl $2
	addl $-8,%esp
	addl $-12,%esp
	pushl $192
	call _to_usmallint__RU
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	andl $255,%ebx
	pushl %ebx
	call ___infix_and__GZ
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_greater_greater__PZ
	movb %al,-161(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $56
	call _to_usmallint__RU
	andl $255,%eax
	pushl %eax
	pushl %ebx
	call ___infix_and__GZ
	movb %al,-162(%ebp)
	addl $32,%esp
	addl $-8,%esp
	pushl $3
	addl $-8,%esp
	addl $-12,%esp
	pushl $7
	call _to_usmallint__RU
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	pushl %ebx
	call ___infix_and__GZ
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_less_less__A0
	movb %al,%bl
	addl $-8,%esp
	addl $-12,%esp
	pushl $969
	call _to_ushortint__ZV
	andl $65535,%eax
	pushl %eax
	xorl %eax,%eax
	movb -161(%ebp),%al
	pushl %eax
	call _putb__to__EW
	addl $48,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $969
	call _to_ushortint__ZV
	andl $65535,%eax
	pushl %eax
	xorl %eax,%eax
	movb -162(%ebp),%al
	pushl %eax
	call _putb__to__EW
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $969
	call _to_ushortint__ZV
	andl $65535,%eax
	pushl %eax
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	call _putb__to__EW
	addl $32,%esp
	addl $-8,%esp
	pushl $1
	pushl %esi
	call ___infix_add__00
	movl %eax,%esi
	addl $16,%esp
L47:
	addl $-8,%esp
	pushl $255
	pushl %esi
	call ___infix_less_equal__WW
	addl $16,%esp
	testb %al,%al
	jne L49
	movl _VIDEO__+12,%edx
	movl %edx,-104(%ebp)
	movl _VIDEO__+8,%eax
	movl %eax,-108(%ebp)
	movl $_VIDEO__,_parent_video__C2
	call _clone__04
	movl %eax,%ebx
	movl %ebx,_screen__GL
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	movl %eax,%esi
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	movl _VIDEO__+12,%edx
	movl %eax,%ecx
	movl _VIDEO__+8,%eax
	movl %eax,4(%ebx)
	movl _parent_video__C2,%eax
	movl $0,36(%ebx)
	movl %esi,60(%ebx)
	movl %ecx,64(%ebx)
	movl $0,48(%ebx)
	movl $0,44(%ebx)
	movl $0,40(%ebx)
	movl $0,56(%ebx)
	movl $0,52(%ebx)
	movl %edx,8(%ebx)
	addl $32,%esp
	addl $-12,%esp
	pushl %ebx
	call _clipping_off__JDE
	addl $16,%esp
	addl $-12,%esp
	pushl %ebx
	call _append_plan__GEE
	addl $-12,%esp
	pushl %ebx
	call _clip_next_child__BEF
	movl 36(%ebx),%edx
	addl $32,%esp
	testl %edx,%edx
	je L55
	movl (%edx),%eax
	cmpl $28,%eax
	je L58
	ja L62
	cmpl $17,%eax
	je L59
	jmp L55
	.p2align 2
L62:
	cmpl $78,%eax
	jne L55
	addl $-12,%esp
	pushl %edx
	call _creat_clip__YW5B
	jmp L520
	.p2align 2
L58:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__MEF
	jmp L520
	.p2align 2
L59:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__Z0I
L520:
	addl $16,%esp
L55:
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	pushl %eax
	movl 8(%ebx),%eax
	pushl %eax
	call ___infix_sub__0YB
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	pushl %eax
	movl 4(%ebx),%eax
	pushl %eax
	call ___infix_sub__0YB
	movl _screen__GL,%ebx
	addl $32,%esp
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	movl %eax,%esi
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	movl %eax,%edi
	movl %ebx,_INTERFACE__+40
	addl $32,%esp
	testl %ebx,%ebx
	jne L63
	movl %esi,_INTERFACE__+64
	movl %edi,_INTERFACE__+68
	movl $0,_INTERFACE__+52
	jmp L64
	.p2align 2
L63:
	addl $-8,%esp
	pushl %esi
	movl 60(%ebx),%eax
	pushl %eax
	call ___infix_add__KKE
	movl %eax,_INTERFACE__+64
	addl $-8,%esp
	pushl %edi
	movl 64(%ebx),%eax
	pushl %eax
	call ___infix_add__KKE
	movl %eax,_INTERFACE__+68
	movl 40(%ebx),%eax
	movl %eax,_INTERFACE__+52
	addl $32,%esp
	testl %eax,%eax
	je L65
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L65
	jmp *L78(,%edx,4)
	.p2align 2
L78:
	.long L76
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L77
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L65
	.long L76
	.long L76
	.long L76
	.long L65
	.long L76
	.long L76
	.long L76
	.long L76
	.long L75
	.long L76
	.p2align 2
L75:
L76:
	movl $_INTERFACE__,48(%eax)
	jmp L65
	.p2align 2
L77:
	movl $_INTERFACE__,44(%eax)
L65:
	movl _INTERFACE__+40,%edx
	movl (%edx),%eax
	cmpl $28,%eax
	je L81
	ja L86
	cmpl $17,%eax
	je L83
	jmp L64
	.p2align 2
L86:
	cmpl $78,%eax
	je L82
	jmp L64
	.p2align 2
L81:
	movl $_INTERFACE__,40(%edx)
	jmp L64
	.p2align 2
L82:
L83:
	movl $_INTERFACE__,44(%edx)
L64:
	movl $0,_INTERFACE__+48
	movl $0,_INTERFACE__+44
	movl $0,_INTERFACE__+60
	movl $0,_INTERFACE__+56
	movl -108(%ebp),%edx
	movl %edx,_INTERFACE__+8
	movl -104(%ebp),%eax
	movl %eax,_INTERFACE__+12
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L87
	call _clipping_off__UKI
	jmp L88
	.p2align 2
L87:
	call _clipping_off__UKI
L88:
	addl $-12,%esp
	pushl $_INTERFACE__
	call _append_plan__YLI
	addl $-12,%esp
	pushl $_INTERFACE__
	call _clip_next_child__N0I
	movl _INTERFACE__+40,%edx
	addl $32,%esp
	testl %edx,%edx
	je L89
	movl (%edx),%eax
	cmpl $28,%eax
	je L91
	ja L96
	cmpl $17,%eax
	je L93
	jmp L89
	.p2align 2
L96:
	cmpl $78,%eax
	je L92
	jmp L89
	.p2align 2
L91:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__MEF
	jmp L521
	.p2align 2
L92:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__YW5B
	jmp L521
	.p2align 2
L93:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__Z0I
L521:
	addl $16,%esp
L89:
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	pushl %eax
	movl _INTERFACE__+8,%eax
	pushl %eax
	call ___infix_sub__0YB
	pushl %eax
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	addl $16,%esp
	pushl %eax
	movl _INTERFACE__+12,%eax
	pushl %eax
	call ___infix_sub__0YB
	addl $16,%esp
	pushl %eax
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	addl $16,%esp
	pushl %eax
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	addl $16,%esp
	pushl %eax
	pushl $_INTERFACE__
	call _draw__to__5PJ
	movl $_INTERFACE__,_focus__LL
	addl $64,%esp
	call _display_on__3UK
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	pushl %eax
	movl _VIDEO__+12,%eax
	pushl %eax
	call ___infix_sub__0YB
	movl %eax,_MOUSE__+8
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	pushl %eax
	movl _VIDEO__+8,%eax
	pushl %eax
	call ___infix_sub__0YB
	movl %eax,_MOUSE__+12
	addl $32,%esp
	addl $-12,%esp
	pushl $4
	call _allocation__C7
	movl %eax,-120(%ebp)
	addl $-4,%esp
	pushl $4
	pushl $_MAP_FIXED_ARRAY__EVENT_MOUSE__
	movl %eax,%edx
	pushl %edx
	call _copy__from__size__NPD
	addl $32,%esp
	addl $-12,%esp
	pushl $4
	call _to_integer__4N
	movl %eax,%ebx
	addl $-8,%esp
	call _object_size__P6L
	pushl %eax
	pushl %ebx
	call ___infix_mul__YWF
	addl $32,%esp
	addl $-12,%esp
	pushl %eax
	call _allocation__C7
	movl %eax,%esi
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	pushl %eax
	pushl %ebx
	call ___infix_sub__0YB
	movl %eax,%ebx
	addl $48,%esp
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	movl %eax,%edi
	addl $-8,%esp
	pushl %edi
	pushl %ebx
	call ___infix_greater_equal__FWB
	addl $32,%esp
	testb %al,%al
	je L99
	.p2align 2
L102:
	addl $-4,%esp
	call _object_size__P6L
	pushl %eax
	addl $-12,%esp
	pushl $_EVENT_MOUSE__
	call _to_pointer__49L
	addl $16,%esp
	pushl %eax
	addl $-12,%esp
	addl $-8,%esp
	pushl %ebx
	pushl %esi
	call _item__C8L
	addl $16,%esp
	pushl %eax
	call _to_pointer__49L
	addl $16,%esp
	pushl %eax
	call _copy__from__size__NPD
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	pushl %eax
	pushl %ebx
	call ___infix_sub__0YB
	movl %eax,%ebx
	addl $48,%esp
	addl $-8,%esp
	pushl %edi
	pushl %ebx
	call ___infix_greater_equal__FWB
	addl $16,%esp
	testb %al,%al
	jne L102
L99:
	movl -120(%ebp),%eax
	movl %esi,(%eax)
	addl $-12,%esp
	addl $-8,%esp
	pushl $1
	pushl $4
	call ___infix_sub__D1
	pushl %eax
	call _to_integer__4N
	addl $32,%esp
	addl $-12,%esp
	pushl $4
	call _to_integer__4N
	movl -120(%ebp),%edx
	movl %edx,_MOUSE__+28
	xorl %edi,%edi
	jmp L522
	.p2align 2
L106:
	addl $-12,%esp
	pushl %edi
	call _to_integer__4N
	movl %eax,%ebx
	movl _MOUSE__+28,%eax
	addl $-8,%esp
	pushl %ebx
	pushl %eax
	call _item__DEM
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $3
	call _to_integer__4N
	pushl %eax
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	addl $16,%esp
	pushl %eax
	pushl %ebx
	call ___infix_sub__0YB
	addl $16,%esp
	pushl %eax
	call ___infix_and__P6B
	pushl %eax
	movl _MOUSE__+28,%eax
	pushl %eax
	call _item__DEM
	movl %eax,20(%esi)
	addl $48,%esp
	addl $-8,%esp
	pushl $1
	pushl %edi
	call ___infix_add__00
	movl %eax,%edi
L522:
	addl $16,%esp
	addl $-8,%esp
	pushl $3
	pushl %edi
	call ___infix_less_equal__WW
	addl $16,%esp
	testb %al,%al
	jne L106
	cmpl $0,_MOUSE__+4
	jne L108
	call _create__SHM
	movl %eax,_MOUSE__+4
L108:
	movl _MOUSE__+4,%eax
	addl $-12,%esp
	pushl %eax
	call _add_last__PNM
	call _clone__VZM
	movl %eax,%ebx
	addl $-8,%esp
	movl 4(%ebx),%eax
	pushl %eax
	addl $-12,%esp
	pushl $13
	call _to_integer__4N
	addl $16,%esp
	pushl %eax
	call ___infix_greater__PWB
	addl $32,%esp
	testb %al,%al
	je L109
	addl $-12,%esp
	addl $-12,%esp
	pushl $13
	call _to_integer__4N
	pushl %eax
	call _calloc__53M
	movl %eax,(%ebx)
	addl $32,%esp
	addl $-12,%esp
	pushl $13
	call _to_integer__4N
	movl %eax,4(%ebx)
	movb $1,%al
	addl $16,%esp
	jmp L110
	.p2align 2
L109:
	movb $0,%al
L110:
	testb %al,%al
	jne L112
	movb $0,-175(%ebp)
	addl $-8,%esp
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	pushl %eax
	movl 4(%ebx),%eax
	pushl %eax
	call ___infix_greater__G2F
	addl $32,%esp
	testb %al,%al
	je L113
	addl $-8,%esp
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	pushl %eax
	movl 8(%ebx),%eax
	pushl %eax
	call ___infix_greater_equal__W2F
	addl $32,%esp
	testb %al,%al
	setne -175(%ebp)
L113:
	cmpb $0,-175(%ebp)
	je L112
	movl 8(%ebx),%eax
	addl $-4,%esp
	pushl %eax
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	addl $16,%esp
	pushl %eax
	movl (%ebx),%eax
	pushl %eax
	call _clear__to__8AN
	addl $16,%esp
L112:
	addl $-12,%esp
	addl $-8,%esp
	pushl $1
	pushl $13
	call ___infix_sub__D1
	pushl %eax
	call _to_integer__4N
	movl %eax,8(%ebx)
	movl %ebx,_KEYBOARD__+16
	addl $32,%esp
	addl $-12,%esp
	pushl $4
	call _allocation__C7
	movl %eax,-124(%ebp)
	addl $-4,%esp
	pushl $4
	pushl $_MAP_FIXED_ARRAY__EVENT_KEYBOARD__
	pushl %eax
	call _copy__from__size__NPD
	addl $32,%esp
	addl $-12,%esp
	pushl $4
	call _to_integer__4N
	movl %eax,%ebx
	addl $-8,%esp
	call _object_size__QLN
	pushl %eax
	pushl %ebx
	call ___infix_mul__YWF
	addl $32,%esp
	addl $-12,%esp
	pushl %eax
	call _allocation__C7
	movl %eax,%esi
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	pushl %eax
	pushl %ebx
	call ___infix_sub__0YB
	movl %eax,%ebx
	addl $48,%esp
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	movl %eax,%edi
	addl $-8,%esp
	pushl %edi
	pushl %ebx
	call ___infix_greater_equal__FWB
	addl $32,%esp
	testb %al,%al
	je L117
	.p2align 2
L120:
	addl $-4,%esp
	call _object_size__QLN
	pushl %eax
	addl $-12,%esp
	pushl $_EVENT_KEYBOARD__
	call _to_pointer__5ON
	addl $16,%esp
	pushl %eax
	addl $-12,%esp
	addl $-8,%esp
	pushl %ebx
	pushl %esi
	call _item__DNN
	addl $16,%esp
	pushl %eax
	call _to_pointer__5ON
	addl $16,%esp
	pushl %eax
	call _copy__from__size__NPD
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	pushl %eax
	pushl %ebx
	call ___infix_sub__0YB
	movl %eax,%ebx
	addl $48,%esp
	addl $-8,%esp
	pushl %edi
	pushl %ebx
	call ___infix_greater_equal__FWB
	addl $16,%esp
	testb %al,%al
	jne L120
L117:
	movl -124(%ebp),%edx
	movl %esi,(%edx)
	addl $-12,%esp
	addl $-8,%esp
	pushl $1
	pushl $4
	call ___infix_sub__D1
	pushl %eax
	call _to_integer__4N
	addl $32,%esp
	addl $-12,%esp
	pushl $4
	call _to_integer__4N
	movl -124(%ebp),%eax
	movl %eax,_KEYBOARD__+8
	xorl %esi,%esi
	jmp L523
	.p2align 2
L124:
	addl $-12,%esp
	pushl %esi
	call _to_integer__4N
	movl %eax,%ebx
	movl _KEYBOARD__+8,%eax
	addl $-8,%esp
	pushl %ebx
	pushl %eax
	call _item__GTN
	addl $32,%esp
	addl $-8,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $3
	call _to_integer__4N
	pushl %eax
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	addl $16,%esp
	pushl %eax
	pushl %ebx
	call ___infix_sub__0YB
	addl $16,%esp
	pushl %eax
	call ___infix_and__P6B
	pushl %eax
	movl _KEYBOARD__+8,%eax
	pushl %eax
	call _item__GTN
	addl $48,%esp
	addl $-8,%esp
	pushl $1
	pushl %esi
	call ___infix_add__00
	movl %eax,%esi
L523:
	addl $16,%esp
	addl $-8,%esp
	pushl $3
	pushl %esi
	call ___infix_less_equal__WW
	addl $16,%esp
	testb %al,%al
	jne L124
	addl $-12,%esp
	pushl $64
	call _to_usmallint__RU
	movb %al,_KEYBOARD__+20
	addl $16,%esp
	cmpl $0,_KEYBOARD__+4
	jne L126
	call _create__SHM
	movl %eax,_KEYBOARD__+4
L126:
	movl _KEYBOARD__+4,%eax
	addl $-12,%esp
	pushl %eax
	call _add_last__PNM
	movl ___string_7,%eax
	addl $-8,%esp
	pushl $10
	pushl %eax
	call _new_intern__OWK
	movl %eax,%edi
	addl $32,%esp
	addl $-12,%esp
	pushl $5
	call _to_integer__4N
	movl %eax,-188(%ebp)
	addl $-12,%esp
	pushl $5
	call _to_integer__4N
	movl %eax,-192(%ebp)
	addl $32,%esp
	addl $-12,%esp
	pushl $110
	call _to_integer__4N
	movl %eax,-196(%ebp)
	addl $-12,%esp
	pushl $20
	call _to_integer__4N
	movl %eax,-200(%ebp)
	movl _parent_video__C2,%eax
	addl $32,%esp
	call _clone__X2N
	movl %eax,%esi
	movl %edi,72(%esi)
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	movl %eax,76(%esi)
	movl $_MY_WIN__,80(%esi)
	movl $_INTERFACE__,40(%esi)
	movl -188(%ebp),%edx
	movl _INTERFACE__+64,%eax
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_add__KKE
	movl %eax,64(%esi)
	movl -192(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	movl _INTERFACE__+68,%eax
	pushl %eax
	call ___infix_add__KKE
	movl %eax,68(%esi)
	movl _INTERFACE__+44,%eax
	movl %esi,%ebx
	movl %eax,52(%esi)
	addl $16,%esp
	testl %eax,%eax
	je L129
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L129
	jmp *L142(,%edx,4)
	.p2align 2
L142:
	.long L131
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L141
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L129
	.long L136
	.long L133
	.long L139
	.long L129
	.long L134
	.long L138
	.long L135
	.long L132
	.long L140
	.long L137
	.p2align 2
L131:
	addl $-8,%esp
	pushl %ebx
	pushl %eax
	call _set_prev__BAO
	jmp L524
	.p2align 2
L132:
	addl $-8,%esp
	pushl %ebx
	pushl %eax
	call _set_prev__PRBC
	jmp L524
	.p2align 2
L133:
	addl $-8,%esp
	pushl %ebx
	pushl %eax
	call _set_prev__XRBC
	jmp L524
	.p2align 2
L134:
	addl $-8,%esp
	pushl %ebx
	pushl %eax
	call _set_prev__5RBC
	jmp L524
	.p2align 2
L135:
	addl $-8,%esp
	pushl %ebx
	pushl %eax
	call _set_prev__DSBC
	jmp L524
	.p2align 2
L136:
	addl $-8,%esp
	pushl %ebx
	pushl %eax
	call _set_prev__KSBC
	jmp L524
	.p2align 2
L137:
	addl $-8,%esp
	pushl %ebx
	pushl %eax
	call _set_prev__RSBC
	jmp L524
	.p2align 2
L138:
	addl $-8,%esp
	pushl %ebx
	pushl %eax
	call _set_prev__ZSBC
	jmp L524
	.p2align 2
L139:
	addl $-8,%esp
	pushl %ebx
	pushl %eax
	call _set_prev__7SBC
	jmp L524
	.p2align 2
L140:
	addl $-8,%esp
	pushl %ebx
	pushl %eax
	call _set_prev__FTBC
	jmp L524
	.p2align 2
L141:
	addl $-8,%esp
	pushl %ebx
	pushl %eax
	call _set_prev__RLYC
L524:
	addl $16,%esp
L129:
	movl 40(%esi),%edx
	movl (%edx),%eax
	cmpl $28,%eax
	je L145
	ja L150
	cmpl $17,%eax
	je L146
	jmp L144
	.p2align 2
L150:
	cmpl $78,%eax
	je L147
	jmp L144
	.p2align 2
L145:
	addl $-8,%esp
	pushl %esi
	pushl %edx
	call _set_child__MAO
	jmp L525
	.p2align 2
L146:
	addl $-8,%esp
	pushl %esi
	pushl %edx
	call _set_child__RAO
	jmp L525
	.p2align 2
L147:
	addl $-8,%esp
	pushl %esi
	pushl %edx
	call _set_child__UTBC
L525:
	addl $16,%esp
L144:
	movl $0,48(%esi)
	movl $0,44(%esi)
	movl $0,60(%esi)
	movl $0,56(%esi)
	movl -200(%ebp),%edx
	movl %edx,8(%esi)
	movl -196(%ebp),%eax
	movl %eax,12(%esi)
	movl _parent_video__C2,%eax
	addl $-12,%esp
	pushl %esi
	call _clipping_off__FBO
	addl $16,%esp
	addl $-12,%esp
	pushl %esi
	call _append_plan__QCO
	addl $-12,%esp
	pushl %esi
	call _clip_type1__JRO
	addl $32,%esp
	addl $-12,%esp
	pushl %esi
	call _refresh__XBQ
	movl ___string_8,%eax
	addl $-8,%esp
	pushl $16
	pushl %eax
	call _new_intern__OWK
	movl %eax,%edi
	addl $32,%esp
	addl $-12,%esp
	pushl $5
	call _to_integer__4N
	movl %eax,-204(%ebp)
	addl $-12,%esp
	pushl $30
	call _to_integer__4N
	movl %eax,-208(%ebp)
	movl _parent_video__C2,%eax
	addl $32,%esp
	addl $-12,%esp
	pushl %edi
	call _font_width__9OS
	movl %eax,%ebx
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $20
	call _to_integer__4N
	pushl %eax
	pushl %ebx
	call ___infix_add__Q5B
	movl %eax,-112(%ebp)
	movl _parent_video__C2,%eax
	addl $32,%esp
	call _clone__XTS
	movl %eax,%ebx
	addl $-12,%esp
	pushl $16
	call _to_integer__4N
	movl %eax,-116(%ebp)
	movl %edi,72(%ebx)
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	movl %eax,76(%ebx)
	movl $_MY_WIN__,80(%ebx)
	movl $_INTERFACE__,40(%ebx)
	movl -204(%ebp),%edx
	movl _INTERFACE__+64,%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_add__KKE
	movl %eax,64(%ebx)
	movl -208(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl _INTERFACE__+68,%eax
	pushl %eax
	call ___infix_add__KKE
	movl %eax,68(%ebx)
	movl _INTERFACE__+44,%eax
	movl %ebx,%esi
	movl %eax,52(%ebx)
	addl $32,%esp
	testl %eax,%eax
	je L157
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L157
	jmp *L170(,%edx,4)
	.p2align 2
L170:
	.long L168
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L169
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L157
	.long L168
	.long L168
	.long L167
	.long L157
	.long L168
	.long L168
	.long L168
	.long L168
	.long L168
	.long L168
	.p2align 2
L167:
L168:
	movl %esi,48(%eax)
	jmp L157
	.p2align 2
L169:
	movl %esi,44(%eax)
L157:
	movl 40(%ebx),%edx
	movl (%edx),%eax
	cmpl $28,%eax
	je L173
	ja L178
	cmpl $17,%eax
	je L174
	jmp L172
	.p2align 2
L178:
	cmpl $78,%eax
	je L175
	jmp L172
	.p2align 2
L173:
	movl %ebx,40(%edx)
	jmp L172
	.p2align 2
L174:
L175:
	movl %ebx,44(%edx)
L172:
	movl $0,48(%ebx)
	movl $0,44(%ebx)
	movl $0,60(%ebx)
	movl $0,56(%ebx)
	movl -116(%ebp),%edx
	movl %edx,8(%ebx)
	movl -112(%ebp),%eax
	movl %eax,12(%ebx)
	movl _parent_video__C2,%eax
	addl $-12,%esp
	pushl %ebx
	call _clipping_off__Q2S
	addl $16,%esp
	addl $-12,%esp
	pushl %ebx
	call _append_plan__13S
	addl $-12,%esp
	pushl %ebx
	call _clip_next_child__9IT
	movl 40(%ebx),%edx
	addl $32,%esp
	testl %edx,%edx
	je L181
	movl (%edx),%eax
	cmpl $28,%eax
	je L183
	ja L188
	cmpl $17,%eax
	je L184
	jmp L181
	.p2align 2
L188:
	cmpl $78,%eax
	je L185
	jmp L181
	.p2align 2
L183:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__MEF
	jmp L526
	.p2align 2
L184:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__Z0I
	jmp L526
	.p2align 2
L185:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__YW5B
L526:
	addl $16,%esp
L181:
	addl $-12,%esp
	pushl %ebx
	call _refresh__IEU
	addl $16,%esp
	addl $-12,%esp
	pushl $20
	call _allocation__C7
	movl %eax,%ebx
	addl $-4,%esp
	pushl $20
	pushl $_LINKED_LIST__GUI_CHECK_LIST__
	pushl %ebx
	call _copy__from__size__NPD
	addl $32,%esp
	movl $0,4(%ebx)
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	movl %eax,(%ebx)
	movl $0,8(%ebx)
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	movl %eax,12(%ebx)
	movl ___string_9,%eax
	movl $0,16(%ebx)
	movl %ebx,_check_list__9M
	addl $32,%esp
	pushl %ebx
	addl $-8,%esp
	pushl $23
	pushl %eax
	call _new_intern__OWK
	addl $16,%esp
	pushl %eax
	addl $-12,%esp
	pushl $50
	call _to_integer__4N
	addl $16,%esp
	pushl %eax
	addl $-12,%esp
	pushl $5
	call _to_integer__4N
	addl $16,%esp
	pushl %eax
	call _create_in__at__label__action__list__EWX
	movl _check_list__9M,%eax
	pushl %eax
	movl ___string_10,%eax
	addl $-8,%esp
	pushl $23
	pushl %eax
	call _new_intern__OWK
	addl $16,%esp
	pushl %eax
	addl $-12,%esp
	pushl $66
	call _to_integer__4N
	addl $16,%esp
	pushl %eax
	addl $-12,%esp
	pushl $5
	call _to_integer__4N
	addl $16,%esp
	pushl %eax
	call _create_in__at__label__action__list__EWX
	movl _check_list__9M,%eax
	addl $32,%esp
	pushl %eax
	movl ___string_11,%eax
	addl $-8,%esp
	pushl $23
	pushl %eax
	call _new_intern__OWK
	addl $16,%esp
	pushl %eax
	addl $-12,%esp
	pushl $82
	call _to_integer__4N
	addl $16,%esp
	pushl %eax
	addl $-12,%esp
	pushl $5
	call _to_integer__4N
	addl $16,%esp
	pushl %eax
	call _create_in__at__label__action__list__EWX
	movl ___string_12,%eax
	addl $-8,%esp
	pushl $8
	pushl %eax
	call _new_intern__OWK
	movl %eax,%edi
	addl $32,%esp
	addl $-12,%esp
	pushl $5
	call _to_integer__4N
	movl %eax,-212(%ebp)
	addl $-12,%esp
	pushl $105
	call _to_integer__4N
	movl %eax,-216(%ebp)
	movl _parent_video__C2,%eax
	addl $32,%esp
	call _clone__7W6
	movl %eax,%ebx
	addl $-12,%esp
	pushl %edi
	call _get_entry__226
	movl %eax,%esi
	addl $16,%esp
	testl %esi,%esi
	je L194
	addl $-12,%esp
	pushl %esi
	call _is_file__9OAB
	addl $16,%esp
	testb %al,%al
	jne L193
L194:
	movl ___string_14,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-8,%esp
	pushl $13
	pushl %eax
	call _new_intern__OWK
	pushl %eax
	movl ___string_13,%eax
	addl $-8,%esp
	pushl %edi
	addl $-8,%esp
	pushl $13
	pushl %eax
	call _new_intern__OWK
	addl $16,%esp
	pushl %eax
	call ___infix_add__2PAB
	addl $16,%esp
	pushl %eax
	call ___infix_add__G0AB
	pushl %eax
	call _message__64AB
	movl _parent_video__C2,%eax
	addl $48,%esp
	movl _exit_failure_code__QN,%edx
	movl _parent_video__C2,%eax
	addl $-12,%esp
	pushl %edx
	call _die_with_code__R8AB
	addl $16,%esp
L193:
	addl $-12,%esp
	pushl %esi
	call _open_bmp__48AB
	movl %eax,%esi
	addl $-12,%esp
	pushl %esi
	call _read_header__KFBB
	addl $32,%esp
	call _is_valid_bmp__T3CB
	testb %al,%al
	jne L199
	movl ___string_15,%eax
	addl $-12,%esp
	addl $-8,%esp
	pushl $27
	pushl %eax
	call _new_intern__OWK
	pushl %eax
	call _message__D5CB
	movl _parent_video__C2,%eax
	addl $32,%esp
	movl _exit_failure_code__QN,%edx
	movl _parent_video__C2,%eax
	addl $-12,%esp
	pushl %edx
	call _die_with_code__R8AB
	addl $16,%esp
L199:
	movl _header__L06,%eax
	addl $-8,%esp
	movl 18(%eax),%edx
	movl %edx,-128(%ebp)
	movl 22(%eax),%eax
	movl %eax,-132(%ebp)
	pushl %eax
	pushl %edx
	call _create__55CB
	movl %eax,84(%ebx)
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call _fill_bitmap__AIEB
	addl $32,%esp
	addl $-12,%esp
	pushl %esi
	call _close__3XGB
	movl %edi,72(%ebx)
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	movl %eax,76(%ebx)
	movl $0,80(%ebx)
	movl $_INTERFACE__,40(%ebx)
	movl -212(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	movl _INTERFACE__+64,%eax
	pushl %eax
	call ___infix_add__KKE
	movl %eax,64(%ebx)
	movl -216(%ebp),%edx
	movl _INTERFACE__+68,%eax
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_add__KKE
	movl %eax,68(%ebx)
	movl _INTERFACE__+44,%eax
	movl %eax,52(%ebx)
	addl $32,%esp
	testl %eax,%eax
	je L204
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L204
	jmp *L217(,%edx,4)
	.p2align 2
L217:
	.long L215
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L216
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L204
	.long L215
	.long L215
	.long L215
	.long L204
	.long L215
	.long L214
	.long L215
	.long L215
	.long L215
	.long L215
	.p2align 2
L214:
L215:
	movl %ebx,48(%eax)
	jmp L204
	.p2align 2
L216:
	movl %ebx,44(%eax)
L204:
	movl 40(%ebx),%edx
	movl (%edx),%eax
	cmpl $28,%eax
	je L220
	ja L225
	cmpl $17,%eax
	je L221
	jmp L219
	.p2align 2
L225:
	cmpl $78,%eax
	je L222
	jmp L219
	.p2align 2
L220:
	movl %ebx,40(%edx)
	jmp L219
	.p2align 2
L221:
L222:
	movl %ebx,44(%edx)
L219:
	movl $0,48(%ebx)
	movl $0,44(%ebx)
	movl $0,60(%ebx)
	movl $0,56(%ebx)
	movl -132(%ebp),%eax
	movl %eax,8(%ebx)
	movl -128(%ebp),%edx
	movl _parent_video__C2,%eax
	movl %edx,12(%ebx)
	addl $-12,%esp
	pushl %ebx
	call _clipping_off__O3HB
	addl $16,%esp
	addl $-12,%esp
	pushl %ebx
	call _append_plan__Z4HB
	addl $-12,%esp
	pushl %ebx
	call _clip_next_child__JKIB
	movl 40(%ebx),%edx
	addl $32,%esp
	testl %edx,%edx
	je L228
	movl (%edx),%eax
	cmpl $28,%eax
	je L230
	ja L235
	cmpl $17,%eax
	je L231
	jmp L228
	.p2align 2
L235:
	cmpl $78,%eax
	je L232
	jmp L228
	.p2align 2
L230:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__MEF
	jmp L527
	.p2align 2
L231:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__Z0I
	jmp L527
	.p2align 2
L232:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__YW5B
L527:
	addl $16,%esp
L228:
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	pushl %eax
	movl 8(%ebx),%eax
	pushl %eax
	call ___infix_sub__0YB
	pushl %eax
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	addl $16,%esp
	pushl %eax
	movl 12(%ebx),%eax
	pushl %eax
	call ___infix_sub__0YB
	addl $16,%esp
	pushl %eax
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	addl $16,%esp
	pushl %eax
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	addl $16,%esp
	pushl %eax
	pushl %ebx
	call _draw__to__RHJB
	movl ___string_12,%eax
	addl $64,%esp
	addl $-8,%esp
	pushl $8
	pushl %eax
	call _new_intern__OWK
	movl %eax,-296(%ebp)
	addl $-12,%esp
	pushl $35
	call _to_integer__4N
	movl %eax,-220(%ebp)
	addl $32,%esp
	addl $-12,%esp
	pushl $105
	call _to_integer__4N
	movl %eax,-224(%ebp)
	movl _parent_video__C2,%eax
	addl $16,%esp
	call _clone__5LKB
	movl %eax,%edi
	movl -296(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _get_entry__226
	movl %eax,%ebx
	addl $16,%esp
	testl %ebx,%ebx
	je L239
	addl $-12,%esp
	pushl %ebx
	call _is_file__9OAB
	addl $16,%esp
	testb %al,%al
	jne L238
L239:
	movl ___string_14,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-8,%esp
	pushl $13
	pushl %eax
	call _new_intern__OWK
	pushl %eax
	movl -296(%ebp),%edx
	movl ___string_13,%eax
	addl $-8,%esp
	pushl %edx
	addl $-8,%esp
	pushl $13
	pushl %eax
	call _new_intern__OWK
	addl $16,%esp
	pushl %eax
	call ___infix_add__2PAB
	addl $16,%esp
	pushl %eax
	call ___infix_add__G0AB
	pushl %eax
	call _message__64AB
	movl _parent_video__C2,%eax
	addl $48,%esp
	movl _exit_failure_code__QN,%edx
	movl _parent_video__C2,%eax
	addl $-12,%esp
	pushl %edx
	call _die_with_code__NRKB
	addl $16,%esp
L238:
	addl $-12,%esp
	pushl %ebx
	call _open_bmp__48AB
	movl %eax,-136(%ebp)
	addl $-12,%esp
	pushl %eax
	call _read_header__KFBB
	addl $32,%esp
	call _is_valid_bmp__T3CB
	testb %al,%al
	jne L244
	movl ___string_15,%eax
	addl $-12,%esp
	addl $-8,%esp
	pushl $27
	pushl %eax
	call _new_intern__OWK
	pushl %eax
	call _message__D5CB
	movl _parent_video__C2,%eax
	addl $32,%esp
	movl _exit_failure_code__QN,%edx
	movl _parent_video__C2,%eax
	addl $-12,%esp
	pushl %edx
	call _die_with_code__NRKB
	addl $16,%esp
L244:
	movl _header__L06,%eax
	addl $-8,%esp
	movl 18(%eax),%ebx
	movl 22(%eax),%esi
	pushl %esi
	pushl %ebx
	call _create__55CB
	movl %eax,84(%edi)
	addl $-8,%esp
	pushl %eax
	movl -136(%ebp),%eax
	pushl %eax
	call _fill_bitmap__AIEB
	movl -136(%ebp),%edx
	addl $32,%esp
	addl $-12,%esp
	pushl %edx
	call _close__3XGB
	addl $-8,%esp
	addl $-12,%esp
	pushl $2
	call _to_integer__4N
	pushl %eax
	pushl %ebx
	call ___infix_add__Q5B
	movl %eax,-140(%ebp)
	addl $48,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $2
	call _to_integer__4N
	pushl %eax
	pushl %esi
	call ___infix_add__Q5B
	movl %eax,%ebx
	movl -296(%ebp),%eax
	movl %eax,72(%edi)
	addl $32,%esp
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	movl %eax,76(%edi)
	movl $_MY_WIN__,80(%edi)
	movl $_INTERFACE__,40(%edi)
	movl -220(%ebp),%edx
	movl _INTERFACE__+64,%eax
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_add__KKE
	movl %eax,64(%edi)
	movl -224(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	movl _INTERFACE__+68,%eax
	pushl %eax
	call ___infix_add__KKE
	movl %eax,68(%edi)
	movl _INTERFACE__+44,%eax
	movl %eax,52(%edi)
	addl $16,%esp
	testl %eax,%eax
	je L249
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L249
	jmp *L262(,%edx,4)
	.p2align 2
L262:
	.long L260
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L261
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L249
	.long L260
	.long L260
	.long L260
	.long L249
	.long L260
	.long L260
	.long L260
	.long L260
	.long L260
	.long L259
	.p2align 2
L259:
L260:
	movl %edi,48(%eax)
	jmp L249
	.p2align 2
L261:
	movl %edi,44(%eax)
L249:
	movl 40(%edi),%edx
	movl (%edx),%eax
	cmpl $28,%eax
	je L265
	ja L270
	cmpl $17,%eax
	je L266
	jmp L264
	.p2align 2
L270:
	cmpl $78,%eax
	je L267
	jmp L264
	.p2align 2
L265:
	movl %edi,40(%edx)
	jmp L264
	.p2align 2
L266:
L267:
	movl %edi,44(%edx)
L264:
	movl $0,48(%edi)
	movl $0,44(%edi)
	movl $0,60(%edi)
	movl $0,56(%edi)
	movl %ebx,8(%edi)
	movl -140(%ebp),%edx
	movl _parent_video__C2,%eax
	movl %edx,12(%edi)
	addl $-12,%esp
	pushl %edi
	call _clipping_off__G0KB
	addl $16,%esp
	addl $-12,%esp
	pushl %edi
	call _append_plan__R1KB
	addl $-12,%esp
	pushl %edi
	call _clip_next_child__HHLB
	movl 40(%edi),%edx
	addl $32,%esp
	testl %edx,%edx
	je L273
	movl (%edx),%eax
	cmpl $28,%eax
	je L275
	ja L280
	cmpl $17,%eax
	je L276
	jmp L273
	.p2align 2
L280:
	cmpl $78,%eax
	je L277
	jmp L273
	.p2align 2
L275:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__MEF
	jmp L528
	.p2align 2
L276:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__Z0I
	jmp L528
	.p2align 2
L277:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__YW5B
L528:
	addl $16,%esp
L273:
	addl $-12,%esp
	pushl %edi
	call _refresh__8DMB
	movl ___string_16,%eax
	addl $-8,%esp
	pushl $24
	pushl %eax
	call _new_intern__OWK
	movl %eax,%edi
	addl $32,%esp
	addl $-12,%esp
	pushl $5
	call _to_integer__4N
	movl %eax,-228(%ebp)
	addl $-12,%esp
	pushl $135
	call _to_integer__4N
	movl %eax,-232(%ebp)
	addl $32,%esp
	addl $-12,%esp
	pushl $200
	call _to_integer__4N
	movl %eax,-236(%ebp)
	movl _parent_video__C2,%eax
	addl $16,%esp
	call _clone__ESPB
	movl %eax,%ebx
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	movl %eax,84(%ebx)
	addl $-12,%esp
	pushl $20
	call _to_integer__4N
	movl %eax,-144(%ebp)
	movl %edi,72(%ebx)
	addl $32,%esp
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	movl %eax,76(%ebx)
	movl $_MY_WIN__,80(%ebx)
	movl $_INTERFACE__,40(%ebx)
	movl -228(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl _INTERFACE__+64,%eax
	pushl %eax
	call ___infix_add__KKE
	movl %eax,64(%ebx)
	movl -232(%ebp),%edx
	movl _INTERFACE__+68,%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_add__KKE
	movl %eax,68(%ebx)
	movl _INTERFACE__+44,%eax
	movl %ebx,%esi
	movl %eax,52(%ebx)
	addl $16,%esp
	testl %eax,%eax
	je L283
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L283
	jmp *L296(,%edx,4)
	.p2align 2
L296:
	.long L294
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L295
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L283
	.long L294
	.long L294
	.long L294
	.long L283
	.long L294
	.long L294
	.long L294
	.long L294
	.long L294
	.long L293
	.p2align 2
L293:
L294:
	movl %esi,48(%eax)
	jmp L283
	.p2align 2
L295:
	movl %esi,44(%eax)
L283:
	movl 40(%ebx),%edx
	movl (%edx),%eax
	cmpl $28,%eax
	je L299
	ja L304
	cmpl $17,%eax
	je L300
	jmp L298
	.p2align 2
L304:
	cmpl $78,%eax
	je L301
	jmp L298
	.p2align 2
L299:
	movl %ebx,40(%edx)
	jmp L298
	.p2align 2
L300:
L301:
	movl %ebx,44(%edx)
L298:
	movl $0,48(%ebx)
	movl $0,44(%ebx)
	movl $0,60(%ebx)
	movl $0,56(%ebx)
	movl -144(%ebp),%eax
	movl %eax,8(%ebx)
	movl -236(%ebp),%edx
	movl _parent_video__C2,%eax
	movl %edx,12(%ebx)
	addl $-12,%esp
	pushl %ebx
	call _clipping_off__N2PB
	addl $16,%esp
	addl $-12,%esp
	pushl %ebx
	call _append_plan__Y3PB
	addl $-12,%esp
	pushl %ebx
	call _clip_next_child__UJQB
	movl 40(%ebx),%edx
	addl $32,%esp
	testl %edx,%edx
	je L307
	movl (%edx),%eax
	cmpl $28,%eax
	je L309
	ja L314
	cmpl $17,%eax
	je L310
	jmp L307
	.p2align 2
L314:
	cmpl $78,%eax
	je L311
	jmp L307
	.p2align 2
L309:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__MEF
	jmp L529
	.p2align 2
L310:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__Z0I
	jmp L529
	.p2align 2
L311:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__YW5B
L529:
	addl $16,%esp
L307:
	addl $-12,%esp
	pushl %ebx
	call _refresh__3GRB
	movl ___string_17,%eax
	addl $-8,%esp
	pushl $21
	pushl %eax
	call _new_intern__OWK
	movl %eax,%edi
	addl $32,%esp
	addl $-12,%esp
	pushl $5
	call _to_integer__4N
	movl %eax,-240(%ebp)
	addl $-12,%esp
	pushl $160
	call _to_integer__4N
	movl %eax,-244(%ebp)
	addl $32,%esp
	addl $-12,%esp
	pushl $250
	call _to_integer__4N
	movl %eax,-248(%ebp)
	movl _parent_video__C2,%eax
	addl $16,%esp
	call _clone__SNUB
	movl %eax,%ebx
	addl $-12,%esp
	addl $-8,%esp
	pushl $4
	movl -248(%ebp),%eax
	pushl %eax
	call ___infix_less_less__1SK
	pushl %eax
	call _create__N68
	movl %eax,84(%ebx)
	addl $32,%esp
	addl $-12,%esp
	pushl $20
	call _to_integer__4N
	movl %eax,-148(%ebp)
	movl %edi,72(%ebx)
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	movl %eax,76(%ebx)
	movl $_MY_WIN__,80(%ebx)
	movl $_INTERFACE__,40(%ebx)
	movl -240(%ebp),%edx
	movl _INTERFACE__+64,%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_add__KKE
	movl %eax,64(%ebx)
	movl -244(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl _INTERFACE__+68,%eax
	pushl %eax
	call ___infix_add__KKE
	movl %eax,68(%ebx)
	movl _INTERFACE__+44,%eax
	movl %ebx,%esi
	movl %eax,52(%ebx)
	addl $32,%esp
	testl %eax,%eax
	je L317
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L317
	jmp *L330(,%edx,4)
	.p2align 2
L330:
	.long L328
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L329
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L317
	.long L328
	.long L328
	.long L328
	.long L317
	.long L328
	.long L328
	.long L328
	.long L328
	.long L328
	.long L327
	.p2align 2
L327:
L328:
	movl %esi,48(%eax)
	jmp L317
	.p2align 2
L329:
	movl %esi,44(%eax)
L317:
	movl 40(%ebx),%edx
	movl (%edx),%eax
	cmpl $28,%eax
	je L333
	ja L338
	cmpl $17,%eax
	je L334
	jmp L332
	.p2align 2
L338:
	cmpl $78,%eax
	je L335
	jmp L332
	.p2align 2
L333:
	movl %ebx,40(%edx)
	jmp L332
	.p2align 2
L334:
L335:
	movl %ebx,44(%edx)
L332:
	movl $0,48(%ebx)
	movl $0,44(%ebx)
	movl $0,60(%ebx)
	movl $0,56(%ebx)
	movl -148(%ebp),%edx
	movl %edx,8(%ebx)
	movl -248(%ebp),%eax
	movl %eax,12(%ebx)
	movl _parent_video__C2,%eax
	addl $-12,%esp
	pushl %ebx
	call _clipping_off__EYUB
	addl $16,%esp
	addl $-12,%esp
	pushl %ebx
	call _append_plan__PZUB
	addl $-12,%esp
	pushl %ebx
	call _clip_next_child__RFVB
	movl 40(%ebx),%edx
	addl $32,%esp
	testl %edx,%edx
	je L341
	movl (%edx),%eax
	cmpl $28,%eax
	je L343
	ja L348
	cmpl $17,%eax
	je L344
	jmp L341
	.p2align 2
L348:
	cmpl $78,%eax
	je L345
	jmp L341
	.p2align 2
L343:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__MEF
	jmp L530
	.p2align 2
L344:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__Z0I
	jmp L530
	.p2align 2
L345:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__YW5B
L530:
	addl $16,%esp
L341:
	addl $-12,%esp
	pushl %ebx
	call _refresh__IDWB
	addl $-12,%esp
	pushl $300
	call _to_integer__4N
	movl %eax,-252(%ebp)
	addl $32,%esp
	addl $-12,%esp
	pushl $10
	call _to_integer__4N
	movl %eax,-256(%ebp)
	addl $-12,%esp
	pushl $180
	call _to_integer__4N
	movl %eax,-260(%ebp)
	addl $32,%esp
	addl $-12,%esp
	pushl $1000
	call _to_integer__4N
	movl %eax,-264(%ebp)
	addl $-12,%esp
	pushl $20
	call _to_integer__4N
	movl %eax,%edi
	movl _parent_video__C2,%eax
	addl $32,%esp
	call _clone__Z2YB
	movl %eax,%ebx
	movl -264(%ebp),%edx
	movl ___string_18,%eax
	movl %edx,84(%ebx)
	movl %edi,92(%ebx)
	addl $-8,%esp
	pushl $17
	pushl %eax
	call _new_intern__OWK
	movl %eax,%edi
	addl $-12,%esp
	pushl $16
	call _to_integer__4N
	movl %eax,-152(%ebp)
	movl %edi,72(%ebx)
	addl $32,%esp
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	movl %eax,76(%ebx)
	movl $_MY_WIN__,80(%ebx)
	movl $_INTERFACE__,40(%ebx)
	movl -252(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl _INTERFACE__+64,%eax
	pushl %eax
	call ___infix_add__KKE
	movl %eax,64(%ebx)
	movl -256(%ebp),%edx
	movl _INTERFACE__+68,%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_add__KKE
	movl %eax,68(%ebx)
	movl _INTERFACE__+44,%eax
	movl %ebx,%esi
	movl %eax,52(%ebx)
	addl $16,%esp
	testl %eax,%eax
	je L351
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L351
	jmp *L364(,%edx,4)
	.p2align 2
L364:
	.long L362
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L363
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L351
	.long L361
	.long L362
	.long L362
	.long L351
	.long L362
	.long L362
	.long L362
	.long L362
	.long L362
	.long L362
	.p2align 2
L361:
L362:
	movl %esi,48(%eax)
	jmp L351
	.p2align 2
L363:
	movl %esi,44(%eax)
L351:
	movl 40(%ebx),%edx
	movl (%edx),%eax
	cmpl $28,%eax
	je L367
	ja L372
	cmpl $17,%eax
	je L368
	jmp L366
	.p2align 2
L372:
	cmpl $78,%eax
	je L369
	jmp L366
	.p2align 2
L367:
	movl %ebx,40(%edx)
	jmp L366
	.p2align 2
L368:
L369:
	movl %ebx,44(%edx)
L366:
	movl $0,48(%ebx)
	movl $0,44(%ebx)
	movl $0,60(%ebx)
	movl $0,56(%ebx)
	movl -260(%ebp),%eax
	movl %eax,8(%ebx)
	movl -152(%ebp),%edx
	movl _parent_video__C2,%eax
	movl %edx,12(%ebx)
	addl $-12,%esp
	pushl %ebx
	call _clipping_off__WDZB
	addl $16,%esp
	addl $-12,%esp
	pushl %ebx
	call _append_plan__7EZB
	addl $-12,%esp
	pushl %ebx
	call _clip_next_child__FVZB
	movl 40(%ebx),%edx
	addl $32,%esp
	testl %edx,%edx
	je L375
	movl (%edx),%eax
	cmpl $28,%eax
	je L377
	ja L382
	cmpl $17,%eax
	je L378
	jmp L375
	.p2align 2
L382:
	cmpl $78,%eax
	je L379
	jmp L375
	.p2align 2
L377:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__MEF
	jmp L531
	.p2align 2
L378:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__Z0I
	jmp L531
	.p2align 2
L379:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__YW5B
L531:
	addl $16,%esp
L375:
	addl $-12,%esp
	pushl %ebx
	call _refresh__OT0B
	movl ___string_19,%eax
	addl $-8,%esp
	pushl $10
	pushl %eax
	call _new_intern__OWK
	movl %eax,-300(%ebp)
	addl $32,%esp
	addl $-12,%esp
	pushl $95
	call _to_integer__4N
	movl %eax,-268(%ebp)
	addl $-12,%esp
	pushl $78
	call _to_integer__4N
	movl %eax,-272(%ebp)
	addl $32,%esp
	addl $-12,%esp
	pushl $130
	call _to_integer__4N
	movl %eax,-276(%ebp)
	addl $-12,%esp
	pushl $44
	call _to_integer__4N
	movl %eax,-280(%ebp)
	movl _parent_video__C2,%eax
	addl $32,%esp
	call _clone__D24B
	movl %eax,-160(%ebp)
	movl -160(%ebp),%edi
	movl -300(%ebp),%eax
	movl %eax,76(%edi)
	movl -300(%ebp),%edx
	addl $-8,%esp
	movl 4(%edx),%eax
	movl $0,-156(%ebp)
	movl _lower__2WK,%edx
	movl %edx,-292(%ebp)
	pushl %eax
	movl -300(%ebp),%edx
	movl 4(%edx),%eax
	pushl %eax
	call _min__TNE
	movl %eax,-308(%ebp)
	addl $16,%esp
	jmp L385
	.p2align 2
L387:
	movl -292(%ebp),%eax
	addl $-12,%esp
	addl $-8,%esp
	pushl %eax
	movl -300(%ebp),%edx
	pushl %edx
	call _item__H4K
	movsbl %al,%eax
	pushl %eax
	call _to_integer__BAS
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $32
	call _to_integer__4N
	pushl %eax
	pushl %esi
	call ___infix_less__6TH
	addl $32,%esp
	testb %al,%al
	jne L389
	addl $-8,%esp
	addl $-12,%esp
	pushl $127
	call _to_integer__4N
	pushl %eax
	pushl %esi
	call ___infix_greater_equal__W2F
	addl $32,%esp
	testb %al,%al
	je L388
L389:
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	movl %eax,%esi
	addl $16,%esp
	jmp L390
	.p2align 2
L388:
	addl $-8,%esp
	addl $-12,%esp
	pushl $32
	call _to_integer__4N
	pushl %eax
	pushl %esi
	call ___infix_sub__0YB
	movl %eax,%esi
	addl $32,%esp
L390:
	movl $___index_font,%eax
	xorl %ebx,%ebx
	addl $-8,%esp
	addl $-12,%esp
	movw (%eax,%esi,2),%bx
	movw 2(%eax,%esi,2),%si
	andl $65535,%esi
	pushl $1
	call _to_integer__4N
	pushl %eax
	addl $-8,%esp
	pushl %ebx
	addl $-8,%esp
	pushl %esi
	movl -156(%ebp),%eax
	pushl %eax
	call ___infix_add__KKE
	addl $16,%esp
	pushl %eax
	call ___infix_sub__F6B
	addl $16,%esp
	pushl %eax
	call ___infix_add__Q5B
	movl %eax,-156(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	pushl %eax
	movl -292(%ebp),%edx
	pushl %edx
	call ___infix_add__Q5B
	movl %eax,-292(%ebp)
	addl $32,%esp
L385:
	movl -308(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl -292(%ebp),%edx
	pushl %edx
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	jne L387
	addl $-8,%esp
	addl $-12,%esp
	pushl $2
	call _to_integer__4N
	pushl %eax
	movl -156(%ebp),%eax
	pushl %eax
	call ___infix_add__Q5B
	movl -160(%ebp),%edx
	movl %eax,80(%edx)
	movl $_INTERFACE__,40(%edx)
	movl -268(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	movl _INTERFACE__+64,%eax
	pushl %eax
	call ___infix_add__KKE
	movl -160(%ebp),%edx
	movl %eax,64(%edx)
	movl -272(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl _INTERFACE__+68,%eax
	pushl %eax
	call ___infix_add__KKE
	movl -160(%ebp),%edx
	movl %eax,68(%edx)
	movl _INTERFACE__+44,%eax
	movl %eax,52(%edx)
	addl $32,%esp
	testl %eax,%eax
	je L392
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L392
	jmp *L405(,%edx,4)
	.p2align 2
L405:
	.long L402
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L404
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L392
	.long L403
	.long L403
	.long L403
	.long L392
	.long L403
	.long L403
	.long L403
	.long L403
	.long L403
	.long L403
	.p2align 2
L402:
L403:
	movl %edi,48(%eax)
	jmp L392
	.p2align 2
L404:
	movl %edi,44(%eax)
L392:
	movl 40(%edi),%edx
	movl (%edx),%eax
	cmpl $28,%eax
	je L408
	ja L413
	cmpl $17,%eax
	je L409
	jmp L407
	.p2align 2
L413:
	cmpl $78,%eax
	je L410
	jmp L407
	.p2align 2
L408:
	movl %edi,40(%edx)
	jmp L407
	.p2align 2
L409:
L410:
	movl %edi,44(%edx)
L407:
	movl $0,48(%edi)
	movl $0,44(%edi)
	movl $0,60(%edi)
	movl $0,56(%edi)
	movl -280(%ebp),%eax
	movl %eax,8(%edi)
	movl -276(%ebp),%edx
	movl _parent_video__C2,%eax
	movl %edx,12(%edi)
	addl $-12,%esp
	pushl %edi
	call _clipping_off__9F5B
	addl $16,%esp
	addl $-12,%esp
	pushl %edi
	call _append_plan__DH5B
	addl $-12,%esp
	pushl %edi
	call _clip_type1__EW5B
	addl $32,%esp
	addl $-12,%esp
	pushl %edi
	call _refresh__ST6B
	movl ___string_20,%eax
	addl $-8,%esp
	pushl $4
	pushl %eax
	call _new_intern__OWK
	movl %eax,-304(%ebp)
	addl $32,%esp
	addl $-12,%esp
	pushl $4
	call _to_integer__4N
	movl %eax,%esi
	addl $-12,%esp
	pushl $20
	call _to_integer__4N
	movl %eax,%edi
	addl $32,%esp
	addl $-12,%esp
	pushl $122
	call _to_integer__4N
	movl %eax,-284(%ebp)
	addl $-12,%esp
	pushl $20
	call _to_integer__4N
	movl %eax,-288(%ebp)
	movl _parent_video__C2,%eax
	addl $32,%esp
	call _clone__X2N
	movl %eax,%ebx
	movl -304(%ebp),%eax
	movl %eax,72(%ebx)
	addl $-12,%esp
	pushl $0
	call _to_integer__4N
	movl %eax,76(%ebx)
	movl $_MY_WIN__,80(%ebx)
	movl -160(%ebp),%edx
	movl %edx,40(%ebx)
	addl $16,%esp
	testl %edx,%edx
	jne L418
	movl %esi,64(%ebx)
	movl %edi,68(%ebx)
	movl $0,52(%ebx)
	jmp L419
	.p2align 2
L418:
	addl $-8,%esp
	pushl %esi
	movl -160(%ebp),%edx
	movl 64(%edx),%eax
	pushl %eax
	call ___infix_add__KKE
	movl %eax,64(%ebx)
	addl $-8,%esp
	pushl %edi
	movl -160(%ebp),%edx
	movl 68(%edx),%eax
	pushl %eax
	call ___infix_add__KKE
	movl %eax,68(%ebx)
	movl -160(%ebp),%edx
	addl $32,%esp
	movl 44(%edx),%eax
	movl %eax,52(%ebx)
	testl %eax,%eax
	je L420
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L420
	jmp *L433(,%edx,4)
	.p2align 2
L433:
	.long L431
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L432
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L420
	.long L426
	.long L423
	.long L429
	.long L420
	.long L424
	.long L428
	.long L425
	.long L422
	.long L430
	.long L427
	.p2align 2
L422:
	addl $-8,%esp
	pushl %ebx
	pushl %eax
	call _set_prev__PRBC
	jmp L532
	.p2align 2
L423:
	addl $-8,%esp
	pushl %ebx
	pushl %eax
	call _set_prev__XRBC
	jmp L532
	.p2align 2
L424:
	addl $-8,%esp
	pushl %ebx
	pushl %eax
	call _set_prev__5RBC
	jmp L532
	.p2align 2
L425:
	addl $-8,%esp
	pushl %ebx
	pushl %eax
	call _set_prev__DSBC
	jmp L532
	.p2align 2
L426:
	addl $-8,%esp
	pushl %ebx
	pushl %eax
	call _set_prev__KSBC
	jmp L532
	.p2align 2
L427:
	addl $-8,%esp
	pushl %ebx
	pushl %eax
	call _set_prev__RSBC
	jmp L532
	.p2align 2
L428:
	addl $-8,%esp
	pushl %ebx
	pushl %eax
	call _set_prev__ZSBC
	jmp L532
	.p2align 2
L429:
	addl $-8,%esp
	pushl %ebx
	pushl %eax
	call _set_prev__7SBC
	jmp L532
	.p2align 2
L430:
	addl $-8,%esp
	pushl %ebx
	pushl %eax
	call _set_prev__FTBC
	jmp L532
	.p2align 2
L431:
	addl $-8,%esp
	pushl %ebx
	pushl %eax
	call _set_prev__BAO
	jmp L532
	.p2align 2
L432:
	addl $-8,%esp
	pushl %ebx
	pushl %eax
	call _set_prev__RLYC
L532:
	addl $16,%esp
L420:
	movl 40(%ebx),%edx
	movl (%edx),%eax
	cmpl $28,%eax
	je L437
	ja L441
	cmpl $17,%eax
	je L438
	jmp L419
	.p2align 2
L441:
	cmpl $78,%eax
	jne L419
	addl $-8,%esp
	pushl %ebx
	pushl %edx
	call _set_child__UTBC
	jmp L533
	.p2align 2
L437:
	addl $-8,%esp
	pushl %ebx
	pushl %edx
	call _set_child__MAO
	jmp L533
	.p2align 2
L438:
	addl $-8,%esp
	pushl %ebx
	pushl %edx
	call _set_child__RAO
L533:
	addl $16,%esp
L419:
	movl $0,48(%ebx)
	movl $0,44(%ebx)
	movl $0,60(%ebx)
	movl $0,56(%ebx)
	movl -288(%ebp),%eax
	movl %eax,8(%ebx)
	movl -284(%ebp),%edx
	movl _parent_video__C2,%eax
	movl %edx,12(%ebx)
	addl $-12,%esp
	pushl %ebx
	call _clipping_off__FBO
	addl $16,%esp
	addl $-12,%esp
	pushl %ebx
	call _append_plan__QCO
	addl $-12,%esp
	pushl %ebx
	call _clip_type1__JRO
	addl $32,%esp
	addl $-12,%esp
	pushl %ebx
	call _refresh__XBQ
	movl %ebx,_exit__8M
	addl $16,%esp
	.p2align 2
L519:
	addl $-12,%esp
	addl $-12,%esp
	pushl $96
	call _to_ushortint__ZV
	andl $65535,%eax
	pushl %eax
	call _itemb__9WBC
	movb %al,%bl
	addl $32,%esp
	testb %bl,%bl
	je L447
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_usmallint__RU
	andl $255,%eax
	pushl %eax
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	call ___infix_sub__OXBC
	movb %al,-164(%ebp)
	xorl %esi,%esi
	movb $0,-163(%ebp)
	addl $32,%esp
	cmpb $0,_KEYBOARD__+12
	jne L448
	addl $-8,%esp
	addl $-12,%esp
	addl $-8,%esp
	pushl $1
	pushl $224
	call ___infix_sub__D1
	pushl %eax
	call _to_usmallint__RU
	andl $255,%eax
	pushl %eax
	xorl %ebx,%ebx
	movb -164(%ebp),%bl
	pushl %ebx
	call ___infix_equal_equal__MW9
	addl $48,%esp
	testb %al,%al
	je L449
	movb $1,_KEYBOARD__+12
	jmp L453
	.p2align 2
L449:
	addl $-8,%esp
	addl $-12,%esp
	pushl $0
	call _to_usmallint__RU
	andl $255,%eax
	pushl %eax
	addl $-8,%esp
	addl $-12,%esp
	pushl $128
	call _to_usmallint__RU
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	pushl %ebx
	call ___infix_and__GZ
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_equal_equal__MW9
	addl $32,%esp
	testb %al,%al
	je L451
	addl $-12,%esp
	pushl %ebx
	call _keydown__S0BC
	movb %al,-163(%ebp)
	addl $16,%esp
	jmp L453
	.p2align 2
L451:
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $127
	call _to_usmallint__RU
	andl $255,%eax
	pushl %eax
	pushl %ebx
	call ___infix_and__GZ
	andl $255,%eax
	pushl %eax
	call _keyup__9CDC
	movb %al,-163(%ebp)
	addl $48,%esp
	jmp L453
	.p2align 2
L448:
	xorl %ebx,%ebx
	movb -164(%ebp),%bl
	addl $-8,%esp
	pushl $1
	pushl $224
	call ___infix_sub__D1
	addl $16,%esp
	movl %ebx,%edi
	cmpl %eax,%edi
	je L453
	cmpb $41,-164(%ebp)
	je L453
	movb $0,_KEYBOARD__+12
	cmpb $169,-164(%ebp)
	je L453
	jmp L457
	.p2align 2
L461:
	addl $-8,%esp
	addl $-12,%esp
	pushl $15
	call _to_integer__4N
	pushl %eax
	pushl %esi
	call ___infix_less__6TH
	addl $32,%esp
	testb %al,%al
	je L458
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	pushl %eax
	pushl %esi
	call ___infix_add__Q5B
	movl %eax,%esi
	addl $32,%esp
L457:
	addl $-12,%esp
	addl $-8,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	pushl %eax
	pushl %esi
	call ___infix_add__Q5B
	pushl %eax
	movl _ext_key__UM,%eax
	pushl %eax
	call _item__H4K
	movsbl %al,%eax
	pushl %eax
	call _to_usmallint__2UCC
	movb %al,%bl
	addl $64,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $127
	call _to_usmallint__RU
	andl $255,%eax
	pushl %eax
	pushl %edi
	call ___infix_and__GZ
	addl $32,%esp
	cmpb %al,%bl
	jne L461
L458:
	addl $-8,%esp
	addl $-12,%esp
	pushl $15
	call _to_integer__4N
	pushl %eax
	pushl %esi
	call ___infix_less__6TH
	addl $32,%esp
	testb %al,%al
	je L453
	addl $-8,%esp
	addl $-12,%esp
	pushl $0
	call _to_usmallint__RU
	andl $255,%eax
	pushl %eax
	addl $-8,%esp
	addl $-12,%esp
	pushl $128
	call _to_usmallint__RU
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	pushl %edi
	call ___infix_and__GZ
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_equal_equal__MW9
	addl $32,%esp
	testb %al,%al
	je L463
	addl $-12,%esp
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %esi
	call _to_numeric__4VD
	pushl %eax
	pushl $88
	call ___infix_add__I28
	pushl %eax
	call _to_usmallint__RU
	andl $255,%eax
	pushl %eax
	call _keydown__S0BC
	jmp L534
	.p2align 2
L463:
	addl $-12,%esp
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %esi
	call _to_numeric__4VD
	pushl %eax
	pushl $88
	call ___infix_add__I28
	pushl %eax
	call _to_usmallint__RU
	andl $255,%eax
	pushl %eax
	call _keyup__9CDC
L534:
	movb %al,-163(%ebp)
	addl $64,%esp
L453:
	cmpb $0,-163(%ebp)
	je L447
	addl $-8,%esp
	addl $-12,%esp
	pushl $83
	call _to_usmallint__2UCC
	andl $255,%eax
	pushl %eax
	xorl %ebx,%ebx
	movb -163(%ebp),%bl
	pushl %ebx
	call ___infix_equal_equal__C3CC
	addl $32,%esp
	movl %ebx,%esi
	testb %al,%al
	je L466
	addl $-8,%esp
	addl $-12,%esp
	pushl $13
	call _to_usmallint__RU
	andl $255,%eax
	pushl %eax
	addl $-8,%esp
	addl $-12,%esp
	pushl $15
	call _to_usmallint__RU
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	xorl %eax,%eax
	movb _KEYBOARD__+20,%al
	pushl %eax
	call ___infix_and__GZ
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_equal_equal__MW9
	addl $32,%esp
	testb %al,%al
	jne L467
	addl $-8,%esp
	addl $-12,%esp
	pushl $11
	call _to_usmallint__RU
	andl $255,%eax
	pushl %eax
	addl $-8,%esp
	addl $-12,%esp
	pushl $15
	call _to_usmallint__RU
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	xorl %eax,%eax
	movb _KEYBOARD__+20,%al
	pushl %eax
	call ___infix_and__GZ
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_equal_equal__MW9
	addl $32,%esp
	testb %al,%al
	je L466
L467:
	movl ___string_21,%eax
	addl $-12,%esp
	addl $-8,%esp
	pushl $11
	pushl %eax
	call _new_intern__OWK
	pushl %eax
	call _print__S1K
	movl _exit_failure_code__QN,%eax
	addl $32,%esp
	addl $-12,%esp
	pushl %eax
	call _exit__2QB
	addl $16,%esp
L466:
	addl $-8,%esp
	addl $-12,%esp
	pushl $3
	call _to_usmallint__RU
	andl $255,%eax
	pushl %eax
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_usmallint__RU
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	xorl %eax,%eax
	movb _p_end__2VM,%al
	pushl %eax
	call ___infix_add__0U9
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__GZ
	movb %al,-173(%ebp)
	movl _KEYBOARD__+8,%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl (%eax),%ebx
	xorl %eax,%eax
	movb _p_end__2VM,%al
	pushl %eax
	call _to_integer__8QFB
	pushl %eax
	call _object_size__QLN
	pushl %eax
	call ___infix_mul__3QFB
	addl %eax,%ebx
	addl $32,%esp
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	addl $-12,%esp
	pushl %esi
	call _to_ushortint__SQDC
	andl $65535,%eax
	pushl %eax
	call ___prefix_logicnot__SRDC
	andl $65535,%eax
	pushl %eax
	addl $-12,%esp
	addl $-8,%esp
	pushl $8
	addl $-12,%esp
	xorl %eax,%eax
	movb _KEYBOARD__+20,%al
	pushl %eax
	call _to_ushortint__SQDC
	addl $16,%esp
	andl $65535,%eax
	pushl %eax
	call ___infix_less_less__S0C
	addl $16,%esp
	andl $65535,%eax
	pushl %eax
	call ___prefix_logicnot__SRDC
	addl $16,%esp
	andl $65535,%eax
	pushl %eax
	call ___infix_and__LJS
	andl $65535,%eax
	pushl %eax
	call ___prefix_logicnot__SRDC
	movw %ax,8(%ebx)
	movl $0,4(%ebx)
	addl $64,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $3
	call _to_usmallint__RU
	andl $255,%eax
	pushl %eax
	addl $-8,%esp
	addl $-12,%esp
	pushl $2
	call _to_usmallint__RU
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	xorl %eax,%eax
	movb -173(%ebp),%al
	pushl %eax
	call ___infix_add__0U9
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__GZ
	addl $32,%esp
	cmpb _p_beg__1VM,%al
	je L468
	movb -173(%ebp),%al
	movb %al,_p_end__2VM
L468:
	addl $-12,%esp
	xorl %eax,%eax
	movb _p_beg__1VM,%al
	pushl %eax
	call _to_integer__8QFB
	movl %eax,-168(%ebp)
	addl $16,%esp
	jmp L535
	.p2align 2
L471:
	movl _KEYBOARD__+4,%eax
	movl _lower__1HM,%edi
	movl (%eax),%eax
	movl %eax,-312(%ebp)
	jmp L472
	.p2align 2
L474:
	movl _KEYBOARD__+4,%eax
	addl $-8,%esp
	pushl %edi
	pushl %eax
	call _item__RVDC
	movl -168(%ebp),%edx
	movl _KEYBOARD__+8,%eax
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call _item__GTN
	addl $32,%esp
	cmpl $0,4(%eax)
	jne L475
	movl _storage_message__NL,%ebx
	cmpl $0,4(%ebx)
	jne L476
	addl $-12,%esp
	pushl %eax
	call _create__next__1CEC
	movl %eax,4(%ebx)
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	movl %eax,(%ebx)
	movl 4(%ebx),%eax
	movl %eax,8(%ebx)
	addl $32,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	movl %eax,12(%ebx)
	addl $16,%esp
	jmp L475
	.p2align 2
L476:
	addl $-12,%esp
	pushl %eax
	call _create__next__1CEC
	movl %eax,%esi
	addl $-8,%esp
	pushl %esi
	movl 8(%ebx),%eax
	pushl %eax
	call _set_next__5FEC
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	pushl %eax
	movl (%ebx),%eax
	pushl %eax
	call ___infix_add__Q5B
	movl %eax,(%ebx)
	movl %esi,8(%ebx)
	addl $32,%esp
L475:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	pushl %eax
	pushl %edi
	call ___infix_add__Q5B
	movl %eax,%edi
	addl $32,%esp
L472:
	movl -312(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	jne L474
	addl $-8,%esp
	addl $-12,%esp
	pushl $3
	call _to_integer__4N
	pushl %eax
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	addl $16,%esp
	pushl %eax
	movl -168(%ebp),%edx
	pushl %edx
	call ___infix_add__Q5B
	addl $16,%esp
	pushl %eax
	call ___infix_and__P6B
	movl %eax,-168(%ebp)
	addl $32,%esp
L535:
	xorl %eax,%eax
	movb _p_end__2VM,%al
	cmpl %eax,-168(%ebp)
	jne L471
L447:
	movw $3,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	xorl %ebx,%ebx
	movw ___in_mouse+16,%bx
	addl $-8,%esp
	addl $-12,%esp
	pushl $2
	call _to_integer__4N
	pushl %eax
	xorl %eax,%eax
	movw ___in_mouse+24,%ax
	pushl %eax
	call ___infix_div__5RCB
	xorl %esi,%esi
	movw ___in_mouse+20,%si
	movl %eax,%edi
	addl $48,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	pushl %eax
	pushl %ebx
	call ___infix_and__P6B
	addl $32,%esp
	testl %eax,%eax
	setne -326(%ebp)
	addl $-8,%esp
	addl $-12,%esp
	pushl $2
	call _to_integer__4N
	pushl %eax
	pushl %ebx
	call ___infix_and__P6B
	addl $32,%esp
	testl %eax,%eax
	setne -325(%ebp)
	cmpl _MOUSE__+16,%edi
	jne L481
	cmpl _MOUSE__+20,%esi
	jne L481
	movb -326(%ebp),%al
	cmpb _MOUSE__+25,%al
	jne L481
	movb -325(%ebp),%dl
	cmpb _MOUSE__+24,%dl
	je L491
L481:
	movl _MOUSE__+12,%eax
	addl $-8,%esp
	pushl %eax
	addl $-8,%esp
	pushl $0
	pushl %esi
	call _max__1ME
	addl $16,%esp
	pushl %eax
	call _min__TNE
	movl %eax,-184(%ebp)
	movl _MOUSE__+8,%eax
	addl $-8,%esp
	pushl %eax
	addl $-8,%esp
	pushl $0
	pushl %edi
	call _max__1ME
	addl $16,%esp
	pushl %eax
	call _min__TNE
	movl %eax,-180(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $3
	call _to_usmallint__RU
	andl $255,%eax
	pushl %eax
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_usmallint__RU
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	xorl %eax,%eax
	movb _p_end__5L,%al
	pushl %eax
	call ___infix_add__0U9
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__GZ
	movb %al,-313(%ebp)
	movl _MOUSE__+28,%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl (%eax),%ebx
	xorl %eax,%eax
	movb _p_end__5L,%al
	pushl %eax
	call _to_integer__8QFB
	pushl %eax
	call _object_size__P6L
	pushl %eax
	call ___infix_mul__3QFB
	addl %eax,%ebx
	movl -180(%ebp),%eax
	movl %eax,8(%ebx)
	movl -184(%ebp),%edx
	movl %edx,12(%ebx)
	movb -326(%ebp),%al
	movb %al,17(%ebx)
	movb -325(%ebp),%dl
	movb %dl,16(%ebx)
	movl $0,4(%ebx)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $3
	call _to_usmallint__RU
	andl $255,%eax
	pushl %eax
	addl $-8,%esp
	addl $-12,%esp
	pushl $2
	call _to_usmallint__RU
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	xorl %eax,%eax
	movb -313(%ebp),%al
	pushl %eax
	call ___infix_add__0U9
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__GZ
	addl $32,%esp
	cmpb _p_beg__4L,%al
	je L482
	movb -313(%ebp),%al
	movb %al,_p_end__5L
L482:
	addl $-12,%esp
	xorl %eax,%eax
	movb _p_beg__4L,%al
	pushl %eax
	call _to_integer__8QFB
	movl %eax,%esi
	addl $16,%esp
	jmp L536
	.p2align 2
L485:
	movl _MOUSE__+28,%eax
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _item__DEM
	movl _lower__1HM,%ebx
	movl _MOUSE__+4,%eax
	addl $16,%esp
	movl (%eax),%edi
	jmp L486
	.p2align 2
L488:
	movl _MOUSE__+28,%eax
	addl $-8,%esp
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _item__DEM
	pushl %eax
	movl _MOUSE__+4,%eax
	addl $-8,%esp
	pushl %ebx
	pushl %eax
	call _item__RVDC
	addl $16,%esp
	pushl %eax
	call _receive__0LJC
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	pushl %eax
	pushl %ebx
	call ___infix_add__Q5B
	movl %eax,%ebx
	addl $32,%esp
L486:
	addl $-8,%esp
	pushl %edi
	pushl %ebx
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	jne L488
	addl $-8,%esp
	addl $-12,%esp
	pushl $3
	call _to_integer__4N
	pushl %eax
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	addl $16,%esp
	pushl %eax
	pushl %esi
	call ___infix_add__Q5B
	addl $16,%esp
	pushl %eax
	call ___infix_and__P6B
	movl %eax,%esi
	addl $32,%esp
L536:
	xorl %eax,%eax
	movb _p_end__5L,%al
	cmpl %eax,%esi
	jne L485
	movl -180(%ebp),%edx
	movl %edx,_MOUSE__+16
	movl -184(%ebp),%eax
	movl %eax,_MOUSE__+20
	movb -325(%ebp),%dl
	movb %dl,_MOUSE__+24
	movb -326(%ebp),%al
	movb %al,_MOUSE__+25
L491:
	movl _storage_message__NL,%ebx
	movl 4(%ebx),%eax
	testl %eax,%eax
	je L519
	movl (%eax),%esi
	cmpl $1,(%ebx)
	jne L493
	addl $-12,%esp
	pushl %ebx
	call _make__98DC
	addl $16,%esp
	jmp L494
	.p2align 2
L493:
	movl 4(%eax),%eax
	movl %eax,4(%ebx)
	cmpl $1,12(%ebx)
	je L496
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	pushl %eax
	movl 12(%ebx),%eax
	pushl %eax
	call ___infix_sub__0YB
	movl %eax,12(%ebx)
	addl $32,%esp
L496:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_integer__4N
	pushl %eax
	movl (%ebx),%eax
	pushl %eax
	call ___infix_sub__0YB
	movl %eax,(%ebx)
	addl $32,%esp
L494:
	movl _focus__LL,%eax
	cmpl $77,(%esi)
	jne L497
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call _set_destination__8URC
	jmp L537
	.p2align 2
L497:
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call _set_destination__NSJC
L537:
	addl $16,%esp
	movl _focus__LL,%eax
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L499
	jmp *L511(,%edx,4)
	.p2align 2
L511:
	.long L510
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L499
	.long L504
	.long L501
	.long L508
	.long L499
	.long L502
	.long L506
	.long L503
	.long L500
	.long L509
	.long L505
	.p2align 2
L500:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _receive__CVRC
	jmp L538
	.p2align 2
L501:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _receive__Z6RC
	jmp L538
	.p2align 2
L502:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _receive__2ASC
	jmp L538
	.p2align 2
L503:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _receive__YISC
	jmp L538
	.p2align 2
L504:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _receive__1MSC
	jmp L538
	.p2align 2
L505:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _receive__5PSC
	jmp L538
	.p2align 2
L506:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _receive__KBTC
	jmp L538
	.p2align 2
L508:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _receive__YCTC
	jmp L538
	.p2align 2
L509:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _receive__VHTC
	jmp L538
	.p2align 2
L510:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _receive__6ZRC
L538:
	addl $16,%esp
L499:
	movl $_MOUSE__,%eax
	cmpl $77,(%esi)
	jne L515
	movl $_KEYBOARD__,%eax
L515:
	cmpl $19,(%eax)
	jne L517
	addl $-8,%esp
	addl $-12,%esp
	pushl $3
	call _to_usmallint__RU
	andl $255,%eax
	pushl %eax
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_usmallint__RU
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	xorl %eax,%eax
	movb _p_beg__1VM,%al
	pushl %eax
	call ___infix_add__0U9
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__GZ
	movb %al,_p_beg__1VM
	addl $32,%esp
	jmp L491
	.p2align 2
L517:
	addl $-8,%esp
	addl $-12,%esp
	pushl $3
	call _to_usmallint__RU
	andl $255,%eax
	pushl %eax
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_usmallint__RU
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	xorl %eax,%eax
	movb _p_beg__4L,%al
	pushl %eax
	call ___infix_add__0U9
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__GZ
	movb %al,_p_beg__4L
	addl $32,%esp
	jmp L491
	.p2align 2
_allocation__C7:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-4(%ebp)
	cmpl $0,_capacity__G5
	jne L545
	movl _get_begin_memory__EP,%ebx
	movl _get_capacity_memory__FP,%eax
	movl %ebx,_begin_memory__E5
	movl %eax,_capacity__G5
	addl $-8,%esp
	pushl $1
	pushl $16
	call ___infix_sub__WSB
	movl %eax,%esi
	addl $-8,%esp
	addl $-12,%esp
	pushl %esi
	call ___prefix_logicnot__2TB
	pushl %eax
	addl $-8,%esp
	pushl %esi
	pushl %ebx
	call ___infix_add__6SB
	addl $16,%esp
	pushl %eax
	call ___infix_and__PUB
	movl %eax,%esi
	addl $48,%esp
	addl $-8,%esp
	pushl $1
	movl _capacity__G5,%eax
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call ___infix_add__6SB
	addl $16,%esp
	pushl %eax
	call ___infix_sub__WSB
	movl %eax,_end_memory__F5
	movl %esi,_small_fat__C5
	addl $16,%esp
	addl $-8,%esp
	pushl $0
	pushl $63
	call ___infix_greater_equal__FWB
	addl $16,%esp
	testb %al,%al
	je L551
	addl $-8,%esp
	pushl $63
	pushl %esi
	call _put__to__BXB
	addl $-8,%esp
	addl $16,%esp
	pushl $1
	pushl $63
	jmp L634
	.p2align 2
L555:
	addl $-8,%esp
	pushl %ebx
	pushl %esi
	call _put__to__BXB
	addl $-8,%esp
	addl $16,%esp
	pushl $1
	pushl %ebx
L634:
	call ___infix_sub__0YB
	movl %eax,%ebx
	addl $16,%esp
	addl $-8,%esp
	pushl $0
	pushl %ebx
	call ___infix_greater_equal__FWB
	addl $16,%esp
	testb %al,%al
	jne L555
L551:
	addl $-8,%esp
	pushl $256
	pushl %esi
	call ___infix_add__N0B
	movl %eax,%esi
	addl $-12,%esp
	pushl %esi
	call _get_block__30B
	movl %eax,_last_block__H5
	movl _object_size__97,%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-8,%esp
	pushl %eax
	addl $-8,%esp
	pushl %esi
	addl $-8,%esp
	pushl $1
	movl _end_memory__F5,%eax
	pushl %eax
	call ___infix_add__N0B
	addl $16,%esp
	pushl %eax
	call ___infix_sub__STB
	addl $16,%esp
	pushl %eax
	call ___infix_sub__STB
	pushl %eax
	movl _last_block__H5,%eax
	pushl %eax
	call _make__21B
	movl _last_block__H5,%eax
	movl %eax,_first_free__D5
	addl $32,%esp
L545:
	addl $-8,%esp
	pushl $128
	pushl %edi
	call ___infix_less_equal__Z4B
	addl $16,%esp
	testb %al,%al
	je L560
	addl $-12,%esp
	addl $-8,%esp
	pushl $254
	addl $-8,%esp
	pushl $1
	pushl %edi
	call ___infix_add__Q5B
	addl $16,%esp
	pushl %eax
	call ___infix_and__P6B
	pushl %eax
	call _to_uinteger__X6B
	movl %eax,-12(%ebp)
	addl $32,%esp
	addl $-8,%esp
	pushl $1
	addl $-8,%esp
	pushl $1
	pushl %eax
	call ___infix_greater_greater__47B
	addl $16,%esp
	pushl %eax
	call ___infix_sub__WSB
	movl %eax,-8(%ebp)
	movl _small_fat__C5,%eax
	movl -8(%ebp),%edx
	addl $16,%esp
	movl (%eax,%edx,4),%eax
	movl %eax,-16(%ebp)
	testl %eax,%eax
	je L566
	movl -12(%ebp),%ecx
	addl $-8,%esp
	pushl %ecx
	pushl %eax
	call _is_small_busy__W5C
	addl $16,%esp
	testb %al,%al
	je L565
L566:
	addl $-8,%esp
	pushl $-16
	addl $-8,%esp
	pushl $15
	pushl $4096
	call ___infix_add__00
	addl $16,%esp
	pushl %eax
	call ___infix_and__UDC
	movl %eax,-28(%ebp)
	movl _first_free__D5,%esi
	addl $16,%esp
	jmp L568
	.p2align 2
L570:
	movl 12(%esi),%esi
L568:
	testl %esi,%esi
	je L632
	movl -28(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	addl $-12,%esp
	pushl %esi
	call _size__HEC
	addl $16,%esp
	pushl %eax
	call ___infix_less__VEC
	addl $16,%esp
	testb %al,%al
	jne L570
	jmp L573
	.p2align 2
L632:
	addl $-8,%esp
	pushl $-16777216
	addl $-8,%esp
	pushl $16777215
	addl $-8,%esp
	pushl $16
	movl -28(%ebp),%edx
	pushl %edx
	call ___infix_add__N0B
	addl $16,%esp
	pushl %eax
	call ___infix_add__N0B
	addl $16,%esp
	pushl %eax
	call ___infix_and__THB
	movl %eax,%edi
	addl $-8,%esp
	pushl %edi
	movl _capacity__G5,%eax
	pushl %eax
	call ___infix_add__6SB
	movl _begin_memory__E5,%ebx
	movl %eax,_capacity__G5
	addl $32,%esp
	addl $-8,%esp
	addl $15,%eax
	pushl %eax
	pushl %ebx
	call _realloc
	movl %eax,%esi
	addl $16,%esp
	testl %ebx,%ebx
	je L579
	cmpl %ebx,%esi
	je L579
	addl $-12,%esp
	pushl %ebx
	call _print_nbx__AFB
	addl $-12,%esp
	pushl $10
	call _print__ENB
	addl $32,%esp
	addl $-12,%esp
	pushl %esi
	call _print_nbx__AFB
	addl $-12,%esp
	pushl $10
	call _print__ENB
	addl $32,%esp
	addl $-12,%esp
	pushl $1
	call _exit__2QB
	addl $16,%esp
L579:
	movl _last_block__H5,%eax
	addl $-12,%esp
	pushl %eax
	call _is_free__HJC
	addl $16,%esp
	testb %al,%al
	je L580
	movl _last_block__H5,%esi
	addl $-8,%esp
	addl $-8,%esp
	pushl %edi
	addl $-12,%esp
	pushl %esi
	call _size__HEC
	addl $16,%esp
	pushl %eax
	call ___infix_add__6SB
	pushl %eax
	pushl %esi
	call _set_size__GKC
	addl $32,%esp
	jmp L581
	.p2align 2
L580:
	addl $-12,%esp
	addl $-8,%esp
	pushl $1
	movl _end_memory__F5,%eax
	pushl %eax
	call ___infix_add__N0B
	pushl %eax
	call _get_block__30B
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-8,%esp
	pushl $16
	pushl %edi
	call ___infix_sub__WSB
	pushl %eax
	pushl %esi
	call _make__21B
	movl _last_block__H5,%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call _set_prev__UMC
	movl _first_free__D5,%eax
	movl %esi,_last_block__H5
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call _set_next_same__ZMC
	movl _first_free__D5,%eax
	addl $32,%esp
	testl %eax,%eax
	je L584
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _set_prev_same__BNC
	addl $16,%esp
L584:
	movl %esi,_first_free__D5
L581:
	addl $-8,%esp
	pushl %edi
	movl _end_memory__F5,%eax
	pushl %eax
	call ___infix_add__6SB
	movl %eax,_end_memory__F5
	addl $16,%esp
L573:
	addl $-12,%esp
	pushl %esi
	call _to_busy__AOC
	movl 8(%esi),%edi
	movl 12(%esi),%ebx
	addl $16,%esp
	testl %edi,%edi
	jne L585
	movl %ebx,_first_free__D5
	jmp L586
	.p2align 2
L585:
	addl $-8,%esp
	pushl %ebx
	pushl %edi
	call _set_next_same__ZMC
	addl $16,%esp
L586:
	testl %ebx,%ebx
	je L587
	addl $-8,%esp
	pushl %edi
	pushl %ebx
	call _set_prev_same__BNC
	addl $16,%esp
L587:
	movl -28(%ebp),%ecx
	addl $-8,%esp
	pushl %ecx
	addl $-12,%esp
	pushl %esi
	call _size__HEC
	addl $16,%esp
	pushl %eax
	call ___infix_sub__STB
	movl %eax,%ebx
	movl _object_size__97,%eax
	addl $-8,%esp
	addl $-12,%esp
	addl $-12,%esp
	pushl %eax
	call _to_numeric__5QC
	pushl %eax
	call ___infix_add__WQC
	addl $48,%esp
	pushl %eax
	pushl %ebx
	call ___infix_greater__JRC
	addl $16,%esp
	testb %al,%al
	je L588
	movl _object_size__97,%eax
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call ___infix_sub__STB
	movl %eax,%ebx
	movl -28(%ebp),%eax
	addl $-12,%esp
	addl $-8,%esp
	pushl %eax
	addl $-12,%esp
	pushl %esi
	call _get_adress__1RC
	addl $16,%esp
	pushl %eax
	call ___infix_add__6SB
	pushl %eax
	call _get_block__30B
	movl %eax,%edi
	addl $48,%esp
	addl $-8,%esp
	pushl %ebx
	pushl %edi
	call _make__21B
	movl _first_free__D5,%eax
	addl $16,%esp
	testl %eax,%eax
	je L590
	addl $-8,%esp
	pushl %edi
	pushl %eax
	call _set_prev_same__BNC
	addl $16,%esp
L590:
	movl _first_free__D5,%eax
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call _set_next_same__ZMC
	movl %edi,_first_free__D5
	movl -28(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call _set_size__GKC
	addl $32,%esp
	addl $-8,%esp
	pushl %esi
	pushl %edi
	call _set_prev__UMC
	addl $-12,%esp
	pushl %edi
	call _get_next__8SC
	movl %eax,%ebx
	addl $32,%esp
	testl %ebx,%ebx
	jne L591
	movl %edi,_last_block__H5
	jmp L588
	.p2align 2
L591:
	addl $-8,%esp
	pushl %edi
	pushl %ebx
	call _set_prev__UMC
	addl $16,%esp
L588:
	testl %esi,%esi
	je L593
	addl $-12,%esp
	pushl $4
	call _to_ushortint__ZV
	movw %ax,16(%esi)
	addl $-12,%esp
	pushl $0
	call _to_ushortint__ZV
	movw %ax,18(%esi)
	movl %esi,12(%esi)
	movl %esi,8(%esi)
	movl -8(%ebp),%ecx
	addl $32,%esp
	addl $-4,%esp
	pushl %ecx
	pushl %esi
	movl _small_fat__C5,%eax
	pushl %eax
	call _put__to__1VC
	addl $16,%esp
	cmpl $0,-16(%ebp)
	je L593
	movl -16(%ebp),%eax
	addl $-8,%esp
	movl 8(%eax),%ebx
	movl %eax,12(%esi)
	pushl %ebx
	pushl %esi
	call _set_prev_same__ZXC
	addl $-8,%esp
	pushl %esi
	pushl %ebx
	call _set_next_same__ZMC
	addl $32,%esp
	addl $-8,%esp
	pushl %esi
	movl -16(%ebp),%edx
	pushl %edx
	call _set_prev_same__BNC
	addl $16,%esp
L593:
	movl %esi,-16(%ebp)
L565:
	cmpl $0,-16(%ebp)
	je L599
	movl -16(%ebp),%ecx
	cmpw $0,18(%ecx)
	jne L596
	movw 16(%ecx),%bx
	jmp L597
	.p2align 2
L596:
	addl $-8,%esp
	pushl $1
	movl -16(%ebp),%edx
	xorl %eax,%eax
	movw 18(%edx),%ax
	pushl %eax
	call ___infix_less_less__S0C
	movl -16(%ebp),%ecx
	movl %eax,%ebx
	addl $-12,%esp
	pushl %ecx
	call _memory__01C
	movl -16(%ebp),%ecx
	movl %eax,%edx
	xorl %eax,%eax
	addl $32,%esp
	movw 18(%ecx),%ax
	movw (%edx,%eax,2),%ax
	movw %ax,18(%ecx)
L597:
	movl -12(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	addl $-12,%esp
	pushl %eax
	call _to_ushortint__K3C
	andl $65535,%eax
	pushl %eax
	call ___prefix_sub__P4C
	andl $65535,%eax
	pushl %eax
	movl -16(%ebp),%edx
	xorl %eax,%eax
	movw 16(%edx),%ax
	pushl %eax
	call ___infix_sub__44C
	movl -16(%ebp),%ecx
	movw %ax,16(%ecx)
	addl $48,%esp
	addl $-12,%esp
	xorl %eax,%eax
	movw %bx,%ax
	pushl %eax
	call _to_uinteger__D5C
	movl %eax,%ebx
	movl -12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl -16(%ebp),%edx
	pushl %edx
	call _is_small_busy__W5C
	addl $32,%esp
	testb %al,%al
	je L598
	movl -12(%ebp),%ecx
	addl $-8,%esp
	pushl %ecx
	movl -16(%ebp),%edx
	movl 12(%edx),%eax
	pushl %eax
	call _is_small_busy__W5C
	addl $16,%esp
	testb %al,%al
	jne L598
	movl -8(%ebp),%ecx
	addl $-4,%esp
	pushl %ecx
	movl -16(%ebp),%edx
	movl 12(%edx),%eax
	pushl %eax
	movl _small_fat__C5,%eax
	pushl %eax
	call _put__to__1VC
	addl $16,%esp
L598:
	addl $-8,%esp
	pushl %ebx
	movl -16(%ebp),%ecx
	addl $-12,%esp
	pushl %ecx
	call _get_adress__1RC
	addl $16,%esp
	pushl %eax
	call ___infix_add__6SB
	jmp L635
	.p2align 2
L560:
	addl $-12,%esp
	addl $-8,%esp
	pushl $-16
	addl $-8,%esp
	pushl $15
	pushl %edi
	call ___infix_add__Q5B
	addl $16,%esp
	pushl %eax
	call ___infix_and__P6B
	pushl %eax
	call _to_uinteger__X6B
	movl %eax,-20(%ebp)
	movl _first_free__D5,%edi
	addl $32,%esp
	jmp L602
	.p2align 2
L604:
	movl 12(%edi),%edi
L602:
	testl %edi,%edi
	je L633
	movl -20(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	addl $-12,%esp
	pushl %edi
	call _size__HEC
	addl $16,%esp
	pushl %eax
	call ___infix_less__VEC
	addl $16,%esp
	testb %al,%al
	jne L604
	jmp L607
	.p2align 2
L633:
	addl $-8,%esp
	pushl $-16777216
	addl $-8,%esp
	pushl $16777215
	addl $-8,%esp
	pushl $16
	movl -20(%ebp),%edx
	pushl %edx
	call ___infix_add__N0B
	addl $16,%esp
	pushl %eax
	call ___infix_add__N0B
	addl $16,%esp
	pushl %eax
	call ___infix_and__THB
	movl %eax,-24(%ebp)
	addl $-8,%esp
	pushl %eax
	movl _capacity__G5,%eax
	pushl %eax
	call ___infix_add__6SB
	movl _begin_memory__E5,%ebx
	movl %eax,_capacity__G5
	addl $32,%esp
	addl $-8,%esp
	addl $15,%eax
	pushl %eax
	pushl %ebx
	call _realloc
	movl %eax,%esi
	addl $16,%esp
	testl %ebx,%ebx
	je L613
	cmpl %ebx,%esi
	je L613
	addl $-12,%esp
	pushl %ebx
	call _print_nbx__AFB
	addl $-12,%esp
	pushl $10
	call _print__ENB
	addl $32,%esp
	addl $-12,%esp
	pushl %esi
	call _print_nbx__AFB
	addl $-12,%esp
	pushl $10
	call _print__ENB
	addl $32,%esp
	addl $-12,%esp
	pushl $1
	call _exit__2QB
	addl $16,%esp
L613:
	movl _last_block__H5,%eax
	addl $-12,%esp
	pushl %eax
	call _is_free__HJC
	addl $16,%esp
	testb %al,%al
	je L614
	movl _last_block__H5,%edi
	movl -24(%ebp),%ecx
	addl $-8,%esp
	addl $-8,%esp
	pushl %ecx
	addl $-12,%esp
	pushl %edi
	call _size__HEC
	addl $16,%esp
	pushl %eax
	call ___infix_add__6SB
	pushl %eax
	pushl %edi
	call _set_size__GKC
	addl $32,%esp
	jmp L615
	.p2align 2
L614:
	addl $-12,%esp
	addl $-8,%esp
	pushl $1
	movl _end_memory__F5,%eax
	pushl %eax
	call ___infix_add__N0B
	pushl %eax
	call _get_block__30B
	movl %eax,%edi
	addl $32,%esp
	addl $-8,%esp
	addl $-8,%esp
	pushl $16
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_sub__WSB
	pushl %eax
	pushl %edi
	call _make__21B
	movl _last_block__H5,%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call _set_prev__UMC
	movl _first_free__D5,%eax
	movl %edi,_last_block__H5
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call _set_next_same__ZMC
	movl _first_free__D5,%eax
	addl $32,%esp
	testl %eax,%eax
	je L618
	addl $-8,%esp
	pushl %edi
	pushl %eax
	call _set_prev_same__BNC
	addl $16,%esp
L618:
	movl %edi,_first_free__D5
L615:
	movl -24(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl _end_memory__F5,%eax
	pushl %eax
	call ___infix_add__6SB
	movl %eax,_end_memory__F5
	addl $16,%esp
L607:
	addl $-12,%esp
	pushl %edi
	call _to_busy__AOC
	movl 8(%edi),%esi
	movl 12(%edi),%ebx
	addl $16,%esp
	testl %esi,%esi
	jne L619
	movl %ebx,_first_free__D5
	jmp L620
	.p2align 2
L619:
	addl $-8,%esp
	pushl %ebx
	pushl %esi
	call _set_next_same__ZMC
	addl $16,%esp
L620:
	testl %ebx,%ebx
	je L621
	addl $-8,%esp
	pushl %esi
	pushl %ebx
	call _set_prev_same__BNC
	addl $16,%esp
L621:
	movl -20(%ebp),%ecx
	addl $-8,%esp
	pushl %ecx
	addl $-12,%esp
	pushl %edi
	call _size__HEC
	addl $16,%esp
	pushl %eax
	call ___infix_sub__STB
	movl %eax,%ebx
	movl _object_size__97,%eax
	addl $-8,%esp
	addl $-12,%esp
	addl $-12,%esp
	pushl %eax
	call _to_numeric__5QC
	pushl %eax
	call ___infix_add__WQC
	addl $48,%esp
	pushl %eax
	pushl %ebx
	call ___infix_greater__JRC
	addl $16,%esp
	testb %al,%al
	je L622
	movl _object_size__97,%eax
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call ___infix_sub__STB
	movl %eax,%ebx
	movl -20(%ebp),%eax
	addl $-12,%esp
	addl $-8,%esp
	pushl %eax
	addl $-12,%esp
	pushl %edi
	call _get_adress__1RC
	addl $16,%esp
	pushl %eax
	call ___infix_add__6SB
	pushl %eax
	call _get_block__30B
	movl %eax,%esi
	addl $48,%esp
	addl $-8,%esp
	pushl %ebx
	pushl %esi
	call _make__21B
	movl _first_free__D5,%eax
	addl $16,%esp
	testl %eax,%eax
	je L624
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _set_prev_same__BNC
	addl $16,%esp
L624:
	movl _first_free__D5,%eax
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call _set_next_same__ZMC
	movl %esi,_first_free__D5
	movl -20(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %edi
	call _set_size__GKC
	addl $32,%esp
	addl $-8,%esp
	pushl %edi
	pushl %esi
	call _set_prev__UMC
	addl $-12,%esp
	pushl %esi
	call _get_next__8SC
	movl %eax,%ebx
	addl $32,%esp
	testl %ebx,%ebx
	jne L625
	movl %esi,_last_block__H5
	jmp L622
	.p2align 2
L625:
	addl $-8,%esp
	pushl %esi
	pushl %ebx
	call _set_prev__UMC
	addl $16,%esp
L622:
	testl %edi,%edi
	je L599
	addl $-12,%esp
	pushl %edi
	call _get_adress__1RC
L635:
	movl %eax,-4(%ebp)
	addl $16,%esp
L599:
	cmpl $0,-4(%ebp)
	jne L628
	addl $-12,%esp
	pushl $77
	call _print__ENB
	addl $-12,%esp
	pushl $69
	call _print__ENB
	addl $32,%esp
	addl $-12,%esp
	pushl $77
	call _print__ENB
	addl $-12,%esp
	pushl $58
	call _print__ENB
	addl $32,%esp
	addl $-12,%esp
	pushl $78
	call _print__ENB
	addl $-12,%esp
	pushl $79
	call _print__ENB
	addl $32,%esp
	addl $-12,%esp
	pushl $84
	call _print__ENB
	addl $-12,%esp
	pushl $32
	call _print__ENB
	addl $32,%esp
	addl $-12,%esp
	pushl $69
	call _print__ENB
	addl $-12,%esp
	pushl $78
	call _print__ENB
	addl $32,%esp
	addl $-12,%esp
	pushl $79
	call _print__ENB
	addl $-12,%esp
	pushl $85
	call _print__ENB
	addl $32,%esp
	addl $-12,%esp
	pushl $71
	call _print__ENB
	addl $-12,%esp
	pushl $72
	call _print__ENB
	addl $32,%esp
	addl $-12,%esp
	pushl $32
	call _print__ENB
	addl $-12,%esp
	pushl $77
	call _print__ENB
	addl $32,%esp
	addl $-12,%esp
	pushl $69
	call _print__ENB
	addl $-12,%esp
	pushl $77
	call _print__ENB
	addl $32,%esp
	addl $-12,%esp
	pushl $79
	call _print__ENB
	addl $-12,%esp
	pushl $82
	call _print__ENB
	addl $32,%esp
	addl $-12,%esp
	pushl $89
	call _print__ENB
	.p2align 2
L631:
	jmp L631
	.p2align 2
L628:
	leal -56(%ebp),%esp
	movl -4(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_copy__from__size__NPD:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%ebx
	addl $-12,%esp
	pushl %eax
	call _to_uinteger__5TD
	movl %eax,-8(%ebp)
	addl $-12,%esp
	pushl %ebx
	call _to_uinteger__5TD
	movl %eax,-16(%ebp)
	addl $32,%esp
	addl $-8,%esp
	pushl $2
	movl 16(%ebp),%eax
	pushl %eax
	call ___infix_greater_greater__KUD
	movl %eax,%ebx
	addl $16,%esp
	testl %ebx,%ebx
	je L637
	movl -8(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _force_conversion__9UD
	movl %eax,-4(%ebp)
	movl -16(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _force_conversion__9UD
	movl %eax,%edi
	addl $32,%esp
	addl $-12,%esp
	addl $-8,%esp
	pushl $1
	pushl %ebx
	call ___infix_sub__0YB
	pushl %eax
	call _to_numeric__4VD
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	pushl %esi
	pushl $0
	call ___infix_less_equal__WW
	addl $16,%esp
	testb %al,%al
	je L639
	addl $-4,%esp
	pushl $0
	addl $-8,%esp
	pushl $0
	pushl %edi
	call _item__TWD
	addl $16,%esp
	pushl %eax
	movl -4(%ebp),%edx
	pushl %edx
	call _put__to__KXD
	addl $-8,%esp
	pushl $1
	pushl $0
	jmp L658
	.p2align 2
L643:
	addl $-4,%esp
	pushl %ebx
	addl $-8,%esp
	pushl %ebx
	pushl %edi
	call _item__TWD
	addl $16,%esp
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	call _put__to__KXD
	addl $-8,%esp
	pushl $1
	pushl %ebx
L658:
	call ___infix_add__00
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	pushl %esi
	pushl %ebx
	call ___infix_less_equal__WW
	addl $16,%esp
	testb %al,%al
	jne L643
L639:
	addl $-8,%esp
	addl $-12,%esp
	addl $-8,%esp
	movl $-4,%ebx
	pushl %ebx
	movl 16(%ebp),%edx
	pushl %edx
	call ___infix_and__P6B
	pushl %eax
	call _to_uinteger__X6B
	pushl %eax
	movl -8(%ebp),%eax
	pushl %eax
	call ___infix_add__R0D
	movl %eax,-8(%ebp)
	addl $48,%esp
	addl $-8,%esp
	addl $-12,%esp
	addl $-8,%esp
	pushl %ebx
	movl 16(%ebp),%edx
	pushl %edx
	call ___infix_and__P6B
	pushl %eax
	call _to_uinteger__X6B
	pushl %eax
	movl -16(%ebp),%eax
	pushl %eax
	call ___infix_add__R0D
	movl %eax,-16(%ebp)
	addl $48,%esp
L637:
	addl $-8,%esp
	pushl $3
	movl 16(%ebp),%edx
	pushl %edx
	call ___infix_and__P6B
	movl %eax,%ebx
	addl $16,%esp
	testl %ebx,%ebx
	je L649
	movl -8(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _force_conversion__F2D
	movl -16(%ebp),%edx
	movl %eax,-12(%ebp)
	addl $-12,%esp
	pushl %edx
	call _force_conversion__F2D
	movl %eax,%edi
	addl $32,%esp
	addl $-12,%esp
	addl $-8,%esp
	pushl $1
	pushl %ebx
	call ___infix_sub__0YB
	pushl %eax
	call _to_numeric__4VD
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	pushl %esi
	pushl $0
	call ___infix_less_equal__WW
	addl $16,%esp
	testb %al,%al
	je L649
	addl $-4,%esp
	pushl $0
	addl $-8,%esp
	pushl $0
	pushl %edi
	call _item__R3D
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	movl -12(%ebp),%eax
	pushl %eax
	call _put__to__I4D
	addl $-8,%esp
	pushl $1
	pushl $0
	jmp L659
	.p2align 2
L655:
	addl $-4,%esp
	pushl %ebx
	addl $-8,%esp
	pushl %ebx
	pushl %edi
	call _item__R3D
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	movl -12(%ebp),%edx
	pushl %edx
	call _put__to__I4D
	addl $-8,%esp
	pushl $1
	pushl %ebx
L659:
	call ___infix_add__00
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	pushl %esi
	pushl %ebx
	call ___infix_less_equal__WW
	addl $16,%esp
	testb %al,%al
	jne L655
L649:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_calloc__TUF:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	addl $-8,%esp
	call _element_sizeof__KWF
	pushl %eax
	pushl %ebx
	call ___infix_mul__YWF
	addl $-12,%esp
	pushl %eax
	call _allocation__C7
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
L671:
	pushl $1
	pushl %ebx
	call ___infix_sub__0YB
	movl %eax,%ebx
	addl $16,%esp
	addl $-8,%esp
	pushl $0
	pushl %ebx
	call ___infix_greater_equal__FWB
	addl $16,%esp
	testb %al,%al
	je L664
	addl $-8,%esp
	pushl %ebx
	pushl %esi
	call _put__to__HYF
	addl $-8,%esp
	addl $16,%esp
	jmp L671
	.p2align 2
L664:
	leal -24(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_prime_number_ceiling__PA7:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	xorl %esi,%esi
	addl $-8,%esp
	pushl $53
	pushl %ebx
	call ___infix_less_equal__Z4B
	addl $16,%esp
	testb %al,%al
	je L690
	movl $53,%esi
	jmp L806
	.p2align 2
L690:
	addl $-8,%esp
	pushl $97
	pushl %ebx
	call ___infix_less_equal__Z4B
	addl $16,%esp
	testb %al,%al
	je L693
	movl $97,%esi
L693:
	testb %al,%al
	jne L806
	addl $-8,%esp
	pushl $193
	pushl %ebx
	call ___infix_less_equal__Z4B
	addl $16,%esp
	testb %al,%al
	je L698
	movl $193,%esi
L698:
	testb %al,%al
	jne L806
	addl $-8,%esp
	movl $389,%edi
	pushl %edi
	pushl %ebx
	call ___infix_less_equal__Z4B
	addl $16,%esp
	testb %al,%al
	je L703
	movl %edi,%esi
L703:
	testb %al,%al
	jne L806
	addl $-8,%esp
	movl $769,%edi
	pushl %edi
	pushl %ebx
	call ___infix_less_equal__Z4B
	addl $16,%esp
	testb %al,%al
	je L708
	movl %edi,%esi
L708:
	testb %al,%al
	jne L806
	addl $-8,%esp
	movl $1543,%edi
	pushl %edi
	pushl %ebx
	call ___infix_less_equal__Z4B
	addl $16,%esp
	testb %al,%al
	je L713
	movl %edi,%esi
L713:
	testb %al,%al
	jne L806
	addl $-8,%esp
	movl $3079,%edi
	pushl %edi
	pushl %ebx
	call ___infix_less_equal__Z4B
	addl $16,%esp
	testb %al,%al
	je L718
	movl %edi,%esi
L718:
	testb %al,%al
	jne L806
	addl $-8,%esp
	movl $6151,%edi
	pushl %edi
	pushl %ebx
	call ___infix_less_equal__Z4B
	addl $16,%esp
	testb %al,%al
	je L723
	movl %edi,%esi
L723:
	testb %al,%al
	jne L806
	addl $-8,%esp
	movl $12289,%edi
	pushl %edi
	pushl %ebx
	call ___infix_less_equal__Z4B
	addl $16,%esp
	testb %al,%al
	je L728
	movl %edi,%esi
L728:
	testb %al,%al
	jne L806
	addl $-8,%esp
	movl $24593,%edi
	pushl %edi
	pushl %ebx
	call ___infix_less_equal__Z4B
	addl $16,%esp
	testb %al,%al
	je L733
	movl %edi,%esi
L733:
	testb %al,%al
	jne L806
	addl $-8,%esp
	movl $49157,%edi
	pushl %edi
	pushl %ebx
	call ___infix_less_equal__Z4B
	addl $16,%esp
	testb %al,%al
	je L738
	movl %edi,%esi
L738:
	testb %al,%al
	jne L806
	addl $-8,%esp
	movl $98317,%edi
	pushl %edi
	pushl %ebx
	call ___infix_less_equal__Z4B
	addl $16,%esp
	testb %al,%al
	je L743
	movl %edi,%esi
L743:
	testb %al,%al
	jne L806
	addl $-8,%esp
	movl $196613,%edi
	pushl %edi
	pushl %ebx
	call ___infix_less_equal__Z4B
	addl $16,%esp
	testb %al,%al
	je L748
	movl %edi,%esi
L748:
	testb %al,%al
	jne L806
	addl $-8,%esp
	movl $393241,%edi
	pushl %edi
	pushl %ebx
	call ___infix_less_equal__Z4B
	addl $16,%esp
	testb %al,%al
	je L753
	movl %edi,%esi
L753:
	testb %al,%al
	jne L806
	addl $-8,%esp
	movl $786433,%edi
	pushl %edi
	pushl %ebx
	call ___infix_less_equal__Z4B
	addl $16,%esp
	testb %al,%al
	je L758
	movl %edi,%esi
L758:
	testb %al,%al
	jne L806
	addl $-8,%esp
	movl $1572869,%edi
	pushl %edi
	pushl %ebx
	call ___infix_less_equal__Z4B
	addl $16,%esp
	testb %al,%al
	je L763
	movl %edi,%esi
L763:
	testb %al,%al
	jne L806
	addl $-8,%esp
	movl $3145739,%edi
	pushl %edi
	pushl %ebx
	call ___infix_less_equal__Z4B
	addl $16,%esp
	testb %al,%al
	je L768
	movl %edi,%esi
L768:
	testb %al,%al
	jne L806
	addl $-8,%esp
	movl $6291469,%edi
	pushl %edi
	pushl %ebx
	call ___infix_less_equal__Z4B
	addl $16,%esp
	testb %al,%al
	je L773
	movl %edi,%esi
L773:
	testb %al,%al
	jne L806
	addl $-8,%esp
	movl $12582917,%edi
	pushl %edi
	pushl %ebx
	call ___infix_less_equal__Z4B
	addl $16,%esp
	testb %al,%al
	je L778
	movl %edi,%esi
L778:
	testb %al,%al
	jne L806
	addl $-8,%esp
	movl $25165843,%edi
	pushl %edi
	pushl %ebx
	call ___infix_less_equal__Z4B
	addl $16,%esp
	testb %al,%al
	je L783
	movl %edi,%esi
L783:
	testb %al,%al
	jne L806
	addl $-8,%esp
	movl $50331653,%edi
	pushl %edi
	pushl %ebx
	call ___infix_less_equal__Z4B
	addl $16,%esp
	testb %al,%al
	je L788
	movl %edi,%esi
L788:
	testb %al,%al
	jne L806
	addl $-8,%esp
	movl $100663319,%edi
	pushl %edi
	pushl %ebx
	call ___infix_less_equal__Z4B
	addl $16,%esp
	testb %al,%al
	je L793
	movl %edi,%esi
L793:
	testb %al,%al
	jne L806
	addl $-8,%esp
	movl $201326611,%edi
	pushl %edi
	pushl %ebx
	call ___infix_less_equal__Z4B
	addl $16,%esp
	testb %al,%al
	je L798
	movl %edi,%esi
L798:
	testb %al,%al
	jne L806
	addl $-8,%esp
	movl $402653189,%edi
	pushl %edi
	pushl %ebx
	call ___infix_less_equal__Z4B
	addl $16,%esp
	testb %al,%al
	je L803
	movl %edi,%esi
L803:
	testb %al,%al
	jne L806
	addl $-8,%esp
	movl $805306457,%edi
	pushl %edi
	pushl %ebx
	call ___infix_less_equal__Z4B
	movl $1610612741,%esi
	testb %al,%al
	je L806
	movl %edi,%esi
L806:
	leal -24(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_calloc__N17:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	addl $-8,%esp
	call _pointer_size__TWF
	pushl %eax
	pushl %ebx
	call ___infix_mul__YWF
	addl $-12,%esp
	pushl %eax
	call _allocation__C7
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
L846:
	pushl $1
	pushl %ebx
	call ___infix_sub__0YB
	movl %eax,%ebx
	addl $16,%esp
	addl $-8,%esp
	pushl $0
	pushl %ebx
	call ___infix_greater_equal__FWB
	addl $16,%esp
	testb %al,%al
	je L839
	addl $-4,%esp
	pushl %ebx
	pushl $0
	pushl %esi
	call _put__to__947
	addl $-8,%esp
	addl $16,%esp
	jmp L846
	.p2align 2
L839:
	leal -24(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_calloc__53M:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl _object_size__NP,%eax
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call ___infix_mul__YWF
	addl $-12,%esp
	pushl %eax
	call _allocation__C7
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
L862:
	pushl $1
	pushl %ebx
	call ___infix_sub__0YB
	movl %eax,%ebx
	addl $16,%esp
	addl $-8,%esp
	pushl $0
	pushl %ebx
	call ___infix_greater_equal__FWB
	addl $16,%esp
	testb %al,%al
	je L855
	addl $-4,%esp
	pushl %ebx
	pushl $0
	pushl %esi
	call _put__to__I4D
	addl $-8,%esp
	addl $16,%esp
	jmp L862
	.p2align 2
L855:
	leal -24(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_append_plan__GEE:
	pushl %ebp
	movl %esp,%ebp
	subl $76,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 36(%eax),%edx
	testl %edx,%edx
	je L912
	movl (%edx),%eax
	cmpl $28,%eax
	je L915
	ja L919
	cmpl $17,%eax
	je L916
	jmp L913
	.p2align 2
L919:
	cmpl $78,%eax
	jne L913
	jmp L916
	.p2align 2
L915:
	movl 52(%edx),%ecx
	jmp L913
	.p2align 2
L916:
	movl 56(%edx),%ecx
L913:
	movl %ecx,%ebx
	testl %ebx,%ebx
	je L934
	movl 12(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-4(%ebp)
	movl 16(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-12(%ebp)
	movl 20(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-8(%ebp)
	movl 24(%ebx),%eax
	movl (%eax),%eax
	decl %eax
	jmp L1035
	.p2align 2
L912:
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L926
	movl 12(%eax),%edx
	jmp L927
	.p2align 2
L926:
	movl 8(%eax),%edx
L927:
	subl $1,%edx
	movl %edx,-12(%ebp)
	cmpl $16,(%eax)
	jne L930
	movl 8(%eax),%eax
	jmp L931
	.p2align 2
L930:
	movl 4(%eax),%eax
L931:
	subl $1,%eax
L1035:
	movl %eax,-16(%ebp)
	movb $0,%al
	testb %al,%al
	jne L934
	movl 8(%ebp),%edx
	movl 60(%edx),%edx
	movl %edx,-20(%ebp)
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 8(%edx),%eax
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_add__KKE
	movl 8(%ebp),%edx
	movl %eax,-56(%ebp)
	addl $16,%esp
	subl $1,-56(%ebp)
	movl 64(%edx),%edx
	movl %edx,-24(%ebp)
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 4(%edx),%eax
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_add__KKE
	movl -4(%ebp),%edx
	movl %eax,-60(%ebp)
	addl $16,%esp
	subl $1,-60(%ebp)
	cmpl %edx,-56(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %edx
	movl -56(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L934
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L934
	movl -8(%ebp),%edx
	cmpl %edx,-60(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %edx
	movl -60(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L934
	movl -16(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L934
	movl -4(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -20(%ebp),%eax
	pushl %eax
	call _max__1ME
	movl -12(%ebp),%edx
	movl %eax,-20(%ebp)
	addl $-8,%esp
	pushl %edx
	movl -56(%ebp),%eax
	pushl %eax
	call _min__TNE
	movl -8(%ebp),%edx
	movl %eax,-56(%ebp)
	addl $32,%esp
	addl $-8,%esp
	pushl %edx
	movl -24(%ebp),%eax
	pushl %eax
	call _max__1ME
	movl -16(%ebp),%edx
	movl %eax,-24(%ebp)
	addl $-8,%esp
	pushl %edx
	movl -60(%ebp),%eax
	pushl %eax
	call _min__TNE
	movl %eax,-60(%ebp)
	addl $32,%esp
	call _clone__1OE
	movl 8(%ebp),%edx
	movl 8(%ebp),%ebx
	movl %edx,8(%eax)
	movl %eax,52(%edx)
	jmp L993
	.p2align 2
L995:
	testl %eax,%eax
	jne L1034
L993:
	movl (%ebx),%ecx
	cmpl $28,%ecx
	je L948
	ja L953
	cmpl $17,%ecx
	je L950
	jmp L947
	.p2align 2
L953:
	cmpl $78,%ecx
	je L949
	jmp L947
	.p2align 2
L948:
	movl 44(%ebx),%eax
	jmp L1036
	.p2align 2
L949:
	movl 48(%ebx),%edx
	movl %edx,-28(%ebp)
	jmp L947
	.p2align 2
L950:
	movl 48(%ebx),%eax
L1036:
	movl %eax,-28(%ebp)
L947:
	movl -28(%ebp),%eax
L954:
	testl %eax,%eax
	je L955
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L956
	jmp *L968(,%edx,4)
	.p2align 2
L968:
	.long L967
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L964
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L956
	.long L967
	.long L967
	.long L967
	.long L956
	.long L967
	.long L967
	.long L967
	.long L967
	.long L966
	.long L967
	.p2align 2
L964:
	movl 52(%eax),%esi
	jmp L956
	.p2align 2
L966:
L967:
	movl 56(%eax),%esi
L956:
	testl %esi,%esi
	sete %dl
	jmp L970
	.p2align 2
L955:
	movb $0,%dl
L970:
	testb %dl,%dl
	je L971
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L972
	jmp *L984(,%edx,4)
	.p2align 2
L984:
	.long L983
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L980
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L972
	.long L983
	.long L983
	.long L983
	.long L972
	.long L983
	.long L983
	.long L983
	.long L983
	.long L982
	.long L983
	.p2align 2
L980:
	movl 44(%eax),%edi
	jmp L972
	.p2align 2
L982:
L983:
	movl 48(%eax),%edi
L972:
	movl %edi,%eax
	jmp L954
	.p2align 2
L971:
	cmpl $28,%ecx
	je L987
	ja L992
	cmpl $17,%ecx
	je L989
	jmp L986
	.p2align 2
L992:
	cmpl $78,%ecx
	je L988
	jmp L986
	.p2align 2
L987:
	movl 36(%ebx),%ebx
	jmp L1037
	.p2align 2
L988:
L989:
	movl 40(%ebx),%ebx
L1037:
	movl %ebx,-32(%ebp)
L986:
	movl -32(%ebp),%ebx
	testl %ebx,%ebx
	jne L995
	testl %eax,%eax
	je L996
L1034:
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L997
	jmp *L1009(,%edx,4)
	.p2align 2
L1009:
	.long L1008
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L1005
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L997
	.long L1008
	.long L1008
	.long L1008
	.long L997
	.long L1008
	.long L1008
	.long L1008
	.long L1008
	.long L1007
	.long L1008
	.p2align 2
L1005:
	movl 52(%eax),%eax
	jmp L1038
	.p2align 2
L1007:
L1008:
	movl 56(%eax),%eax
L1038:
	movl %eax,-36(%ebp)
L997:
	movl -36(%ebp),%ebx
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 52(%edx),%eax
	movl %ebx,32(%eax)
	movl 28(%ebx),%eax
	pushl %eax
	movl 52(%edx),%eax
	pushl %eax
	call _set_next__QWI
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 52(%edx),%eax
	pushl %eax
	pushl %ebx
	call _set_next__QWI
	addl $32,%esp
	addl $-8,%esp
	addl $-8,%esp
	pushl $1
	movl 4(%ebx),%eax
	pushl %eax
	call ___infix_add__Q5B
	pushl %eax
	movl 8(%ebp),%edx
	movl 52(%edx),%eax
	pushl %eax
	call _set_level__QTE
	addl $32,%esp
	jmp L1012
	.p2align 2
L996:
	movl _list_plan__J3,%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl 52(%edx),%eax
	pushl %eax
	call _set_next__1TE
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $16,%esp
	movl 52(%edx),%eax
	movl %eax,_list_plan__J3
	pushl $1
	pushl %eax
	call _set_level__QTE
	addl $16,%esp
L1012:
	movl 8(%ebp),%edx
	movl 52(%edx),%eax
	movl 28(%eax),%ebx
	testl %ebx,%ebx
	je L1014
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _set_prev__HWI
	addl $-12,%esp
	pushl %ebx
	call _inc_level__XXI
	addl $32,%esp
L1014:
	addl $-8,%esp
	pushl $1
	movl -60(%ebp),%eax
	pushl %eax
	call ___infix_add__Q5B
	movl 8(%ebp),%edx
	movl %eax,-60(%ebp)
	addl $-8,%esp
	movl 52(%edx),%eax
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call _create__plan__VUE
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	pushl %esi
	movl 8(%ebp),%edx
	movl 52(%edx),%eax
	pushl %eax
	call _set_x0__HXE
	movl _list_x__K3,%eax
	movl %eax,-48(%ebp)
	movl $0,-40(%ebp)
	movl %eax,%ebx
	addl $16,%esp
	testl %ebx,%ebx
	je L1017
	movl 12(%ebx),%edx
	movl %edx,-40(%ebp)
	jmp L1017
	.p2align 2
L1019:
	movl %ebx,-40(%ebp)
	movl 8(%ebx),%ebx
L1017:
	testl %ebx,%ebx
	je L1018
	movl (%esi),%eax
	addl $-8,%esp
	pushl %eax
	movl (%ebx),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L1018
	movl (%esi),%eax
	cmpl %eax,(%ebx)
	jne L1019
	movl 4(%esi),%edx
	movl 4(%ebx),%eax
	movl 4(%edx),%edx
	cmpl %edx,4(%eax)
	jg L1019
L1018:
	movl %ebx,8(%esi)
	movl -40(%ebp),%eax
	movl %eax,12(%esi)
	movl %esi,%edi
	testl %eax,%eax
	je L1024
	movl -48(%ebp),%edi
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _set_next__L4E
	addl $16,%esp
L1024:
	testl %ebx,%ebx
	je L1025
	addl $-8,%esp
	pushl %esi
	pushl %ebx
	call _set_prev__X4E
	addl $16,%esp
L1025:
	movl %edi,_list_x__K3
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 52(%edx),%eax
	pushl %eax
	movl -56(%ebp),%eax
	pushl %eax
	call _create__plan__VUE
	movl %eax,%esi
	addl $-8,%esp
	pushl %esi
	movl 8(%ebp),%edx
	movl 52(%edx),%eax
	pushl %eax
	call _set_x1__90E
	movl 8(%ebp),%edx
	addl $32,%esp
	movl 52(%edx),%eax
	addl $-8,%esp
	movl 12(%eax),%eax
	pushl %eax
	pushl %esi
	call _append__E1E
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 52(%edx),%eax
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call _create_top__plan__74E
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	pushl %esi
	movl 8(%ebp),%edx
	movl 52(%edx),%eax
	pushl %eax
	call _set_y0__W7E
	movl _list_y__L3,%eax
	movl %eax,-52(%ebp)
	xorl %edi,%edi
	movl %eax,%ebx
	addl $16,%esp
	jmp L1026
	.p2align 2
L1028:
	movl %ebx,%edi
	movl 12(%ebx),%ebx
L1026:
	testl %ebx,%ebx
	je L1027
	movl (%esi),%eax
	addl $-8,%esp
	pushl %eax
	movl (%ebx),%eax
	pushl %eax
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	jne L1028
L1027:
	movl %ebx,12(%esi)
	movl %edi,16(%esi)
	movl %esi,-44(%ebp)
	testl %edi,%edi
	je L1032
	movl -52(%ebp),%edx
	movl %edx,-44(%ebp)
	addl $-8,%esp
	pushl %esi
	pushl %edi
	call _set_next__FDF
	addl $16,%esp
L1032:
	testl %ebx,%ebx
	je L1033
	addl $-8,%esp
	pushl %esi
	pushl %ebx
	call _set_prev__RDF
	addl $16,%esp
L1033:
	movl -44(%ebp),%eax
	movl %eax,_list_y__L3
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 52(%edx),%eax
	pushl %eax
	movl -60(%ebp),%eax
	pushl %eax
	call _create_bottom__plan__PAF
	movl %eax,%esi
	addl $-8,%esp
	pushl %esi
	movl 8(%ebp),%edx
	movl 52(%edx),%eax
	pushl %eax
	call _set_y1__BBF
	movl 8(%ebp),%edx
	addl $32,%esp
	movl 52(%edx),%eax
	addl $-8,%esp
	movl 20(%eax),%eax
	pushl %eax
	pushl %esi
	call _append__GBF
L934:
	leal -88(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clip_next_child__BEF:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%ebx
	addl $-12,%esp
	pushl %ebx
	call _creat_clip__MEF
	addl $16,%esp
	movl 48(%ebx),%eax
	testl %eax,%eax
	je L1040
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L1040
	jmp *L1053(,%edx,4)
	.p2align 2
L1053:
	.long L1051
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1052
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1040
	.long L1046
	.long L1043
	.long L1049
	.long L1040
	.long L1044
	.long L1048
	.long L1045
	.long L1042
	.long L1050
	.long L1047
	.p2align 2
L1042:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__UJQB
	jmp L1070
	.p2align 2
L1043:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__SRO
	jmp L1070
	.p2align 2
L1044:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__XZY
	jmp L1070
	.p2align 2
L1045:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__HHLB
	jmp L1070
	.p2align 2
L1046:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__MW5B
	jmp L1070
	.p2align 2
L1047:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__FVZB
	jmp L1070
	.p2align 2
L1048:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__JKIB
	jmp L1070
	.p2align 2
L1049:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__9IT
	jmp L1070
	.p2align 2
L1050:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__RFVB
	jmp L1070
	.p2align 2
L1051:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__N0I
	jmp L1070
	.p2align 2
L1052:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__BEF
L1070:
	addl $16,%esp
L1040:
	movl 40(%ebx),%eax
	testl %eax,%eax
	je L1055
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L1055
	jmp *L1068(,%edx,4)
	.p2align 2
L1068:
	.long L1067
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1064
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1055
	.long L1061
	.long L1058
	.long L1065
	.long L1055
	.long L1059
	.long L1063
	.long L1060
	.long L1057
	.long L1066
	.long L1062
	.p2align 2
L1057:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__UJQB
	jmp L1055
	.p2align 2
L1058:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__SRO
	jmp L1055
	.p2align 2
L1059:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__XZY
	jmp L1055
	.p2align 2
L1060:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__HHLB
	jmp L1055
	.p2align 2
L1061:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__MW5B
	jmp L1055
	.p2align 2
L1062:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__FVZB
	jmp L1055
	.p2align 2
L1063:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__JKIB
	jmp L1055
	.p2align 2
L1064:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__BEF
	jmp L1055
	.p2align 2
L1065:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__9IT
	jmp L1055
	.p2align 2
L1066:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__RFVB
	jmp L1055
	.p2align 2
L1067:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__N0I
L1055:
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_creat_clip__YW5B:
	pushl %ebp
	movl %esp,%ebp
	subl $76,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl $0,-20(%ebp)
	movl $0,60(%eax)
	movl 56(%eax),%edx
	testl %edx,%edx
	je L1072
	movl 12(%edx),%eax
	movl (%eax),%eax
	movl %eax,-4(%ebp)
	movl 16(%edx),%eax
	movl (%eax),%eax
	movl %eax,-8(%ebp)
	movl 20(%edx),%eax
	movl (%eax),%eax
	movl %eax,-12(%ebp)
	movl 24(%edx),%eax
	movl 8(%ebp),%edx
	movl (%eax),%eax
	movl %eax,-16(%ebp)
	movl 44(%edx),%edx
	movl %edx,-28(%ebp)
	testl %edx,%edx
	je L1074
	.p2align 2
L1075:
	movl -28(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L1076
	jmp *L1088(,%eax,4)
	.p2align 2
L1088:
	.long L1086
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1087
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1076
	.long L1085
	.long L1086
	.long L1086
	.long L1076
	.long L1085
	.long L1085
	.long L1086
	.long L1085
	.long L1085
	.long L1086
	.p2align 2
L1085:
	movl -28(%ebp),%eax
	movl 56(%eax),%ebx
	jmp L1076
	.p2align 2
L1086:
	movl -28(%ebp),%edx
	movl 56(%edx),%ebx
	jmp L1076
	.p2align 2
L1087:
	movl -28(%ebp),%eax
	movl 52(%eax),%ebx
L1076:
	movl %ebx,%edi
	testl %edi,%edi
	je L1090
	addl $-12,%esp
	pushl %edi
	call _active_y__65I
	addl $16,%esp
L1090:
	movl -28(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L1091
	jmp *L1103(,%eax,4)
	.p2align 2
L1103:
	.long L1101
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1102
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1091
	.long L1100
	.long L1101
	.long L1101
	.long L1091
	.long L1100
	.long L1100
	.long L1101
	.long L1100
	.long L1100
	.long L1101
	.p2align 2
L1100:
	movl -28(%ebp),%eax
	movl 52(%eax),%esi
	jmp L1091
	.p2align 2
L1101:
	movl -28(%ebp),%edx
	movl 52(%edx),%esi
	jmp L1091
	.p2align 2
L1102:
	movl -28(%ebp),%eax
	movl 48(%eax),%esi
L1091:
	movl %esi,-28(%ebp)
	testl %esi,%esi
	jne L1075
L1074:
	movl 8(%ebp),%edx
	movl %edx,-28(%ebp)
	.p2align 2
L1173:
	movl -28(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L1109
	jmp *L1121(,%eax,4)
	.p2align 2
L1121:
	.long L1119
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1120
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1109
	.long L1114
	.long L1119
	.long L1119
	.long L1109
	.long L1112
	.long L1116
	.long L1119
	.long L1110
	.long L1118
	.long L1119
	.p2align 2
L1110:
	movl -28(%ebp),%eax
	movl 48(%eax),%eax
	jmp L1227
	.p2align 2
L1112:
	movl -28(%ebp),%eax
	movl 48(%eax),%eax
	jmp L1227
	.p2align 2
L1114:
	movl -28(%ebp),%eax
	movl 48(%eax),%eax
	jmp L1227
	.p2align 2
L1116:
	movl -28(%ebp),%eax
	movl 48(%eax),%eax
	jmp L1227
	.p2align 2
L1118:
	movl -28(%ebp),%eax
	movl 48(%eax),%eax
	jmp L1227
	.p2align 2
L1119:
	movl -28(%ebp),%edx
	movl 48(%edx),%edx
	movl %edx,-40(%ebp)
	jmp L1109
	.p2align 2
L1120:
	movl -28(%ebp),%eax
	movl 44(%eax),%eax
L1227:
	movl %eax,-40(%ebp)
L1109:
	movl -40(%ebp),%esi
	testl %esi,%esi
	je L1124
	.p2align 2
L1125:
	movl (%esi),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L1126
	jmp *L1138(,%eax,4)
	.p2align 2
L1138:
	.long L1137
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1136
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1126
	.long L1137
	.long L1134
	.long L1134
	.long L1126
	.long L1137
	.long L1137
	.long L1134
	.long L1137
	.long L1137
	.long L1134
	.p2align 2
L1134:
	movl 56(%esi),%eax
	movl %eax,-32(%ebp)
	jmp L1126
	.p2align 2
L1136:
	movl 52(%esi),%eax
	movl %eax,-32(%ebp)
	jmp L1126
	.p2align 2
L1137:
	movl 56(%esi),%edx
	movl %edx,-32(%ebp)
L1126:
	movl -32(%ebp),%edi
	testl %edi,%edi
	je L1140
	movl -8(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 12(%edi),%eax
	movl (%eax),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L1140
	movl 16(%edi),%eax
	movl -4(%ebp),%edx
	addl $-8,%esp
	movl (%eax),%eax
	cmpl -4(%ebp),%eax
	setg %bl
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L1140
	movl -16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 20(%edi),%eax
	movl (%eax),%eax
	pushl %eax
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	je L1140
	movl 24(%edi),%eax
	movl -12(%ebp),%edx
	cmpl %edx,(%eax)
	jle L1140
	addl $-12,%esp
	pushl %edi
	call _active_y__65I
	addl $16,%esp
L1140:
	movl (%esi),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L1144
	jmp *L1156(,%eax,4)
	.p2align 2
L1156:
	.long L1155
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1154
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1144
	.long L1155
	.long L1155
	.long L1155
	.long L1144
	.long L1155
	.long L1155
	.long L1155
	.long L1155
	.long L1155
	.long L1155
	.p2align 2
L1154:
	movl 44(%esi),%esi
	jmp L1228
	.p2align 2
L1155:
	movl 48(%esi),%esi
L1228:
	movl %esi,-36(%ebp)
L1144:
	movl -36(%ebp),%esi
	testl %esi,%esi
	jne L1125
L1124:
	movl -28(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L1159
	jmp *L1171(,%eax,4)
	.p2align 2
L1171:
	.long L1169
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1170
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1159
	.long L1164
	.long L1169
	.long L1169
	.long L1159
	.long L1162
	.long L1166
	.long L1169
	.long L1160
	.long L1168
	.long L1169
	.p2align 2
L1160:
	movl -28(%ebp),%eax
	movl 40(%eax),%eax
	jmp L1229
	.p2align 2
L1162:
	movl -28(%ebp),%eax
	movl 40(%eax),%eax
	jmp L1229
	.p2align 2
L1164:
	movl -28(%ebp),%eax
	movl 40(%eax),%eax
	jmp L1229
	.p2align 2
L1166:
	movl -28(%ebp),%eax
	movl 40(%eax),%eax
	jmp L1229
	.p2align 2
L1168:
	movl -28(%ebp),%eax
	movl 40(%eax),%eax
	jmp L1229
	.p2align 2
L1169:
	movl -28(%ebp),%edx
	movl 40(%edx),%edx
	movl %edx,-44(%ebp)
	jmp L1159
	.p2align 2
L1170:
	movl -28(%ebp),%eax
	movl 36(%eax),%eax
L1229:
	movl %eax,-44(%ebp)
L1159:
	movl -44(%ebp),%edx
	movl %edx,-28(%ebp)
	testl %edx,%edx
	jne L1173
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__S8F
	movl _list_y__L3,%esi
	movl $0,_first_clip__P3
	movl -12(%ebp),%eax
	movl %eax,-56(%ebp)
	addl $16,%esp
	testl %esi,%esi
	je L1072
	jmp L1230
	.p2align 2
L1179:
	movl 12(%esi),%esi
	testl %esi,%esi
	je L1225
L1230:
	movl 4(%esi),%eax
	cmpb $0,1(%eax)
	je L1179
	testl %esi,%esi
	jne L1182
L1225:
	movl -16(%ebp),%edx
	movl %edx,-60(%ebp)
	jmp L1231
	.p2align 2
L1182:
	movl (%esi),%eax
	movl -16(%ebp),%edx
	movl %eax,-20(%ebp)
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call _min__TNE
	movl %eax,-60(%ebp)
	addl $16,%esp
L1231:
	subl $1,-60(%ebp)
	movl -60(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl -56(%ebp),%edx
	pushl %edx
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L1188
	movl _first_clip__P3,%eax
	movl %eax,_top_clip__Q3
	movl _list_x__K3,%eax
	movl $0,_last_clip__O3
	movl -4(%ebp),%edx
	movl %eax,-24(%ebp)
	movl 8(%ebp),%eax
	movl $0,-48(%ebp)
	movl %edx,-52(%ebp)
	movl %eax,-28(%ebp)
	.p2align 2
L1212:
	movl -24(%ebp),%edx
	movl 4(%edx),%edi
	cmpb $0,(%edi)
	je L1193
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	movl 8(%eax),%eax
	pushl %eax
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	jne L1195
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	addl $16,%esp
	testl %eax,%eax
	jne L1194
L1195:
	movl 4(%edi),%eax
	addl $-4,%esp
	pushl %eax
	pushl %edi
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__L7O
	movl -48(%ebp),%eax
	addl $16,%esp
	cmpl %eax,4(%edi)
	jle L1193
	movl -8(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -24(%ebp),%edx
	movl (%edx),%eax
	decl %eax
	pushl %eax
	call _min__TNE
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl -52(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $32,%esp
	testb %al,%al
	je L1200
	movl -60(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %ebx
	movl -56(%ebp),%eax
	pushl %eax
	movl -52(%ebp),%edx
	pushl %edx
	movl -28(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _add_clip__from__to__0D6B
	addl $32,%esp
	addl $-8,%esp
	pushl $1
	pushl %ebx
	call ___infix_add__Q5B
	movl %eax,-52(%ebp)
	addl $16,%esp
L1200:
	movl 4(%edi),%eax
	movl %eax,-48(%ebp)
	movl 8(%edi),%edi
	movl %edi,-28(%ebp)
	jmp L1193
	.p2align 2
L1194:
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__ZSP
	movl -48(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl 4(%edi),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	addl $32,%esp
	testb %al,%al
	je L1193
	movl -8(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl -24(%ebp),%edx
	movl (%edx),%eax
	pushl %eax
	call _min__TNE
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl -52(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $32,%esp
	testb %al,%al
	je L1211
	movl -60(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %ebx
	movl -56(%ebp),%eax
	pushl %eax
	movl -52(%ebp),%edx
	pushl %edx
	movl -28(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _add_clip__from__to__0D6B
	addl $32,%esp
	addl $-8,%esp
	pushl $1
	pushl %ebx
	call ___infix_add__Q5B
	movl %eax,-52(%ebp)
	addl $16,%esp
	.p2align 2
L1211:
	subl $1,-48(%ebp)
	movl -48(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	addl $16,%esp
	testl %eax,%eax
	je L1211
	movl -48(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	movl 8(%eax),%eax
	movl %eax,-28(%ebp)
	addl $16,%esp
L1193:
	movl -24(%ebp),%eax
	movl 8(%eax),%eax
	movl %eax,-24(%ebp)
	testl %eax,%eax
	jne L1212
	movl -8(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -52(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L1213
	movl -60(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -8(%ebp),%eax
	pushl %eax
	movl -56(%ebp),%edx
	pushl %edx
	movl -52(%ebp),%eax
	pushl %eax
	movl -28(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _add_clip__from__to__0D6B
	addl $32,%esp
L1213:
	addl $-8,%esp
	pushl $1
	movl -60(%ebp),%edx
	pushl %edx
	call ___infix_add__Q5B
	movl %eax,-56(%ebp)
	addl $16,%esp
L1188:
	testl %esi,%esi
	je L1072
	.p2align 2
L1222:
	movl 4(%esi),%edi
	cmpb $0,1(%edi)
	je L1219
	cmpb $0,8(%esi)
	je L1220
	addl $-12,%esp
	pushl %edi
	call _active_x__IMJ
	addl $16,%esp
	jmp L1219
	.p2align 2
L1220:
	addl $-12,%esp
	pushl %edi
	call _desactive_y__SMJ
	addl $-12,%esp
	pushl %edi
	call _desactive_x__WMJ
	addl $32,%esp
L1219:
	movl 12(%esi),%esi
	testl %esi,%esi
	je L1072
	movl -20(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl (%esi),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	addl $16,%esp
	testb %al,%al
	jne L1222
	jmp L1230
	.p2align 2
L1072:
	leal -88(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_creat_clip__MEF:
	pushl %ebp
	movl %esp,%ebp
	subl $76,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl $0,-20(%ebp)
	movl $0,56(%eax)
	movl 52(%eax),%edx
	testl %edx,%edx
	je L1233
	movl 12(%edx),%eax
	movl (%eax),%eax
	movl %eax,-4(%ebp)
	movl 16(%edx),%eax
	movl (%eax),%eax
	movl %eax,-8(%ebp)
	movl 20(%edx),%eax
	movl (%eax),%eax
	movl %eax,-12(%ebp)
	movl 24(%edx),%eax
	movl 8(%ebp),%edx
	movl (%eax),%eax
	movl %eax,-16(%ebp)
	movl 40(%edx),%edx
	movl %edx,-36(%ebp)
	testl %edx,%edx
	je L1235
	.p2align 2
L1236:
	movl -36(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L1237
	jmp *L1249(,%eax,4)
	.p2align 2
L1249:
	.long L1248
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1245
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1237
	.long L1248
	.long L1247
	.long L1248
	.long L1237
	.long L1248
	.long L1248
	.long L1247
	.long L1248
	.long L1247
	.long L1247
	.p2align 2
L1245:
	movl -36(%ebp),%edx
	movl 52(%edx),%ebx
	jmp L1237
	.p2align 2
L1247:
	movl -36(%ebp),%edx
	movl 56(%edx),%ebx
	jmp L1237
	.p2align 2
L1248:
	movl -36(%ebp),%eax
	movl 56(%eax),%ebx
L1237:
	movl %ebx,%edi
	testl %edi,%edi
	je L1251
	addl $-12,%esp
	pushl %edi
	call _active_y__65I
	addl $16,%esp
L1251:
	movl -36(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L1252
	jmp *L1264(,%eax,4)
	.p2align 2
L1264:
	.long L1263
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1260
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1252
	.long L1263
	.long L1262
	.long L1263
	.long L1252
	.long L1263
	.long L1263
	.long L1262
	.long L1263
	.long L1262
	.long L1262
	.p2align 2
L1260:
	movl -36(%ebp),%edx
	movl 48(%edx),%esi
	jmp L1252
	.p2align 2
L1262:
	movl -36(%ebp),%edx
	movl 52(%edx),%esi
	jmp L1252
	.p2align 2
L1263:
	movl -36(%ebp),%eax
	movl 52(%eax),%esi
L1252:
	movl %esi,-36(%ebp)
	testl %esi,%esi
	jne L1236
L1235:
	movl 8(%ebp),%edx
	movl %edx,-36(%ebp)
	.p2align 2
L1334:
	movl -36(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L1270
	jmp *L1282(,%eax,4)
	.p2align 2
L1282:
	.long L1281
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1271
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1270
	.long L1280
	.long L1281
	.long L1281
	.long L1270
	.long L1280
	.long L1280
	.long L1281
	.long L1280
	.long L1280
	.long L1281
	.p2align 2
L1271:
	movl -36(%ebp),%eax
	movl 44(%eax),%eax
	jmp L1398
	.p2align 2
L1280:
	movl -36(%ebp),%edx
	movl 48(%edx),%edx
	movl %edx,-48(%ebp)
	jmp L1270
	.p2align 2
L1281:
	movl -36(%ebp),%eax
	movl 48(%eax),%eax
L1398:
	movl %eax,-48(%ebp)
L1270:
	movl -48(%ebp),%esi
	testl %esi,%esi
	je L1285
	.p2align 2
L1286:
	movl (%esi),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L1287
	jmp *L1299(,%eax,4)
	.p2align 2
L1299:
	.long L1298
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1295
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1287
	.long L1298
	.long L1297
	.long L1298
	.long L1287
	.long L1298
	.long L1298
	.long L1297
	.long L1298
	.long L1297
	.long L1297
	.p2align 2
L1295:
	movl 52(%esi),%eax
	movl %eax,-40(%ebp)
	jmp L1287
	.p2align 2
L1297:
	movl 56(%esi),%eax
	movl %eax,-40(%ebp)
	jmp L1287
	.p2align 2
L1298:
	movl 56(%esi),%edx
	movl %edx,-40(%ebp)
L1287:
	movl -40(%ebp),%edi
	testl %edi,%edi
	je L1301
	movl -8(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 12(%edi),%eax
	movl (%eax),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L1301
	movl 16(%edi),%eax
	movl -4(%ebp),%edx
	addl $-8,%esp
	movl (%eax),%eax
	cmpl -4(%ebp),%eax
	setg %bl
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L1301
	movl -16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 20(%edi),%eax
	movl (%eax),%eax
	pushl %eax
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	je L1301
	movl 24(%edi),%eax
	movl -12(%ebp),%edx
	cmpl %edx,(%eax)
	jle L1301
	addl $-12,%esp
	pushl %edi
	call _active_y__65I
	addl $16,%esp
L1301:
	movl (%esi),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L1305
	jmp *L1317(,%eax,4)
	.p2align 2
L1317:
	.long L1316
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1313
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1305
	.long L1316
	.long L1316
	.long L1316
	.long L1305
	.long L1316
	.long L1316
	.long L1316
	.long L1316
	.long L1315
	.long L1316
	.p2align 2
L1313:
	movl 44(%esi),%esi
	jmp L1399
	.p2align 2
L1315:
L1316:
	movl 48(%esi),%esi
L1399:
	movl %esi,-44(%ebp)
L1305:
	movl -44(%ebp),%esi
	testl %esi,%esi
	jne L1286
L1285:
	movl -36(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L1320
	jmp *L1332(,%eax,4)
	.p2align 2
L1332:
	.long L1331
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1321
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1320
	.long L1330
	.long L1331
	.long L1331
	.long L1320
	.long L1330
	.long L1330
	.long L1331
	.long L1330
	.long L1330
	.long L1331
	.p2align 2
L1321:
	movl -36(%ebp),%eax
	movl 36(%eax),%eax
	jmp L1400
	.p2align 2
L1330:
	movl -36(%ebp),%edx
	movl 40(%edx),%edx
	movl %edx,-60(%ebp)
	jmp L1320
	.p2align 2
L1331:
	movl -36(%ebp),%eax
	movl 40(%eax),%eax
L1400:
	movl %eax,-60(%ebp)
L1320:
	movl -60(%ebp),%edx
	movl %edx,-36(%ebp)
	testl %edx,%edx
	jne L1334
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 52(%edx),%eax
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__S8F
	movl _list_y__L3,%eax
	movl $0,_first_clip__P3
	movl -12(%ebp),%edx
	movl %eax,-32(%ebp)
	movl %edx,-52(%ebp)
	addl $16,%esp
	testl %eax,%eax
	je L1233
	.p2align 2
L1397:
	movl -32(%ebp),%edx
	movl 4(%edx),%eax
	cmpb $0,1(%eax)
	jne L1339
	.p2align 2
L1340:
	movl -32(%ebp),%eax
	movl 12(%eax),%eax
	movl %eax,-32(%ebp)
	testl %eax,%eax
	je L1396
	movl 4(%eax),%eax
	cmpb $0,1(%eax)
	je L1340
L1339:
	cmpl $0,-32(%ebp)
	jne L1343
L1396:
	movl -16(%ebp),%edx
	movl %edx,-56(%ebp)
	jmp L1401
	.p2align 2
L1343:
	movl -32(%ebp),%eax
	movl -16(%ebp),%edx
	addl $-8,%esp
	movl (%eax),%eax
	movl %eax,-20(%ebp)
	pushl %edx
	pushl %eax
	call _min__TNE
	movl %eax,-56(%ebp)
	addl $16,%esp
L1401:
	subl $1,-56(%ebp)
	movl -56(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl -52(%ebp),%edx
	pushl %edx
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L1349
	movl _first_clip__P3,%eax
	movl %eax,_top_clip__Q3
	movl _list_x__K3,%eax
	movl $0,_last_clip__O3
	movl -4(%ebp),%esi
	movl 8(%ebp),%edx
	movl %eax,-28(%ebp)
	movl $0,-24(%ebp)
	movl %edx,-36(%ebp)
	.p2align 2
L1373:
	movl -28(%ebp),%eax
	movl 4(%eax),%edi
	cmpb $0,(%edi)
	je L1354
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	movl 8(%eax),%eax
	pushl %eax
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	jne L1356
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	addl $16,%esp
	testl %eax,%eax
	jne L1355
L1356:
	movl 4(%edi),%eax
	addl $-4,%esp
	pushl %eax
	pushl %edi
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__L7O
	movl -24(%ebp),%edx
	addl $16,%esp
	cmpl %edx,4(%edi)
	jle L1354
	movl -8(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl -28(%ebp),%edx
	movl (%edx),%eax
	decl %eax
	pushl %eax
	call _min__TNE
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	pushl %esi
	call ___infix_less_equal__NLE
	addl $32,%esp
	testb %al,%al
	je L1361
	movl -56(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	movl -52(%ebp),%edx
	pushl %edx
	pushl %esi
	movl -36(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _add_clip__from__to__QPUC
	addl $32,%esp
	addl $-8,%esp
	pushl $1
	pushl %ebx
	call ___infix_add__Q5B
	movl %eax,%esi
	addl $16,%esp
L1361:
	movl 4(%edi),%eax
	movl %eax,-24(%ebp)
	movl 8(%edi),%edi
	movl %edi,-36(%ebp)
	jmp L1354
	.p2align 2
L1355:
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__ZSP
	movl -24(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl 4(%edi),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	addl $32,%esp
	testb %al,%al
	je L1354
	movl -8(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl -28(%ebp),%edx
	movl (%edx),%eax
	pushl %eax
	call _min__TNE
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	pushl %esi
	call ___infix_less_equal__NLE
	addl $32,%esp
	testb %al,%al
	je L1372
	movl -56(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	movl -52(%ebp),%edx
	pushl %edx
	pushl %esi
	movl -36(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _add_clip__from__to__QPUC
	addl $32,%esp
	addl $-8,%esp
	pushl $1
	pushl %ebx
	call ___infix_add__Q5B
	movl %eax,%esi
	addl $16,%esp
	.p2align 2
L1372:
	subl $1,-24(%ebp)
	movl -24(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	addl $16,%esp
	testl %eax,%eax
	je L1372
	movl -24(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	movl 8(%eax),%eax
	movl %eax,-36(%ebp)
	addl $16,%esp
L1354:
	movl -28(%ebp),%eax
	movl 8(%eax),%eax
	movl %eax,-28(%ebp)
	testl %eax,%eax
	jne L1373
	movl -8(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L1374
	movl _top_clip__Q3,%eax
	testl %eax,%eax
	je L1375
	addl $-8,%esp
	pushl %esi
	movl (%eax),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	addl $16,%esp
	testb %al,%al
	je L1375
	movl -8(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl _top_clip__Q3,%eax
	movl 8(%eax),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	addl $16,%esp
	testb %al,%al
	je L1375
	movl _top_clip__Q3,%eax
	movl -36(%ebp),%edx
	cmpl %edx,16(%eax)
	jne L1375
	movl %eax,%esi
	addl $-8,%esp
	movl 24(%esi),%eax
	movl %eax,_top_clip__Q3
	movl -56(%ebp),%eax
	pushl %eax
	pushl %esi
	call _set_y_max__YGJ
	addl $-12,%esp
	pushl %esi
	call _set_right__3GJ
	addl $32,%esp
	jmp L1376
	.p2align 2
L1375:
	call _clone__S7H
	movl -36(%ebp),%edx
	movl %eax,%ebx
	movl %edx,16(%ebx)
	movl %esi,(%ebx)
	movl -52(%ebp),%eax
	movl %eax,4(%ebx)
	movl -8(%ebp),%edx
	movl %edx,8(%ebx)
	movl -56(%ebp),%eax
	movl %eax,12(%ebx)
	movl _last_clip__O3,%eax
	movl %ebx,%esi
	movl %eax,20(%esi)
	movl _top_clip__Q3,%eax
	movl %eax,28(%esi)
	jmp L1377
	.p2align 2
L1379:
	addl $-8,%esp
	pushl %ebx
	movl _top_clip__Q3,%eax
	pushl %eax
	call _set_bottom__OJJ
	movl _top_clip__Q3,%eax
	addl $16,%esp
	movl 24(%eax),%eax
	movl %eax,_top_clip__Q3
L1377:
	movl _top_clip__Q3,%eax
	testl %eax,%eax
	je L1378
	movl -8(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl 8(%eax),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	jne L1379
L1378:
	cmpl $0,20(%ebx)
	jne L1376
	cmpl $0,28(%ebx)
	jne L1376
	movl 8(%ebp),%eax
	movl %ebx,56(%eax)
L1376:
	movl _last_clip__O3,%eax
	testl %eax,%eax
	jne L1383
	movl %esi,_first_clip__P3
	jmp L1384
	.p2align 2
L1383:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _set_right__3KJ
	addl $16,%esp
L1384:
	movl %esi,_last_clip__O3
L1374:
	addl $-8,%esp
	pushl $1
	movl -56(%ebp),%edx
	pushl %edx
	call ___infix_add__Q5B
	movl %eax,-52(%ebp)
	addl $16,%esp
L1349:
	cmpl $0,-32(%ebp)
	je L1233
	.p2align 2
L1393:
	movl -32(%ebp),%eax
	movl 4(%eax),%edi
	cmpb $0,1(%edi)
	je L1390
	cmpb $0,8(%eax)
	je L1391
	addl $-12,%esp
	pushl %edi
	call _active_x__IMJ
	addl $16,%esp
	jmp L1390
	.p2align 2
L1391:
	addl $-12,%esp
	pushl %edi
	call _desactive_y__SMJ
	addl $-12,%esp
	pushl %edi
	call _desactive_x__WMJ
	addl $32,%esp
L1390:
	movl -32(%ebp),%edx
	movl 12(%edx),%edx
	movl %edx,-32(%ebp)
	testl %edx,%edx
	je L1233
	movl -20(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl (%edx),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	addl $16,%esp
	testb %al,%al
	jne L1393
	jmp L1397
	.p2align 2
L1233:
	leal -88(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_creat_clip__Z0I:
	pushl %ebp
	movl %esp,%ebp
	subl $76,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl $0,-20(%ebp)
	movl $0,60(%eax)
	movl 56(%eax),%edx
	testl %edx,%edx
	je L1403
	movl 12(%edx),%eax
	movl (%eax),%eax
	movl %eax,-4(%ebp)
	movl 16(%edx),%eax
	movl (%eax),%eax
	movl %eax,-8(%ebp)
	movl 20(%edx),%eax
	movl (%eax),%eax
	movl %eax,-12(%ebp)
	movl 24(%edx),%eax
	movl 8(%ebp),%edx
	movl (%eax),%eax
	movl %eax,-16(%ebp)
	movl 44(%edx),%edx
	movl %edx,-36(%ebp)
	testl %edx,%edx
	je L1405
	.p2align 2
L1406:
	movl -36(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L1407
	jmp *L1419(,%eax,4)
	.p2align 2
L1419:
	.long L1418
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1416
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1407
	.long L1417
	.long L1418
	.long L1417
	.long L1407
	.long L1417
	.long L1417
	.long L1418
	.long L1417
	.long L1418
	.long L1418
	.p2align 2
L1416:
	movl -36(%ebp),%eax
	movl 52(%eax),%ebx
	jmp L1407
	.p2align 2
L1417:
	movl -36(%ebp),%edx
	movl 56(%edx),%ebx
	jmp L1407
	.p2align 2
L1418:
	movl -36(%ebp),%eax
	movl 56(%eax),%ebx
L1407:
	movl %ebx,%edi
	testl %edi,%edi
	je L1421
	addl $-12,%esp
	pushl %edi
	call _active_y__65I
	addl $16,%esp
L1421:
	movl -36(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L1422
	jmp *L1434(,%eax,4)
	.p2align 2
L1434:
	.long L1433
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1431
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1422
	.long L1432
	.long L1433
	.long L1432
	.long L1422
	.long L1432
	.long L1432
	.long L1433
	.long L1432
	.long L1433
	.long L1433
	.p2align 2
L1431:
	movl -36(%ebp),%eax
	movl 48(%eax),%esi
	jmp L1422
	.p2align 2
L1432:
	movl -36(%ebp),%edx
	movl 52(%edx),%esi
	jmp L1422
	.p2align 2
L1433:
	movl -36(%ebp),%eax
	movl 52(%eax),%esi
L1422:
	movl %esi,-36(%ebp)
	testl %esi,%esi
	jne L1406
L1405:
	movl 8(%ebp),%edx
	movl %edx,-36(%ebp)
	.p2align 2
L1504:
	movl -36(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L1440
	jmp *L1452(,%eax,4)
	.p2align 2
L1452:
	.long L1451
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1449
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1440
	.long L1450
	.long L1451
	.long L1450
	.long L1440
	.long L1450
	.long L1450
	.long L1451
	.long L1450
	.long L1451
	.long L1451
	.p2align 2
L1449:
	movl -36(%ebp),%eax
	movl 44(%eax),%eax
	jmp L1568
	.p2align 2
L1450:
	movl -36(%ebp),%edx
	movl 48(%edx),%edx
	movl %edx,-48(%ebp)
	jmp L1440
	.p2align 2
L1451:
	movl -36(%ebp),%eax
	movl 48(%eax),%eax
L1568:
	movl %eax,-48(%ebp)
L1440:
	movl -48(%ebp),%esi
	testl %esi,%esi
	je L1455
	.p2align 2
L1456:
	movl (%esi),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L1457
	jmp *L1469(,%eax,4)
	.p2align 2
L1469:
	.long L1468
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1465
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1457
	.long L1468
	.long L1467
	.long L1468
	.long L1457
	.long L1468
	.long L1468
	.long L1467
	.long L1468
	.long L1467
	.long L1467
	.p2align 2
L1465:
	movl 52(%esi),%eax
	movl %eax,-40(%ebp)
	jmp L1457
	.p2align 2
L1467:
	movl 56(%esi),%eax
	movl %eax,-40(%ebp)
	jmp L1457
	.p2align 2
L1468:
	movl 56(%esi),%edx
	movl %edx,-40(%ebp)
L1457:
	movl -40(%ebp),%edi
	testl %edi,%edi
	je L1471
	movl -8(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 12(%edi),%eax
	movl (%eax),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L1471
	movl 16(%edi),%eax
	movl -4(%ebp),%edx
	addl $-8,%esp
	movl (%eax),%eax
	cmpl -4(%ebp),%eax
	setg %bl
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L1471
	movl -16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 20(%edi),%eax
	movl (%eax),%eax
	pushl %eax
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	je L1471
	movl 24(%edi),%eax
	movl -12(%ebp),%edx
	cmpl %edx,(%eax)
	jle L1471
	addl $-12,%esp
	pushl %edi
	call _active_y__65I
	addl $16,%esp
L1471:
	movl (%esi),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L1475
	jmp *L1487(,%eax,4)
	.p2align 2
L1487:
	.long L1486
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1483
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1475
	.long L1486
	.long L1486
	.long L1486
	.long L1475
	.long L1486
	.long L1486
	.long L1486
	.long L1486
	.long L1485
	.long L1486
	.p2align 2
L1483:
	movl 44(%esi),%esi
	jmp L1569
	.p2align 2
L1485:
L1486:
	movl 48(%esi),%esi
L1569:
	movl %esi,-44(%ebp)
L1475:
	movl -44(%ebp),%esi
	testl %esi,%esi
	jne L1456
L1455:
	movl -36(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L1490
	jmp *L1502(,%eax,4)
	.p2align 2
L1502:
	.long L1501
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1499
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1490
	.long L1500
	.long L1501
	.long L1500
	.long L1490
	.long L1500
	.long L1500
	.long L1501
	.long L1500
	.long L1501
	.long L1501
	.p2align 2
L1499:
	movl -36(%ebp),%eax
	movl 36(%eax),%eax
	jmp L1570
	.p2align 2
L1500:
	movl -36(%ebp),%edx
	movl 40(%edx),%edx
	movl %edx,-60(%ebp)
	jmp L1490
	.p2align 2
L1501:
	movl -36(%ebp),%eax
	movl 40(%eax),%eax
L1570:
	movl %eax,-60(%ebp)
L1490:
	movl -60(%ebp),%edx
	movl %edx,-36(%ebp)
	testl %edx,%edx
	jne L1504
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__S8F
	movl _list_y__L3,%eax
	movl $0,_first_clip__P3
	movl -12(%ebp),%edx
	movl %eax,-32(%ebp)
	movl %edx,-52(%ebp)
	addl $16,%esp
	testl %eax,%eax
	je L1403
	.p2align 2
L1567:
	movl -32(%ebp),%edx
	movl 4(%edx),%eax
	cmpb $0,1(%eax)
	jne L1509
	.p2align 2
L1510:
	movl -32(%ebp),%eax
	movl 12(%eax),%eax
	movl %eax,-32(%ebp)
	testl %eax,%eax
	je L1566
	movl 4(%eax),%eax
	cmpb $0,1(%eax)
	je L1510
L1509:
	cmpl $0,-32(%ebp)
	jne L1513
L1566:
	movl -16(%ebp),%edx
	movl %edx,-56(%ebp)
	jmp L1571
	.p2align 2
L1513:
	movl -32(%ebp),%eax
	movl -16(%ebp),%edx
	addl $-8,%esp
	movl (%eax),%eax
	movl %eax,-20(%ebp)
	pushl %edx
	pushl %eax
	call _min__TNE
	movl %eax,-56(%ebp)
	addl $16,%esp
L1571:
	subl $1,-56(%ebp)
	movl -56(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl -52(%ebp),%edx
	pushl %edx
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L1519
	movl _first_clip__P3,%eax
	movl %eax,_top_clip__Q3
	movl _list_x__K3,%eax
	movl $0,_last_clip__O3
	movl -4(%ebp),%esi
	movl 8(%ebp),%edx
	movl %eax,-28(%ebp)
	movl $0,-24(%ebp)
	movl %edx,-36(%ebp)
	.p2align 2
L1543:
	movl -28(%ebp),%eax
	movl 4(%eax),%edi
	cmpb $0,(%edi)
	je L1524
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	movl 8(%eax),%eax
	pushl %eax
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	jne L1526
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	addl $16,%esp
	testl %eax,%eax
	jne L1525
L1526:
	movl 4(%edi),%eax
	addl $-4,%esp
	pushl %eax
	pushl %edi
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__L7O
	movl -24(%ebp),%edx
	addl $16,%esp
	cmpl %edx,4(%edi)
	jle L1524
	movl -8(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl -28(%ebp),%edx
	movl (%edx),%eax
	decl %eax
	pushl %eax
	call _min__TNE
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	pushl %esi
	call ___infix_less_equal__NLE
	addl $32,%esp
	testb %al,%al
	je L1531
	movl -56(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	movl -52(%ebp),%edx
	pushl %edx
	pushl %esi
	movl -36(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _add_clip__from__to__H9UC
	addl $32,%esp
	addl $-8,%esp
	pushl $1
	pushl %ebx
	call ___infix_add__Q5B
	movl %eax,%esi
	addl $16,%esp
L1531:
	movl 4(%edi),%eax
	movl %eax,-24(%ebp)
	movl 8(%edi),%edi
	movl %edi,-36(%ebp)
	jmp L1524
	.p2align 2
L1525:
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__ZSP
	movl -24(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl 4(%edi),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	addl $32,%esp
	testb %al,%al
	je L1524
	movl -8(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl -28(%ebp),%edx
	movl (%edx),%eax
	pushl %eax
	call _min__TNE
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	pushl %esi
	call ___infix_less_equal__NLE
	addl $32,%esp
	testb %al,%al
	je L1542
	movl -56(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	movl -52(%ebp),%edx
	pushl %edx
	pushl %esi
	movl -36(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _add_clip__from__to__H9UC
	addl $32,%esp
	addl $-8,%esp
	pushl $1
	pushl %ebx
	call ___infix_add__Q5B
	movl %eax,%esi
	addl $16,%esp
	.p2align 2
L1542:
	subl $1,-24(%ebp)
	movl -24(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	addl $16,%esp
	testl %eax,%eax
	je L1542
	movl -24(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	movl 8(%eax),%eax
	movl %eax,-36(%ebp)
	addl $16,%esp
L1524:
	movl -28(%ebp),%eax
	movl 8(%eax),%eax
	movl %eax,-28(%ebp)
	testl %eax,%eax
	jne L1543
	movl -8(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L1544
	movl _top_clip__Q3,%eax
	testl %eax,%eax
	je L1545
	addl $-8,%esp
	pushl %esi
	movl (%eax),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	addl $16,%esp
	testb %al,%al
	je L1545
	movl -8(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl _top_clip__Q3,%eax
	movl 8(%eax),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	addl $16,%esp
	testb %al,%al
	je L1545
	movl _top_clip__Q3,%eax
	movl -36(%ebp),%edx
	cmpl %edx,16(%eax)
	jne L1545
	movl %eax,%esi
	addl $-8,%esp
	movl 24(%esi),%eax
	movl %eax,_top_clip__Q3
	movl -56(%ebp),%eax
	pushl %eax
	pushl %esi
	call _set_y_max__YGJ
	addl $-12,%esp
	pushl %esi
	call _set_right__3GJ
	addl $32,%esp
	jmp L1546
	.p2align 2
L1545:
	call _clone__S7H
	movl -36(%ebp),%edx
	movl %eax,%ebx
	movl %edx,16(%ebx)
	movl %esi,(%ebx)
	movl -52(%ebp),%eax
	movl %eax,4(%ebx)
	movl -8(%ebp),%edx
	movl %edx,8(%ebx)
	movl -56(%ebp),%eax
	movl %eax,12(%ebx)
	movl _last_clip__O3,%eax
	movl %ebx,%esi
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call _set_left__FIJ
	movl _top_clip__Q3,%eax
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call _set_top__LIJ
	addl $32,%esp
	jmp L1547
	.p2align 2
L1549:
	addl $-8,%esp
	pushl %ebx
	movl _top_clip__Q3,%eax
	pushl %eax
	call _set_bottom__OJJ
	movl _top_clip__Q3,%eax
	addl $16,%esp
	movl 24(%eax),%eax
	movl %eax,_top_clip__Q3
L1547:
	movl _top_clip__Q3,%eax
	testl %eax,%eax
	je L1548
	movl -8(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl 8(%eax),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	jne L1549
L1548:
	cmpl $0,20(%ebx)
	jne L1546
	cmpl $0,28(%ebx)
	jne L1546
	movl 8(%ebp),%eax
	movl %ebx,60(%eax)
L1546:
	movl _last_clip__O3,%eax
	testl %eax,%eax
	jne L1553
	movl %esi,_first_clip__P3
	jmp L1554
	.p2align 2
L1553:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _set_right__3KJ
	addl $16,%esp
L1554:
	movl %esi,_last_clip__O3
L1544:
	addl $-8,%esp
	pushl $1
	movl -56(%ebp),%edx
	pushl %edx
	call ___infix_add__Q5B
	movl %eax,-52(%ebp)
	addl $16,%esp
L1519:
	cmpl $0,-32(%ebp)
	je L1403
	.p2align 2
L1563:
	movl -32(%ebp),%eax
	movl 4(%eax),%edi
	cmpb $0,1(%edi)
	je L1560
	cmpb $0,8(%eax)
	je L1561
	addl $-12,%esp
	pushl %edi
	call _active_x__IMJ
	addl $16,%esp
	jmp L1560
	.p2align 2
L1561:
	addl $-12,%esp
	pushl %edi
	call _desactive_y__SMJ
	addl $-12,%esp
	pushl %edi
	call _desactive_x__WMJ
	addl $32,%esp
L1560:
	movl -32(%ebp),%edx
	movl 12(%edx),%edx
	movl %edx,-32(%ebp)
	testl %edx,%edx
	je L1403
	movl -20(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl (%edx),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	addl $16,%esp
	testb %al,%al
	jne L1563
	jmp L1567
	.p2align 2
L1403:
	leal -88(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_append_plan__YLI:
	pushl %ebp
	movl %esp,%ebp
	subl $60,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 40(%eax),%edx
	testl %edx,%edx
	je L1581
	movl (%edx),%eax
	cmpl $28,%eax
	je L1583
	ja L1588
	cmpl $17,%eax
	je L1585
	jmp L1582
	.p2align 2
L1588:
	cmpl $78,%eax
	je L1584
	jmp L1582
	.p2align 2
L1583:
	movl 52(%edx),%ecx
	jmp L1582
	.p2align 2
L1584:
L1585:
	movl 56(%edx),%ecx
L1582:
	movl %ecx,%ebx
	testl %ebx,%ebx
	je L1603
	movl 12(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-4(%ebp)
	movl 16(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-12(%ebp)
	movl 20(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-8(%ebp)
	movl 24(%ebx),%eax
	movl (%eax),%eax
	decl %eax
	jmp L1688
	.p2align 2
L1581:
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L1595
	movl 12(%eax),%edx
	jmp L1596
	.p2align 2
L1595:
	movl 8(%eax),%edx
L1596:
	subl $1,%edx
	movl %edx,-12(%ebp)
	cmpl $16,(%eax)
	jne L1599
	movl 8(%eax),%eax
	jmp L1600
	.p2align 2
L1599:
	movl 4(%eax),%eax
L1600:
	subl $1,%eax
L1688:
	movl %eax,-16(%ebp)
	movb $0,%al
	testb %al,%al
	jne L1603
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 64(%edx),%edx
	movl %edx,-20(%ebp)
	movl 8(%ebp),%edx
	addl $-12,%esp
	movl 12(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-40(%ebp)
	addl $32,%esp
	subl $1,-40(%ebp)
	addl $-8,%esp
	movl 68(%edx),%edx
	movl %edx,-24(%ebp)
	movl 8(%ebp),%edx
	addl $-12,%esp
	movl 8(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl %eax,-44(%ebp)
	addl $32,%esp
	subl $1,-44(%ebp)
	cmpl %edx,-40(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %edx
	movl -40(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L1603
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L1603
	movl -8(%ebp),%edx
	cmpl %edx,-44(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %edx
	movl -44(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L1603
	movl -16(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L1603
	movl -4(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -20(%ebp),%eax
	pushl %eax
	call _max__1ME
	movl -12(%ebp),%edx
	movl %eax,-20(%ebp)
	addl $-8,%esp
	pushl %edx
	movl -40(%ebp),%eax
	pushl %eax
	call _min__TNE
	movl -8(%ebp),%edx
	movl %eax,-40(%ebp)
	addl $32,%esp
	addl $-8,%esp
	pushl %edx
	movl -24(%ebp),%eax
	pushl %eax
	call _max__1ME
	movl -16(%ebp),%edx
	movl %eax,-24(%ebp)
	addl $-8,%esp
	pushl %edx
	movl -44(%ebp),%eax
	pushl %eax
	call _min__TNE
	movl %eax,-44(%ebp)
	addl $32,%esp
	call _clone__1OE
	movl 8(%ebp),%edx
	movl 8(%ebp),%ebx
	movl %edx,8(%eax)
	movl %eax,56(%edx)
	jmp L1664
	.p2align 2
L1666:
	testl %eax,%eax
	jne L1687
L1664:
	movl (%ebx),%ecx
	cmpl $28,%ecx
	je L1621
	ja L1624
	cmpl $17,%ecx
	je L1619
	jmp L1618
	.p2align 2
L1624:
	cmpl $78,%ecx
	je L1620
	jmp L1618
	.p2align 2
L1619:
	movl 48(%ebx),%eax
	jmp L1689
	.p2align 2
L1620:
	movl 48(%ebx),%edx
	movl %edx,-28(%ebp)
	jmp L1618
	.p2align 2
L1621:
	movl 44(%ebx),%eax
L1689:
	movl %eax,-28(%ebp)
L1618:
	movl -28(%ebp),%eax
L1625:
	testl %eax,%eax
	je L1626
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L1627
	jmp *L1639(,%edx,4)
	.p2align 2
L1639:
	.long L1638
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1635
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1627
	.long L1638
	.long L1638
	.long L1638
	.long L1627
	.long L1638
	.long L1638
	.long L1638
	.long L1638
	.long L1637
	.long L1638
	.p2align 2
L1635:
	movl 52(%eax),%esi
	jmp L1627
	.p2align 2
L1637:
L1638:
	movl 56(%eax),%esi
L1627:
	testl %esi,%esi
	sete %dl
	jmp L1641
	.p2align 2
L1626:
	movb $0,%dl
L1641:
	testb %dl,%dl
	je L1642
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L1643
	jmp *L1655(,%edx,4)
	.p2align 2
L1655:
	.long L1654
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1651
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1643
	.long L1654
	.long L1654
	.long L1654
	.long L1643
	.long L1654
	.long L1654
	.long L1654
	.long L1654
	.long L1653
	.long L1654
	.p2align 2
L1651:
	movl 44(%eax),%edi
	jmp L1643
	.p2align 2
L1653:
L1654:
	movl 48(%eax),%edi
L1643:
	movl %edi,%eax
	jmp L1625
	.p2align 2
L1642:
	cmpl $28,%ecx
	je L1660
	ja L1663
	cmpl $17,%ecx
	je L1658
	jmp L1657
	.p2align 2
L1663:
	cmpl $78,%ecx
	je L1659
	jmp L1657
	.p2align 2
L1658:
	movl 40(%ebx),%ebx
	jmp L1690
	.p2align 2
L1659:
	movl 40(%ebx),%ebx
	jmp L1690
	.p2align 2
L1660:
	movl 36(%ebx),%ebx
L1690:
	movl %ebx,-32(%ebp)
L1657:
	movl -32(%ebp),%ebx
	testl %ebx,%ebx
	jne L1666
	testl %eax,%eax
	je L1667
L1687:
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L1668
	jmp *L1680(,%edx,4)
	.p2align 2
L1680:
	.long L1679
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1676
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1668
	.long L1679
	.long L1679
	.long L1679
	.long L1668
	.long L1679
	.long L1679
	.long L1679
	.long L1679
	.long L1678
	.long L1679
	.p2align 2
L1676:
	movl 52(%eax),%eax
	jmp L1691
	.p2align 2
L1678:
L1679:
	movl 56(%eax),%eax
L1691:
	movl %eax,-36(%ebp)
L1668:
	movl -36(%ebp),%ebx
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_prev__HWI
	movl 28(%ebx),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_next__1TE
	movl 8(%ebp),%edx
	addl $32,%esp
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	pushl %ebx
	call _set_next__QWI
	addl $-8,%esp
	addl $-8,%esp
	addl $16,%esp
	pushl $1
	movl 4(%ebx),%eax
	pushl %eax
	call ___infix_add__Q5B
	pushl %eax
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_level__QTE
	addl $32,%esp
	jmp L1683
	.p2align 2
L1667:
	movl _list_plan__J3,%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_next__QWI
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $16,%esp
	movl 56(%edx),%eax
	movl %eax,_list_plan__J3
	pushl $1
	pushl %eax
	call _set_level__QTE
	addl $16,%esp
L1683:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 28(%eax),%ebx
	testl %ebx,%ebx
	je L1685
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _set_prev__HWI
	addl $-12,%esp
	pushl %ebx
	call _inc_level__XXI
	addl $32,%esp
L1685:
	addl $-8,%esp
	pushl $1
	movl -44(%ebp),%eax
	pushl %eax
	call ___infix_add__Q5B
	movl 8(%ebp),%edx
	movl %eax,-44(%ebp)
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call _create__plan__VUE
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_x0__HXE
	movl _list_x__K3,%eax
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _append__E1E
	movl %eax,_list_x__K3
	movl 8(%ebp),%edx
	addl $32,%esp
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -40(%ebp),%eax
	pushl %eax
	call _create__plan__VUE
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_x1__90E
	movl 8(%ebp),%edx
	addl $32,%esp
	movl 56(%edx),%eax
	addl $-8,%esp
	movl 12(%eax),%eax
	pushl %eax
	pushl %ebx
	call _append__E1E
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call _create_top__plan__74E
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_y0__W7E
	movl _list_y__L3,%eax
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _append__GBF
	movl %eax,_list_y__L3
	movl 8(%ebp),%edx
	addl $32,%esp
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -44(%ebp),%eax
	pushl %eax
	call _create_bottom__plan__PAF
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_y1__BBF
	movl 8(%ebp),%edx
	addl $32,%esp
	movl 56(%edx),%eax
	addl $-8,%esp
	movl 20(%eax),%eax
	pushl %eax
	pushl %ebx
	call _append__GBF
L1603:
	leal -72(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clip_next_child__N0I:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%ebx
	addl $-12,%esp
	pushl %ebx
	call _creat_clip__Z0I
	addl $16,%esp
	movl 52(%ebx),%eax
	testl %eax,%eax
	je L1693
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L1693
	jmp *L1706(,%edx,4)
	.p2align 2
L1706:
	.long L1704
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1705
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1693
	.long L1699
	.long L1696
	.long L1702
	.long L1693
	.long L1697
	.long L1701
	.long L1698
	.long L1695
	.long L1703
	.long L1700
	.p2align 2
L1695:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__UJQB
	jmp L1723
	.p2align 2
L1696:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__SRO
	jmp L1723
	.p2align 2
L1697:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__XZY
	jmp L1723
	.p2align 2
L1698:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__HHLB
	jmp L1723
	.p2align 2
L1699:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__MW5B
	jmp L1723
	.p2align 2
L1700:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__FVZB
	jmp L1723
	.p2align 2
L1701:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__JKIB
	jmp L1723
	.p2align 2
L1702:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__9IT
	jmp L1723
	.p2align 2
L1703:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__RFVB
	jmp L1723
	.p2align 2
L1704:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__N0I
	jmp L1723
	.p2align 2
L1705:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__BEF
L1723:
	addl $16,%esp
L1693:
	movl 44(%ebx),%eax
	testl %eax,%eax
	je L1708
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L1708
	jmp *L1721(,%edx,4)
	.p2align 2
L1721:
	.long L1710
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1718
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1708
	.long L1715
	.long L1712
	.long L1719
	.long L1708
	.long L1713
	.long L1717
	.long L1714
	.long L1711
	.long L1720
	.long L1716
	.p2align 2
L1710:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__N0I
	jmp L1708
	.p2align 2
L1711:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__UJQB
	jmp L1708
	.p2align 2
L1712:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__SRO
	jmp L1708
	.p2align 2
L1713:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__XZY
	jmp L1708
	.p2align 2
L1714:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__HHLB
	jmp L1708
	.p2align 2
L1715:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__MW5B
	jmp L1708
	.p2align 2
L1716:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__FVZB
	jmp L1708
	.p2align 2
L1717:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__JKIB
	jmp L1708
	.p2align 2
L1718:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__BEF
	jmp L1708
	.p2align 2
L1719:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__9IT
	jmp L1708
	.p2align 2
L1720:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__RFVB
L1708:
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_draw__to__5PJ:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%edi
	movl 16(%ebp),%ebx
	movl 20(%ebp),%ecx
	movl _parent_video__C2,%eax
	movl 24(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	pushl %ecx
	pushl %ebx
	pushl %edi
	pushl %esi
	call _clipping__to__VQJ
	addl $32,%esp
	movl _parent_video__C2,%eax
	movl _gray__CS,%edx
	movl 12(%esi),%ebx
	movl 8(%esi),%ecx
	movl _parent_video__C2,%eax
	addl $-2,%ebx
	addl $-2,%ecx
	addl $-8,%esp
	pushl %edx
	pushl %ecx
	pushl %ebx
	pushl $1
	pushl $1
	pushl %esi
	call _rectangle_fill__to__color__1UJ
	addl $32,%esp
	movl _parent_video__C2,%eax
	movl _white__5R,%edx
	movl 12(%esi),%ebx
	movl 8(%esi),%ecx
	decl %ebx
	decl %ecx
	cmpl $16,(%eax)
	jne L1745
	addl $-8,%esp
	pushl %edx
	pushl %ecx
	pushl %ebx
	pushl $0
	pushl $0
	pushl %esi
	call _rectangle__to__color__RAL
	jmp L1746
	.p2align 2
L1745:
	addl $-8,%esp
	pushl %edx
	pushl %ecx
	pushl %ebx
	pushl $0
	pushl $0
	pushl %esi
	call _rectangle__to__color__RAL
L1746:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_append_plan__QCO:
	pushl %ebp
	movl %esp,%ebp
	subl $60,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 40(%eax),%edx
	testl %edx,%edx
	je L1815
	movl (%edx),%eax
	cmpl $28,%eax
	je L1817
	ja L1822
	cmpl $17,%eax
	je L1818
	jmp L1816
	.p2align 2
L1822:
	cmpl $78,%eax
	je L1819
	jmp L1816
	.p2align 2
L1817:
	movl 52(%edx),%ecx
	jmp L1816
	.p2align 2
L1818:
L1819:
	movl 56(%edx),%ecx
L1816:
	movl %ecx,%ebx
	testl %ebx,%ebx
	je L1837
	movl 12(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-4(%ebp)
	movl 16(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-12(%ebp)
	movl 20(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-8(%ebp)
	movl 24(%ebx),%eax
	movl (%eax),%eax
	decl %eax
	jmp L1924
	.p2align 2
L1815:
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L1829
	movl 12(%eax),%edx
	jmp L1830
	.p2align 2
L1829:
	movl 8(%eax),%edx
L1830:
	subl $1,%edx
	movl %edx,-12(%ebp)
	cmpl $16,(%eax)
	jne L1833
	movl 8(%eax),%eax
	jmp L1834
	.p2align 2
L1833:
	movl 4(%eax),%eax
L1834:
	subl $1,%eax
L1924:
	movl %eax,-16(%ebp)
	movb $0,%al
	testb %al,%al
	jne L1837
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 64(%edx),%edx
	movl %edx,-20(%ebp)
	movl 8(%ebp),%edx
	addl $-12,%esp
	movl 12(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-40(%ebp)
	addl $32,%esp
	subl $1,-40(%ebp)
	addl $-8,%esp
	movl 68(%edx),%edx
	movl %edx,-24(%ebp)
	movl 8(%ebp),%edx
	addl $-12,%esp
	movl 8(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl %eax,-44(%ebp)
	addl $32,%esp
	subl $1,-44(%ebp)
	cmpl %edx,-40(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %edx
	movl -40(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L1837
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L1837
	movl -8(%ebp),%edx
	cmpl %edx,-44(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %edx
	movl -44(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L1837
	movl -16(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L1837
	movl -4(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -20(%ebp),%eax
	pushl %eax
	call _max__1ME
	movl -12(%ebp),%edx
	movl %eax,-20(%ebp)
	addl $-8,%esp
	pushl %edx
	movl -40(%ebp),%eax
	pushl %eax
	call _min__TNE
	movl -8(%ebp),%edx
	movl %eax,-40(%ebp)
	addl $32,%esp
	addl $-8,%esp
	pushl %edx
	movl -24(%ebp),%eax
	pushl %eax
	call _max__1ME
	movl -16(%ebp),%edx
	movl %eax,-24(%ebp)
	addl $-8,%esp
	pushl %edx
	movl -44(%ebp),%eax
	pushl %eax
	call _min__TNE
	movl %eax,-44(%ebp)
	addl $32,%esp
	call _clone__1OE
	movl 8(%ebp),%edx
	movl 8(%ebp),%ebx
	movl %edx,8(%eax)
	movl %eax,56(%edx)
	jmp L1900
	.p2align 2
L1902:
	testl %eax,%eax
	jne L1923
L1900:
	movl (%ebx),%ecx
	cmpl $28,%ecx
	je L1855
	ja L1859
	cmpl $17,%ecx
	je L1856
	jmp L1852
	.p2align 2
L1859:
	cmpl $78,%ecx
	je L1856
	cmpl $79,%ecx
	jne L1852
	movl 48(%ebx),%eax
	movl %eax,-28(%ebp)
	jmp L1852
	.p2align 2
L1855:
	movl 44(%ebx),%eax
	movl %eax,-28(%ebp)
	jmp L1852
	.p2align 2
L1856:
	movl 48(%ebx),%edx
	movl %edx,-28(%ebp)
L1852:
	movl -28(%ebp),%eax
L1860:
	testl %eax,%eax
	je L1861
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L1862
	jmp *L1874(,%edx,4)
	.p2align 2
L1874:
	.long L1873
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1870
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1862
	.long L1873
	.long L1873
	.long L1873
	.long L1862
	.long L1873
	.long L1873
	.long L1873
	.long L1873
	.long L1872
	.long L1873
	.p2align 2
L1870:
	movl 52(%eax),%esi
	jmp L1862
	.p2align 2
L1872:
L1873:
	movl 56(%eax),%esi
L1862:
	testl %esi,%esi
	sete %dl
	jmp L1876
	.p2align 2
L1861:
	movb $0,%dl
L1876:
	testb %dl,%dl
	je L1877
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L1878
	jmp *L1890(,%edx,4)
	.p2align 2
L1890:
	.long L1889
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1886
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1878
	.long L1889
	.long L1889
	.long L1889
	.long L1878
	.long L1889
	.long L1889
	.long L1889
	.long L1889
	.long L1888
	.long L1889
	.p2align 2
L1886:
	movl 44(%eax),%edi
	jmp L1878
	.p2align 2
L1888:
L1889:
	movl 48(%eax),%edi
L1878:
	movl %edi,%eax
	jmp L1860
	.p2align 2
L1877:
	cmpl $28,%ecx
	je L1895
	ja L1899
	cmpl $17,%ecx
	je L1896
	jmp L1892
	.p2align 2
L1899:
	cmpl $78,%ecx
	je L1896
	cmpl $79,%ecx
	jne L1892
	jmp L1896
	.p2align 2
L1895:
	movl 36(%ebx),%ebx
	jmp L1925
	.p2align 2
L1896:
	movl 40(%ebx),%ebx
L1925:
	movl %ebx,-32(%ebp)
L1892:
	movl -32(%ebp),%ebx
	testl %ebx,%ebx
	jne L1902
	testl %eax,%eax
	je L1903
L1923:
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L1904
	jmp *L1916(,%edx,4)
	.p2align 2
L1916:
	.long L1915
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1912
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1904
	.long L1915
	.long L1915
	.long L1915
	.long L1904
	.long L1915
	.long L1915
	.long L1915
	.long L1915
	.long L1914
	.long L1915
	.p2align 2
L1912:
	movl 52(%eax),%eax
	jmp L1926
	.p2align 2
L1914:
L1915:
	movl 56(%eax),%eax
L1926:
	movl %eax,-36(%ebp)
L1904:
	movl -36(%ebp),%ebx
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_prev__HWI
	movl 28(%ebx),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_next__QWI
	movl 8(%ebp),%edx
	addl $32,%esp
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	pushl %ebx
	call _set_next__QWI
	addl $-8,%esp
	addl $-8,%esp
	addl $16,%esp
	pushl $1
	movl 4(%ebx),%eax
	pushl %eax
	call ___infix_add__Q5B
	pushl %eax
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_level__QTE
	addl $32,%esp
	jmp L1919
	.p2align 2
L1903:
	movl _list_plan__J3,%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_next__QWI
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $16,%esp
	movl 56(%edx),%eax
	movl %eax,_list_plan__J3
	pushl $1
	pushl %eax
	call _set_level__QTE
	addl $16,%esp
L1919:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 28(%eax),%ebx
	testl %ebx,%ebx
	je L1921
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _set_prev__HWI
	addl $-12,%esp
	pushl %ebx
	call _inc_level__XXI
	addl $32,%esp
L1921:
	addl $-8,%esp
	pushl $1
	movl -44(%ebp),%eax
	pushl %eax
	call ___infix_add__Q5B
	movl 8(%ebp),%edx
	movl %eax,-44(%ebp)
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call _create__plan__VUE
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_x0__HXE
	movl _list_x__K3,%eax
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _append__E1E
	movl %eax,_list_x__K3
	movl 8(%ebp),%edx
	addl $32,%esp
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -40(%ebp),%eax
	pushl %eax
	call _create__plan__VUE
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_x1__90E
	movl 8(%ebp),%edx
	addl $32,%esp
	movl 56(%edx),%eax
	addl $-8,%esp
	movl 12(%eax),%eax
	pushl %eax
	pushl %ebx
	call _append__E1E
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call _create_top__plan__74E
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_y0__W7E
	movl _list_y__L3,%eax
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _append__GBF
	movl %eax,_list_y__L3
	movl 8(%ebp),%edx
	addl $32,%esp
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -44(%ebp),%eax
	pushl %eax
	call _create_bottom__plan__PAF
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_y1__BBF
	movl 8(%ebp),%edx
	addl $32,%esp
	movl 56(%edx),%eax
	addl $-8,%esp
	movl 20(%eax),%eax
	pushl %eax
	pushl %ebx
	call _append__GBF
L1837:
	leal -72(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_append_plan__13S:
	pushl %ebp
	movl %esp,%ebp
	subl $60,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 40(%eax),%edx
	testl %edx,%edx
	je L1964
	movl (%edx),%eax
	cmpl $28,%eax
	je L1966
	ja L1971
	cmpl $17,%eax
	je L1967
	jmp L1965
	.p2align 2
L1971:
	cmpl $78,%eax
	je L1968
	jmp L1965
	.p2align 2
L1966:
	movl 52(%edx),%ecx
	jmp L1965
	.p2align 2
L1967:
L1968:
	movl 56(%edx),%ecx
L1965:
	movl %ecx,%ebx
	testl %ebx,%ebx
	je L1986
	movl 12(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-4(%ebp)
	movl 16(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-12(%ebp)
	movl 20(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-8(%ebp)
	movl 24(%ebx),%eax
	movl (%eax),%eax
	decl %eax
	jmp L2075
	.p2align 2
L1964:
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L1978
	movl 12(%eax),%edx
	jmp L1979
	.p2align 2
L1978:
	movl 8(%eax),%edx
L1979:
	subl $1,%edx
	movl %edx,-12(%ebp)
	cmpl $16,(%eax)
	jne L1982
	movl 8(%eax),%eax
	jmp L1983
	.p2align 2
L1982:
	movl 4(%eax),%eax
L1983:
	subl $1,%eax
L2075:
	movl %eax,-16(%ebp)
	movb $0,%al
	testb %al,%al
	jne L1986
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 64(%edx),%edx
	movl %edx,-20(%ebp)
	movl 8(%ebp),%edx
	addl $-12,%esp
	movl 12(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-40(%ebp)
	addl $32,%esp
	subl $1,-40(%ebp)
	addl $-8,%esp
	movl 68(%edx),%edx
	movl %edx,-24(%ebp)
	movl 8(%ebp),%edx
	addl $-12,%esp
	movl 8(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl %eax,-44(%ebp)
	addl $32,%esp
	subl $1,-44(%ebp)
	cmpl %edx,-40(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %edx
	movl -40(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L1986
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L1986
	movl -8(%ebp),%edx
	cmpl %edx,-44(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %edx
	movl -44(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L1986
	movl -16(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L1986
	movl -4(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -20(%ebp),%eax
	pushl %eax
	call _max__1ME
	movl -12(%ebp),%edx
	movl %eax,-20(%ebp)
	addl $-8,%esp
	pushl %edx
	movl -40(%ebp),%eax
	pushl %eax
	call _min__TNE
	movl -8(%ebp),%edx
	movl %eax,-40(%ebp)
	addl $32,%esp
	addl $-8,%esp
	pushl %edx
	movl -24(%ebp),%eax
	pushl %eax
	call _max__1ME
	movl -16(%ebp),%edx
	movl %eax,-24(%ebp)
	addl $-8,%esp
	pushl %edx
	movl -44(%ebp),%eax
	pushl %eax
	call _min__TNE
	movl %eax,-44(%ebp)
	addl $32,%esp
	call _clone__1OE
	movl 8(%ebp),%edx
	movl 8(%ebp),%ebx
	movl %edx,8(%eax)
	movl %eax,56(%edx)
	jmp L2049
	.p2align 2
L2051:
	testl %eax,%eax
	jne L2074
L2049:
	movl (%ebx),%ecx
	cmpl $28,%ecx
	je L2004
	ja L2008
	cmpl $17,%ecx
	je L2005
	jmp L2001
	.p2align 2
L2008:
	cmpl $78,%ecx
	je L2005
	cmpl $80,%ecx
	jne L2001
	movl 48(%ebx),%eax
	movl %eax,-28(%ebp)
	jmp L2001
	.p2align 2
L2004:
	movl 44(%ebx),%eax
	movl %eax,-28(%ebp)
	jmp L2001
	.p2align 2
L2005:
	movl 48(%ebx),%edx
	movl %edx,-28(%ebp)
L2001:
	movl -28(%ebp),%eax
L2009:
	testl %eax,%eax
	je L2010
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L2011
	jmp *L2023(,%edx,4)
	.p2align 2
L2023:
	.long L2022
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2020
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2011
	.long L2022
	.long L2022
	.long L2022
	.long L2011
	.long L2022
	.long L2022
	.long L2022
	.long L2022
	.long L2021
	.long L2022
	.p2align 2
L2020:
	movl 52(%eax),%esi
	jmp L2011
	.p2align 2
L2021:
L2022:
	movl 56(%eax),%esi
L2011:
	testl %esi,%esi
	sete %dl
	jmp L2025
	.p2align 2
L2010:
	movb $0,%dl
L2025:
	testb %dl,%dl
	je L2026
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L2027
	jmp *L2039(,%edx,4)
	.p2align 2
L2039:
	.long L2038
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2036
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2027
	.long L2038
	.long L2038
	.long L2038
	.long L2027
	.long L2038
	.long L2038
	.long L2038
	.long L2038
	.long L2037
	.long L2038
	.p2align 2
L2036:
	movl 44(%eax),%edi
	jmp L2027
	.p2align 2
L2037:
L2038:
	movl 48(%eax),%edi
L2027:
	movl %edi,%eax
	jmp L2009
	.p2align 2
L2026:
	cmpl $28,%ecx
	je L2044
	ja L2048
	cmpl $17,%ecx
	je L2045
	jmp L2041
	.p2align 2
L2048:
	cmpl $78,%ecx
	je L2045
	cmpl $80,%ecx
	jne L2041
	jmp L2045
	.p2align 2
L2044:
	movl 36(%ebx),%ebx
	jmp L2076
	.p2align 2
L2045:
	movl 40(%ebx),%ebx
L2076:
	movl %ebx,-32(%ebp)
L2041:
	movl -32(%ebp),%ebx
	testl %ebx,%ebx
	jne L2051
	testl %eax,%eax
	je L2052
L2074:
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L2053
	jmp *L2065(,%edx,4)
	.p2align 2
L2065:
	.long L2064
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2062
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2053
	.long L2064
	.long L2064
	.long L2064
	.long L2053
	.long L2064
	.long L2064
	.long L2064
	.long L2064
	.long L2063
	.long L2064
	.p2align 2
L2062:
	movl 52(%eax),%eax
	jmp L2077
	.p2align 2
L2063:
L2064:
	movl 56(%eax),%eax
L2077:
	movl %eax,-36(%ebp)
L2053:
	movl -36(%ebp),%ebx
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_prev__HWI
	movl 28(%ebx),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_next__QWI
	movl 8(%ebp),%edx
	addl $32,%esp
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	pushl %ebx
	call _set_next__QWI
	movl 4(%ebx),%ebx
	addl $-8,%esp
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	jmp L2078
	.p2align 2
L2052:
	movl _list_plan__J3,%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_next__QWI
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $16,%esp
	movl 56(%edx),%eax
	movl %eax,_list_plan__J3
	pushl $1
L2078:
	pushl %eax
	call _set_level__QTE
	addl $16,%esp
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 28(%eax),%ebx
	testl %ebx,%ebx
	je L2071
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _set_prev__HWI
	addl $-12,%esp
	pushl %ebx
	call _inc_level__XXI
	addl $32,%esp
L2071:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -44(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-44(%ebp)
	addl $32,%esp
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call _create__plan__VUE
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_x0__HXE
	movl _list_x__K3,%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _append__E1E
	movl %eax,_list_x__K3
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -40(%ebp),%eax
	pushl %eax
	call _create__plan__VUE
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_x1__90E
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	addl $-8,%esp
	movl 12(%eax),%eax
	pushl %eax
	pushl %ebx
	call _append__E1E
	movl 8(%ebp),%edx
	addl $32,%esp
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call _create_top__plan__74E
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_y0__W7E
	movl _list_y__L3,%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _append__GBF
	movl %eax,_list_y__L3
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -44(%ebp),%eax
	pushl %eax
	call _create_bottom__plan__PAF
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_y1__BBF
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	addl $-8,%esp
	movl 20(%eax),%eax
	pushl %eax
	pushl %ebx
	call _append__GBF
L1986:
	leal -72(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clip_next_child__9IT:
	pushl %ebp
	movl %esp,%ebp
	subl $76,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl $0,-32(%ebp)
	movl $0,60(%eax)
	movl 56(%eax),%edx
	testl %edx,%edx
	je L2080
	movl 12(%edx),%eax
	movl (%eax),%eax
	movl %eax,-16(%ebp)
	movl 16(%edx),%eax
	movl (%eax),%eax
	movl %eax,-20(%ebp)
	movl 20(%edx),%eax
	movl (%eax),%eax
	movl %eax,-24(%ebp)
	movl 24(%edx),%eax
	movl 8(%ebp),%edx
	movl (%eax),%eax
	movl %eax,-28(%ebp)
	movl 44(%edx),%edx
	movl %edx,-48(%ebp)
	testl %edx,%edx
	je L2082
	.p2align 2
L2083:
	movl -48(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L2084
	jmp *L2096(,%eax,4)
	.p2align 2
L2096:
	.long L2095
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2094
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2084
	.long L2095
	.long L2095
	.long L2092
	.long L2084
	.long L2095
	.long L2095
	.long L2092
	.long L2092
	.long L2095
	.long L2092
	.p2align 2
L2092:
	movl -48(%ebp),%edx
	movl 56(%edx),%ebx
	jmp L2084
	.p2align 2
L2094:
	movl -48(%ebp),%edx
	movl 52(%edx),%ebx
	jmp L2084
	.p2align 2
L2095:
	movl -48(%ebp),%eax
	movl 56(%eax),%ebx
L2084:
	movl %ebx,%edi
	testl %edi,%edi
	je L2098
	addl $-12,%esp
	pushl %edi
	call _active_y__65I
	addl $16,%esp
L2098:
	movl -48(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L2099
	jmp *L2111(,%eax,4)
	.p2align 2
L2111:
	.long L2110
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2109
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2099
	.long L2110
	.long L2110
	.long L2107
	.long L2099
	.long L2110
	.long L2110
	.long L2107
	.long L2107
	.long L2110
	.long L2107
	.p2align 2
L2107:
	movl -48(%ebp),%edx
	movl 52(%edx),%esi
	jmp L2099
	.p2align 2
L2109:
	movl -48(%ebp),%edx
	movl 48(%edx),%esi
	jmp L2099
	.p2align 2
L2110:
	movl -48(%ebp),%eax
	movl 52(%eax),%esi
L2099:
	movl %esi,-48(%ebp)
	testl %esi,%esi
	jne L2083
L2082:
	movl 8(%ebp),%edx
	movl %edx,-48(%ebp)
	.p2align 2
L2181:
	movl -48(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L2117
	jmp *L2129(,%eax,4)
	.p2align 2
L2129:
	.long L2128
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2127
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2117
	.long L2128
	.long L2128
	.long L2125
	.long L2117
	.long L2128
	.long L2128
	.long L2125
	.long L2125
	.long L2128
	.long L2125
	.p2align 2
L2125:
	movl -48(%ebp),%edx
	movl 48(%edx),%edx
	movl %edx,-12(%ebp)
	jmp L2117
	.p2align 2
L2127:
	movl -48(%ebp),%edx
	movl 44(%edx),%edx
	movl %edx,-12(%ebp)
	jmp L2117
	.p2align 2
L2128:
	movl -48(%ebp),%eax
	movl 48(%eax),%eax
	movl %eax,-12(%ebp)
L2117:
	movl -12(%ebp),%esi
	testl %esi,%esi
	je L2132
	.p2align 2
L2133:
	movl (%esi),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L2134
	jmp *L2146(,%eax,4)
	.p2align 2
L2146:
	.long L2145
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2143
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2134
	.long L2144
	.long L2145
	.long L2144
	.long L2134
	.long L2144
	.long L2144
	.long L2145
	.long L2145
	.long L2144
	.long L2145
	.p2align 2
L2143:
	movl 52(%esi),%edx
	jmp L2268
	.p2align 2
L2144:
	movl 56(%esi),%eax
	movl %eax,-4(%ebp)
	jmp L2134
	.p2align 2
L2145:
	movl 56(%esi),%edx
L2268:
	movl %edx,-4(%ebp)
L2134:
	movl -4(%ebp),%edi
	testl %edi,%edi
	je L2148
	movl -20(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 12(%edi),%eax
	movl (%eax),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L2148
	movl 16(%edi),%eax
	movl -16(%ebp),%edx
	addl $-8,%esp
	movl (%eax),%eax
	cmpl -16(%ebp),%eax
	setg %bl
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L2148
	movl -28(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 20(%edi),%eax
	movl (%eax),%eax
	pushl %eax
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	je L2148
	movl 24(%edi),%eax
	movl -24(%ebp),%edx
	cmpl %edx,(%eax)
	jle L2148
	addl $-12,%esp
	pushl %edi
	call _active_y__65I
	addl $16,%esp
L2148:
	movl (%esi),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L2152
	jmp *L2164(,%eax,4)
	.p2align 2
L2164:
	.long L2163
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2161
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2152
	.long L2163
	.long L2163
	.long L2163
	.long L2152
	.long L2163
	.long L2163
	.long L2163
	.long L2163
	.long L2162
	.long L2163
	.p2align 2
L2161:
	movl 44(%esi),%esi
	jmp L2269
	.p2align 2
L2162:
L2163:
	movl 48(%esi),%esi
L2269:
	movl %esi,-8(%ebp)
L2152:
	movl -8(%ebp),%esi
	testl %esi,%esi
	jne L2133
L2132:
	movl -48(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L2167
	jmp *L2179(,%eax,4)
	.p2align 2
L2179:
	.long L2178
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2177
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2167
	.long L2178
	.long L2178
	.long L2175
	.long L2167
	.long L2178
	.long L2178
	.long L2175
	.long L2175
	.long L2178
	.long L2175
	.p2align 2
L2175:
	movl -48(%ebp),%edx
	movl 40(%edx),%edx
	movl %edx,-40(%ebp)
	jmp L2167
	.p2align 2
L2177:
	movl -48(%ebp),%edx
	movl 36(%edx),%edx
	movl %edx,-40(%ebp)
	jmp L2167
	.p2align 2
L2178:
	movl -48(%ebp),%eax
	movl 40(%eax),%eax
	movl %eax,-40(%ebp)
L2167:
	movl -40(%ebp),%edx
	movl %edx,-48(%ebp)
	testl %edx,%edx
	jne L2181
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__S8F
	movl _list_y__L3,%esi
	movl $0,_first_clip__P3
	movl -24(%ebp),%eax
	movl %eax,-56(%ebp)
	addl $16,%esp
	testl %esi,%esi
	je L2080
	jmp L2270
	.p2align 2
L2187:
	movl 12(%esi),%esi
	testl %esi,%esi
	je L2266
L2270:
	movl 4(%esi),%eax
	cmpb $0,1(%eax)
	je L2187
	testl %esi,%esi
	jne L2190
L2266:
	movl -28(%ebp),%edx
	movl %edx,-60(%ebp)
	jmp L2271
	.p2align 2
L2190:
	movl (%esi),%eax
	movl -28(%ebp),%edx
	movl %eax,-32(%ebp)
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call _min__TNE
	movl %eax,-60(%ebp)
	addl $16,%esp
L2271:
	subl $1,-60(%ebp)
	movl -60(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl -56(%ebp),%edx
	pushl %edx
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L2196
	movl _first_clip__P3,%eax
	movl %eax,_top_clip__Q3
	movl _list_x__K3,%eax
	movl $0,_last_clip__O3
	movl -16(%ebp),%edx
	movl %eax,-44(%ebp)
	movl 8(%ebp),%eax
	movl $0,-36(%ebp)
	movl %edx,-52(%ebp)
	movl %eax,-48(%ebp)
	.p2align 2
L2222:
	movl -44(%ebp),%edx
	movl 4(%edx),%edi
	cmpb $0,(%edi)
	je L2201
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	movl 8(%eax),%eax
	pushl %eax
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	jne L2203
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	addl $16,%esp
	testl %eax,%eax
	jne L2202
L2203:
	movl 4(%edi),%eax
	addl $-4,%esp
	pushl %eax
	pushl %edi
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__L7O
	movl -36(%ebp),%eax
	addl $16,%esp
	cmpl %eax,4(%edi)
	jle L2201
	movl -20(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -44(%ebp),%edx
	movl (%edx),%eax
	decl %eax
	pushl %eax
	call _min__TNE
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl -52(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $32,%esp
	testb %al,%al
	je L2208
	movl -60(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %ebx
	movl -56(%ebp),%eax
	pushl %eax
	movl -52(%ebp),%edx
	pushl %edx
	movl -48(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _add_clip__from__to__1YT
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,-52(%ebp)
	addl $32,%esp
L2208:
	movl 4(%edi),%eax
	movl %eax,-36(%ebp)
	movl 8(%edi),%edi
	movl %edi,-48(%ebp)
	jmp L2201
	.p2align 2
L2202:
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__ZSP
	movl -36(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl 4(%edi),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	addl $32,%esp
	testb %al,%al
	je L2201
	movl -20(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl -44(%ebp),%edx
	movl (%edx),%eax
	pushl %eax
	call _min__TNE
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl -52(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $32,%esp
	testb %al,%al
	je L2221
	movl -60(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %ebx
	movl -56(%ebp),%eax
	pushl %eax
	movl -52(%ebp),%edx
	pushl %edx
	movl -48(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _add_clip__from__to__1YT
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,-52(%ebp)
	addl $32,%esp
	.p2align 2
L2221:
	subl $1,-36(%ebp)
	movl -36(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	addl $16,%esp
	testl %eax,%eax
	je L2221
	movl -36(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	movl 8(%eax),%eax
	movl %eax,-48(%ebp)
	addl $16,%esp
L2201:
	movl -44(%ebp),%eax
	movl 8(%eax),%eax
	movl %eax,-44(%ebp)
	testl %eax,%eax
	jne L2222
	movl -20(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -52(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L2223
	movl -60(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -20(%ebp),%eax
	pushl %eax
	movl -56(%ebp),%edx
	pushl %edx
	movl -52(%ebp),%eax
	pushl %eax
	movl -48(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _add_clip__from__to__1YT
	addl $32,%esp
L2223:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -60(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl %eax,-56(%ebp)
	addl $32,%esp
L2196:
	testl %esi,%esi
	je L2080
	.p2align 2
L2233:
	movl 4(%esi),%edi
	cmpb $0,1(%edi)
	je L2230
	cmpb $0,8(%esi)
	je L2231
	addl $-12,%esp
	pushl %edi
	call _active_x__IMJ
	addl $16,%esp
	jmp L2230
	.p2align 2
L2231:
	addl $-12,%esp
	pushl %edi
	call _desactive_y__SMJ
	addl $-12,%esp
	pushl %edi
	call _desactive_x__WMJ
	addl $32,%esp
L2230:
	movl 12(%esi),%esi
	testl %esi,%esi
	je L2080
	movl -32(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl (%esi),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	addl $16,%esp
	testb %al,%al
	jne L2233
	jmp L2270
	.p2align 2
L2080:
	movl 8(%ebp),%edx
	movl 52(%edx),%eax
	testl %eax,%eax
	je L2236
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L2236
	jmp *L2249(,%edx,4)
	.p2align 2
L2249:
	.long L2239
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2248
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2236
	.long L2243
	.long L2238
	.long L2246
	.long L2236
	.long L2241
	.long L2245
	.long L2242
	.long L2240
	.long L2247
	.long L2244
	.p2align 2
L2238:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__SRO
	jmp L2272
	.p2align 2
L2239:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__N0I
	jmp L2272
	.p2align 2
L2240:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__UJQB
	jmp L2272
	.p2align 2
L2241:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__XZY
	jmp L2272
	.p2align 2
L2242:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__HHLB
	jmp L2272
	.p2align 2
L2243:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__MW5B
	jmp L2272
	.p2align 2
L2244:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__FVZB
	jmp L2272
	.p2align 2
L2245:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__JKIB
	jmp L2272
	.p2align 2
L2246:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__9IT
	jmp L2272
	.p2align 2
L2247:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__RFVB
	jmp L2272
	.p2align 2
L2248:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__BEF
L2272:
	addl $16,%esp
L2236:
	movl 8(%ebp),%edx
	movl 44(%edx),%eax
	testl %eax,%eax
	je L2251
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L2251
	jmp *L2264(,%edx,4)
	.p2align 2
L2264:
	.long L2255
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2262
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2251
	.long L2259
	.long L2253
	.long L2254
	.long L2251
	.long L2257
	.long L2261
	.long L2258
	.long L2256
	.long L2263
	.long L2260
	.p2align 2
L2253:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__SRO
	jmp L2251
	.p2align 2
L2254:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__9IT
	jmp L2251
	.p2align 2
L2255:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__N0I
	jmp L2251
	.p2align 2
L2256:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__UJQB
	jmp L2251
	.p2align 2
L2257:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__XZY
	jmp L2251
	.p2align 2
L2258:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__HHLB
	jmp L2251
	.p2align 2
L2259:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__MW5B
	jmp L2251
	.p2align 2
L2260:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__FVZB
	jmp L2251
	.p2align 2
L2261:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__JKIB
	jmp L2251
	.p2align 2
L2262:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__BEF
	jmp L2251
	.p2align 2
L2263:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__RFVB
L2251:
	leal -88(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_create_in__at__label__action__list__EWX:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl _parent_video__C2,%eax
	movl 20(%ebp),%edi
	call _clone__UWX
	movl %eax,%esi
	movl %edi,84(%esi)
	cmpl $0,4(%edi)
	jne L2283
	addl $-12,%esp
	pushl %esi
	call _create__next__D2X
	movl %eax,4(%edi)
	addl $16,%esp
	movl $1,(%edi)
	movl %eax,8(%edi)
	movl $1,12(%edi)
	movl %eax,16(%edi)
	jmp L2286
	.p2align 2
L2283:
	addl $-12,%esp
	pushl %esi
	call _create__next__D2X
	movl %eax,-4(%ebp)
	movl 8(%edi),%eax
	movl -4(%ebp),%edx
	movl %edx,4(%eax)
	movl (%edi),%ebx
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,(%edi)
	movl -4(%ebp),%eax
	addl $32,%esp
	movl %eax,8(%edi)
L2286:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L2289
	movl 16(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	jmp L2329
	.p2align 2
L2289:
	movl 16(%ebp),%eax
	addl $-12,%esp
	pushl %eax
L2329:
	call _font_width__B8X
	movl %eax,%ebx
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $20
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 16(%ebp),%edx
	movl %edx,72(%esi)
	movl $0,76(%esi)
	movl $_MY_WIN__,80(%esi)
	movl $_INTERFACE__,40(%esi)
	movl _INTERFACE__+64,%ebx
	movl %eax,%edi
	movl 8(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,64(%esi)
	movl _INTERFACE__+68,%ebx
	movl 12(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,68(%esi)
	movl _INTERFACE__+44,%eax
	addl $32,%esp
	movl %eax,52(%esi)
	testl %eax,%eax
	je L2297
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L2297
	jmp *L2310(,%edx,4)
	.p2align 2
L2310:
	.long L2308
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2309
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2297
	.long L2308
	.long L2308
	.long L2308
	.long L2297
	.long L2308
	.long L2307
	.long L2308
	.long L2308
	.long L2308
	.long L2308
	.p2align 2
L2307:
L2308:
	movl %esi,48(%eax)
	jmp L2297
	.p2align 2
L2309:
	movl %esi,44(%eax)
L2297:
	movl 40(%esi),%edx
	movl (%edx),%eax
	cmpl $28,%eax
	je L2313
	ja L2318
	cmpl $17,%eax
	je L2314
	jmp L2312
	.p2align 2
L2318:
	cmpl $78,%eax
	je L2315
	jmp L2312
	.p2align 2
L2313:
	movl %esi,40(%edx)
	jmp L2312
	.p2align 2
L2314:
L2315:
	movl %esi,44(%edx)
L2312:
	movl _parent_video__C2,%eax
	movl $0,48(%esi)
	movl $0,44(%esi)
	movl $0,60(%esi)
	movl $0,56(%esi)
	movl $16,8(%esi)
	movl %edi,12(%esi)
	addl $-12,%esp
	pushl %esi
	call _clipping_off__8IY
	addl $16,%esp
	addl $-12,%esp
	pushl %esi
	call _append_plan__JKY
	addl $-12,%esp
	pushl %esi
	call _clip_next_child__XZY
	movl 40(%esi),%edx
	addl $32,%esp
	testl %edx,%edx
	je L2321
	movl (%edx),%eax
	cmpl $28,%eax
	je L2323
	ja L2328
	cmpl $17,%eax
	je L2324
	jmp L2321
	.p2align 2
L2328:
	cmpl $78,%eax
	je L2325
	jmp L2321
	.p2align 2
L2323:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__MEF
	jmp L2330
	.p2align 2
L2324:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__Z0I
	jmp L2330
	.p2align 2
L2325:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__YW5B
L2330:
	addl $16,%esp
L2321:
	addl $-12,%esp
	pushl %esi
	call _refresh__OVZ
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_entry__226:
	pushl %ebp
	movl %esp,%ebp
	subl $108,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-52(%ebp)
	movl _alias__Q26,%ebx
	addl $-8,%esp
	movl 4(%ebx),%eax
	pushl %eax
	addl $-12,%esp
	pushl %edi
	call _hash_code__IB8
	addl $16,%esp
	pushl %eax
	call ___infix_mod__YG8
	addl $-8,%esp
	pushl %eax
	movl (%ebx),%eax
	pushl %eax
	call _item__IH8
	movl %eax,%ebx
	addl $32,%esp
	jmp L2341
	.p2align 2
L2343:
	movl 8(%ebx),%ebx
L2341:
	testl %ebx,%ebx
	je L2346
	addl $-8,%esp
	pushl %edi
	movl 4(%ebx),%eax
	pushl %eax
	call ___infix_equal_equal__4GWC
	addl $16,%esp
	testb %al,%al
	je L2343
	movl _alias__Q26,%ebx
	addl $-8,%esp
	movl 4(%ebx),%eax
	pushl %eax
	addl $-12,%esp
	pushl %edi
	call _hash_code__IB8
	addl $16,%esp
	pushl %eax
	call ___infix_mod__YG8
	addl $-8,%esp
	pushl %eax
	movl (%ebx),%eax
	pushl %eax
	call _item__IH8
	movl %eax,%ebx
	addl $32,%esp
	jmp L2347
	.p2align 2
L2349:
	movl 8(%ebx),%ebx
L2347:
	addl $-8,%esp
	pushl %edi
	movl 4(%ebx),%eax
	pushl %eax
	call ___infix_equal_equal__4GWC
	addl $16,%esp
	testb %al,%al
	je L2349
	movl (%ebx),%ebx
	movl %ebx,-52(%ebp)
	jmp L2351
	.p2align 2
L2346:
	addl $-12,%esp
	pushl $28
	call _allocation__C7
	movl %eax,-72(%ebp)
	addl $-4,%esp
	pushl $28
	pushl $_ENTRY__
	pushl %eax
	call _copy__from__size__NPD
	movl -72(%ebp),%edx
	movl %edx,-56(%ebp)
	addl $32,%esp
	call _clone__OYK
	movl 4(%edi),%ebx
	movl %eax,%esi
	testl %ebx,%ebx
	je L2354
	addl $-12,%esp
	pushl %ebx
	call _calloc__3O8
	movl %eax,(%esi)
	addl $-4,%esp
	addl $16,%esp
	movl %ebx,%eax
	subl $1,%eax
	pushl %eax
	movl (%edi),%eax
	pushl %eax
	movl (%esi),%eax
	pushl %eax
	call _copy_from__until__5V8
	movl %ebx,4(%esi)
	addl $16,%esp
L2354:
	movl -72(%ebp),%eax
	movl %esi,(%eax)
	movl 4(%esi),%eax
	addl $-8,%esp
	addl $-12,%esp
	addl $-8,%esp
	decl %eax
	pushl %eax
	movl (%esi),%eax
	pushl %eax
	call _fast_reverse_index_of__from__2Z8
	pushl %eax
	call _to_numeric__4VD
	pushl %eax
	pushl $1
	call ___infix_add__I28
	addl $48,%esp
	movl %eax,%ebx
	addl $-4,%esp
	addl $-8,%esp
	pushl %ebx
	movl -72(%ebp),%edx
	movl (%edx),%eax
	movl 4(%eax),%eax
	pushl %eax
	call ___infix_sub__F6B
	pushl %eax
	movl -72(%ebp),%edx
	movl (%edx),%eax
	addl (%eax),%ebx
	pushl %ebx
	movl %edx,%eax
	addl $4,%eax
	pushl %eax
	call _set_storage__count__Z0K
	movl -72(%ebp),%edx
	addl $32,%esp
	addl $-12,%esp
	movl (%edx),%eax
	pushl %eax
	call _to_external__I48
	addl $-8,%esp
	leal -48(%ebp),%ebx
	pushl %ebx
	pushl %eax
	call _stat
	addl $32,%esp
	testl %eax,%eax
	jne L2351
	movl -28(%ebp),%eax
	movl -72(%ebp),%edx
	andl $61440,%eax
	cmpl $12288,%eax
	sete %al
	movb %al,16(%edx)
	addl $-12,%esp
	pushl %ebx
	call _localtime
	movl %eax,%ebx
	addl $-12,%esp
	pushl %ebx
	call _to_date__ZT9
	addl $32,%esp
	addl $-12,%esp
	pushl %ebx
	call _to_time__729
	addl $-12,%esp
	leal -24(%ebp),%eax
	pushl %eax
	call _localtime
	movl %eax,%ebx
	addl $32,%esp
	addl $-12,%esp
	pushl %ebx
	call _to_date__ZT9
	addl $-12,%esp
	pushl %ebx
	call _to_time__729
	movl -16(%ebp),%eax
	movl -72(%ebp),%edx
	movl _alias__Q26,%edi
	movl %eax,20(%edx)
	addl $32,%esp
	addl $-12,%esp
	movl (%edx),%eax
	movl %eax,-60(%ebp)
	pushl %eax
	call _hash_code__IB8
	movl %eax,-76(%ebp)
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl -76(%ebp),%edx
	pushl %edx
	call ___infix_mod__YG8
	movl %eax,-80(%ebp)
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	movl (%edi),%eax
	pushl %eax
	call _item__IH8
	movl %eax,%ebx
	addl $16,%esp
	jmp L2365
	.p2align 2
L2367:
	movl 8(%ebx),%ebx
L2365:
	testl %ebx,%ebx
	je L2406
	movl -60(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 4(%ebx),%eax
	pushl %eax
	call ___infix_equal_equal__4GWC
	addl $16,%esp
	testb %al,%al
	je L2367
	jmp L2370
	.p2align 2
L2406:
	movl 4(%edi),%esi
	cmpl 8(%edi),%esi
	jne L2371
	movl (%edi),%edx
	movl %edx,-64(%ebp)
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	call _prime_number_ceiling__PA7
	movl %eax,%ebx
	addl $-12,%esp
	pushl %ebx
	call _calloc__N17
	movl %eax,(%edi)
	movl %ebx,4(%edi)
	addl $32,%esp
	subl $1,%esi
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L2377
	addl $-8,%esp
	pushl %esi
	movl -64(%ebp),%eax
	pushl %eax
	call _item__IH8
	movl %eax,%ebx
	addl $16,%esp
	subl $1,%esi
	movl %esi,-84(%ebp)
	testl %ebx,%ebx
	je L2381
	.p2align 2
L2382:
	movl 8(%ebx),%edx
	movl %edx,-68(%ebp)
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl 4(%ebx),%eax
	addl $-12,%esp
	pushl %eax
	call _hash_code__IB8
	addl $16,%esp
	pushl %eax
	call ___infix_mod__YG8
	movl %eax,%esi
	addl $-8,%esp
	addl $-8,%esp
	pushl %esi
	movl (%edi),%eax
	pushl %eax
	call _item__IH8
	pushl %eax
	pushl %ebx
	call _set_next__KJWC
	addl $48,%esp
	addl $-4,%esp
	pushl %esi
	pushl %ebx
	movl (%edi),%eax
	pushl %eax
	call _put__to__947
	movl -68(%ebp),%ebx
	addl $16,%esp
	testl %ebx,%ebx
	jne L2382
L2381:
	movl -84(%ebp),%esi
	jmp L2386
	.p2align 2
L2388:
	addl $-8,%esp
	pushl %esi
	movl -64(%ebp),%eax
	pushl %eax
	call _item__IH8
	movl %eax,%ebx
	addl $16,%esp
	subl $1,%esi
	movl %esi,-88(%ebp)
	testl %ebx,%ebx
	je L2392
	.p2align 2
L2393:
	movl 8(%ebx),%edx
	movl %edx,-68(%ebp)
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl 4(%ebx),%eax
	addl $-12,%esp
	pushl %eax
	call _hash_code__IB8
	addl $16,%esp
	pushl %eax
	call ___infix_mod__YG8
	movl %eax,%esi
	addl $-8,%esp
	addl $-8,%esp
	pushl %esi
	movl (%edi),%eax
	pushl %eax
	call _item__IH8
	pushl %eax
	pushl %ebx
	call _set_next__KJWC
	addl $48,%esp
	addl $-4,%esp
	pushl %esi
	pushl %ebx
	movl (%edi),%eax
	pushl %eax
	call _put__to__947
	movl -68(%ebp),%ebx
	addl $16,%esp
	testl %ebx,%ebx
	jne L2393
L2392:
	movl -88(%ebp),%esi
L2386:
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L2388
L2377:
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl -76(%ebp),%eax
	pushl %eax
	call ___infix_mod__YG8
	movl %eax,-80(%ebp)
	addl $16,%esp
L2371:
	movl -80(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl (%edi),%eax
	pushl %eax
	call _item__IH8
	movl %eax,%esi
	addl $16,%esp
	addl $-12,%esp
	pushl $12
	call _allocation__C7
	movl %eax,%ebx
	addl $-4,%esp
	pushl $12
	pushl $_DICTIONARY_NODE__ENTRY__ABSTRACT_STRING__
	pushl %ebx
	call _copy__from__size__NPD
	movl -56(%ebp),%eax
	movl %eax,(%ebx)
	movl -60(%ebp),%edx
	movl %edx,4(%ebx)
	movl %esi,8(%ebx)
	movl (%edi),%eax
	movl -80(%ebp),%edx
	movl %ebx,(%eax,%edx,4)
	movl 8(%edi),%ebx
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,8(%edi)
	jmp L2405
	.p2align 2
L2370:
	movl -56(%ebp),%eax
	movl %eax,(%ebx)
L2405:
	movl -72(%ebp),%edx
	movl %edx,-52(%ebp)
L2351:
	leal -120(%ebp),%esp
	movl -52(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_add__2PAB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 4(%eax),%ebx
	movl 4(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	call _create__N68
	movl %eax,%esi
	movl 8(%ebp),%eax
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 4(%eax),%edi
	movl 4(%esi),%ebx
	pushl %edi
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	pushl %ebx
	movl 8(%esi),%eax
	pushl %eax
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	je L2411
	movl 8(%esi),%eax
	testl %eax,%eax
	jne L2412
	movl %ebx,8(%esi)
	addl $-12,%esp
	pushl %ebx
	call _calloc__3O8
	movl %eax,(%esi)
	jmp L2414
	.p2align 2
L2412:
	addl $-4,%esp
	pushl %ebx
	pushl %eax
	movl (%esi),%eax
	pushl %eax
	call _realloc__with__8K9
	movl %eax,(%esi)
	movl %ebx,8(%esi)
L2414:
	addl $16,%esp
L2411:
	pushl %edi
	movl 4(%esi),%eax
	pushl %eax
	movl 8(%ebp),%edx
	movl (%edx),%eax
	pushl %eax
	movl (%esi),%eax
	pushl %eax
	call _copy__to__until__3TAB
	movl 12(%ebp),%eax
	movl %ebx,4(%esi)
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call _append__0WAB
	leal -24(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_add__G0AB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 4(%eax),%ebx
	movl 4(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	call _create__N68
	movl %eax,%esi
	movl 8(%ebp),%eax
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 4(%eax),%edi
	movl 4(%esi),%ebx
	pushl %edi
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	pushl %ebx
	movl 8(%esi),%eax
	pushl %eax
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	je L2418
	movl 8(%esi),%eax
	testl %eax,%eax
	jne L2419
	movl %ebx,8(%esi)
	addl $-12,%esp
	pushl %ebx
	call _calloc__3O8
	movl %eax,(%esi)
	jmp L2421
	.p2align 2
L2419:
	addl $-4,%esp
	pushl %ebx
	pushl %eax
	movl (%esi),%eax
	pushl %eax
	call _realloc__with__8K9
	movl %eax,(%esi)
	movl %ebx,8(%esi)
L2421:
	addl $16,%esp
L2418:
	pushl %edi
	movl 4(%esi),%eax
	pushl %eax
	movl 8(%ebp),%edx
	movl (%edx),%eax
	pushl %eax
	movl (%esi),%eax
	pushl %eax
	call _copy__to__until__3TAB
	movl 12(%ebp),%eax
	movl %ebx,4(%esi)
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call _append__0WAB
	leal -24(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
LC27:
	.ascii "r+b\0"
	.p2align 2
_read_header__KFBB:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	cmpl $0,_bmp_buffer__K06
	jne L2434
	movl 8(%ebp),%edx
	movl (%edx),%eax
	addl $-12,%esp
	movl 20(%eax),%edi
	pushl $16
	call _allocation__C7
	movl %eax,%esi
	addl $-4,%esp
	pushl $16
	pushl $_FIXED_ARRAY__USMALLINT__
	pushl %esi
	call _copy__from__size__NPD
	addl $32,%esp
	addl $-12,%esp
	pushl %edi
	call _to_integer__HJBB
	movl %eax,%edx
	addl $16,%esp
	addl $-8,%esp
	movl 4(%esi),%eax
	cmpl %edx,%eax
	setg %bl
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L2438
	addl $-12,%esp
	addl $-12,%esp
	pushl %edi
	call _to_integer__HJBB
	pushl %eax
	call _calloc__53M
	movl %eax,(%esi)
	addl $32,%esp
	addl $-12,%esp
	pushl %edi
	call _to_integer__HJBB
	movl %eax,4(%esi)
	movb $1,%al
	addl $16,%esp
	jmp L2441
	.p2align 2
L2438:
	movb $0,%al
L2441:
	testb %al,%al
	jne L2443
	addl $-12,%esp
	pushl %edi
	call _to_integer__HJBB
	addl $16,%esp
	cmpl %eax,4(%esi)
	jle L2443
	movl (%esi),%eax
	movl %eax,-36(%ebp)
	movl 8(%esi),%edi
	xorl %ebx,%ebx
	jmp L2446
	.p2align 2
L2448:
	addl $-4,%esp
	pushl %ebx
	pushl $0
	movl -36(%ebp),%edx
	pushl %edx
	call _put__to__I4D
	addl $-8,%esp
	addl $16,%esp
	pushl $1
	pushl %ebx
	call ___infix_add__Q5B
	movl %eax,%ebx
	addl $16,%esp
L2446:
	addl $-8,%esp
	pushl %edi
	pushl %ebx
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	jne L2448
L2443:
	movl $-1,8(%esi)
	movl %esi,_bmp_buffer__K06
	jmp L2457
	.p2align 2
L2434:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl (%edx),%eax
	addl $-12,%esp
	movl 20(%eax),%eax
	pushl %eax
	call _to_integer__HJBB
	pushl %eax
	movl _bmp_buffer__K06,%eax
	movl 4(%eax),%eax
	pushl %eax
	call ___infix_less__48E
	addl $32,%esp
	testb %al,%al
	je L2458
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl (%edx),%eax
	addl $-12,%esp
	movl 20(%eax),%eax
	pushl %eax
	call _to_integer__HJBB
	pushl %eax
	movl _bmp_buffer__K06,%eax
	pushl %eax
	call _set_capacity__2OBB
	movl _bmp_buffer__K06,%eax
	addl $32,%esp
	jmp L2498
	.p2align 2
L2458:
	movl _bmp_buffer__K06,%eax
L2498:
	addl $-12,%esp
	pushl %eax
	call _clear__FVBB
	addl $16,%esp
L2457:
	movl _bmp_buffer__K06,%eax
	movl 8(%ebp),%edx
	movl %eax,-12(%ebp)
	addl $-8,%esp
	addl $-8,%esp
	movl (%edx),%eax
	addl $-12,%esp
	movl 20(%eax),%ebx
	pushl %ebx
	call _to_integer__HJBB
	pushl %eax
	movl -12(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _count__RXBB
	addl $16,%esp
	pushl %eax
	call ___infix_add__VYBB
	pushl %eax
	movl -12(%ebp),%edx
	pushl %edx
	call _set_capacity__2OBB
	movl $0,-32(%ebp)
	movl _object_size__NP,%eax
	addl $48,%esp
	addl $-12,%esp
	pushl %eax
	call _to_uinteger__X6B
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call ___infix_mul__X2BB
	movl 8(%ebp),%edx
	movl %eax,-16(%ebp)
	addl $32,%esp
	movl (%edx),%eax
	addl $-8,%esp
	movl 20(%eax),%eax
	pushl %eax
	movl -16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 4(%edx),%eax
	pushl %eax
	call ___infix_add__6SB
	addl $16,%esp
	pushl %eax
	call ___infix_greater__EFC
	addl $16,%esp
	testb %al,%al
	je L2460
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 4(%edx),%eax
	pushl %eax
	movl (%edx),%eax
	movl 20(%eax),%eax
	pushl %eax
	call ___infix_sub__STB
	movl %eax,-16(%ebp)
	addl $16,%esp
L2460:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 4(%edx),%eax
	pushl %eax
	pushl %edx
	call _basic_seek__33BB
	movl $2048,-28(%ebp)
	movl _tmp_buffer__WABB,%eax
	addl $16,%esp
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl 8(%edx),%eax
	pushl %eax
	call _make_with_map_object__65BB
	addl $16,%esp
	jmp L2462
	.p2align 2
L2464:
	addl $-8,%esp
	pushl $2048
	movl -16(%ebp),%eax
	pushl %eax
	call ___infix_less__08BB
	addl $16,%esp
	testb %al,%al
	je L2466
	movl -16(%ebp),%edx
	movl %edx,-28(%ebp)
L2466:
	movl -28(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl _tmp_buffer__WABB,%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _basic_read__size__T9BB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -32(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -28(%ebp),%edx
	movl %eax,-32(%ebp)
	addl $32,%esp
	addl $-8,%esp
	pushl %edx
	movl 8(%ebp),%edx
	movl 4(%edx),%eax
	pushl %eax
	call ___infix_add__6SB
	movl 8(%ebp),%edx
	movl %eax,4(%edx)
	addl $-8,%esp
	addl $-12,%esp
	addl $-8,%esp
	addl $16,%esp
	pushl $1
	movl -28(%ebp),%eax
	pushl %eax
	call ___infix_sub__WSB
	pushl %eax
	call _to_integer__HJBB
	pushl %eax
	movl 8(%ebp),%edx
	movl 8(%edx),%eax
	pushl %eax
	call _set_upper__BBCB
	movl 8(%ebp),%eax
	addl $48,%esp
	addl $-8,%esp
	movl 8(%eax),%eax
	movl %eax,-20(%ebp)
	pushl $1
	movl -28(%ebp),%edx
	pushl %edx
	call ___infix_sub__WSB
	movl %eax,%esi
	movl -12(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _count__RXBB
	movl %eax,%ebx
	imull _object_size__NP,%ebx
	movl -12(%ebp),%edx
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 12(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-12,%esp
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_sub__WSB
	movl %eax,%ebx
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	pushl %eax
	pushl %ebx
	call ___infix_sub__STB
	addl $32,%esp
	pushl %eax
	call _to_integer__HJBB
	movl %eax,-8(%ebp)
	movl _object_size__NP,%eax
	addl $-8,%esp
	pushl %eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %esi
	call _to_integer__HJBB
	addl $16,%esp
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	call ___infix_add__VYBB
	movl %eax,%ebx
	movl _object_size__NP,%eax
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	call ___infix_div__AZ5
	movl %eax,%edi
	addl $32,%esp
	addl $-8,%esp
	pushl %edi
	movl -12(%ebp),%edx
	movl 4(%edx),%eax
	pushl %eax
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	je L2479
	movl ___string_22,%ebx
	addl $-12,%esp
	call _clone__OYK
	movl %eax,%esi
	addl $-4,%esp
	pushl $4
	pushl %ebx
	pushl %esi
	call _set_storage__count__Z0K
	addl $16,%esp
	pushl %esi
	call _print__S1K
	movl -12(%ebp),%edx
	addl $-12,%esp
	movl 4(%edx),%eax
	pushl %eax
	call _print__XFCB
	movl ___string_23,%ebx
	addl $32,%esp
	addl $-12,%esp
	call _clone__OYK
	movl %eax,%esi
	addl $-4,%esp
	pushl $4
	pushl %ebx
	pushl %esi
	call _set_storage__count__Z0K
	addl $16,%esp
	pushl %esi
	call _print__S1K
	addl $-12,%esp
	pushl %edi
	call _print__XFCB
	movl ___string_24,%ebx
	addl $32,%esp
	addl $-12,%esp
	call _clone__OYK
	movl %eax,%esi
	addl $-4,%esp
	pushl $8
	pushl %ebx
	pushl %esi
	call _set_storage__count__Z0K
	addl $16,%esp
	pushl %esi
	call _print__S1K
	movl ___string_25,%ebx
	addl $-12,%esp
	addl $16,%esp
	call _clone__OYK
	movl %eax,%esi
	addl $-4,%esp
	pushl $14
	pushl %ebx
	pushl %esi
	call _set_storage__count__Z0K
	addl $16,%esp
	pushl %esi
	call _print__S1K
	movl _exit_failure_code__QN,%eax
	addl $-12,%esp
	pushl %eax
	call _exit__2QB
	addl $32,%esp
L2479:
	movl -12(%ebp),%edx
	addl $-12,%esp
	movl (%edx),%eax
	pushl %eax
	call _force_conversion__86BB
	movl %eax,-24(%ebp)
	movl -20(%ebp),%eax
	movl -4(%ebp),%ebx
	xorl %esi,%esi
	addl $16,%esp
	movl (%eax),%edi
	cmpl -8(%ebp),%esi
	je L2485
	.p2align 2
L2486:
	addl $-4,%esp
	pushl %ebx
	addl $-8,%esp
	pushl %esi
	pushl %edi
	call _item__R3D
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	movl -24(%ebp),%edx
	pushl %edx
	call _put__to__I4D
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl -8(%ebp),%esi
	jne L2486
L2485:
	movl _object_size__NP,%eax
	addl $-8,%esp
	pushl %eax
	movl -8(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	call ___infix_mod__YG8
	movl -12(%ebp),%edx
	movl %eax,12(%edx)
	movl _object_size__NP,%eax
	addl $-8,%esp
	pushl %eax
	movl -8(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	addl $32,%esp
	subl $1,%eax
	pushl %eax
	call ___infix_div__AZ5
	movl -12(%ebp),%edx
	movl %eax,8(%edx)
	movl -28(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	movl -16(%ebp),%edx
	pushl %edx
	call ___infix_sub__STB
	movl 8(%ebp),%edx
	movl %eax,-16(%ebp)
	addl $-12,%esp
	movl 8(%edx),%eax
	pushl %eax
	call _clear__FVBB
	addl $32,%esp
L2462:
	addl $-8,%esp
	pushl $0
	movl -16(%ebp),%eax
	pushl %eax
	call ___infix_greater__JRC
	addl $16,%esp
	testb %al,%al
	jne L2464
	movl _bmp_buffer__K06,%eax
	movl (%eax),%eax
	movl %eax,_header__L06
	call _object_size__Q3CB
	leal -56(%ebp),%esp
	movl %eax,_pos_buffer__J06
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_create__55CB:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	addl $-12,%esp
	pushl $76
	call _allocation__C7
	movl %eax,-12(%ebp)
	addl $-4,%esp
	pushl $76
	pushl $_BITMAP_24__
	pushl %eax
	call _copy__from__size__NPD
	movl -12(%ebp),%edx
	movl 8(%ebp),%eax
	movl %edx,-4(%ebp)
	movl %eax,8(%edx)
	movl 12(%ebp),%eax
	movl -12(%ebp),%edx
	addl $32,%esp
	movl %eax,4(%edx)
	addl $-12,%esp
	pushl $12
	call _allocation__C7
	movl %eax,-16(%ebp)
	addl $-4,%esp
	pushl $12
	pushl $_FIXED_ARRAY__BMP_LINE__
	movl %eax,%edx
	pushl %edx
	call _copy__from__size__NPD
	movl -16(%ebp),%eax
	movl %eax,-8(%ebp)
	addl $32,%esp
	movl 4(%eax),%eax
	cmpl %eax,12(%ebp)
	jle L2507
	call _pointer_size__TWF
	imull 12(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _allocation__C7
	movl 12(%ebp),%ebx
	movl %eax,%edi
	addl $16,%esp
	subl $1,%ebx
	testl %ebx,%ebx
	setg -17(%ebp)
	addl $-8,%esp
	pushl $0
	pushl %ebx
	call ___infix_equal_equal__WWB
	orb %al,-17(%ebp)
	addl $16,%esp
	movl %ebx,-24(%ebp)
	cmpb $0,-17(%ebp)
	je L2513
	addl $-8,%esp
	pushl %ebx
	pushl %edi
	call _put__to__VKDB
	movl -24(%ebp),%esi
	jmp L2569
	.p2align 2
L2520:
	addl $-8,%esp
	pushl %esi
	pushl %edi
	call _put__to__VKDB
L2569:
	addl $16,%esp
	subl $1,%esi
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L2520
L2513:
	movl -8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %edi,(%edx)
	movl %eax,4(%edx)
	jmp L2528
	.p2align 2
L2507:
	movb $0,%dl
	testl %eax,%eax
	jle L2529
	movl -16(%ebp),%edx
	addl $-8,%esp
	movl 8(%edx),%eax
	testl %eax,%eax
	setg %bl
	pushl $0
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	setne %dl
L2529:
	movl 12(%ebp),%eax
	subl $1,%eax
	movl %eax,-24(%ebp)
	testb %dl,%dl
	je L2528
	movl -16(%ebp),%edx
	xorl %ebx,%ebx
	movl (%edx),%edi
	movl 8(%edx),%esi
	jmp L2537
	.p2align 2
L2539:
	addl $-8,%esp
	pushl %ebx
	pushl %edi
	call _put__to__VKDB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
L2537:
	addl $-8,%esp
	pushl %esi
	pushl %ebx
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	jne L2539
L2528:
	movl -24(%ebp),%edx
	movl -8(%ebp),%eax
	movl %edx,8(%eax)
	movl -16(%ebp),%edx
	movl -4(%ebp),%eax
	movl %edx,72(%eax)
	addl $-12,%esp
	movl 8(%edx),%eax
	pushl %eax
	call _to_numeric__4VD
	movl %eax,%esi
	addl $16,%esp
	addl $-8,%esp
	pushl %esi
	pushl $0
	call ___infix_greater__3W
	addl $16,%esp
	testb %al,%al
	jne L2545
	addl $-4,%esp
	pushl $0
	movl 8(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _create__TVDB
	addl $16,%esp
	pushl %eax
	movl -4(%ebp),%edx
	movl 72(%edx),%eax
	pushl %eax
	call _put__to__UAEB
	addl $16,%esp
	movl $1,%ebx
	jmp L2552
	.p2align 2
L2554:
	addl $-4,%esp
	pushl %ebx
	movl 8(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _create__TVDB
	addl $16,%esp
	pushl %eax
	movl -4(%ebp),%edx
	movl 72(%edx),%eax
	pushl %eax
	call _put__to__UAEB
	addl $16,%esp
	incl %ebx
L2552:
	addl $-8,%esp
	pushl %esi
	pushl %ebx
	call ___infix_greater__3W
	addl $16,%esp
	testb %al,%al
	je L2554
L2545:
	movl -4(%ebp),%eax
	movl $0,12(%eax)
	movl $0,16(%eax)
	leal -56(%ebp),%esp
	movl 8(%eax),%edx
	decl %edx
	movl %edx,20(%eax)
	movl 4(%eax),%edx
	decl %edx
	movl %edx,24(%eax)
	movl -12(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_fill_bitmap__AIEB:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	xorl %eax,%eax
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-8(%ebp)
	movb $0,-17(%ebp)
	movl _header__L06,%edx
	movl 8(%ebp),%edi
	cmpb $66,(%edx)
	jne L2572
	cmpb $77,1(%edx)
	sete %al
	andl $255,%eax
L2572:
	testb %al,%al
	je L2571
	addl $-12,%esp
	pushl %edx
	call _is_8bit__UMEB
	addl $16,%esp
	testb %al,%al
	je L2574
	movl _header__L06,%eax
	addl $-12,%esp
	movl 18(%eax),%eax
	pushl %eax
	call _create__TVDB
	movl %eax,-4(%ebp)
	movl _header__L06,%ebx
	call _object_size__Q3CB
	movl %eax,%esi
	addl $-8,%esp
	addl $16,%esp
	pushl $3
	addl $-12,%esp
	pushl %ebx
	call _get_nb_colors__PPEB
	addl $16,%esp
	pushl %eax
	call ___infix_mul__XUH
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	addl $32,%esp
	movl $4,-16(%ebp)
	cmpl %eax,14(%ebx)
	jne L2575
	movl $3,-16(%ebp)
L2575:
	movl _header__L06,%eax
	addl $-12,%esp
	pushl %eax
	call _get_nb_colors__PPEB
	movl %eax,%esi
	addl $16,%esp
	cmpl $0,_color_map__M06
	jne L2581
	addl $-12,%esp
	pushl $4
	call _allocation__C7
	movl %eax,%ebx
	addl $-4,%esp
	pushl $4
	pushl $_MAP_FIXED_ARRAY__PIXEL_24__
	pushl %ebx
	call _copy__from__size__NPD
	addl $32,%esp
	addl $-12,%esp
	pushl $256
	call _calloc__S0DB
	movl %eax,(%ebx)
	addl $16,%esp
	movl %ebx,_color_map__M06
L2581:
	addl $-12,%esp
	subl $1,%esi
	pushl %esi
	call _to_numeric__4VD
	movl %eax,%edi
	addl $16,%esp
	addl $-8,%esp
	pushl %edi
	pushl $0
	call ___infix_greater__3W
	addl $16,%esp
	testb %al,%al
	jne L2590
	movl _pos_buffer__J06,%eax
	addl $-8,%esp
	pushl %eax
	movl _bmp_buffer__K06,%eax
	pushl %eax
	call _item__2YEB
	andl $255,%eax
	pushl %eax
	movl _pos_buffer__J06,%ebx
	addl $-8,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	movl _bmp_buffer__K06,%eax
	pushl %eax
	call _item__2YEB
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	movl _pos_buffer__J06,%ebx
	addl $-8,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $2
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	movl _bmp_buffer__K06,%eax
	pushl %eax
	call _item__2YEB
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	addl $-8,%esp
	pushl $0
	movl _color_map__M06,%eax
	pushl %eax
	call _item__ZXEB
	addl $16,%esp
	pushl %eax
	call _color_rgb__A0EB
	movl _pos_buffer__J06,%ebx
	movl -16(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	movl %eax,_pos_buffer__J06
	movl $1,%esi
	jmp L2602
	.p2align 2
L2604:
	movl _pos_buffer__J06,%eax
	addl $-8,%esp
	pushl %eax
	movl _bmp_buffer__K06,%eax
	pushl %eax
	call _item__2YEB
	andl $255,%eax
	pushl %eax
	movl _pos_buffer__J06,%ebx
	addl $-8,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	movl _bmp_buffer__K06,%eax
	pushl %eax
	call _item__2YEB
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	movl _pos_buffer__J06,%ebx
	addl $-8,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $2
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	movl _bmp_buffer__K06,%eax
	pushl %eax
	call _item__2YEB
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	addl $-8,%esp
	pushl %esi
	movl _color_map__M06,%eax
	pushl %eax
	call _item__ZXEB
	addl $16,%esp
	pushl %eax
	call _color_rgb__A0EB
	movl _pos_buffer__J06,%ebx
	movl -16(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	movl %eax,_pos_buffer__J06
	incl %esi
L2602:
	addl $-8,%esp
	pushl %edi
	pushl %esi
	call ___infix_greater__3W
	addl $16,%esp
	testb %al,%al
	je L2604
L2590:
	movl _header__L06,%eax
	cmpl $1,30(%eax)
	jne L2571
	movl 10(%eax),%eax
	addl $-12,%esp
	pushl %eax
	call _to_integer__HJBB
	movl %eax,_pos_buffer__J06
	movl _header__L06,%eax
	addl $16,%esp
	movl 22(%eax),%eax
	movl %eax,-12(%ebp)
	cmpb $0,-17(%ebp)
	jne L2571
	.p2align 2
L2620:
	call _buf_item__W3EB
	movb %al,%bl
	testb %bl,%bl
	jne L2621
	call _buf_item__W3EB
	movb %al,%bl
	testb %bl,%bl
	jne L2622
	movl -4(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	movl _header__L06,%eax
	movl 18(%eax),%eax
	decl %eax
	pushl %eax
	movl -12(%ebp),%eax
	pushl %eax
	pushl $0
	movl 12(%ebp),%eax
	pushl %eax
	call _line_h__until__image__G6EB
	addl $32,%esp
	movl $0,-8(%ebp)
	subl $1,-12(%ebp)
	jmp L2618
	.p2align 2
L2622:
	cmpb $1,%bl
	sete -18(%ebp)
	cmpb $0,-18(%ebp)
	je L2632
	movl -4(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	movl _header__L06,%eax
	movl 18(%eax),%eax
	decl %eax
	pushl %eax
	movl -12(%ebp),%eax
	pushl %eax
	pushl $0
	movl 12(%ebp),%eax
	pushl %eax
	call _line_h__until__image__G6EB
	movb $1,-17(%ebp)
	addl $32,%esp
L2632:
	cmpb $0,-18(%ebp)
	jne L2618
	cmpb $2,%bl
	jne L2638
	call _buf_item__W3EB
	call _buf_item__W3EB
	jmp L2618
	.p2align 2
L2638:
	addl $-12,%esp
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	call _to_numeric__WNFB
	movl %eax,%esi
	addl $16,%esp
	addl $-8,%esp
	pushl %esi
	pushl $1
	call ___infix_greater__3W
	addl $16,%esp
	andb $1,%bl
	movb %bl,-29(%ebp)
	testb %al,%al
	jne L2640
	addl $-8,%esp
	addl $-8,%esp
	call _buf_item__W3EB
	andl $255,%eax
	pushl %eax
	movl _color_map__M06,%eax
	pushl %eax
	call _item__OOFB
	pushl %eax
	movl -8(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	call _item__ZIFB
	addl $16,%esp
	pushl %eax
	call _copy__ORFB
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -8(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-8(%ebp)
	addl $32,%esp
	movl $2,%ebx
	jmp L2649
	.p2align 2
L2651:
	addl $-8,%esp
	addl $-8,%esp
	call _buf_item__W3EB
	andl $255,%eax
	pushl %eax
	movl _color_map__M06,%eax
	pushl %eax
	call _item__OOFB
	pushl %eax
	movl -8(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	call _item__ZIFB
	addl $16,%esp
	pushl %eax
	call _copy__ORFB
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -8(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-8(%ebp)
	addl $32,%esp
	incl %ebx
L2649:
	addl $-8,%esp
	pushl %esi
	pushl %ebx
	call ___infix_greater__3W
	addl $16,%esp
	testb %al,%al
	je L2651
L2640:
	cmpb $0,-29(%ebp)
	je L2618
	call _buf_item__W3EB
	jmp L2618
	.p2align 2
L2621:
	addl $-8,%esp
	call _buf_item__W3EB
	andl $255,%eax
	pushl %eax
	movl _color_map__M06,%eax
	pushl %eax
	call _item__OOFB
	movl %eax,%edi
	addl $-12,%esp
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	call _to_numeric__WNFB
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	pushl %esi
	pushl $1
	call ___infix_greater__3W
	addl $16,%esp
	testb %al,%al
	jne L2618
	addl $-8,%esp
	pushl %edi
	movl -8(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	call _item__ZIFB
	addl $16,%esp
	pushl %eax
	call _copy__ZJFB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -8(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-8(%ebp)
	addl $32,%esp
	movl $2,%ebx
	jmp L2674
	.p2align 2
L2676:
	addl $-8,%esp
	pushl %edi
	movl -8(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	call _item__ZIFB
	addl $16,%esp
	pushl %eax
	call _copy__ZJFB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -8(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-8(%ebp)
	addl $32,%esp
	incl %ebx
L2674:
	addl $-8,%esp
	pushl %esi
	pushl %ebx
	call ___infix_greater__3W
	addl $16,%esp
	testb %al,%al
	je L2676
L2618:
	cmpb $0,-17(%ebp)
	je L2620
	jmp L2571
	.p2align 2
L2574:
	movl _header__L06,%eax
	cmpw $24,28(%eax)
	jne L2571
	movl 18(%eax),%ebx
	call _clone__TWDB
	movl %eax,%esi
	movl %ebx,4(%esi)
	movl $-1,(%esi)
	addl $-12,%esp
	pushl %ebx
	call _calloc__S0DB
	movl %eax,12(%esi)
	addl $-12,%esp
	addl $-8,%esp
	addl $16,%esp
	pushl $-3
	movl _header__L06,%eax
	movl 18(%eax),%eax
	pushl %eax
	call ___infix_mul__XUH
	addl $16,%esp
	andl $3,%eax
	pushl %eax
	call _to_uinteger__X6B
	movl %eax,-28(%ebp)
	movl _header__L06,%eax
	addl $-8,%esp
	movl 10(%eax),%eax
	pushl %eax
	pushl %edi
	call _set_cursor__30FB
	movl _header__L06,%eax
	addl $32,%esp
	addl $-12,%esp
	movl 22(%eax),%eax
	decl %eax
	pushl %eax
	call _to_numeric__4VD
	movl %eax,-24(%ebp)
	addl $16,%esp
	addl $-8,%esp
	pushl %eax
	pushl $0
	call ___infix_greater__3W
	addl $16,%esp
	testb %al,%al
	jne L2571
	movl _header__L06,%eax
	addl $-4,%esp
	movl 18(%eax),%eax
	pushl %eax
	pushl %esi
	pushl %edi
	call _read__size__F2FB
	movl -28(%ebp),%eax
	addl $-8,%esp
	addl $-8,%esp
	pushl %eax
	movl 4(%edi),%eax
	pushl %eax
	call ___infix_add__6SB
	pushl %eax
	pushl %edi
	call _set_cursor__30FB
	addl $48,%esp
	addl $-12,%esp
	pushl %esi
	movl _header__L06,%edx
	movl 18(%edx),%eax
	decl %eax
	pushl %eax
	addl $-8,%esp
	pushl $0
	movl 22(%edx),%eax
	pushl %eax
	call ___infix_sub__F6B
	addl $16,%esp
	subl $1,%eax
	pushl %eax
	pushl $0
	movl 12(%ebp),%eax
	pushl %eax
	call _line_h__until__image__G6EB
	addl $32,%esp
	addl $-12,%esp
	pushl %esi
	call _clear__TUGB
	addl $16,%esp
	movl $1,%ebx
	jmp L2713
	.p2align 2
L2715:
	movl _header__L06,%eax
	addl $-4,%esp
	movl 18(%eax),%eax
	pushl %eax
	pushl %esi
	pushl %edi
	call _read__size__F2FB
	movl -28(%ebp),%eax
	addl $-8,%esp
	addl $-8,%esp
	pushl %eax
	movl 4(%edi),%eax
	pushl %eax
	call ___infix_add__6SB
	pushl %eax
	pushl %edi
	call _set_cursor__30FB
	addl $48,%esp
	addl $-12,%esp
	pushl %esi
	movl _header__L06,%edx
	movl 18(%edx),%eax
	decl %eax
	pushl %eax
	addl $-8,%esp
	pushl %ebx
	movl 22(%edx),%eax
	pushl %eax
	call ___infix_sub__F6B
	addl $16,%esp
	subl $1,%eax
	pushl %eax
	pushl $0
	movl 12(%ebp),%eax
	pushl %eax
	call _line_h__until__image__G6EB
	addl $32,%esp
	addl $-12,%esp
	pushl %esi
	call _clear__TUGB
	addl $16,%esp
	incl %ebx
L2713:
	movl -24(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call ___infix_greater__3W
	addl $16,%esp
	testb %al,%al
	je L2715
L2571:
	leal -56(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_close__3XGB:
	pushl %ebp
	movl %esp,%ebp
	subl $60,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl (%esi),%eax
	addl $-12,%esp
	decl 12(%eax)
	movl (%esi),%edi
	movl 12(%esi),%eax
	movl $0,4(%esi)
	movl $0,12(%esi)
	pushl %eax
	call _fclose
	addl $16,%esp
	testl %eax,%eax
	jne L2766
	movl (%esi),%eax
	addl $-12,%esp
	movl (%eax),%eax
	pushl %eax
	call _to_external__I48
	addl $-8,%esp
	leal -48(%ebp),%ebx
	pushl %ebx
	pushl %eax
	call _stat
	addl $32,%esp
	testl %eax,%eax
	jne L2736
	movl (%esi),%edx
	movl -28(%ebp),%eax
	andl $61440,%eax
	cmpl $12288,%eax
	sete %al
	movb %al,16(%edx)
	addl $-12,%esp
	pushl %ebx
	call _localtime
	movl %eax,%ebx
	addl $-12,%esp
	pushl %ebx
	call _to_date__T2GB
	addl $32,%esp
	addl $-12,%esp
	pushl %ebx
	call _to_time__L4GB
	addl $-12,%esp
	leal -24(%ebp),%eax
	pushl %eax
	call _localtime
	movl %eax,%ebx
	addl $32,%esp
	addl $-12,%esp
	pushl %ebx
	call _to_date__T2GB
	addl $-12,%esp
	pushl %ebx
	call _to_time__L4GB
	movl (%esi),%edx
	movl -16(%ebp),%eax
	movl %eax,20(%edx)
	addl $32,%esp
L2736:
	movl (%edi),%esi
	movl _string_tmp__Y26,%ebx
	cmpl %esi,%ebx
	je L2737
	movl 4(%esi),%eax
	movl %eax,4(%ebx)
	testl %eax,%eax
	jle L2737
	addl $-8,%esp
	pushl %eax
	movl 8(%ebx),%eax
	pushl %eax
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	je L2741
	movl 4(%ebx),%eax
	addl $-12,%esp
	pushl %eax
	call _calloc__3O8
	movl %eax,(%ebx)
	movl 4(%ebx),%eax
	movl %eax,8(%ebx)
	addl $16,%esp
L2741:
	movl 4(%ebx),%eax
	addl $-4,%esp
	decl %eax
	pushl %eax
	movl (%esi),%eax
	pushl %eax
	movl (%ebx),%eax
	pushl %eax
	call _copy_from__until__5V8
	addl $16,%esp
L2737:
	movl 4(%ebx),%eax
	addl $-8,%esp
	addl $-12,%esp
	addl $-8,%esp
	decl %eax
	pushl %eax
	movl (%ebx),%eax
	pushl %eax
	call _fast_reverse_index_of__from__2Z8
	pushl %eax
	call _to_numeric__4VD
	pushl %eax
	pushl $1
	call ___infix_add__I28
	leal -1(%eax),%esi
	movl 4(%ebx),%eax
	addl $48,%esp
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	je L2749
	addl $-8,%esp
	pushl %esi
	movl 4(%ebx),%eax
	pushl %eax
	call ___infix_sub__F6B
	addl $16,%esp
	cmpl 4(%ebx),%eax
	jle L2750
	movl $0,4(%ebx)
	jmp L2749
	.p2align 2
L2750:
	addl $-8,%esp
	pushl %eax
	movl 4(%ebx),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,4(%ebx)
	addl $16,%esp
L2749:
	addl $-8,%esp
	pushl $0
	movl 4(%ebx),%eax
	pushl %eax
	call ___infix_equal_equal__CKCB
	addl $16,%esp
	testb %al,%al
	je L2754
	addl $-8,%esp
	pushl $47
	pushl %ebx
	call _add_last__8I9
	addl $16,%esp
L2754:
	movl _alias__Q26,%ebx
	movl _string_tmp__Y26,%esi
	addl $-8,%esp
	movl 4(%ebx),%eax
	pushl %eax
	addl $-12,%esp
	pushl %esi
	call _hash_code__3IHB
	addl $16,%esp
	pushl %eax
	call ___infix_mod__YG8
	addl $-8,%esp
	pushl %eax
	movl (%ebx),%eax
	pushl %eax
	call _item__IH8
	movl %eax,%ebx
	addl $32,%esp
	jmp L2756
	.p2align 2
L2758:
	movl 8(%ebx),%ebx
L2756:
	testl %ebx,%ebx
	je L2766
	addl $-8,%esp
	pushl %esi
	movl 4(%ebx),%eax
	pushl %eax
	call ___infix_equal_equal__BOHB
	addl $16,%esp
	testb %al,%al
	je L2758
	movl _alias__Q26,%ebx
	movl _string_tmp__Y26,%esi
	addl $-8,%esp
	movl 4(%ebx),%eax
	pushl %eax
	addl $-12,%esp
	pushl %esi
	call _hash_code__3IHB
	addl $16,%esp
	pushl %eax
	call ___infix_mod__YG8
	addl $-8,%esp
	pushl %eax
	movl (%ebx),%eax
	pushl %eax
	call _item__IH8
	movl %eax,%ebx
	addl $32,%esp
	jmp L2762
	.p2align 2
L2764:
	movl 8(%ebx),%ebx
L2762:
	addl $-8,%esp
	pushl %esi
	movl 4(%ebx),%eax
	pushl %eax
	call ___infix_equal_equal__BOHB
	addl $16,%esp
	testb %al,%al
	je L2764
L2766:
	leal -72(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_append_plan__Z4HB:
	pushl %ebp
	movl %esp,%ebp
	subl $60,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 40(%eax),%edx
	testl %edx,%edx
	je L2775
	movl (%edx),%eax
	cmpl $28,%eax
	je L2777
	ja L2782
	cmpl $17,%eax
	je L2778
	jmp L2776
	.p2align 2
L2782:
	cmpl $78,%eax
	je L2779
	jmp L2776
	.p2align 2
L2777:
	movl 52(%edx),%ecx
	jmp L2776
	.p2align 2
L2778:
L2779:
	movl 56(%edx),%ecx
L2776:
	movl %ecx,%ebx
	testl %ebx,%ebx
	je L2797
	movl 12(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-4(%ebp)
	movl 16(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-12(%ebp)
	movl 20(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-8(%ebp)
	movl 24(%ebx),%eax
	movl (%eax),%eax
	decl %eax
	jmp L2886
	.p2align 2
L2775:
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L2789
	movl 12(%eax),%edx
	jmp L2790
	.p2align 2
L2789:
	movl 8(%eax),%edx
L2790:
	subl $1,%edx
	movl %edx,-12(%ebp)
	cmpl $16,(%eax)
	jne L2793
	movl 8(%eax),%eax
	jmp L2794
	.p2align 2
L2793:
	movl 4(%eax),%eax
L2794:
	subl $1,%eax
L2886:
	movl %eax,-16(%ebp)
	movb $0,%al
	testb %al,%al
	jne L2797
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 64(%edx),%edx
	movl %edx,-20(%ebp)
	movl 8(%ebp),%edx
	addl $-12,%esp
	movl 12(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-40(%ebp)
	addl $32,%esp
	subl $1,-40(%ebp)
	addl $-8,%esp
	movl 68(%edx),%edx
	movl %edx,-24(%ebp)
	movl 8(%ebp),%edx
	addl $-12,%esp
	movl 8(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl %eax,-44(%ebp)
	addl $32,%esp
	subl $1,-44(%ebp)
	cmpl %edx,-40(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %edx
	movl -40(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L2797
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L2797
	movl -8(%ebp),%edx
	cmpl %edx,-44(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %edx
	movl -44(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L2797
	movl -16(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L2797
	movl -4(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -20(%ebp),%eax
	pushl %eax
	call _max__1ME
	movl -12(%ebp),%edx
	movl %eax,-20(%ebp)
	addl $-8,%esp
	pushl %edx
	movl -40(%ebp),%eax
	pushl %eax
	call _min__TNE
	movl -8(%ebp),%edx
	movl %eax,-40(%ebp)
	addl $32,%esp
	addl $-8,%esp
	pushl %edx
	movl -24(%ebp),%eax
	pushl %eax
	call _max__1ME
	movl -16(%ebp),%edx
	movl %eax,-24(%ebp)
	addl $-8,%esp
	pushl %edx
	movl -44(%ebp),%eax
	pushl %eax
	call _min__TNE
	movl %eax,-44(%ebp)
	addl $32,%esp
	call _clone__1OE
	movl 8(%ebp),%edx
	movl 8(%ebp),%ebx
	movl %edx,8(%eax)
	movl %eax,56(%edx)
	jmp L2860
	.p2align 2
L2862:
	testl %eax,%eax
	jne L2885
L2860:
	movl (%ebx),%ecx
	cmpl $28,%ecx
	je L2815
	ja L2819
	cmpl $17,%ecx
	je L2816
	jmp L2812
	.p2align 2
L2819:
	cmpl $78,%ecx
	je L2816
	cmpl $83,%ecx
	jne L2812
	movl 48(%ebx),%eax
	movl %eax,-28(%ebp)
	jmp L2812
	.p2align 2
L2815:
	movl 44(%ebx),%eax
	movl %eax,-28(%ebp)
	jmp L2812
	.p2align 2
L2816:
	movl 48(%ebx),%edx
	movl %edx,-28(%ebp)
L2812:
	movl -28(%ebp),%eax
L2820:
	testl %eax,%eax
	je L2821
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L2822
	jmp *L2834(,%edx,4)
	.p2align 2
L2834:
	.long L2833
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2831
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2822
	.long L2833
	.long L2833
	.long L2833
	.long L2822
	.long L2833
	.long L2833
	.long L2833
	.long L2833
	.long L2832
	.long L2833
	.p2align 2
L2831:
	movl 52(%eax),%esi
	jmp L2822
	.p2align 2
L2832:
L2833:
	movl 56(%eax),%esi
L2822:
	testl %esi,%esi
	sete %dl
	jmp L2836
	.p2align 2
L2821:
	movb $0,%dl
L2836:
	testb %dl,%dl
	je L2837
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L2838
	jmp *L2850(,%edx,4)
	.p2align 2
L2850:
	.long L2849
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2847
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2838
	.long L2849
	.long L2849
	.long L2849
	.long L2838
	.long L2849
	.long L2849
	.long L2849
	.long L2849
	.long L2848
	.long L2849
	.p2align 2
L2847:
	movl 44(%eax),%edi
	jmp L2838
	.p2align 2
L2848:
L2849:
	movl 48(%eax),%edi
L2838:
	movl %edi,%eax
	jmp L2820
	.p2align 2
L2837:
	cmpl $28,%ecx
	je L2855
	ja L2859
	cmpl $17,%ecx
	je L2856
	jmp L2852
	.p2align 2
L2859:
	cmpl $78,%ecx
	je L2856
	cmpl $83,%ecx
	jne L2852
	jmp L2856
	.p2align 2
L2855:
	movl 36(%ebx),%ebx
	jmp L2887
	.p2align 2
L2856:
	movl 40(%ebx),%ebx
L2887:
	movl %ebx,-32(%ebp)
L2852:
	movl -32(%ebp),%ebx
	testl %ebx,%ebx
	jne L2862
	testl %eax,%eax
	je L2863
L2885:
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L2864
	jmp *L2876(,%edx,4)
	.p2align 2
L2876:
	.long L2875
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2873
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2864
	.long L2875
	.long L2875
	.long L2875
	.long L2864
	.long L2875
	.long L2875
	.long L2875
	.long L2875
	.long L2874
	.long L2875
	.p2align 2
L2873:
	movl 52(%eax),%eax
	jmp L2888
	.p2align 2
L2874:
L2875:
	movl 56(%eax),%eax
L2888:
	movl %eax,-36(%ebp)
L2864:
	movl -36(%ebp),%ebx
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_prev__HWI
	movl 28(%ebx),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_next__QWI
	movl 8(%ebp),%edx
	addl $32,%esp
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	pushl %ebx
	call _set_next__QWI
	movl 4(%ebx),%ebx
	addl $-8,%esp
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	jmp L2889
	.p2align 2
L2863:
	movl _list_plan__J3,%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_next__QWI
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $16,%esp
	movl 56(%edx),%eax
	movl %eax,_list_plan__J3
	pushl $1
L2889:
	pushl %eax
	call _set_level__QTE
	addl $16,%esp
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 28(%eax),%ebx
	testl %ebx,%ebx
	je L2882
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _set_prev__HWI
	addl $-12,%esp
	pushl %ebx
	call _inc_level__XXI
	addl $32,%esp
L2882:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -44(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-44(%ebp)
	addl $32,%esp
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call _create__plan__VUE
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_x0__HXE
	movl _list_x__K3,%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _append__E1E
	movl %eax,_list_x__K3
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -40(%ebp),%eax
	pushl %eax
	call _create__plan__VUE
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_x1__90E
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	addl $-8,%esp
	movl 12(%eax),%eax
	pushl %eax
	pushl %ebx
	call _append__E1E
	movl 8(%ebp),%edx
	addl $32,%esp
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call _create_top__plan__74E
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_y0__W7E
	movl _list_y__L3,%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _append__GBF
	movl %eax,_list_y__L3
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -44(%ebp),%eax
	pushl %eax
	call _create_bottom__plan__PAF
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_y1__BBF
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	addl $-8,%esp
	movl 20(%eax),%eax
	pushl %eax
	pushl %ebx
	call _append__GBF
L2797:
	leal -72(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clip_next_child__JKIB:
	pushl %ebp
	movl %esp,%ebp
	subl $76,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl $0,-28(%ebp)
	movl $0,60(%eax)
	movl 56(%eax),%edx
	testl %edx,%edx
	je L2891
	movl 12(%edx),%eax
	movl (%eax),%eax
	movl %eax,-12(%ebp)
	movl 16(%edx),%eax
	movl (%eax),%eax
	movl %eax,-16(%ebp)
	movl 20(%edx),%eax
	movl (%eax),%eax
	movl %eax,-20(%ebp)
	movl 24(%edx),%eax
	movl 8(%ebp),%edx
	movl (%eax),%eax
	movl %eax,-24(%ebp)
	movl 44(%edx),%edx
	movl %edx,-44(%ebp)
	testl %edx,%edx
	je L2893
	.p2align 2
L2894:
	movl -44(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L2895
	jmp *L2907(,%eax,4)
	.p2align 2
L2907:
	.long L2906
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2905
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2895
	.long L2903
	.long L2906
	.long L2903
	.long L2895
	.long L2903
	.long L2906
	.long L2906
	.long L2903
	.long L2906
	.long L2906
	.p2align 2
L2903:
	movl -44(%ebp),%edx
	movl 56(%edx),%ebx
	jmp L2895
	.p2align 2
L2905:
	movl -44(%ebp),%edx
	movl 52(%edx),%ebx
	jmp L2895
	.p2align 2
L2906:
	movl -44(%ebp),%eax
	movl 56(%eax),%ebx
L2895:
	movl %ebx,%edi
	testl %edi,%edi
	je L2909
	addl $-12,%esp
	pushl %edi
	call _active_y__65I
	addl $16,%esp
L2909:
	movl -44(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L2910
	jmp *L2922(,%eax,4)
	.p2align 2
L2922:
	.long L2921
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2920
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2910
	.long L2918
	.long L2921
	.long L2918
	.long L2910
	.long L2918
	.long L2921
	.long L2921
	.long L2918
	.long L2921
	.long L2921
	.p2align 2
L2918:
	movl -44(%ebp),%edx
	movl 52(%edx),%esi
	jmp L2910
	.p2align 2
L2920:
	movl -44(%ebp),%edx
	movl 48(%edx),%esi
	jmp L2910
	.p2align 2
L2921:
	movl -44(%ebp),%eax
	movl 52(%eax),%esi
L2910:
	movl %esi,-44(%ebp)
	testl %esi,%esi
	jne L2894
L2893:
	movl 8(%ebp),%edx
	movl %edx,-44(%ebp)
	.p2align 2
L2992:
	movl -44(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L2928
	jmp *L2940(,%eax,4)
	.p2align 2
L2940:
	.long L2939
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2938
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2928
	.long L2936
	.long L2939
	.long L2936
	.long L2928
	.long L2936
	.long L2939
	.long L2939
	.long L2936
	.long L2939
	.long L2939
	.p2align 2
L2936:
	movl -44(%ebp),%edx
	movl 48(%edx),%edx
	movl %edx,-32(%ebp)
	jmp L2928
	.p2align 2
L2938:
	movl -44(%ebp),%edx
	movl 44(%edx),%edx
	movl %edx,-32(%ebp)
	jmp L2928
	.p2align 2
L2939:
	movl -44(%ebp),%eax
	movl 48(%eax),%eax
	movl %eax,-32(%ebp)
L2928:
	movl -32(%ebp),%esi
	testl %esi,%esi
	je L2943
	.p2align 2
L2944:
	movl (%esi),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L2945
	jmp *L2957(,%eax,4)
	.p2align 2
L2957:
	.long L2956
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2954
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2945
	.long L2956
	.long L2956
	.long L2955
	.long L2945
	.long L2955
	.long L2956
	.long L2955
	.long L2956
	.long L2955
	.long L2955
	.p2align 2
L2954:
	movl 52(%esi),%edx
	jmp L3079
	.p2align 2
L2955:
	movl 56(%esi),%eax
	movl %eax,-4(%ebp)
	jmp L2945
	.p2align 2
L2956:
	movl 56(%esi),%edx
L3079:
	movl %edx,-4(%ebp)
L2945:
	movl -4(%ebp),%edi
	testl %edi,%edi
	je L2959
	movl -16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 12(%edi),%eax
	movl (%eax),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L2959
	movl 16(%edi),%eax
	movl -12(%ebp),%edx
	addl $-8,%esp
	movl (%eax),%eax
	cmpl -12(%ebp),%eax
	setg %bl
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L2959
	movl -24(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 20(%edi),%eax
	movl (%eax),%eax
	pushl %eax
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	je L2959
	movl 24(%edi),%eax
	movl -20(%ebp),%edx
	cmpl %edx,(%eax)
	jle L2959
	addl $-12,%esp
	pushl %edi
	call _active_y__65I
	addl $16,%esp
L2959:
	movl (%esi),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L2963
	jmp *L2975(,%eax,4)
	.p2align 2
L2975:
	.long L2974
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2972
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2963
	.long L2974
	.long L2974
	.long L2974
	.long L2963
	.long L2974
	.long L2974
	.long L2974
	.long L2974
	.long L2973
	.long L2974
	.p2align 2
L2972:
	movl 44(%esi),%esi
	jmp L3080
	.p2align 2
L2973:
L2974:
	movl 48(%esi),%esi
L3080:
	movl %esi,-8(%ebp)
L2963:
	movl -8(%ebp),%esi
	testl %esi,%esi
	jne L2944
L2943:
	movl -44(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L2978
	jmp *L2990(,%eax,4)
	.p2align 2
L2990:
	.long L2989
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2988
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2978
	.long L2986
	.long L2989
	.long L2986
	.long L2978
	.long L2986
	.long L2989
	.long L2989
	.long L2986
	.long L2989
	.long L2989
	.p2align 2
L2986:
	movl -44(%ebp),%edx
	movl 40(%edx),%edx
	movl %edx,-36(%ebp)
	jmp L2978
	.p2align 2
L2988:
	movl -44(%ebp),%edx
	movl 36(%edx),%edx
	movl %edx,-36(%ebp)
	jmp L2978
	.p2align 2
L2989:
	movl -44(%ebp),%eax
	movl 40(%eax),%eax
	movl %eax,-36(%ebp)
L2978:
	movl -36(%ebp),%edx
	movl %edx,-44(%ebp)
	testl %edx,%edx
	jne L2992
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__S8F
	movl _list_y__L3,%esi
	movl $0,_first_clip__P3
	movl -20(%ebp),%eax
	movl %eax,-56(%ebp)
	addl $16,%esp
	testl %esi,%esi
	je L2891
	jmp L3081
	.p2align 2
L2998:
	movl 12(%esi),%esi
	testl %esi,%esi
	je L3077
L3081:
	movl 4(%esi),%eax
	cmpb $0,1(%eax)
	je L2998
	testl %esi,%esi
	jne L3001
L3077:
	movl -24(%ebp),%edx
	movl %edx,-60(%ebp)
	jmp L3082
	.p2align 2
L3001:
	movl (%esi),%eax
	movl -24(%ebp),%edx
	movl %eax,-28(%ebp)
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call _min__TNE
	movl %eax,-60(%ebp)
	addl $16,%esp
L3082:
	subl $1,-60(%ebp)
	movl -60(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl -56(%ebp),%edx
	pushl %edx
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L3007
	movl _first_clip__P3,%eax
	movl %eax,_top_clip__Q3
	movl _list_x__K3,%eax
	movl $0,_last_clip__O3
	movl -12(%ebp),%edx
	movl %eax,-40(%ebp)
	movl 8(%ebp),%eax
	movl $0,-48(%ebp)
	movl %edx,-52(%ebp)
	movl %eax,-44(%ebp)
	.p2align 2
L3033:
	movl -40(%ebp),%edx
	movl 4(%edx),%edi
	cmpb $0,(%edi)
	je L3012
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	movl 8(%eax),%eax
	pushl %eax
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	jne L3014
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	addl $16,%esp
	testl %eax,%eax
	jne L3013
L3014:
	movl 4(%edi),%eax
	addl $-4,%esp
	pushl %eax
	pushl %edi
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__L7O
	movl -48(%ebp),%eax
	addl $16,%esp
	cmpl %eax,4(%edi)
	jle L3012
	movl -16(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -40(%ebp),%edx
	movl (%edx),%eax
	decl %eax
	pushl %eax
	call _min__TNE
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl -52(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $32,%esp
	testb %al,%al
	je L3019
	movl -60(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %ebx
	movl -56(%ebp),%eax
	pushl %eax
	movl -52(%ebp),%edx
	pushl %edx
	movl -44(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _add_clip__from__to__Z0IB
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,-52(%ebp)
	addl $32,%esp
L3019:
	movl 4(%edi),%eax
	movl %eax,-48(%ebp)
	movl 8(%edi),%edi
	movl %edi,-44(%ebp)
	jmp L3012
	.p2align 2
L3013:
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__ZSP
	movl -48(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl 4(%edi),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	addl $32,%esp
	testb %al,%al
	je L3012
	movl -16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl -40(%ebp),%edx
	movl (%edx),%eax
	pushl %eax
	call _min__TNE
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl -52(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $32,%esp
	testb %al,%al
	je L3032
	movl -60(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %ebx
	movl -56(%ebp),%eax
	pushl %eax
	movl -52(%ebp),%edx
	pushl %edx
	movl -44(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _add_clip__from__to__Z0IB
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,-52(%ebp)
	addl $32,%esp
	.p2align 2
L3032:
	subl $1,-48(%ebp)
	movl -48(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	addl $16,%esp
	testl %eax,%eax
	je L3032
	movl -48(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	movl 8(%eax),%eax
	movl %eax,-44(%ebp)
	addl $16,%esp
L3012:
	movl -40(%ebp),%eax
	movl 8(%eax),%eax
	movl %eax,-40(%ebp)
	testl %eax,%eax
	jne L3033
	movl -16(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -52(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L3034
	movl -60(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -16(%ebp),%eax
	pushl %eax
	movl -56(%ebp),%edx
	pushl %edx
	movl -52(%ebp),%eax
	pushl %eax
	movl -44(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _add_clip__from__to__Z0IB
	addl $32,%esp
L3034:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -60(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl %eax,-56(%ebp)
	addl $32,%esp
L3007:
	testl %esi,%esi
	je L2891
	.p2align 2
L3044:
	movl 4(%esi),%edi
	cmpb $0,1(%edi)
	je L3041
	cmpb $0,8(%esi)
	je L3042
	addl $-12,%esp
	pushl %edi
	call _active_x__IMJ
	addl $16,%esp
	jmp L3041
	.p2align 2
L3042:
	addl $-12,%esp
	pushl %edi
	call _desactive_y__SMJ
	addl $-12,%esp
	pushl %edi
	call _desactive_x__WMJ
	addl $32,%esp
L3041:
	movl 12(%esi),%esi
	testl %esi,%esi
	je L2891
	movl -28(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl (%esi),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	addl $16,%esp
	testb %al,%al
	jne L3044
	jmp L3081
	.p2align 2
L2891:
	movl 8(%ebp),%edx
	movl 52(%edx),%eax
	testl %eax,%eax
	je L3047
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L3047
	jmp *L3060(,%edx,4)
	.p2align 2
L3060:
	.long L3052
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3059
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3047
	.long L3055
	.long L3049
	.long L3051
	.long L3047
	.long L3050
	.long L3057
	.long L3054
	.long L3053
	.long L3058
	.long L3056
	.p2align 2
L3049:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__SRO
	jmp L3083
	.p2align 2
L3050:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__XZY
	jmp L3083
	.p2align 2
L3051:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__9IT
	jmp L3083
	.p2align 2
L3052:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__N0I
	jmp L3083
	.p2align 2
L3053:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__UJQB
	jmp L3083
	.p2align 2
L3054:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__HHLB
	jmp L3083
	.p2align 2
L3055:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__MW5B
	jmp L3083
	.p2align 2
L3056:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__FVZB
	jmp L3083
	.p2align 2
L3057:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__JKIB
	jmp L3083
	.p2align 2
L3058:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__RFVB
	jmp L3083
	.p2align 2
L3059:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__BEF
L3083:
	addl $16,%esp
L3047:
	movl 8(%ebp),%edx
	movl 44(%edx),%eax
	testl %eax,%eax
	je L3062
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L3062
	jmp *L3075(,%edx,4)
	.p2align 2
L3075:
	.long L3068
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3073
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3062
	.long L3071
	.long L3064
	.long L3067
	.long L3062
	.long L3065
	.long L3066
	.long L3070
	.long L3069
	.long L3074
	.long L3072
	.p2align 2
L3064:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__SRO
	jmp L3062
	.p2align 2
L3065:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__XZY
	jmp L3062
	.p2align 2
L3066:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__JKIB
	jmp L3062
	.p2align 2
L3067:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__9IT
	jmp L3062
	.p2align 2
L3068:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__N0I
	jmp L3062
	.p2align 2
L3069:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__UJQB
	jmp L3062
	.p2align 2
L3070:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__HHLB
	jmp L3062
	.p2align 2
L3071:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__MW5B
	jmp L3062
	.p2align 2
L3072:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__FVZB
	jmp L3062
	.p2align 2
L3073:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__BEF
	jmp L3062
	.p2align 2
L3074:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__RFVB
L3062:
	leal -88(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_append_plan__R1KB:
	pushl %ebp
	movl %esp,%ebp
	subl $60,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 40(%eax),%edx
	testl %edx,%edx
	je L3109
	movl (%edx),%eax
	cmpl $28,%eax
	je L3111
	ja L3116
	cmpl $17,%eax
	je L3112
	jmp L3110
	.p2align 2
L3116:
	cmpl $78,%eax
	je L3113
	jmp L3110
	.p2align 2
L3111:
	movl 52(%edx),%ecx
	jmp L3110
	.p2align 2
L3112:
L3113:
	movl 56(%edx),%ecx
L3110:
	movl %ecx,%ebx
	testl %ebx,%ebx
	je L3131
	movl 12(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-4(%ebp)
	movl 16(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-12(%ebp)
	movl 20(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-8(%ebp)
	movl 24(%ebx),%eax
	movl (%eax),%eax
	decl %eax
	jmp L3220
	.p2align 2
L3109:
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L3123
	movl 12(%eax),%edx
	jmp L3124
	.p2align 2
L3123:
	movl 8(%eax),%edx
L3124:
	subl $1,%edx
	movl %edx,-12(%ebp)
	cmpl $16,(%eax)
	jne L3127
	movl 8(%eax),%eax
	jmp L3128
	.p2align 2
L3127:
	movl 4(%eax),%eax
L3128:
	subl $1,%eax
L3220:
	movl %eax,-16(%ebp)
	movb $0,%al
	testb %al,%al
	jne L3131
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 64(%edx),%edx
	movl %edx,-20(%ebp)
	movl 8(%ebp),%edx
	addl $-12,%esp
	movl 12(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-40(%ebp)
	addl $32,%esp
	subl $1,-40(%ebp)
	addl $-8,%esp
	movl 68(%edx),%edx
	movl %edx,-24(%ebp)
	movl 8(%ebp),%edx
	addl $-12,%esp
	movl 8(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl %eax,-44(%ebp)
	addl $32,%esp
	subl $1,-44(%ebp)
	cmpl %edx,-40(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %edx
	movl -40(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L3131
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L3131
	movl -8(%ebp),%edx
	cmpl %edx,-44(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %edx
	movl -44(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L3131
	movl -16(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L3131
	movl -4(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -20(%ebp),%eax
	pushl %eax
	call _max__1ME
	movl -12(%ebp),%edx
	movl %eax,-20(%ebp)
	addl $-8,%esp
	pushl %edx
	movl -40(%ebp),%eax
	pushl %eax
	call _min__TNE
	movl -8(%ebp),%edx
	movl %eax,-40(%ebp)
	addl $32,%esp
	addl $-8,%esp
	pushl %edx
	movl -24(%ebp),%eax
	pushl %eax
	call _max__1ME
	movl -16(%ebp),%edx
	movl %eax,-24(%ebp)
	addl $-8,%esp
	pushl %edx
	movl -44(%ebp),%eax
	pushl %eax
	call _min__TNE
	movl %eax,-44(%ebp)
	addl $32,%esp
	call _clone__1OE
	movl 8(%ebp),%edx
	movl 8(%ebp),%ebx
	movl %edx,8(%eax)
	movl %eax,56(%edx)
	jmp L3194
	.p2align 2
L3196:
	testl %eax,%eax
	jne L3219
L3194:
	movl (%ebx),%ecx
	cmpl $28,%ecx
	je L3149
	ja L3153
	cmpl $17,%ecx
	je L3150
	jmp L3146
	.p2align 2
L3153:
	cmpl $78,%ecx
	je L3150
	cmpl $84,%ecx
	jne L3146
	movl 48(%ebx),%eax
	movl %eax,-28(%ebp)
	jmp L3146
	.p2align 2
L3149:
	movl 44(%ebx),%eax
	movl %eax,-28(%ebp)
	jmp L3146
	.p2align 2
L3150:
	movl 48(%ebx),%edx
	movl %edx,-28(%ebp)
L3146:
	movl -28(%ebp),%eax
L3154:
	testl %eax,%eax
	je L3155
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L3156
	jmp *L3168(,%edx,4)
	.p2align 2
L3168:
	.long L3167
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3165
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3156
	.long L3167
	.long L3167
	.long L3167
	.long L3156
	.long L3167
	.long L3167
	.long L3167
	.long L3167
	.long L3166
	.long L3167
	.p2align 2
L3165:
	movl 52(%eax),%esi
	jmp L3156
	.p2align 2
L3166:
L3167:
	movl 56(%eax),%esi
L3156:
	testl %esi,%esi
	sete %dl
	jmp L3170
	.p2align 2
L3155:
	movb $0,%dl
L3170:
	testb %dl,%dl
	je L3171
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L3172
	jmp *L3184(,%edx,4)
	.p2align 2
L3184:
	.long L3183
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3181
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3172
	.long L3183
	.long L3183
	.long L3183
	.long L3172
	.long L3183
	.long L3183
	.long L3183
	.long L3183
	.long L3182
	.long L3183
	.p2align 2
L3181:
	movl 44(%eax),%edi
	jmp L3172
	.p2align 2
L3182:
L3183:
	movl 48(%eax),%edi
L3172:
	movl %edi,%eax
	jmp L3154
	.p2align 2
L3171:
	cmpl $28,%ecx
	je L3189
	ja L3193
	cmpl $17,%ecx
	je L3190
	jmp L3186
	.p2align 2
L3193:
	cmpl $78,%ecx
	je L3190
	cmpl $84,%ecx
	jne L3186
	jmp L3190
	.p2align 2
L3189:
	movl 36(%ebx),%ebx
	jmp L3221
	.p2align 2
L3190:
	movl 40(%ebx),%ebx
L3221:
	movl %ebx,-32(%ebp)
L3186:
	movl -32(%ebp),%ebx
	testl %ebx,%ebx
	jne L3196
	testl %eax,%eax
	je L3197
L3219:
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L3198
	jmp *L3210(,%edx,4)
	.p2align 2
L3210:
	.long L3209
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3207
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3198
	.long L3209
	.long L3209
	.long L3209
	.long L3198
	.long L3209
	.long L3209
	.long L3209
	.long L3209
	.long L3208
	.long L3209
	.p2align 2
L3207:
	movl 52(%eax),%eax
	jmp L3222
	.p2align 2
L3208:
L3209:
	movl 56(%eax),%eax
L3222:
	movl %eax,-36(%ebp)
L3198:
	movl -36(%ebp),%ebx
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_prev__HWI
	movl 28(%ebx),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_next__QWI
	movl 8(%ebp),%edx
	addl $32,%esp
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	pushl %ebx
	call _set_next__QWI
	movl 4(%ebx),%ebx
	addl $-8,%esp
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	jmp L3223
	.p2align 2
L3197:
	movl _list_plan__J3,%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_next__QWI
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $16,%esp
	movl 56(%edx),%eax
	movl %eax,_list_plan__J3
	pushl $1
L3223:
	pushl %eax
	call _set_level__QTE
	addl $16,%esp
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 28(%eax),%ebx
	testl %ebx,%ebx
	je L3216
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _set_prev__HWI
	addl $-12,%esp
	pushl %ebx
	call _inc_level__XXI
	addl $32,%esp
L3216:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -44(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-44(%ebp)
	addl $32,%esp
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call _create__plan__VUE
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_x0__HXE
	movl _list_x__K3,%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _append__E1E
	movl %eax,_list_x__K3
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -40(%ebp),%eax
	pushl %eax
	call _create__plan__VUE
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_x1__90E
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	addl $-8,%esp
	movl 12(%eax),%eax
	pushl %eax
	pushl %ebx
	call _append__E1E
	movl 8(%ebp),%edx
	addl $32,%esp
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call _create_top__plan__74E
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_y0__W7E
	movl _list_y__L3,%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _append__GBF
	movl %eax,_list_y__L3
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -44(%ebp),%eax
	pushl %eax
	call _create_bottom__plan__PAF
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_y1__BBF
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	addl $-8,%esp
	movl 20(%eax),%eax
	pushl %eax
	pushl %ebx
	call _append__GBF
L3131:
	leal -72(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clip_next_child__HHLB:
	pushl %ebp
	movl %esp,%ebp
	subl $76,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl $0,-28(%ebp)
	movl $0,60(%eax)
	movl 56(%eax),%edx
	testl %edx,%edx
	je L3225
	movl 12(%edx),%eax
	movl (%eax),%eax
	movl %eax,-12(%ebp)
	movl 16(%edx),%eax
	movl (%eax),%eax
	movl %eax,-16(%ebp)
	movl 20(%edx),%eax
	movl (%eax),%eax
	movl %eax,-20(%ebp)
	movl 24(%edx),%eax
	movl 8(%ebp),%edx
	movl (%eax),%eax
	movl %eax,-24(%ebp)
	movl 44(%edx),%edx
	movl %edx,-44(%ebp)
	testl %edx,%edx
	je L3227
	.p2align 2
L3228:
	movl -44(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L3229
	jmp *L3241(,%eax,4)
	.p2align 2
L3241:
	.long L3237
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3239
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3229
	.long L3237
	.long L3240
	.long L3240
	.long L3229
	.long L3237
	.long L3237
	.long L3240
	.long L3240
	.long L3240
	.long L3240
	.p2align 2
L3237:
	movl -44(%ebp),%edx
	movl 56(%edx),%ebx
	jmp L3229
	.p2align 2
L3239:
	movl -44(%ebp),%edx
	movl 52(%edx),%ebx
	jmp L3229
	.p2align 2
L3240:
	movl -44(%ebp),%eax
	movl 56(%eax),%ebx
L3229:
	movl %ebx,%edi
	testl %edi,%edi
	je L3243
	addl $-12,%esp
	pushl %edi
	call _active_y__65I
	addl $16,%esp
L3243:
	movl -44(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L3244
	jmp *L3256(,%eax,4)
	.p2align 2
L3256:
	.long L3252
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3254
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3244
	.long L3252
	.long L3255
	.long L3255
	.long L3244
	.long L3252
	.long L3252
	.long L3255
	.long L3255
	.long L3255
	.long L3255
	.p2align 2
L3252:
	movl -44(%ebp),%edx
	movl 52(%edx),%esi
	jmp L3244
	.p2align 2
L3254:
	movl -44(%ebp),%edx
	movl 48(%edx),%esi
	jmp L3244
	.p2align 2
L3255:
	movl -44(%ebp),%eax
	movl 52(%eax),%esi
L3244:
	movl %esi,-44(%ebp)
	testl %esi,%esi
	jne L3228
L3227:
	movl 8(%ebp),%edx
	movl %edx,-44(%ebp)
	.p2align 2
L3326:
	movl -44(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L3262
	jmp *L3274(,%eax,4)
	.p2align 2
L3274:
	.long L3270
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3272
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3262
	.long L3270
	.long L3273
	.long L3273
	.long L3262
	.long L3270
	.long L3270
	.long L3273
	.long L3273
	.long L3273
	.long L3273
	.p2align 2
L3270:
	movl -44(%ebp),%edx
	movl 48(%edx),%edx
	movl %edx,-32(%ebp)
	jmp L3262
	.p2align 2
L3272:
	movl -44(%ebp),%edx
	movl 44(%edx),%edx
	movl %edx,-32(%ebp)
	jmp L3262
	.p2align 2
L3273:
	movl -44(%ebp),%eax
	movl 48(%eax),%eax
	movl %eax,-32(%ebp)
L3262:
	movl -32(%ebp),%esi
	testl %esi,%esi
	je L3277
	.p2align 2
L3278:
	movl (%esi),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L3279
	jmp *L3291(,%eax,4)
	.p2align 2
L3291:
	.long L3290
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3288
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3279
	.long L3290
	.long L3290
	.long L3290
	.long L3279
	.long L3289
	.long L3289
	.long L3290
	.long L3289
	.long L3289
	.long L3289
	.p2align 2
L3288:
	movl 52(%esi),%edx
	jmp L3413
	.p2align 2
L3289:
	movl 56(%esi),%eax
	movl %eax,-4(%ebp)
	jmp L3279
	.p2align 2
L3290:
	movl 56(%esi),%edx
L3413:
	movl %edx,-4(%ebp)
L3279:
	movl -4(%ebp),%edi
	testl %edi,%edi
	je L3293
	movl -16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 12(%edi),%eax
	movl (%eax),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L3293
	movl 16(%edi),%eax
	movl -12(%ebp),%edx
	addl $-8,%esp
	movl (%eax),%eax
	cmpl -12(%ebp),%eax
	setg %bl
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L3293
	movl -24(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 20(%edi),%eax
	movl (%eax),%eax
	pushl %eax
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	je L3293
	movl 24(%edi),%eax
	movl -20(%ebp),%edx
	cmpl %edx,(%eax)
	jle L3293
	addl $-12,%esp
	pushl %edi
	call _active_y__65I
	addl $16,%esp
L3293:
	movl (%esi),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L3297
	jmp *L3309(,%eax,4)
	.p2align 2
L3309:
	.long L3308
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3306
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3297
	.long L3308
	.long L3308
	.long L3308
	.long L3297
	.long L3308
	.long L3308
	.long L3308
	.long L3308
	.long L3307
	.long L3308
	.p2align 2
L3306:
	movl 44(%esi),%esi
	jmp L3414
	.p2align 2
L3307:
L3308:
	movl 48(%esi),%esi
L3414:
	movl %esi,-8(%ebp)
L3297:
	movl -8(%ebp),%esi
	testl %esi,%esi
	jne L3278
L3277:
	movl -44(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L3312
	jmp *L3324(,%eax,4)
	.p2align 2
L3324:
	.long L3320
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3322
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3312
	.long L3320
	.long L3323
	.long L3323
	.long L3312
	.long L3320
	.long L3320
	.long L3323
	.long L3323
	.long L3323
	.long L3323
	.p2align 2
L3320:
	movl -44(%ebp),%edx
	movl 40(%edx),%edx
	movl %edx,-36(%ebp)
	jmp L3312
	.p2align 2
L3322:
	movl -44(%ebp),%edx
	movl 36(%edx),%edx
	movl %edx,-36(%ebp)
	jmp L3312
	.p2align 2
L3323:
	movl -44(%ebp),%eax
	movl 40(%eax),%eax
	movl %eax,-36(%ebp)
L3312:
	movl -36(%ebp),%edx
	movl %edx,-44(%ebp)
	testl %edx,%edx
	jne L3326
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__S8F
	movl _list_y__L3,%esi
	movl $0,_first_clip__P3
	movl -20(%ebp),%eax
	movl %eax,-56(%ebp)
	addl $16,%esp
	testl %esi,%esi
	je L3225
	jmp L3415
	.p2align 2
L3332:
	movl 12(%esi),%esi
	testl %esi,%esi
	je L3411
L3415:
	movl 4(%esi),%eax
	cmpb $0,1(%eax)
	je L3332
	testl %esi,%esi
	jne L3335
L3411:
	movl -24(%ebp),%edx
	movl %edx,-60(%ebp)
	jmp L3416
	.p2align 2
L3335:
	movl (%esi),%eax
	movl -24(%ebp),%edx
	movl %eax,-28(%ebp)
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call _min__TNE
	movl %eax,-60(%ebp)
	addl $16,%esp
L3416:
	subl $1,-60(%ebp)
	movl -60(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl -56(%ebp),%edx
	pushl %edx
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L3341
	movl _first_clip__P3,%eax
	movl %eax,_top_clip__Q3
	movl _list_x__K3,%eax
	movl $0,_last_clip__O3
	movl -12(%ebp),%edx
	movl %eax,-40(%ebp)
	movl 8(%ebp),%eax
	movl $0,-48(%ebp)
	movl %edx,-52(%ebp)
	movl %eax,-44(%ebp)
	.p2align 2
L3367:
	movl -40(%ebp),%edx
	movl 4(%edx),%edi
	cmpb $0,(%edi)
	je L3346
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	movl 8(%eax),%eax
	pushl %eax
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	jne L3348
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	addl $16,%esp
	testl %eax,%eax
	jne L3347
L3348:
	movl 4(%edi),%eax
	addl $-4,%esp
	pushl %eax
	pushl %edi
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__L7O
	movl -48(%ebp),%eax
	addl $16,%esp
	cmpl %eax,4(%edi)
	jle L3346
	movl -16(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -40(%ebp),%edx
	movl (%edx),%eax
	decl %eax
	pushl %eax
	call _min__TNE
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl -52(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $32,%esp
	testb %al,%al
	je L3353
	movl -60(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %ebx
	movl -56(%ebp),%eax
	pushl %eax
	movl -52(%ebp),%edx
	pushl %edx
	movl -44(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _add_clip__from__to__9XLB
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,-52(%ebp)
	addl $32,%esp
L3353:
	movl 4(%edi),%eax
	movl %eax,-48(%ebp)
	movl 8(%edi),%edi
	movl %edi,-44(%ebp)
	jmp L3346
	.p2align 2
L3347:
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__ZSP
	movl -48(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl 4(%edi),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	addl $32,%esp
	testb %al,%al
	je L3346
	movl -16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl -40(%ebp),%edx
	movl (%edx),%eax
	pushl %eax
	call _min__TNE
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl -52(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $32,%esp
	testb %al,%al
	je L3366
	movl -60(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %ebx
	movl -56(%ebp),%eax
	pushl %eax
	movl -52(%ebp),%edx
	pushl %edx
	movl -44(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _add_clip__from__to__9XLB
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,-52(%ebp)
	addl $32,%esp
	.p2align 2
L3366:
	subl $1,-48(%ebp)
	movl -48(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	addl $16,%esp
	testl %eax,%eax
	je L3366
	movl -48(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	movl 8(%eax),%eax
	movl %eax,-44(%ebp)
	addl $16,%esp
L3346:
	movl -40(%ebp),%eax
	movl 8(%eax),%eax
	movl %eax,-40(%ebp)
	testl %eax,%eax
	jne L3367
	movl -16(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -52(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L3368
	movl -60(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -16(%ebp),%eax
	pushl %eax
	movl -56(%ebp),%edx
	pushl %edx
	movl -52(%ebp),%eax
	pushl %eax
	movl -44(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _add_clip__from__to__9XLB
	addl $32,%esp
L3368:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -60(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl %eax,-56(%ebp)
	addl $32,%esp
L3341:
	testl %esi,%esi
	je L3225
	.p2align 2
L3378:
	movl 4(%esi),%edi
	cmpb $0,1(%edi)
	je L3375
	cmpb $0,8(%esi)
	je L3376
	addl $-12,%esp
	pushl %edi
	call _active_x__IMJ
	addl $16,%esp
	jmp L3375
	.p2align 2
L3376:
	addl $-12,%esp
	pushl %edi
	call _desactive_y__SMJ
	addl $-12,%esp
	pushl %edi
	call _desactive_x__WMJ
	addl $32,%esp
L3375:
	movl 12(%esi),%esi
	testl %esi,%esi
	je L3225
	movl -28(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl (%esi),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	addl $16,%esp
	testb %al,%al
	jne L3378
	jmp L3415
	.p2align 2
L3225:
	movl 8(%ebp),%edx
	movl 52(%edx),%eax
	testl %eax,%eax
	je L3381
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L3381
	jmp *L3394(,%edx,4)
	.p2align 2
L3394:
	.long L3387
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3393
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3381
	.long L3390
	.long L3383
	.long L3386
	.long L3381
	.long L3384
	.long L3385
	.long L3389
	.long L3388
	.long L3392
	.long L3391
	.p2align 2
L3383:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__SRO
	jmp L3417
	.p2align 2
L3384:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__XZY
	jmp L3417
	.p2align 2
L3385:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__JKIB
	jmp L3417
	.p2align 2
L3386:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__9IT
	jmp L3417
	.p2align 2
L3387:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__N0I
	jmp L3417
	.p2align 2
L3388:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__UJQB
	jmp L3417
	.p2align 2
L3389:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__HHLB
	jmp L3417
	.p2align 2
L3390:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__MW5B
	jmp L3417
	.p2align 2
L3391:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__FVZB
	jmp L3417
	.p2align 2
L3392:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__RFVB
	jmp L3417
	.p2align 2
L3393:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__BEF
L3417:
	addl $16,%esp
L3381:
	movl 8(%ebp),%edx
	movl 44(%edx),%eax
	testl %eax,%eax
	je L3396
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L3396
	jmp *L3409(,%edx,4)
	.p2align 2
L3409:
	.long L3403
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3407
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3396
	.long L3405
	.long L3398
	.long L3402
	.long L3396
	.long L3399
	.long L3401
	.long L3400
	.long L3404
	.long L3408
	.long L3406
	.p2align 2
L3398:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__SRO
	jmp L3396
	.p2align 2
L3399:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__XZY
	jmp L3396
	.p2align 2
L3400:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__HHLB
	jmp L3396
	.p2align 2
L3401:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__JKIB
	jmp L3396
	.p2align 2
L3402:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__9IT
	jmp L3396
	.p2align 2
L3403:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__N0I
	jmp L3396
	.p2align 2
L3404:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__UJQB
	jmp L3396
	.p2align 2
L3405:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__MW5B
	jmp L3396
	.p2align 2
L3406:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__FVZB
	jmp L3396
	.p2align 2
L3407:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__BEF
	jmp L3396
	.p2align 2
L3408:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__RFVB
L3396:
	leal -88(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_append_plan__Y3PB:
	pushl %ebp
	movl %esp,%ebp
	subl $60,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 40(%eax),%edx
	testl %edx,%edx
	je L3442
	movl (%edx),%eax
	cmpl $28,%eax
	je L3444
	ja L3449
	cmpl $17,%eax
	je L3445
	jmp L3443
	.p2align 2
L3449:
	cmpl $78,%eax
	je L3446
	jmp L3443
	.p2align 2
L3444:
	movl 52(%edx),%ecx
	jmp L3443
	.p2align 2
L3445:
L3446:
	movl 56(%edx),%ecx
L3443:
	movl %ecx,%ebx
	testl %ebx,%ebx
	je L3464
	movl 12(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-4(%ebp)
	movl 16(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-12(%ebp)
	movl 20(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-8(%ebp)
	movl 24(%ebx),%eax
	movl (%eax),%eax
	decl %eax
	jmp L3553
	.p2align 2
L3442:
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L3456
	movl 12(%eax),%edx
	jmp L3457
	.p2align 2
L3456:
	movl 8(%eax),%edx
L3457:
	subl $1,%edx
	movl %edx,-12(%ebp)
	cmpl $16,(%eax)
	jne L3460
	movl 8(%eax),%eax
	jmp L3461
	.p2align 2
L3460:
	movl 4(%eax),%eax
L3461:
	subl $1,%eax
L3553:
	movl %eax,-16(%ebp)
	movb $0,%al
	testb %al,%al
	jne L3464
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 64(%edx),%edx
	movl %edx,-20(%ebp)
	movl 8(%ebp),%edx
	addl $-12,%esp
	movl 12(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-40(%ebp)
	addl $32,%esp
	subl $1,-40(%ebp)
	addl $-8,%esp
	movl 68(%edx),%edx
	movl %edx,-24(%ebp)
	movl 8(%ebp),%edx
	addl $-12,%esp
	movl 8(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl %eax,-44(%ebp)
	addl $32,%esp
	subl $1,-44(%ebp)
	cmpl %edx,-40(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %edx
	movl -40(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L3464
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L3464
	movl -8(%ebp),%edx
	cmpl %edx,-44(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %edx
	movl -44(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L3464
	movl -16(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L3464
	movl -4(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -20(%ebp),%eax
	pushl %eax
	call _max__1ME
	movl -12(%ebp),%edx
	movl %eax,-20(%ebp)
	addl $-8,%esp
	pushl %edx
	movl -40(%ebp),%eax
	pushl %eax
	call _min__TNE
	movl -8(%ebp),%edx
	movl %eax,-40(%ebp)
	addl $32,%esp
	addl $-8,%esp
	pushl %edx
	movl -24(%ebp),%eax
	pushl %eax
	call _max__1ME
	movl -16(%ebp),%edx
	movl %eax,-24(%ebp)
	addl $-8,%esp
	pushl %edx
	movl -44(%ebp),%eax
	pushl %eax
	call _min__TNE
	movl %eax,-44(%ebp)
	addl $32,%esp
	call _clone__1OE
	movl 8(%ebp),%edx
	movl 8(%ebp),%ebx
	movl %edx,8(%eax)
	movl %eax,56(%edx)
	jmp L3527
	.p2align 2
L3529:
	testl %eax,%eax
	jne L3552
L3527:
	movl (%ebx),%ecx
	cmpl $28,%ecx
	je L3482
	ja L3486
	cmpl $17,%ecx
	je L3483
	jmp L3479
	.p2align 2
L3486:
	cmpl $78,%ecx
	je L3483
	cmpl $85,%ecx
	jne L3479
	movl 48(%ebx),%eax
	movl %eax,-28(%ebp)
	jmp L3479
	.p2align 2
L3482:
	movl 44(%ebx),%eax
	movl %eax,-28(%ebp)
	jmp L3479
	.p2align 2
L3483:
	movl 48(%ebx),%edx
	movl %edx,-28(%ebp)
L3479:
	movl -28(%ebp),%eax
L3487:
	testl %eax,%eax
	je L3488
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L3489
	jmp *L3501(,%edx,4)
	.p2align 2
L3501:
	.long L3500
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3498
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3489
	.long L3500
	.long L3500
	.long L3500
	.long L3489
	.long L3500
	.long L3500
	.long L3500
	.long L3500
	.long L3499
	.long L3500
	.p2align 2
L3498:
	movl 52(%eax),%esi
	jmp L3489
	.p2align 2
L3499:
L3500:
	movl 56(%eax),%esi
L3489:
	testl %esi,%esi
	sete %dl
	jmp L3503
	.p2align 2
L3488:
	movb $0,%dl
L3503:
	testb %dl,%dl
	je L3504
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L3505
	jmp *L3517(,%edx,4)
	.p2align 2
L3517:
	.long L3516
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3514
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3505
	.long L3516
	.long L3516
	.long L3516
	.long L3505
	.long L3516
	.long L3516
	.long L3516
	.long L3516
	.long L3515
	.long L3516
	.p2align 2
L3514:
	movl 44(%eax),%edi
	jmp L3505
	.p2align 2
L3515:
L3516:
	movl 48(%eax),%edi
L3505:
	movl %edi,%eax
	jmp L3487
	.p2align 2
L3504:
	cmpl $28,%ecx
	je L3522
	ja L3526
	cmpl $17,%ecx
	je L3523
	jmp L3519
	.p2align 2
L3526:
	cmpl $78,%ecx
	je L3523
	cmpl $85,%ecx
	jne L3519
	jmp L3523
	.p2align 2
L3522:
	movl 36(%ebx),%ebx
	jmp L3554
	.p2align 2
L3523:
	movl 40(%ebx),%ebx
L3554:
	movl %ebx,-32(%ebp)
L3519:
	movl -32(%ebp),%ebx
	testl %ebx,%ebx
	jne L3529
	testl %eax,%eax
	je L3530
L3552:
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L3531
	jmp *L3543(,%edx,4)
	.p2align 2
L3543:
	.long L3542
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3540
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3531
	.long L3542
	.long L3542
	.long L3542
	.long L3531
	.long L3542
	.long L3542
	.long L3542
	.long L3542
	.long L3541
	.long L3542
	.p2align 2
L3540:
	movl 52(%eax),%eax
	jmp L3555
	.p2align 2
L3541:
L3542:
	movl 56(%eax),%eax
L3555:
	movl %eax,-36(%ebp)
L3531:
	movl -36(%ebp),%ebx
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_prev__HWI
	movl 28(%ebx),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_next__QWI
	movl 8(%ebp),%edx
	addl $32,%esp
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	pushl %ebx
	call _set_next__QWI
	movl 4(%ebx),%ebx
	addl $-8,%esp
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	jmp L3556
	.p2align 2
L3530:
	movl _list_plan__J3,%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_next__QWI
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $16,%esp
	movl 56(%edx),%eax
	movl %eax,_list_plan__J3
	pushl $1
L3556:
	pushl %eax
	call _set_level__QTE
	addl $16,%esp
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 28(%eax),%ebx
	testl %ebx,%ebx
	je L3549
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _set_prev__HWI
	addl $-12,%esp
	pushl %ebx
	call _inc_level__XXI
	addl $32,%esp
L3549:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -44(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-44(%ebp)
	addl $32,%esp
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call _create__plan__VUE
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_x0__HXE
	movl _list_x__K3,%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _append__E1E
	movl %eax,_list_x__K3
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -40(%ebp),%eax
	pushl %eax
	call _create__plan__VUE
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_x1__90E
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	addl $-8,%esp
	movl 12(%eax),%eax
	pushl %eax
	pushl %ebx
	call _append__E1E
	movl 8(%ebp),%edx
	addl $32,%esp
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call _create_top__plan__74E
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_y0__W7E
	movl _list_y__L3,%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _append__GBF
	movl %eax,_list_y__L3
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -44(%ebp),%eax
	pushl %eax
	call _create_bottom__plan__PAF
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_y1__BBF
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	addl $-8,%esp
	movl 20(%eax),%eax
	pushl %eax
	pushl %ebx
	call _append__GBF
L3464:
	leal -72(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clip_next_child__UJQB:
	pushl %ebp
	movl %esp,%ebp
	subl $76,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl $0,-28(%ebp)
	movl $0,60(%eax)
	movl 56(%eax),%edx
	testl %edx,%edx
	je L3558
	movl 12(%edx),%eax
	movl (%eax),%eax
	movl %eax,-12(%ebp)
	movl 16(%edx),%eax
	movl (%eax),%eax
	movl %eax,-16(%ebp)
	movl 20(%edx),%eax
	movl (%eax),%eax
	movl %eax,-20(%ebp)
	movl 24(%edx),%eax
	movl 8(%ebp),%edx
	movl (%eax),%eax
	movl %eax,-24(%ebp)
	movl 44(%edx),%edx
	movl %edx,-44(%ebp)
	testl %edx,%edx
	je L3560
	.p2align 2
L3561:
	movl -44(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L3562
	jmp *L3574(,%eax,4)
	.p2align 2
L3574:
	.long L3573
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3572
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3562
	.long L3570
	.long L3570
	.long L3570
	.long L3562
	.long L3573
	.long L3573
	.long L3570
	.long L3573
	.long L3573
	.long L3573
	.p2align 2
L3570:
	movl -44(%ebp),%edx
	movl 56(%edx),%ebx
	jmp L3562
	.p2align 2
L3572:
	movl -44(%ebp),%edx
	movl 52(%edx),%ebx
	jmp L3562
	.p2align 2
L3573:
	movl -44(%ebp),%eax
	movl 56(%eax),%ebx
L3562:
	movl %ebx,%edi
	testl %edi,%edi
	je L3576
	addl $-12,%esp
	pushl %edi
	call _active_y__65I
	addl $16,%esp
L3576:
	movl -44(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L3577
	jmp *L3589(,%eax,4)
	.p2align 2
L3589:
	.long L3588
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3587
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3577
	.long L3585
	.long L3585
	.long L3585
	.long L3577
	.long L3588
	.long L3588
	.long L3585
	.long L3588
	.long L3588
	.long L3588
	.p2align 2
L3585:
	movl -44(%ebp),%edx
	movl 52(%edx),%esi
	jmp L3577
	.p2align 2
L3587:
	movl -44(%ebp),%edx
	movl 48(%edx),%esi
	jmp L3577
	.p2align 2
L3588:
	movl -44(%ebp),%eax
	movl 52(%eax),%esi
L3577:
	movl %esi,-44(%ebp)
	testl %esi,%esi
	jne L3561
L3560:
	movl 8(%ebp),%edx
	movl %edx,-44(%ebp)
	.p2align 2
L3659:
	movl -44(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L3595
	jmp *L3607(,%eax,4)
	.p2align 2
L3607:
	.long L3606
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3605
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3595
	.long L3603
	.long L3603
	.long L3603
	.long L3595
	.long L3606
	.long L3606
	.long L3603
	.long L3606
	.long L3606
	.long L3606
	.p2align 2
L3603:
	movl -44(%ebp),%edx
	movl 48(%edx),%edx
	movl %edx,-32(%ebp)
	jmp L3595
	.p2align 2
L3605:
	movl -44(%ebp),%edx
	movl 44(%edx),%edx
	movl %edx,-32(%ebp)
	jmp L3595
	.p2align 2
L3606:
	movl -44(%ebp),%eax
	movl 48(%eax),%eax
	movl %eax,-32(%ebp)
L3595:
	movl -32(%ebp),%esi
	testl %esi,%esi
	je L3610
	.p2align 2
L3611:
	movl (%esi),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L3612
	jmp *L3624(,%eax,4)
	.p2align 2
L3624:
	.long L3623
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3621
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3612
	.long L3623
	.long L3622
	.long L3622
	.long L3612
	.long L3623
	.long L3623
	.long L3622
	.long L3623
	.long L3622
	.long L3622
	.p2align 2
L3621:
	movl 52(%esi),%edx
	jmp L3746
	.p2align 2
L3622:
	movl 56(%esi),%eax
	movl %eax,-4(%ebp)
	jmp L3612
	.p2align 2
L3623:
	movl 56(%esi),%edx
L3746:
	movl %edx,-4(%ebp)
L3612:
	movl -4(%ebp),%edi
	testl %edi,%edi
	je L3626
	movl -16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 12(%edi),%eax
	movl (%eax),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L3626
	movl 16(%edi),%eax
	movl -12(%ebp),%edx
	addl $-8,%esp
	movl (%eax),%eax
	cmpl -12(%ebp),%eax
	setg %bl
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L3626
	movl -24(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 20(%edi),%eax
	movl (%eax),%eax
	pushl %eax
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	je L3626
	movl 24(%edi),%eax
	movl -20(%ebp),%edx
	cmpl %edx,(%eax)
	jle L3626
	addl $-12,%esp
	pushl %edi
	call _active_y__65I
	addl $16,%esp
L3626:
	movl (%esi),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L3630
	jmp *L3642(,%eax,4)
	.p2align 2
L3642:
	.long L3641
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3639
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3630
	.long L3641
	.long L3641
	.long L3641
	.long L3630
	.long L3641
	.long L3641
	.long L3641
	.long L3641
	.long L3640
	.long L3641
	.p2align 2
L3639:
	movl 44(%esi),%esi
	jmp L3747
	.p2align 2
L3640:
L3641:
	movl 48(%esi),%esi
L3747:
	movl %esi,-8(%ebp)
L3630:
	movl -8(%ebp),%esi
	testl %esi,%esi
	jne L3611
L3610:
	movl -44(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L3645
	jmp *L3657(,%eax,4)
	.p2align 2
L3657:
	.long L3656
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3655
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3645
	.long L3653
	.long L3653
	.long L3653
	.long L3645
	.long L3656
	.long L3656
	.long L3653
	.long L3656
	.long L3656
	.long L3656
	.p2align 2
L3653:
	movl -44(%ebp),%edx
	movl 40(%edx),%edx
	movl %edx,-36(%ebp)
	jmp L3645
	.p2align 2
L3655:
	movl -44(%ebp),%edx
	movl 36(%edx),%edx
	movl %edx,-36(%ebp)
	jmp L3645
	.p2align 2
L3656:
	movl -44(%ebp),%eax
	movl 40(%eax),%eax
	movl %eax,-36(%ebp)
L3645:
	movl -36(%ebp),%edx
	movl %edx,-44(%ebp)
	testl %edx,%edx
	jne L3659
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__S8F
	movl _list_y__L3,%esi
	movl $0,_first_clip__P3
	movl -20(%ebp),%eax
	movl %eax,-56(%ebp)
	addl $16,%esp
	testl %esi,%esi
	je L3558
	jmp L3748
	.p2align 2
L3665:
	movl 12(%esi),%esi
	testl %esi,%esi
	je L3744
L3748:
	movl 4(%esi),%eax
	cmpb $0,1(%eax)
	je L3665
	testl %esi,%esi
	jne L3668
L3744:
	movl -24(%ebp),%edx
	movl %edx,-60(%ebp)
	jmp L3749
	.p2align 2
L3668:
	movl (%esi),%eax
	movl -24(%ebp),%edx
	movl %eax,-28(%ebp)
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call _min__TNE
	movl %eax,-60(%ebp)
	addl $16,%esp
L3749:
	subl $1,-60(%ebp)
	movl -60(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl -56(%ebp),%edx
	pushl %edx
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L3674
	movl _first_clip__P3,%eax
	movl %eax,_top_clip__Q3
	movl _list_x__K3,%eax
	movl $0,_last_clip__O3
	movl -12(%ebp),%edx
	movl %eax,-40(%ebp)
	movl 8(%ebp),%eax
	movl $0,-48(%ebp)
	movl %edx,-52(%ebp)
	movl %eax,-44(%ebp)
	.p2align 2
L3700:
	movl -40(%ebp),%edx
	movl 4(%edx),%edi
	cmpb $0,(%edi)
	je L3679
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	movl 8(%eax),%eax
	pushl %eax
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	jne L3681
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	addl $16,%esp
	testl %eax,%eax
	jne L3680
L3681:
	movl 4(%edi),%eax
	addl $-4,%esp
	pushl %eax
	pushl %edi
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__L7O
	movl -48(%ebp),%eax
	addl $16,%esp
	cmpl %eax,4(%edi)
	jle L3679
	movl -16(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -40(%ebp),%edx
	movl (%edx),%eax
	decl %eax
	pushl %eax
	call _min__TNE
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl -52(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $32,%esp
	testb %al,%al
	je L3686
	movl -60(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %ebx
	movl -56(%ebp),%eax
	pushl %eax
	movl -52(%ebp),%edx
	pushl %edx
	movl -44(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _add_clip__from__to__Y0QB
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,-52(%ebp)
	addl $32,%esp
L3686:
	movl 4(%edi),%eax
	movl %eax,-48(%ebp)
	movl 8(%edi),%edi
	movl %edi,-44(%ebp)
	jmp L3679
	.p2align 2
L3680:
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__ZSP
	movl -48(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl 4(%edi),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	addl $32,%esp
	testb %al,%al
	je L3679
	movl -16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl -40(%ebp),%edx
	movl (%edx),%eax
	pushl %eax
	call _min__TNE
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl -52(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $32,%esp
	testb %al,%al
	je L3699
	movl -60(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %ebx
	movl -56(%ebp),%eax
	pushl %eax
	movl -52(%ebp),%edx
	pushl %edx
	movl -44(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _add_clip__from__to__Y0QB
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,-52(%ebp)
	addl $32,%esp
	.p2align 2
L3699:
	subl $1,-48(%ebp)
	movl -48(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	addl $16,%esp
	testl %eax,%eax
	je L3699
	movl -48(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	movl 8(%eax),%eax
	movl %eax,-44(%ebp)
	addl $16,%esp
L3679:
	movl -40(%ebp),%eax
	movl 8(%eax),%eax
	movl %eax,-40(%ebp)
	testl %eax,%eax
	jne L3700
	movl -16(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -52(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L3701
	movl -60(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -16(%ebp),%eax
	pushl %eax
	movl -56(%ebp),%edx
	pushl %edx
	movl -52(%ebp),%eax
	pushl %eax
	movl -44(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _add_clip__from__to__Y0QB
	addl $32,%esp
L3701:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -60(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl %eax,-56(%ebp)
	addl $32,%esp
L3674:
	testl %esi,%esi
	je L3558
	.p2align 2
L3711:
	movl 4(%esi),%edi
	cmpb $0,1(%edi)
	je L3708
	cmpb $0,8(%esi)
	je L3709
	addl $-12,%esp
	pushl %edi
	call _active_x__IMJ
	addl $16,%esp
	jmp L3708
	.p2align 2
L3709:
	addl $-12,%esp
	pushl %edi
	call _desactive_y__SMJ
	addl $-12,%esp
	pushl %edi
	call _desactive_x__WMJ
	addl $32,%esp
L3708:
	movl 12(%esi),%esi
	testl %esi,%esi
	je L3558
	movl -28(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl (%esi),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	addl $16,%esp
	testb %al,%al
	jne L3711
	jmp L3748
	.p2align 2
L3558:
	movl 8(%ebp),%edx
	movl 52(%edx),%eax
	testl %eax,%eax
	je L3714
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L3714
	jmp *L3727(,%edx,4)
	.p2align 2
L3727:
	.long L3721
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3726
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3714
	.long L3723
	.long L3716
	.long L3720
	.long L3714
	.long L3717
	.long L3719
	.long L3718
	.long L3722
	.long L3725
	.long L3724
	.p2align 2
L3716:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__SRO
	jmp L3750
	.p2align 2
L3717:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__XZY
	jmp L3750
	.p2align 2
L3718:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__HHLB
	jmp L3750
	.p2align 2
L3719:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__JKIB
	jmp L3750
	.p2align 2
L3720:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__9IT
	jmp L3750
	.p2align 2
L3721:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__N0I
	jmp L3750
	.p2align 2
L3722:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__UJQB
	jmp L3750
	.p2align 2
L3723:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__MW5B
	jmp L3750
	.p2align 2
L3724:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__FVZB
	jmp L3750
	.p2align 2
L3725:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__RFVB
	jmp L3750
	.p2align 2
L3726:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__BEF
L3750:
	addl $16,%esp
L3714:
	movl 8(%ebp),%edx
	movl 44(%edx),%eax
	testl %eax,%eax
	je L3729
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L3729
	jmp *L3742(,%edx,4)
	.p2align 2
L3742:
	.long L3737
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3740
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3729
	.long L3738
	.long L3732
	.long L3736
	.long L3729
	.long L3733
	.long L3735
	.long L3734
	.long L3731
	.long L3741
	.long L3739
	.p2align 2
L3731:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__UJQB
	jmp L3729
	.p2align 2
L3732:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__SRO
	jmp L3729
	.p2align 2
L3733:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__XZY
	jmp L3729
	.p2align 2
L3734:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__HHLB
	jmp L3729
	.p2align 2
L3735:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__JKIB
	jmp L3729
	.p2align 2
L3736:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__9IT
	jmp L3729
	.p2align 2
L3737:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__N0I
	jmp L3729
	.p2align 2
L3738:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__MW5B
	jmp L3729
	.p2align 2
L3739:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__FVZB
	jmp L3729
	.p2align 2
L3740:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__BEF
	jmp L3729
	.p2align 2
L3741:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__RFVB
L3729:
	leal -88(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_append_plan__PZUB:
	pushl %ebp
	movl %esp,%ebp
	subl $60,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 40(%eax),%edx
	testl %edx,%edx
	je L3782
	movl (%edx),%eax
	cmpl $28,%eax
	je L3784
	ja L3789
	cmpl $17,%eax
	je L3785
	jmp L3783
	.p2align 2
L3789:
	cmpl $78,%eax
	je L3786
	jmp L3783
	.p2align 2
L3784:
	movl 52(%edx),%ecx
	jmp L3783
	.p2align 2
L3785:
L3786:
	movl 56(%edx),%ecx
L3783:
	movl %ecx,%ebx
	testl %ebx,%ebx
	je L3804
	movl 12(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-4(%ebp)
	movl 16(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-12(%ebp)
	movl 20(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-8(%ebp)
	movl 24(%ebx),%eax
	movl (%eax),%eax
	decl %eax
	jmp L3893
	.p2align 2
L3782:
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L3796
	movl 12(%eax),%edx
	jmp L3797
	.p2align 2
L3796:
	movl 8(%eax),%edx
L3797:
	subl $1,%edx
	movl %edx,-12(%ebp)
	cmpl $16,(%eax)
	jne L3800
	movl 8(%eax),%eax
	jmp L3801
	.p2align 2
L3800:
	movl 4(%eax),%eax
L3801:
	subl $1,%eax
L3893:
	movl %eax,-16(%ebp)
	movb $0,%al
	testb %al,%al
	jne L3804
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 64(%edx),%edx
	movl %edx,-20(%ebp)
	movl 8(%ebp),%edx
	addl $-12,%esp
	movl 12(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-40(%ebp)
	addl $32,%esp
	subl $1,-40(%ebp)
	addl $-8,%esp
	movl 68(%edx),%edx
	movl %edx,-24(%ebp)
	movl 8(%ebp),%edx
	addl $-12,%esp
	movl 8(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl %eax,-44(%ebp)
	addl $32,%esp
	subl $1,-44(%ebp)
	cmpl %edx,-40(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %edx
	movl -40(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L3804
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L3804
	movl -8(%ebp),%edx
	cmpl %edx,-44(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %edx
	movl -44(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L3804
	movl -16(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L3804
	movl -4(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -20(%ebp),%eax
	pushl %eax
	call _max__1ME
	movl -12(%ebp),%edx
	movl %eax,-20(%ebp)
	addl $-8,%esp
	pushl %edx
	movl -40(%ebp),%eax
	pushl %eax
	call _min__TNE
	movl -8(%ebp),%edx
	movl %eax,-40(%ebp)
	addl $32,%esp
	addl $-8,%esp
	pushl %edx
	movl -24(%ebp),%eax
	pushl %eax
	call _max__1ME
	movl -16(%ebp),%edx
	movl %eax,-24(%ebp)
	addl $-8,%esp
	pushl %edx
	movl -44(%ebp),%eax
	pushl %eax
	call _min__TNE
	movl %eax,-44(%ebp)
	addl $32,%esp
	call _clone__1OE
	movl 8(%ebp),%edx
	movl 8(%ebp),%ebx
	movl %edx,8(%eax)
	movl %eax,56(%edx)
	jmp L3867
	.p2align 2
L3869:
	testl %eax,%eax
	jne L3892
L3867:
	movl (%ebx),%ecx
	cmpl $28,%ecx
	je L3822
	ja L3826
	cmpl $17,%ecx
	je L3823
	jmp L3819
	.p2align 2
L3826:
	cmpl $78,%ecx
	je L3823
	cmpl $86,%ecx
	jne L3819
	movl 48(%ebx),%eax
	movl %eax,-28(%ebp)
	jmp L3819
	.p2align 2
L3822:
	movl 44(%ebx),%eax
	movl %eax,-28(%ebp)
	jmp L3819
	.p2align 2
L3823:
	movl 48(%ebx),%edx
	movl %edx,-28(%ebp)
L3819:
	movl -28(%ebp),%eax
L3827:
	testl %eax,%eax
	je L3828
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L3829
	jmp *L3841(,%edx,4)
	.p2align 2
L3841:
	.long L3840
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3839
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3829
	.long L3840
	.long L3840
	.long L3840
	.long L3829
	.long L3840
	.long L3840
	.long L3840
	.long L3840
	.long L3840
	.long L3840
	.p2align 2
L3839:
	movl 52(%eax),%esi
	jmp L3829
	.p2align 2
L3840:
	movl 56(%eax),%esi
L3829:
	testl %esi,%esi
	sete %dl
	jmp L3843
	.p2align 2
L3828:
	movb $0,%dl
L3843:
	testb %dl,%dl
	je L3844
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L3845
	jmp *L3857(,%edx,4)
	.p2align 2
L3857:
	.long L3856
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3855
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3845
	.long L3856
	.long L3856
	.long L3856
	.long L3845
	.long L3856
	.long L3856
	.long L3856
	.long L3856
	.long L3856
	.long L3856
	.p2align 2
L3855:
	movl 44(%eax),%edi
	jmp L3845
	.p2align 2
L3856:
	movl 48(%eax),%edi
L3845:
	movl %edi,%eax
	jmp L3827
	.p2align 2
L3844:
	cmpl $28,%ecx
	je L3862
	ja L3866
	cmpl $17,%ecx
	je L3863
	jmp L3859
	.p2align 2
L3866:
	cmpl $78,%ecx
	je L3863
	cmpl $86,%ecx
	jne L3859
	jmp L3863
	.p2align 2
L3862:
	movl 36(%ebx),%ebx
	jmp L3894
	.p2align 2
L3863:
	movl 40(%ebx),%ebx
L3894:
	movl %ebx,-32(%ebp)
L3859:
	movl -32(%ebp),%ebx
	testl %ebx,%ebx
	jne L3869
	testl %eax,%eax
	je L3870
L3892:
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L3871
	jmp *L3883(,%edx,4)
	.p2align 2
L3883:
	.long L3882
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3881
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3871
	.long L3882
	.long L3882
	.long L3882
	.long L3871
	.long L3882
	.long L3882
	.long L3882
	.long L3882
	.long L3882
	.long L3882
	.p2align 2
L3881:
	movl 52(%eax),%eax
	jmp L3895
	.p2align 2
L3882:
	movl 56(%eax),%eax
L3895:
	movl %eax,-36(%ebp)
L3871:
	movl -36(%ebp),%ebx
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_prev__HWI
	movl 28(%ebx),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_next__QWI
	movl 8(%ebp),%edx
	addl $32,%esp
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	pushl %ebx
	call _set_next__QWI
	movl 4(%ebx),%ebx
	addl $-8,%esp
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	jmp L3896
	.p2align 2
L3870:
	movl _list_plan__J3,%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_next__QWI
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $16,%esp
	movl 56(%edx),%eax
	movl %eax,_list_plan__J3
	pushl $1
L3896:
	pushl %eax
	call _set_level__QTE
	addl $16,%esp
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 28(%eax),%ebx
	testl %ebx,%ebx
	je L3889
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _set_prev__HWI
	addl $-12,%esp
	pushl %ebx
	call _inc_level__XXI
	addl $32,%esp
L3889:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -44(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-44(%ebp)
	addl $32,%esp
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call _create__plan__VUE
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_x0__HXE
	movl _list_x__K3,%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _append__E1E
	movl %eax,_list_x__K3
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -40(%ebp),%eax
	pushl %eax
	call _create__plan__VUE
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_x1__90E
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	addl $-8,%esp
	movl 12(%eax),%eax
	pushl %eax
	pushl %ebx
	call _append__E1E
	movl 8(%ebp),%edx
	addl $32,%esp
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call _create_top__plan__74E
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_y0__W7E
	movl _list_y__L3,%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _append__GBF
	movl %eax,_list_y__L3
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -44(%ebp),%eax
	pushl %eax
	call _create_bottom__plan__PAF
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_y1__BBF
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	addl $-8,%esp
	movl 20(%eax),%eax
	pushl %eax
	pushl %ebx
	call _append__GBF
L3804:
	leal -72(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clip_next_child__RFVB:
	pushl %ebp
	movl %esp,%ebp
	subl $76,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl $0,-28(%ebp)
	movl $0,60(%eax)
	movl 56(%eax),%edx
	testl %edx,%edx
	je L3898
	movl 12(%edx),%eax
	movl (%eax),%eax
	movl %eax,-12(%ebp)
	movl 16(%edx),%eax
	movl (%eax),%eax
	movl %eax,-16(%ebp)
	movl 20(%edx),%eax
	movl (%eax),%eax
	movl %eax,-20(%ebp)
	movl 24(%edx),%eax
	movl 8(%ebp),%edx
	movl (%eax),%eax
	movl %eax,-24(%ebp)
	movl 44(%edx),%edx
	movl %edx,-44(%ebp)
	testl %edx,%edx
	je L3900
	.p2align 2
L3901:
	movl -44(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L3902
	jmp *L3914(,%eax,4)
	.p2align 2
L3914:
	.long L3912
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3913
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3902
	.long L3911
	.long L3912
	.long L3912
	.long L3902
	.long L3911
	.long L3911
	.long L3912
	.long L3911
	.long L3911
	.long L3912
	.p2align 2
L3911:
	movl -44(%ebp),%eax
	movl 56(%eax),%ebx
	jmp L3902
	.p2align 2
L3912:
	movl -44(%ebp),%edx
	movl 56(%edx),%ebx
	jmp L3902
	.p2align 2
L3913:
	movl -44(%ebp),%eax
	movl 52(%eax),%ebx
L3902:
	movl %ebx,%edi
	testl %edi,%edi
	je L3916
	addl $-12,%esp
	pushl %edi
	call _active_y__65I
	addl $16,%esp
L3916:
	movl -44(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L3917
	jmp *L3929(,%eax,4)
	.p2align 2
L3929:
	.long L3927
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3928
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3917
	.long L3926
	.long L3927
	.long L3927
	.long L3917
	.long L3926
	.long L3926
	.long L3927
	.long L3926
	.long L3926
	.long L3927
	.p2align 2
L3926:
	movl -44(%ebp),%eax
	movl 52(%eax),%esi
	jmp L3917
	.p2align 2
L3927:
	movl -44(%ebp),%edx
	movl 52(%edx),%esi
	jmp L3917
	.p2align 2
L3928:
	movl -44(%ebp),%eax
	movl 48(%eax),%esi
L3917:
	movl %esi,-44(%ebp)
	testl %esi,%esi
	jne L3901
L3900:
	movl 8(%ebp),%edx
	movl %edx,-44(%ebp)
	.p2align 2
L3999:
	movl -44(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L3935
	jmp *L3947(,%eax,4)
	.p2align 2
L3947:
	.long L3945
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3946
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3935
	.long L3944
	.long L3945
	.long L3945
	.long L3935
	.long L3938
	.long L3940
	.long L3945
	.long L3936
	.long L3942
	.long L3945
	.p2align 2
L3936:
	movl -44(%ebp),%eax
	movl 48(%eax),%eax
	jmp L4086
	.p2align 2
L3938:
	movl -44(%ebp),%eax
	movl 48(%eax),%eax
	jmp L4086
	.p2align 2
L3940:
	movl -44(%ebp),%eax
	movl 48(%eax),%eax
	jmp L4086
	.p2align 2
L3942:
	movl -44(%ebp),%eax
	movl 48(%eax),%eax
	jmp L4086
	.p2align 2
L3944:
	movl -44(%ebp),%eax
	movl 48(%eax),%eax
	jmp L4086
	.p2align 2
L3945:
	movl -44(%ebp),%edx
	movl 48(%edx),%edx
	movl %edx,-32(%ebp)
	jmp L3935
	.p2align 2
L3946:
	movl -44(%ebp),%eax
	movl 44(%eax),%eax
L4086:
	movl %eax,-32(%ebp)
L3935:
	movl -32(%ebp),%esi
	testl %esi,%esi
	je L3950
	.p2align 2
L3951:
	movl (%esi),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L3952
	jmp *L3964(,%eax,4)
	.p2align 2
L3964:
	.long L3963
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3962
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3952
	.long L3960
	.long L3960
	.long L3960
	.long L3952
	.long L3963
	.long L3963
	.long L3960
	.long L3963
	.long L3963
	.long L3963
	.p2align 2
L3960:
	movl 56(%esi),%eax
	movl %eax,-4(%ebp)
	jmp L3952
	.p2align 2
L3962:
	movl 52(%esi),%eax
	movl %eax,-4(%ebp)
	jmp L3952
	.p2align 2
L3963:
	movl 56(%esi),%edx
	movl %edx,-4(%ebp)
L3952:
	movl -4(%ebp),%edi
	testl %edi,%edi
	je L3966
	movl -16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 12(%edi),%eax
	movl (%eax),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L3966
	movl 16(%edi),%eax
	movl -12(%ebp),%edx
	addl $-8,%esp
	movl (%eax),%eax
	cmpl -12(%ebp),%eax
	setg %bl
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L3966
	movl -24(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 20(%edi),%eax
	movl (%eax),%eax
	pushl %eax
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	je L3966
	movl 24(%edi),%eax
	movl -20(%ebp),%edx
	cmpl %edx,(%eax)
	jle L3966
	addl $-12,%esp
	pushl %edi
	call _active_y__65I
	addl $16,%esp
L3966:
	movl (%esi),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L3970
	jmp *L3982(,%eax,4)
	.p2align 2
L3982:
	.long L3981
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3980
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3970
	.long L3981
	.long L3981
	.long L3981
	.long L3970
	.long L3981
	.long L3981
	.long L3981
	.long L3981
	.long L3981
	.long L3981
	.p2align 2
L3980:
	movl 44(%esi),%esi
	jmp L4087
	.p2align 2
L3981:
	movl 48(%esi),%esi
L4087:
	movl %esi,-8(%ebp)
L3970:
	movl -8(%ebp),%esi
	testl %esi,%esi
	jne L3951
L3950:
	movl -44(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L3985
	jmp *L3997(,%eax,4)
	.p2align 2
L3997:
	.long L3995
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3996
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3985
	.long L3994
	.long L3995
	.long L3995
	.long L3985
	.long L3988
	.long L3990
	.long L3995
	.long L3986
	.long L3992
	.long L3995
	.p2align 2
L3986:
	movl -44(%ebp),%eax
	movl 40(%eax),%eax
	jmp L4088
	.p2align 2
L3988:
	movl -44(%ebp),%eax
	movl 40(%eax),%eax
	jmp L4088
	.p2align 2
L3990:
	movl -44(%ebp),%eax
	movl 40(%eax),%eax
	jmp L4088
	.p2align 2
L3992:
	movl -44(%ebp),%eax
	movl 40(%eax),%eax
	jmp L4088
	.p2align 2
L3994:
	movl -44(%ebp),%eax
	movl 40(%eax),%eax
	jmp L4088
	.p2align 2
L3995:
	movl -44(%ebp),%edx
	movl 40(%edx),%edx
	movl %edx,-36(%ebp)
	jmp L3985
	.p2align 2
L3996:
	movl -44(%ebp),%eax
	movl 36(%eax),%eax
L4088:
	movl %eax,-36(%ebp)
L3985:
	movl -36(%ebp),%edx
	movl %edx,-44(%ebp)
	testl %edx,%edx
	jne L3999
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__S8F
	movl _list_y__L3,%esi
	movl $0,_first_clip__P3
	movl -20(%ebp),%eax
	movl %eax,-56(%ebp)
	addl $16,%esp
	testl %esi,%esi
	je L3898
	jmp L4089
	.p2align 2
L4005:
	movl 12(%esi),%esi
	testl %esi,%esi
	je L4084
L4089:
	movl 4(%esi),%eax
	cmpb $0,1(%eax)
	je L4005
	testl %esi,%esi
	jne L4008
L4084:
	movl -24(%ebp),%edx
	movl %edx,-60(%ebp)
	jmp L4090
	.p2align 2
L4008:
	movl (%esi),%eax
	movl -24(%ebp),%edx
	movl %eax,-28(%ebp)
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call _min__TNE
	movl %eax,-60(%ebp)
	addl $16,%esp
L4090:
	subl $1,-60(%ebp)
	movl -60(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl -56(%ebp),%edx
	pushl %edx
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L4014
	movl _first_clip__P3,%eax
	movl %eax,_top_clip__Q3
	movl _list_x__K3,%eax
	movl $0,_last_clip__O3
	movl -12(%ebp),%edx
	movl %eax,-40(%ebp)
	movl 8(%ebp),%eax
	movl $0,-48(%ebp)
	movl %edx,-52(%ebp)
	movl %eax,-44(%ebp)
	.p2align 2
L4040:
	movl -40(%ebp),%edx
	movl 4(%edx),%edi
	cmpb $0,(%edi)
	je L4019
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	movl 8(%eax),%eax
	pushl %eax
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	jne L4021
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	addl $16,%esp
	testl %eax,%eax
	jne L4020
L4021:
	movl 4(%edi),%eax
	addl $-4,%esp
	pushl %eax
	pushl %edi
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__L7O
	movl -48(%ebp),%eax
	addl $16,%esp
	cmpl %eax,4(%edi)
	jle L4019
	movl -16(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -40(%ebp),%edx
	movl (%edx),%eax
	decl %eax
	pushl %eax
	call _min__TNE
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl -52(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $32,%esp
	testb %al,%al
	je L4026
	movl -60(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %ebx
	movl -56(%ebp),%eax
	pushl %eax
	movl -52(%ebp),%edx
	pushl %edx
	movl -44(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _add_clip__from__to__7WVB
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,-52(%ebp)
	addl $32,%esp
L4026:
	movl 4(%edi),%eax
	movl %eax,-48(%ebp)
	movl 8(%edi),%edi
	movl %edi,-44(%ebp)
	jmp L4019
	.p2align 2
L4020:
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__ZSP
	movl -48(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl 4(%edi),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	addl $32,%esp
	testb %al,%al
	je L4019
	movl -16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl -40(%ebp),%edx
	movl (%edx),%eax
	pushl %eax
	call _min__TNE
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl -52(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $32,%esp
	testb %al,%al
	je L4039
	movl -60(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %ebx
	movl -56(%ebp),%eax
	pushl %eax
	movl -52(%ebp),%edx
	pushl %edx
	movl -44(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _add_clip__from__to__7WVB
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,-52(%ebp)
	addl $32,%esp
	.p2align 2
L4039:
	subl $1,-48(%ebp)
	movl -48(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	addl $16,%esp
	testl %eax,%eax
	je L4039
	movl -48(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	movl 8(%eax),%eax
	movl %eax,-44(%ebp)
	addl $16,%esp
L4019:
	movl -40(%ebp),%eax
	movl 8(%eax),%eax
	movl %eax,-40(%ebp)
	testl %eax,%eax
	jne L4040
	movl -16(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -52(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L4041
	movl -60(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -16(%ebp),%eax
	pushl %eax
	movl -56(%ebp),%edx
	pushl %edx
	movl -52(%ebp),%eax
	pushl %eax
	movl -44(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _add_clip__from__to__7WVB
	addl $32,%esp
L4041:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -60(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl %eax,-56(%ebp)
	addl $32,%esp
L4014:
	testl %esi,%esi
	je L3898
	.p2align 2
L4051:
	movl 4(%esi),%edi
	cmpb $0,1(%edi)
	je L4048
	cmpb $0,8(%esi)
	je L4049
	addl $-12,%esp
	pushl %edi
	call _active_x__IMJ
	addl $16,%esp
	jmp L4048
	.p2align 2
L4049:
	addl $-12,%esp
	pushl %edi
	call _desactive_y__SMJ
	addl $-12,%esp
	pushl %edi
	call _desactive_x__WMJ
	addl $32,%esp
L4048:
	movl 12(%esi),%esi
	testl %esi,%esi
	je L3898
	movl -28(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl (%esi),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	addl $16,%esp
	testb %al,%al
	jne L4051
	jmp L4089
	.p2align 2
L3898:
	movl 8(%ebp),%edx
	movl 52(%edx),%eax
	testl %eax,%eax
	je L4054
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L4054
	jmp *L4067(,%edx,4)
	.p2align 2
L4067:
	.long L4062
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4066
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4054
	.long L4063
	.long L4057
	.long L4061
	.long L4054
	.long L4058
	.long L4060
	.long L4059
	.long L4056
	.long L4065
	.long L4064
	.p2align 2
L4056:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__UJQB
	jmp L4091
	.p2align 2
L4057:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__SRO
	jmp L4091
	.p2align 2
L4058:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__XZY
	jmp L4091
	.p2align 2
L4059:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__HHLB
	jmp L4091
	.p2align 2
L4060:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__JKIB
	jmp L4091
	.p2align 2
L4061:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__9IT
	jmp L4091
	.p2align 2
L4062:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__N0I
	jmp L4091
	.p2align 2
L4063:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__MW5B
	jmp L4091
	.p2align 2
L4064:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__FVZB
	jmp L4091
	.p2align 2
L4065:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__RFVB
	jmp L4091
	.p2align 2
L4066:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__BEF
L4091:
	addl $16,%esp
L4054:
	movl 8(%ebp),%edx
	movl 44(%edx),%eax
	testl %eax,%eax
	je L4069
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L4069
	jmp *L4082(,%edx,4)
	.p2align 2
L4082:
	.long L4078
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4081
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4069
	.long L4079
	.long L4072
	.long L4076
	.long L4069
	.long L4073
	.long L4075
	.long L4074
	.long L4071
	.long L4077
	.long L4080
	.p2align 2
L4071:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__UJQB
	jmp L4069
	.p2align 2
L4072:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__SRO
	jmp L4069
	.p2align 2
L4073:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__XZY
	jmp L4069
	.p2align 2
L4074:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__HHLB
	jmp L4069
	.p2align 2
L4075:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__JKIB
	jmp L4069
	.p2align 2
L4076:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__9IT
	jmp L4069
	.p2align 2
L4077:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__RFVB
	jmp L4069
	.p2align 2
L4078:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__N0I
	jmp L4069
	.p2align 2
L4079:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__MW5B
	jmp L4069
	.p2align 2
L4080:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__FVZB
	jmp L4069
	.p2align 2
L4081:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__BEF
L4069:
	leal -88(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_append_plan__7EZB:
	pushl %ebp
	movl %esp,%ebp
	subl $60,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 40(%eax),%edx
	testl %edx,%edx
	je L4116
	movl (%edx),%eax
	cmpl $28,%eax
	je L4118
	ja L4123
	cmpl $17,%eax
	je L4119
	jmp L4117
	.p2align 2
L4123:
	cmpl $78,%eax
	je L4120
	jmp L4117
	.p2align 2
L4118:
	movl 52(%edx),%ecx
	jmp L4117
	.p2align 2
L4119:
L4120:
	movl 56(%edx),%ecx
L4117:
	movl %ecx,%ebx
	testl %ebx,%ebx
	je L4138
	movl 12(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-4(%ebp)
	movl 16(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-12(%ebp)
	movl 20(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-8(%ebp)
	movl 24(%ebx),%eax
	movl (%eax),%eax
	decl %eax
	jmp L4227
	.p2align 2
L4116:
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L4130
	movl 12(%eax),%edx
	jmp L4131
	.p2align 2
L4130:
	movl 8(%eax),%edx
L4131:
	subl $1,%edx
	movl %edx,-12(%ebp)
	cmpl $16,(%eax)
	jne L4134
	movl 8(%eax),%eax
	jmp L4135
	.p2align 2
L4134:
	movl 4(%eax),%eax
L4135:
	subl $1,%eax
L4227:
	movl %eax,-16(%ebp)
	movb $0,%al
	testb %al,%al
	jne L4138
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 64(%edx),%edx
	movl %edx,-20(%ebp)
	movl 8(%ebp),%edx
	addl $-12,%esp
	movl 12(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-40(%ebp)
	addl $32,%esp
	subl $1,-40(%ebp)
	addl $-8,%esp
	movl 68(%edx),%edx
	movl %edx,-24(%ebp)
	movl 8(%ebp),%edx
	addl $-12,%esp
	movl 8(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl %eax,-44(%ebp)
	addl $32,%esp
	subl $1,-44(%ebp)
	cmpl %edx,-40(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %edx
	movl -40(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L4138
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L4138
	movl -8(%ebp),%edx
	cmpl %edx,-44(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %edx
	movl -44(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L4138
	movl -16(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L4138
	movl -4(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -20(%ebp),%eax
	pushl %eax
	call _max__1ME
	movl -12(%ebp),%edx
	movl %eax,-20(%ebp)
	addl $-8,%esp
	pushl %edx
	movl -40(%ebp),%eax
	pushl %eax
	call _min__TNE
	movl -8(%ebp),%edx
	movl %eax,-40(%ebp)
	addl $32,%esp
	addl $-8,%esp
	pushl %edx
	movl -24(%ebp),%eax
	pushl %eax
	call _max__1ME
	movl -16(%ebp),%edx
	movl %eax,-24(%ebp)
	addl $-8,%esp
	pushl %edx
	movl -44(%ebp),%eax
	pushl %eax
	call _min__TNE
	movl %eax,-44(%ebp)
	addl $32,%esp
	call _clone__1OE
	movl 8(%ebp),%edx
	movl 8(%ebp),%ebx
	movl %edx,8(%eax)
	movl %eax,56(%edx)
	jmp L4201
	.p2align 2
L4203:
	testl %eax,%eax
	jne L4226
L4201:
	movl (%ebx),%ecx
	cmpl $28,%ecx
	je L4156
	ja L4160
	cmpl $17,%ecx
	je L4157
	jmp L4153
	.p2align 2
L4160:
	cmpl $78,%ecx
	je L4157
	cmpl $87,%ecx
	jne L4153
	movl 48(%ebx),%eax
	movl %eax,-28(%ebp)
	jmp L4153
	.p2align 2
L4156:
	movl 44(%ebx),%eax
	movl %eax,-28(%ebp)
	jmp L4153
	.p2align 2
L4157:
	movl 48(%ebx),%edx
	movl %edx,-28(%ebp)
L4153:
	movl -28(%ebp),%eax
L4161:
	testl %eax,%eax
	je L4162
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L4163
	jmp *L4175(,%edx,4)
	.p2align 2
L4175:
	.long L4174
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4173
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4163
	.long L4174
	.long L4174
	.long L4174
	.long L4163
	.long L4174
	.long L4174
	.long L4174
	.long L4174
	.long L4174
	.long L4174
	.p2align 2
L4173:
	movl 52(%eax),%esi
	jmp L4163
	.p2align 2
L4174:
	movl 56(%eax),%esi
L4163:
	testl %esi,%esi
	sete %dl
	jmp L4177
	.p2align 2
L4162:
	movb $0,%dl
L4177:
	testb %dl,%dl
	je L4178
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L4179
	jmp *L4191(,%edx,4)
	.p2align 2
L4191:
	.long L4190
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4189
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4179
	.long L4190
	.long L4190
	.long L4190
	.long L4179
	.long L4190
	.long L4190
	.long L4190
	.long L4190
	.long L4190
	.long L4190
	.p2align 2
L4189:
	movl 44(%eax),%edi
	jmp L4179
	.p2align 2
L4190:
	movl 48(%eax),%edi
L4179:
	movl %edi,%eax
	jmp L4161
	.p2align 2
L4178:
	cmpl $28,%ecx
	je L4196
	ja L4200
	cmpl $17,%ecx
	je L4197
	jmp L4193
	.p2align 2
L4200:
	cmpl $78,%ecx
	je L4197
	cmpl $87,%ecx
	jne L4193
	jmp L4197
	.p2align 2
L4196:
	movl 36(%ebx),%ebx
	jmp L4228
	.p2align 2
L4197:
	movl 40(%ebx),%ebx
L4228:
	movl %ebx,-32(%ebp)
L4193:
	movl -32(%ebp),%ebx
	testl %ebx,%ebx
	jne L4203
	testl %eax,%eax
	je L4204
L4226:
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L4205
	jmp *L4217(,%edx,4)
	.p2align 2
L4217:
	.long L4216
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4215
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4205
	.long L4216
	.long L4216
	.long L4216
	.long L4205
	.long L4216
	.long L4216
	.long L4216
	.long L4216
	.long L4216
	.long L4216
	.p2align 2
L4215:
	movl 52(%eax),%eax
	jmp L4229
	.p2align 2
L4216:
	movl 56(%eax),%eax
L4229:
	movl %eax,-36(%ebp)
L4205:
	movl -36(%ebp),%ebx
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_prev__HWI
	movl 28(%ebx),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_next__QWI
	movl 8(%ebp),%edx
	addl $32,%esp
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	pushl %ebx
	call _set_next__QWI
	movl 4(%ebx),%ebx
	addl $-8,%esp
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	jmp L4230
	.p2align 2
L4204:
	movl _list_plan__J3,%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_next__QWI
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $16,%esp
	movl 56(%edx),%eax
	movl %eax,_list_plan__J3
	pushl $1
L4230:
	pushl %eax
	call _set_level__QTE
	addl $16,%esp
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 28(%eax),%ebx
	testl %ebx,%ebx
	je L4223
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _set_prev__HWI
	addl $-12,%esp
	pushl %ebx
	call _inc_level__XXI
	addl $32,%esp
L4223:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -44(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-44(%ebp)
	addl $32,%esp
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call _create__plan__VUE
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_x0__HXE
	movl _list_x__K3,%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _append__E1E
	movl %eax,_list_x__K3
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -40(%ebp),%eax
	pushl %eax
	call _create__plan__VUE
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_x1__90E
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	addl $-8,%esp
	movl 12(%eax),%eax
	pushl %eax
	pushl %ebx
	call _append__E1E
	movl 8(%ebp),%edx
	addl $32,%esp
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call _create_top__plan__74E
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_y0__W7E
	movl _list_y__L3,%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _append__GBF
	movl %eax,_list_y__L3
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -44(%ebp),%eax
	pushl %eax
	call _create_bottom__plan__PAF
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_y1__BBF
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	addl $-8,%esp
	movl 20(%eax),%eax
	pushl %eax
	pushl %ebx
	call _append__GBF
L4138:
	leal -72(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clip_next_child__FVZB:
	pushl %ebp
	movl %esp,%ebp
	subl $76,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl $0,-28(%ebp)
	movl $0,60(%eax)
	movl 56(%eax),%edx
	testl %edx,%edx
	je L4232
	movl 12(%edx),%eax
	movl (%eax),%eax
	movl %eax,-12(%ebp)
	movl 16(%edx),%eax
	movl (%eax),%eax
	movl %eax,-16(%ebp)
	movl 20(%edx),%eax
	movl (%eax),%eax
	movl %eax,-20(%ebp)
	movl 24(%edx),%eax
	movl 8(%ebp),%edx
	movl (%eax),%eax
	movl %eax,-24(%ebp)
	movl 44(%edx),%edx
	movl %edx,-44(%ebp)
	testl %edx,%edx
	je L4234
	.p2align 2
L4235:
	movl -44(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L4236
	jmp *L4248(,%eax,4)
	.p2align 2
L4248:
	.long L4245
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4247
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4236
	.long L4246
	.long L4246
	.long L4245
	.long L4236
	.long L4245
	.long L4246
	.long L4246
	.long L4245
	.long L4246
	.long L4245
	.p2align 2
L4245:
	movl -44(%ebp),%eax
	movl 56(%eax),%ebx
	jmp L4236
	.p2align 2
L4246:
	movl -44(%ebp),%edx
	movl 56(%edx),%ebx
	jmp L4236
	.p2align 2
L4247:
	movl -44(%ebp),%eax
	movl 52(%eax),%ebx
L4236:
	movl %ebx,%edi
	testl %edi,%edi
	je L4250
	addl $-12,%esp
	pushl %edi
	call _active_y__65I
	addl $16,%esp
L4250:
	movl -44(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L4251
	jmp *L4263(,%eax,4)
	.p2align 2
L4263:
	.long L4260
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4262
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4251
	.long L4261
	.long L4261
	.long L4260
	.long L4251
	.long L4260
	.long L4261
	.long L4261
	.long L4260
	.long L4261
	.long L4260
	.p2align 2
L4260:
	movl -44(%ebp),%eax
	movl 52(%eax),%esi
	jmp L4251
	.p2align 2
L4261:
	movl -44(%ebp),%edx
	movl 52(%edx),%esi
	jmp L4251
	.p2align 2
L4262:
	movl -44(%ebp),%eax
	movl 48(%eax),%esi
L4251:
	movl %esi,-44(%ebp)
	testl %esi,%esi
	jne L4235
L4234:
	movl 8(%ebp),%edx
	movl %edx,-44(%ebp)
	.p2align 2
L4333:
	movl -44(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L4269
	jmp *L4281(,%eax,4)
	.p2align 2
L4281:
	.long L4278
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4280
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4269
	.long L4279
	.long L4279
	.long L4276
	.long L4269
	.long L4272
	.long L4279
	.long L4279
	.long L4270
	.long L4279
	.long L4274
	.p2align 2
L4270:
	movl -44(%ebp),%eax
	movl 48(%eax),%eax
	jmp L4420
	.p2align 2
L4272:
	movl -44(%ebp),%eax
	movl 48(%eax),%eax
	jmp L4420
	.p2align 2
L4274:
	movl -44(%ebp),%eax
	movl 48(%eax),%eax
	jmp L4420
	.p2align 2
L4276:
	movl -44(%ebp),%eax
	movl 48(%eax),%eax
	jmp L4420
	.p2align 2
L4278:
	movl -44(%ebp),%eax
	movl 48(%eax),%eax
	jmp L4420
	.p2align 2
L4279:
	movl -44(%ebp),%edx
	movl 48(%edx),%edx
	movl %edx,-32(%ebp)
	jmp L4269
	.p2align 2
L4280:
	movl -44(%ebp),%eax
	movl 44(%eax),%eax
L4420:
	movl %eax,-32(%ebp)
L4269:
	movl -32(%ebp),%esi
	testl %esi,%esi
	je L4284
	.p2align 2
L4285:
	movl (%esi),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L4286
	jmp *L4298(,%eax,4)
	.p2align 2
L4298:
	.long L4297
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4296
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4286
	.long L4297
	.long L4294
	.long L4297
	.long L4286
	.long L4297
	.long L4294
	.long L4294
	.long L4297
	.long L4294
	.long L4297
	.p2align 2
L4294:
	movl 56(%esi),%eax
	movl %eax,-4(%ebp)
	jmp L4286
	.p2align 2
L4296:
	movl 52(%esi),%eax
	movl %eax,-4(%ebp)
	jmp L4286
	.p2align 2
L4297:
	movl 56(%esi),%edx
	movl %edx,-4(%ebp)
L4286:
	movl -4(%ebp),%edi
	testl %edi,%edi
	je L4300
	movl -16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 12(%edi),%eax
	movl (%eax),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L4300
	movl 16(%edi),%eax
	movl -12(%ebp),%edx
	addl $-8,%esp
	movl (%eax),%eax
	cmpl -12(%ebp),%eax
	setg %bl
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L4300
	movl -24(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 20(%edi),%eax
	movl (%eax),%eax
	pushl %eax
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	je L4300
	movl 24(%edi),%eax
	movl -20(%ebp),%edx
	cmpl %edx,(%eax)
	jle L4300
	addl $-12,%esp
	pushl %edi
	call _active_y__65I
	addl $16,%esp
L4300:
	movl (%esi),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L4304
	jmp *L4316(,%eax,4)
	.p2align 2
L4316:
	.long L4315
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4314
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4304
	.long L4315
	.long L4315
	.long L4315
	.long L4304
	.long L4315
	.long L4315
	.long L4315
	.long L4315
	.long L4315
	.long L4315
	.p2align 2
L4314:
	movl 44(%esi),%esi
	jmp L4421
	.p2align 2
L4315:
	movl 48(%esi),%esi
L4421:
	movl %esi,-8(%ebp)
L4304:
	movl -8(%ebp),%esi
	testl %esi,%esi
	jne L4285
L4284:
	movl -44(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L4319
	jmp *L4331(,%eax,4)
	.p2align 2
L4331:
	.long L4328
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4330
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4319
	.long L4329
	.long L4329
	.long L4326
	.long L4319
	.long L4322
	.long L4329
	.long L4329
	.long L4320
	.long L4329
	.long L4324
	.p2align 2
L4320:
	movl -44(%ebp),%eax
	movl 40(%eax),%eax
	jmp L4422
	.p2align 2
L4322:
	movl -44(%ebp),%eax
	movl 40(%eax),%eax
	jmp L4422
	.p2align 2
L4324:
	movl -44(%ebp),%eax
	movl 40(%eax),%eax
	jmp L4422
	.p2align 2
L4326:
	movl -44(%ebp),%eax
	movl 40(%eax),%eax
	jmp L4422
	.p2align 2
L4328:
	movl -44(%ebp),%eax
	movl 40(%eax),%eax
	jmp L4422
	.p2align 2
L4329:
	movl -44(%ebp),%edx
	movl 40(%edx),%edx
	movl %edx,-36(%ebp)
	jmp L4319
	.p2align 2
L4330:
	movl -44(%ebp),%eax
	movl 36(%eax),%eax
L4422:
	movl %eax,-36(%ebp)
L4319:
	movl -36(%ebp),%edx
	movl %edx,-44(%ebp)
	testl %edx,%edx
	jne L4333
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__S8F
	movl _list_y__L3,%esi
	movl $0,_first_clip__P3
	movl -20(%ebp),%eax
	movl %eax,-56(%ebp)
	addl $16,%esp
	testl %esi,%esi
	je L4232
	jmp L4423
	.p2align 2
L4339:
	movl 12(%esi),%esi
	testl %esi,%esi
	je L4418
L4423:
	movl 4(%esi),%eax
	cmpb $0,1(%eax)
	je L4339
	testl %esi,%esi
	jne L4342
L4418:
	movl -24(%ebp),%edx
	movl %edx,-60(%ebp)
	jmp L4424
	.p2align 2
L4342:
	movl (%esi),%eax
	movl -24(%ebp),%edx
	movl %eax,-28(%ebp)
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call _min__TNE
	movl %eax,-60(%ebp)
	addl $16,%esp
L4424:
	subl $1,-60(%ebp)
	movl -60(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl -56(%ebp),%edx
	pushl %edx
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L4348
	movl _first_clip__P3,%eax
	movl %eax,_top_clip__Q3
	movl _list_x__K3,%eax
	movl $0,_last_clip__O3
	movl -12(%ebp),%edx
	movl %eax,-40(%ebp)
	movl 8(%ebp),%eax
	movl $0,-48(%ebp)
	movl %edx,-52(%ebp)
	movl %eax,-44(%ebp)
	.p2align 2
L4374:
	movl -40(%ebp),%edx
	movl 4(%edx),%edi
	cmpb $0,(%edi)
	je L4353
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	movl 8(%eax),%eax
	pushl %eax
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	jne L4355
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	addl $16,%esp
	testl %eax,%eax
	jne L4354
L4355:
	movl 4(%edi),%eax
	addl $-4,%esp
	pushl %eax
	pushl %edi
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__L7O
	movl -48(%ebp),%eax
	addl $16,%esp
	cmpl %eax,4(%edi)
	jle L4353
	movl -16(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -40(%ebp),%edx
	movl (%edx),%eax
	decl %eax
	pushl %eax
	call _min__TNE
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl -52(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $32,%esp
	testb %al,%al
	je L4360
	movl -60(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %ebx
	movl -56(%ebp),%eax
	pushl %eax
	movl -52(%ebp),%edx
	pushl %edx
	movl -44(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _add_clip__from__to__7C0B
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,-52(%ebp)
	addl $32,%esp
L4360:
	movl 4(%edi),%eax
	movl %eax,-48(%ebp)
	movl 8(%edi),%edi
	movl %edi,-44(%ebp)
	jmp L4353
	.p2align 2
L4354:
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__ZSP
	movl -48(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl 4(%edi),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	addl $32,%esp
	testb %al,%al
	je L4353
	movl -16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl -40(%ebp),%edx
	movl (%edx),%eax
	pushl %eax
	call _min__TNE
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl -52(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $32,%esp
	testb %al,%al
	je L4373
	movl -60(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %ebx
	movl -56(%ebp),%eax
	pushl %eax
	movl -52(%ebp),%edx
	pushl %edx
	movl -44(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _add_clip__from__to__7C0B
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,-52(%ebp)
	addl $32,%esp
	.p2align 2
L4373:
	subl $1,-48(%ebp)
	movl -48(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	addl $16,%esp
	testl %eax,%eax
	je L4373
	movl -48(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	movl 8(%eax),%eax
	movl %eax,-44(%ebp)
	addl $16,%esp
L4353:
	movl -40(%ebp),%eax
	movl 8(%eax),%eax
	movl %eax,-40(%ebp)
	testl %eax,%eax
	jne L4374
	movl -16(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -52(%ebp),%eax
	pushl %eax
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	je L4375
	movl -60(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -16(%ebp),%eax
	pushl %eax
	movl -56(%ebp),%edx
	pushl %edx
	movl -52(%ebp),%eax
	pushl %eax
	movl -44(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _add_clip__from__to__7C0B
	addl $32,%esp
L4375:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -60(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl %eax,-56(%ebp)
	addl $32,%esp
L4348:
	testl %esi,%esi
	je L4232
	.p2align 2
L4385:
	movl 4(%esi),%edi
	cmpb $0,1(%edi)
	je L4382
	cmpb $0,8(%esi)
	je L4383
	addl $-12,%esp
	pushl %edi
	call _active_x__IMJ
	addl $16,%esp
	jmp L4382
	.p2align 2
L4383:
	addl $-12,%esp
	pushl %edi
	call _desactive_y__SMJ
	addl $-12,%esp
	pushl %edi
	call _desactive_x__WMJ
	addl $32,%esp
L4382:
	movl 12(%esi),%esi
	testl %esi,%esi
	je L4232
	movl -28(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl (%esi),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	addl $16,%esp
	testb %al,%al
	jne L4385
	jmp L4423
	.p2align 2
L4232:
	movl 8(%ebp),%edx
	movl 52(%edx),%eax
	testl %eax,%eax
	je L4388
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L4388
	jmp *L4401(,%edx,4)
	.p2align 2
L4401:
	.long L4397
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4400
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4388
	.long L4398
	.long L4391
	.long L4395
	.long L4388
	.long L4392
	.long L4394
	.long L4393
	.long L4390
	.long L4396
	.long L4399
	.p2align 2
L4390:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__UJQB
	jmp L4425
	.p2align 2
L4391:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__SRO
	jmp L4425
	.p2align 2
L4392:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__XZY
	jmp L4425
	.p2align 2
L4393:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__HHLB
	jmp L4425
	.p2align 2
L4394:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__JKIB
	jmp L4425
	.p2align 2
L4395:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__9IT
	jmp L4425
	.p2align 2
L4396:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__RFVB
	jmp L4425
	.p2align 2
L4397:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__N0I
	jmp L4425
	.p2align 2
L4398:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__MW5B
	jmp L4425
	.p2align 2
L4399:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__FVZB
	jmp L4425
	.p2align 2
L4400:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__BEF
L4425:
	addl $16,%esp
L4388:
	movl 8(%ebp),%edx
	movl 44(%edx),%eax
	testl %eax,%eax
	je L4403
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L4403
	jmp *L4416(,%edx,4)
	.p2align 2
L4416:
	.long L4413
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4415
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4403
	.long L4414
	.long L4406
	.long L4411
	.long L4403
	.long L4407
	.long L4410
	.long L4408
	.long L4405
	.long L4412
	.long L4409
	.p2align 2
L4405:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__UJQB
	jmp L4403
	.p2align 2
L4406:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__SRO
	jmp L4403
	.p2align 2
L4407:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__XZY
	jmp L4403
	.p2align 2
L4408:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__HHLB
	jmp L4403
	.p2align 2
L4409:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__FVZB
	jmp L4403
	.p2align 2
L4410:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__JKIB
	jmp L4403
	.p2align 2
L4411:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__9IT
	jmp L4403
	.p2align 2
L4412:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__RFVB
	jmp L4403
	.p2align 2
L4413:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__N0I
	jmp L4403
	.p2align 2
L4414:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__MW5B
	jmp L4403
	.p2align 2
L4415:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__BEF
L4403:
	leal -88(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_append_plan__DH5B:
	pushl %ebp
	movl %esp,%ebp
	subl $60,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 40(%eax),%edx
	testl %edx,%edx
	je L4464
	movl (%edx),%eax
	cmpl $28,%eax
	je L4466
	ja L4471
	cmpl $17,%eax
	je L4467
	jmp L4465
	.p2align 2
L4471:
	cmpl $78,%eax
	je L4468
	jmp L4465
	.p2align 2
L4466:
	movl 52(%edx),%ecx
	jmp L4465
	.p2align 2
L4467:
L4468:
	movl 56(%edx),%ecx
L4465:
	movl %ecx,%ebx
	testl %ebx,%ebx
	je L4486
	movl 12(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-4(%ebp)
	movl 16(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-12(%ebp)
	movl 20(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-8(%ebp)
	movl 24(%ebx),%eax
	movl (%eax),%eax
	decl %eax
	jmp L4585
	.p2align 2
L4464:
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L4478
	movl 12(%eax),%edx
	jmp L4479
	.p2align 2
L4478:
	movl 8(%eax),%edx
L4479:
	subl $1,%edx
	movl %edx,-12(%ebp)
	cmpl $16,(%eax)
	jne L4482
	movl 8(%eax),%eax
	jmp L4483
	.p2align 2
L4482:
	movl 4(%eax),%eax
L4483:
	subl $1,%eax
L4585:
	movl %eax,-16(%ebp)
	movb $0,%al
	testb %al,%al
	jne L4486
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 64(%edx),%edx
	movl %edx,-20(%ebp)
	movl 8(%ebp),%edx
	addl $-12,%esp
	movl 12(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-40(%ebp)
	addl $32,%esp
	subl $1,-40(%ebp)
	addl $-8,%esp
	movl 68(%edx),%edx
	movl %edx,-24(%ebp)
	movl 8(%ebp),%edx
	addl $-12,%esp
	movl 8(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl %eax,-44(%ebp)
	addl $32,%esp
	subl $1,-44(%ebp)
	cmpl %edx,-40(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %edx
	movl -40(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L4486
	movl -12(%ebp),%edx
	cmpl %edx,-20(%ebp)
	jg L4486
	movl -8(%ebp),%eax
	cmpl %eax,-44(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -44(%ebp),%edx
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L4486
	movl -16(%ebp),%eax
	cmpl %eax,-24(%ebp)
	jg L4486
	movl -4(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -20(%ebp),%eax
	pushl %eax
	call _max__1ME
	movl -40(%ebp),%edx
	movl %eax,-20(%ebp)
	movl -12(%ebp),%eax
	addl $16,%esp
	movl %edx,-48(%ebp)
	cmpl %eax,%edx
	jle L4503
	movl %eax,-48(%ebp)
L4503:
	movl -8(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -24(%ebp),%eax
	pushl %eax
	call _max__1ME
	movl -44(%ebp),%edx
	movl %eax,-24(%ebp)
	movl -16(%ebp),%eax
	addl $16,%esp
	movl %edx,-52(%ebp)
	cmpl %eax,%edx
	jle L4507
	movl %eax,-52(%ebp)
L4507:
	call _clone__1OE
	movl 8(%ebp),%edx
	movl 8(%ebp),%ebx
	movl %edx,8(%eax)
	movl %eax,56(%edx)
	jmp L4559
	.p2align 2
L4561:
	testl %eax,%eax
	jne L4584
L4559:
	movl (%ebx),%ecx
	cmpl $28,%ecx
	je L4515
	ja L4519
	cmpl $17,%ecx
	je L4516
	jmp L4513
	.p2align 2
L4519:
	cmpl $78,%ecx
	jne L4513
	jmp L4516
	.p2align 2
L4515:
	movl 44(%ebx),%edx
	movl %edx,-28(%ebp)
	jmp L4513
	.p2align 2
L4516:
	movl 48(%ebx),%eax
	movl %eax,-28(%ebp)
L4513:
	movl -28(%ebp),%eax
L4520:
	testl %eax,%eax
	je L4521
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L4522
	jmp *L4534(,%edx,4)
	.p2align 2
L4534:
	.long L4533
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4532
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4522
	.long L4533
	.long L4533
	.long L4533
	.long L4522
	.long L4533
	.long L4533
	.long L4533
	.long L4533
	.long L4533
	.long L4533
	.p2align 2
L4532:
	movl 52(%eax),%esi
	jmp L4522
	.p2align 2
L4533:
	movl 56(%eax),%esi
L4522:
	testl %esi,%esi
	sete %dl
	jmp L4536
	.p2align 2
L4521:
	movb $0,%dl
L4536:
	testb %dl,%dl
	je L4537
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L4538
	jmp *L4550(,%edx,4)
	.p2align 2
L4550:
	.long L4549
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4548
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4538
	.long L4549
	.long L4549
	.long L4549
	.long L4538
	.long L4549
	.long L4549
	.long L4549
	.long L4549
	.long L4549
	.long L4549
	.p2align 2
L4548:
	movl 44(%eax),%edi
	jmp L4538
	.p2align 2
L4549:
	movl 48(%eax),%edi
L4538:
	movl %edi,%eax
	jmp L4520
	.p2align 2
L4537:
	cmpl $28,%ecx
	je L4554
	ja L4558
	cmpl $17,%ecx
	je L4555
	jmp L4552
	.p2align 2
L4558:
	cmpl $78,%ecx
	jne L4552
	jmp L4555
	.p2align 2
L4554:
	movl 36(%ebx),%ebx
	jmp L4586
	.p2align 2
L4555:
	movl 40(%ebx),%ebx
L4586:
	movl %ebx,-32(%ebp)
L4552:
	movl -32(%ebp),%ebx
	testl %ebx,%ebx
	jne L4561
	testl %eax,%eax
	je L4562
L4584:
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L4563
	jmp *L4575(,%edx,4)
	.p2align 2
L4575:
	.long L4574
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4573
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4563
	.long L4574
	.long L4574
	.long L4574
	.long L4563
	.long L4574
	.long L4574
	.long L4574
	.long L4574
	.long L4574
	.long L4574
	.p2align 2
L4573:
	movl 52(%eax),%eax
	jmp L4587
	.p2align 2
L4574:
	movl 56(%eax),%eax
L4587:
	movl %eax,-36(%ebp)
L4563:
	movl -36(%ebp),%ebx
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_prev__HWI
	movl 28(%ebx),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_next__QWI
	movl 8(%ebp),%edx
	addl $32,%esp
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	pushl %ebx
	call _set_next__QWI
	movl 4(%ebx),%ebx
	addl $-8,%esp
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	jmp L4588
	.p2align 2
L4562:
	movl _list_plan__J3,%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_next__QWI
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $16,%esp
	movl 56(%edx),%eax
	movl %eax,_list_plan__J3
	pushl $1
L4588:
	pushl %eax
	call _set_level__QTE
	addl $16,%esp
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 28(%eax),%ebx
	testl %ebx,%ebx
	je L4581
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _set_prev__HWI
	addl $-12,%esp
	pushl %ebx
	call _inc_level__XXI
	addl $32,%esp
L4581:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -52(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-44(%ebp)
	addl $32,%esp
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call _create__plan__VUE
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_x0__HXE
	movl _list_x__K3,%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _append__E1E
	movl %eax,_list_x__K3
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -48(%ebp),%eax
	pushl %eax
	call _create__plan__VUE
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_x1__90E
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	addl $-8,%esp
	movl 12(%eax),%eax
	pushl %eax
	pushl %ebx
	call _append__E1E
	movl 8(%ebp),%edx
	addl $32,%esp
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call _create_top__plan__74E
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_y0__W7E
	movl _list_y__L3,%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _append__GBF
	movl %eax,_list_y__L3
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl -44(%ebp),%eax
	pushl %eax
	call _create_bottom__plan__PAF
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	pushl %eax
	call _set_y1__BBF
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	addl $-8,%esp
	movl 20(%eax),%eax
	pushl %eax
	pushl %ebx
	call _append__GBF
L4486:
	leal -72(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_keydown__S0BC:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movb 8(%ebp),%al
	movb %al,-4(%ebp)
	movb $0,-6(%ebp)
	addl $-4,%esp
	xorl %ebx,%ebx
	movb %al,%bl
	shrl $3,%ebx
	movl %ebx,%eax
	andl $255,%eax
	pushl %eax
	addl $-8,%esp
	addl $-12,%esp
	addl $-12,%esp
	movb -4(%ebp),%al
	andl $7,%eax
	pushl %eax
	call ___infix_less_less__B7BC
	addl $16,%esp
	pushl %eax
	call ___prefix_logicnot__E7BC
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	addl $-8,%esp
	movl %ebx,%eax
	andl $255,%eax
	pushl %eax
	movl _KEYBOARD__+16,%eax
	pushl %eax
	call _item__G5BC
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_or__S7BC
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	movl _KEYBOARD__+16,%eax
	pushl %eax
	call _put__to__L8BC
	addl $16,%esp
	cmpb $28,-4(%ebp)
	je L4615
	cmpb $89,-4(%ebp)
	jne L4614
L4615:
	addl $-8,%esp
	pushl $1
	xorl %eax,%eax
	movb _KEYBOARD__+20,%al
	pushl %eax
	call ___infix_or__S7BC
	movb %al,_KEYBOARD__+20
	movb $1,%al
	addl $16,%esp
	jmp L4621
	.p2align 2
L4614:
	movb $0,%al
L4621:
	testb %al,%al
	jne L4767
	cmpb $88,-4(%ebp)
	sete %al
	xorl %ebx,%ebx
	movb %al,%bl
	testb %bl,%bl
	je L4790
	addl $-8,%esp
	pushl $2
	xorl %eax,%eax
	movb _KEYBOARD__+20,%al
	pushl %eax
	call ___infix_or__S7BC
	movb %al,_KEYBOARD__+20
	addl $16,%esp
	testb %bl,%bl
	jne L4767
L4790:
	cmpb $55,-4(%ebp)
	sete %al
	xorl %ebx,%ebx
	movb %al,%bl
	testb %bl,%bl
	je L4634
	addl $-8,%esp
	pushl $4
	xorl %eax,%eax
	movb _KEYBOARD__+20,%al
	pushl %eax
	call ___infix_or__S7BC
	movb %al,_KEYBOARD__+20
	addl $16,%esp
	testb %bl,%bl
	jne L4767
L4634:
	movb $0,%bl
	cmpb $41,-4(%ebp)
	je L4637
	cmpb $53,-4(%ebp)
	jne L4636
L4637:
	movb $1,%bl
L4636:
	testb %bl,%bl
	je L4642
	addl $-8,%esp
	pushl $16
	xorl %eax,%eax
	movb _KEYBOARD__+20,%al
	pushl %eax
	call ___infix_or__S7BC
	movb %al,_KEYBOARD__+20
	addl $16,%esp
	testl $32,%eax
	je L4642
	addl $-12,%esp
	pushl $32
	call ___prefix_logicnot__E7BC
	addl $16,%esp
	andb %al,_KEYBOARD__+20
	call _light__XHCC
L4642:
	testb %bl,%bl
	jne L4767
	cmpb $57,-4(%ebp)
	sete %al
	xorl %ebx,%ebx
	movb %al,%bl
	testb %bl,%bl
	je L4791
	addl $-8,%esp
	pushl $32
	xorl %eax,%eax
	movb _KEYBOARD__+20,%al
	pushl %eax
	call ___infix_xor__QPCC
	movb %al,_KEYBOARD__+20
	call _light__XHCC
	addl $16,%esp
	testb %bl,%bl
	jne L4767
L4791:
	cmpb $68,-4(%ebp)
	sete %al
	xorl %ebx,%ebx
	movb %al,%bl
	testb %bl,%bl
	je L4792
	addl $-8,%esp
	pushl $64
	xorl %eax,%eax
	movb _KEYBOARD__+20,%al
	pushl %eax
	call ___infix_xor__QPCC
	movb %al,_KEYBOARD__+20
	call _light__XHCC
	addl $16,%esp
	testb %bl,%bl
	jne L4767
L4792:
	cmpb $69,-4(%ebp)
	sete %al
	xorl %ebx,%ebx
	movb %al,%bl
	testb %bl,%bl
	je L4667
	addl $-8,%esp
	pushl $128
	xorl %eax,%eax
	movb _KEYBOARD__+20,%al
	pushl %eax
	call ___infix_xor__QPCC
	movb %al,_KEYBOARD__+20
	call _light__XHCC
	addl $16,%esp
	testb %bl,%bl
	jne L4767
L4667:
	addl $-8,%esp
	pushl $56
	xorl %ebx,%ebx
	movb -4(%ebp),%bl
	pushl %ebx
	call ___infix_less_equal__GTCC
	movb %al,-5(%ebp)
	addl $16,%esp
	movl %ebx,%esi
	testb %al,%al
	je L4670
	cmpb $0,-4(%ebp)
	jne L4671
	addl $-8,%esp
	pushl $8
	xorl %eax,%eax
	movb _KEYBOARD__+20,%al
	pushl %eax
	call ___infix_or__S7BC
	movb %al,_KEYBOARD__+20
	movl _cmm__QM,%eax
	addl $-12,%esp
	addl $16,%esp
	addl $-8,%esp
	pushl $0
	movl (%eax),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	movsbl %al,%eax
	pushl %eax
	call _to_usmallint__2UCC
	movb %al,-6(%ebp)
	movb $1,%al
	addl $16,%esp
	jmp L4679
	.p2align 2
L4671:
	movb $0,%al
L4679:
	testb %al,%al
	jne L4670
	testb $2,_KEYBOARD__+20
	je L4682
	addl $-8,%esp
	pushl $12
	pushl %esi
	call ___infix_less_equal__GTCC
	addl $16,%esp
	testb %al,%al
	je L4682
	addl $-12,%esp
	pushl $2
	call ___prefix_logicnot__E7BC
	addl $16,%esp
	andb %al,_KEYBOARD__+20
	addl $-12,%esp
	addl $-12,%esp
	pushl %esi
	call _to_integer__8QFB
	movl %eax,%edx
	movl _caltgr__RM,%eax
	addl $16,%esp
	jmp L4793
	.p2align 2
L4682:
	testb $48,_KEYBOARD__+20
	jne L4692
	addl $-12,%esp
	addl $-12,%esp
	addl $-8,%esp
	pushl $1
	pushl %esi
	call ___infix_add__0U9
	andl $255,%eax
	pushl %eax
	call _to_integer__8QFB
	movl %eax,%edx
	movl _cmin__OM,%eax
	jmp L4794
	.p2align 2
L4692:
	addl $-12,%esp
	addl $-12,%esp
	addl $-8,%esp
	pushl $1
	pushl %esi
	call ___infix_add__0U9
	andl $255,%eax
	pushl %eax
	call _to_integer__8QFB
	movl %eax,%edx
	movl _cmaj__PM,%eax
L4794:
	addl $32,%esp
	addl $-8,%esp
	subl $1,%edx
	pushl %edx
	movl (%eax),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	movsbl %al,%eax
	pushl %eax
	call _to_usmallint__2UCC
	movb %al,%bl
	addl $16,%esp
	testb $252,%bl
	je L4706
	movb %bl,-6(%ebp)
	jmp L4670
	.p2align 2
L4706:
	addl $-8,%esp
	pushl $8
	xorl %eax,%eax
	movb _KEYBOARD__+20,%al
	pushl %eax
	call ___infix_or__S7BC
	movb %al,_KEYBOARD__+20
	addl $-12,%esp
	addl $-12,%esp
	addl $-8,%esp
	addl $16,%esp
	pushl $1
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	call ___infix_add__0U9
	andl $255,%eax
	pushl %eax
	call _to_integer__8QFB
	movl %eax,%edx
	movl _cmm__QM,%eax
	addl $32,%esp
L4793:
	addl $-8,%esp
	subl $1,%edx
	pushl %edx
	movl (%eax),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	movsbl %al,%eax
	pushl %eax
	call _to_usmallint__2UCC
	movb %al,-6(%ebp)
	addl $16,%esp
L4670:
	cmpb $0,-5(%ebp)
	jne L4767
	addl $-8,%esp
	pushl $67
	pushl %esi
	call ___infix_less_equal__GTCC
	movb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L4718
	addl $-8,%esp
	pushl $8
	xorl %eax,%eax
	movb _KEYBOARD__+20,%al
	pushl %eax
	call ___infix_or__S7BC
	movb %al,_KEYBOARD__+20
	addl $-8,%esp
	addl $16,%esp
	pushl $39
	pushl %esi
	call ___infix_add__0U9
	movb %al,-6(%ebp)
	addl $16,%esp
L4718:
	testb %bl,%bl
	jne L4767
	addl $-8,%esp
	pushl $85
	pushl %esi
	call ___infix_less__L2CC
	movb %al,-7(%ebp)
	addl $16,%esp
	testb %al,%al
	je L4724
	addl $-12,%esp
	addl $-12,%esp
	movb -4(%ebp),%al
	addb $-69,%al
	andl $255,%eax
	pushl %eax
	call _to_integer__8QFB
	movl %eax,%edx
	movl _keynum0__SM,%eax
	addl $16,%esp
	addl $-8,%esp
	subl $1,%edx
	pushl %edx
	movl (%eax),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	movsbl %al,%eax
	pushl %eax
	call _to_usmallint__2UCC
	movb %al,%bl
	addl $-8,%esp
	addl $16,%esp
	pushl $46
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	call ___infix_less__L2CC
	addl $16,%esp
	testb %al,%al
	jne L4795
	movb _KEYBOARD__+20,%al
	testl $64,%eax
	je L4735
	testl $4,%eax
	jne L4738
L4795:
	movb %bl,-6(%ebp)
	jmp L4724
	.p2align 2
L4738:
	addl $-8,%esp
	addl $-12,%esp
	leal -48(%ebx),%eax
	andl $255,%eax
	pushl %eax
	call ___prefix_sub__VRK
	andl $255,%eax
	pushl %eax
	xorl %eax,%eax
	movb _KEYBOARD__+21,%al
	imulw $10,%ax,%ax
	andl $255,%eax
	pushl %eax
	call ___infix_sub__ASK
	movb %al,_KEYBOARD__+21
	addl $32,%esp
	jmp L4724
	.p2align 2
L4735:
	addl $-8,%esp
	pushl $8
	xorl %eax,%eax
	movb _KEYBOARD__+20,%al
	pushl %eax
	call ___infix_or__S7BC
	movb %al,_KEYBOARD__+20
	movb %bl,-6(%ebp)
	addl $16,%esp
L4724:
	cmpb $0,-7(%ebp)
	jne L4767
	cmpb $85,-4(%ebp)
	sete %al
	andl $255,%eax
	movl %eax,%ebx
	testb %al,%al
	je L4753
	testb $48,_KEYBOARD__+20
	jne L4754
	addl $-12,%esp
	pushl $60
	jmp L4796
	.p2align 2
L4754:
	addl $-12,%esp
	pushl $62
L4796:
	call _to_usmallint__2UCC
	movb %al,-6(%ebp)
	addl $16,%esp
L4753:
	testb %bl,%bl
	jne L4767
	addl $-8,%esp
	pushl $87
	pushl %esi
	call ___infix_less_equal__GTCC
	movb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L4763
	addl $-8,%esp
	pushl $8
	xorl %eax,%eax
	movb _KEYBOARD__+20,%al
	pushl %eax
	call ___infix_or__S7BC
	movb %al,_KEYBOARD__+20
	addl $-8,%esp
	addl $16,%esp
	pushl $21
	pushl %esi
	call ___infix_add__0U9
	movb %al,-6(%ebp)
	addl $16,%esp
L4763:
	testb %bl,%bl
	jne L4767
	cmpb $90,-4(%ebp)
	jne L4768
	addl $-12,%esp
	pushl $47
	jmp L4797
	.p2align 2
L4768:
	addl $-8,%esp
	pushl $8
	xorl %eax,%eax
	movb _KEYBOARD__+20,%al
	pushl %eax
	call ___infix_or__S7BC
	movb %al,_KEYBOARD__+20
	addl $-12,%esp
	addl $-12,%esp
	addl $16,%esp
	movb -4(%ebp),%al
	addb $-90,%al
	andl $255,%eax
	pushl %eax
	call _to_integer__8QFB
	movl %eax,%edx
	movl _buf_extk__VM,%eax
	addl $16,%esp
	addl $-8,%esp
	subl $1,%edx
	pushl %edx
	movl (%eax),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	movsbl %al,%eax
	pushl %eax
L4797:
	call _to_usmallint__2UCC
	movb %al,-6(%ebp)
L4767:
	xorl %eax,%eax
	leal -24(%ebp),%esp
	movb -6(%ebp),%al
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_keyup__9CDC:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	xorl %edx,%edx
	pushl %esi
	pushl %ebx
	movb 8(%ebp),%bl
	movb $0,-1(%ebp)
	andb $247,_KEYBOARD__+20
	addl $-4,%esp
	movb %bl,%dl
	shrl $3,%edx
	movl %edx,%eax
	andl $255,%eax
	pushl %eax
	addl $-8,%esp
	movl %edx,%eax
	andl $255,%eax
	pushl %eax
	movl _KEYBOARD__+16,%eax
	pushl %eax
	call _item__G5BC
	addl $16,%esp
	movb %al,-2(%ebp)
	addl $-12,%esp
	addl $-12,%esp
	movl %ebx,%eax
	andl $7,%eax
	pushl %eax
	call ___infix_less_less__B7BC
	addl $16,%esp
	pushl %eax
	call ___prefix_logicnot__E7BC
	addl $16,%esp
	andb -2(%ebp),%al
	andl $255,%eax
	pushl %eax
	movl _KEYBOARD__+16,%eax
	pushl %eax
	call _put__to__L8BC
	addl $16,%esp
	cmpb $28,%bl
	je L4808
	cmpb $89,%bl
	jne L4816
L4808:
	addl $-12,%esp
	pushl $1
	jmp L4847
	.p2align 2
L4816:
	cmpb $88,%bl
	sete %al
	movl %eax,%esi
	andl $255,%esi
	movl %esi,%eax
	testb %al,%al
	je L4845
	addl $-12,%esp
	pushl $2
	call ___prefix_logicnot__E7BC
	addl $16,%esp
	andb %al,_KEYBOARD__+20
	movl %esi,%eax
	testb %al,%al
	jne L4832
L4845:
	cmpb $55,%bl
	sete %al
	movl %eax,%esi
	andl $255,%esi
	movl %esi,%eax
	testb %al,%al
	je L4846
	addl $-12,%esp
	pushl $4
	call ___prefix_logicnot__E7BC
	addl $16,%esp
	andb %al,_KEYBOARD__+20
	movb _KEYBOARD__+21,%al
	movb %al,-1(%ebp)
	movb $0,_KEYBOARD__+21
	movl %esi,%eax
	testb %al,%al
	jne L4832
L4846:
	movb $0,%al
	cmpb $41,%bl
	je L4834
	cmpb $53,%bl
	jne L4833
L4834:
	movb $1,%al
L4833:
	testb %al,%al
	je L4832
	addl $-12,%esp
	pushl $16
L4847:
	call ___prefix_logicnot__E7BC
	andb %al,_KEYBOARD__+20
L4832:
	xorl %eax,%eax
	leal -24(%ebp),%esp
	movb -1(%ebp),%al
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_receive__0LJC:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%eax
	cmpl $0,4(%eax)
	jne L4895
	movl _storage_message__NL,%esi
	cmpl $0,4(%esi)
	jne L4896
	addl $-12,%esp
	pushl %eax
	call _create__next__AOJC
	movl %eax,4(%esi)
	movl $1,(%esi)
	movl %eax,8(%esi)
	movl $1,12(%esi)
	jmp L4903
	.p2align 2
L4896:
	movl 12(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _create__next__AOJC
	movl %eax,%edi
	movl 8(%esi),%eax
	movl %edi,4(%eax)
	movl (%esi),%ebx
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,(%esi)
	movl %edi,8(%esi)
	jmp L4903
	.p2align 2
L4895:
	cmpl $0,12(%ebp)
	je L4903
	movl 12(%ebp),%ecx
	addl $-4,%esp
	movl 12(%ecx),%eax
	pushl %eax
	movl 8(%ecx),%eax
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _get_object__SEFC
	addl $16,%esp
	cmpl _focus__LL,%eax
	je L4903
	movl %eax,_focus__LL
	addl $-8,%esp
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	call _set_destination__NSJC
	movl _focus__LL,%edi
	addl $16,%esp
	movl (%edi),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L4903
	jmp *L5283(,%eax,4)
	.p2align 2
L5283:
	.long L5282
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L4903
	.long L5053
	.long L4966
	.long L5199
	.long L4903
	.long L4990
	.long L5195
	.long L5029
	.long L4907
	.long L5231
	.long L5076
	.p2align 2
L4907:
	cmpl $0,12(%ebp)
	je L4903
	movl 12(%ebp),%edx
	addl $-4,%esp
	movl 12(%edx),%eax
	pushl %eax
	movl 8(%edx),%eax
	pushl %eax
	pushl $_INTERFACE__
	call _get_object__SEFC
	movl 76(%edi),%ebx
	movl %eax,%esi
	addl $16,%esp
	cmpl $-1,%ebx
	jne L4912
	cmpl %edi,%esi
	je L4912
	movl 12(%ebp),%ecx
	addl $-8,%esp
	pushl %ecx
	pushl $_INTERFACE__
	call _receive__0LJC
	addl $16,%esp
L4912:
	testl %ebx,%ebx
	jne L4915
	cmpl %edi,%esi
	jne L4916
	movl 8(%edi),%eax
	movl $1,76(%edi)
	addl $-12,%esp
	decl %eax
	pushl %eax
	movl 12(%edi),%eax
	decl %eax
	pushl %eax
	pushl $0
	pushl $0
	pushl %edi
	call _draw__to__2HRB
	addl $32,%esp
	jmp L4915
	.p2align 2
L4916:
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl $_INTERFACE__
	call _receive__0LJC
	addl $16,%esp
L4915:
	cmpl $1,%ebx
	jne L4927
	cmpl %edi,%esi
	jne L4928
	cmpb $0,_MOUSE__+25
	je L4927
	movl _text_tmp__4ZN,%eax
	movl $2,76(%edi)
	addl $-12,%esp
	pushl %eax
	call _clear__QPTB
	movl _text_tmp__4ZN,%eax
	addl $-8,%esp
	pushl %eax
	movl 84(%edi),%eax
	pushl %eax
	call _append_in__NQTB
	movl _text_tmp__4ZN,%eax
	addl $32,%esp
	addl $-12,%esp
	movl 4(%eax),%eax
	movl %eax,88(%edi)
	movl 8(%edi),%eax
	jmp L5286
	.p2align 2
L4928:
	movl 8(%edi),%eax
	movl $0,76(%edi)
	addl $-12,%esp
L5286:
	decl %eax
	pushl %eax
	movl 12(%edi),%eax
	decl %eax
	pushl %eax
	pushl $0
	pushl $0
	pushl %edi
	call _draw__to__2HRB
	addl $32,%esp
L4927:
	cmpl $2,%ebx
	jne L4903
	cmpl %edi,%esi
	je L4903
	cmpb $0,_MOUSE__+25
	je L4903
	movl _text_tmp__4ZN,%eax
	movl $0,76(%edi)
	addl $-12,%esp
	pushl %eax
	call _to_integer__W3TC
	movl %eax,%edx
	movl 92(%edi),%eax
	addl $16,%esp
	cmpl %eax,%edx
	jle L4952
	movl %edx,%eax
L4952:
	movl 96(%edi),%edx
	cmpl %edx,%eax
	jle L4956
	movl %edx,%eax
L4956:
	movl %eax,84(%edi)
	movl 8(%edi),%eax
	addl $-12,%esp
	decl %eax
	pushl %eax
	movl 12(%edi),%eax
	decl %eax
	pushl %eax
	pushl $0
	pushl $0
	pushl %edi
	call _draw__to__2HRB
	movl 80(%edi),%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call _send__D4TC
	jmp L5287
	.p2align 2
L4966:
	cmpl $0,12(%ebp)
	je L4903
	movl 12(%ebp),%ecx
	addl $-4,%esp
	movl 12(%ecx),%eax
	pushl %eax
	movl 8(%ecx),%eax
	pushl %eax
	pushl $_INTERFACE__
	call _get_object__SEFC
	cmpl %edi,%eax
	sete %al
	xorl %edx,%edx
	movb %al,%dl
	movl 12(%ebp),%eax
	addl $16,%esp
	cmpb $0,17(%eax)
	setne %al
	andl $255,%eax
	addl $-8,%esp
	addl %eax,%eax
	pushl %eax
	pushl %edx
	call ___infix_or__TCKC
	movl %eax,%ebx
	movl 76(%edi),%eax
	addl $16,%esp
	cmpl %eax,%ebx
	je L4903
	cmpl $-1,%eax
	je L4977
	cmpl $1,%ebx
	jne L4980
	cmpl $3,%eax
	jne L4980
	movl 80(%edi),%eax
	movl $1,76(%edi)
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call _send__AEKC
	addl $16,%esp
	jmp L4981
	.p2align 2
L4980:
	movl %ebx,76(%edi)
L4981:
	movl 8(%edi),%eax
	addl $-12,%esp
	decl %eax
	pushl %eax
	movl 12(%edi),%eax
	decl %eax
	pushl %eax
	pushl $0
	pushl $0
	pushl %edi
	call _draw__to__WCQ
	addl $32,%esp
L4977:
	testl %ebx,%ebx
	jne L4903
	jmp L5287
	.p2align 2
L4990:
	cmpl $0,12(%ebp)
	je L4903
	movl 12(%ebp),%ecx
	addl $-4,%esp
	movl 12(%ecx),%eax
	pushl %eax
	movl 8(%ecx),%eax
	pushl %eax
	pushl $_INTERFACE__
	call _get_object__SEFC
	movl 76(%edi),%ebx
	cmpl %edi,%eax
	sete %al
	movl %eax,%esi
	movl 12(%ebp),%eax
	addl $16,%esp
	andl $255,%esi
	andl $2,%ebx
	addl $-12,%esp
	pushl %eax
	call _left_up__CHKC
	addl $16,%esp
	testb %al,%al
	setne %al
	andl $255,%eax
	addl $-8,%esp
	addl %eax,%eax
	pushl %eax
	addl $-8,%esp
	pushl %ebx
	pushl %esi
	call ___infix_or__TCKC
	addl $16,%esp
	pushl %eax
	call ___infix_or__TCKC
	movl 76(%edi),%edx
	addl $16,%esp
	cmpl %edx,%eax
	je L4903
	movl %eax,%esi
	andl $1,%esi
	cmpl $-1,%edx
	je L5004
	cmpl $3,%eax
	jne L5007
	testb $2,%dl
	jne L5007
	movl 84(%edi),%eax
	movl _lower__FQX,%ebx
	movl (%eax),%eax
	movl %eax,-8(%ebp)
	cmpl %eax,%ebx
	jg L5285
	.p2align 2
L5012:
	addl $-8,%esp
	pushl %ebx
	movl 84(%edi),%eax
	pushl %eax
	call _item__OKKC
	movl 76(%eax),%eax
	addl $16,%esp
	testl $2,%eax
	je L5015
	cmpl $-1,%eax
	je L5015
	addl $-8,%esp
	pushl $0
	addl $-8,%esp
	pushl %ebx
	movl 84(%edi),%eax
	pushl %eax
	call _item__OKKC
	addl $16,%esp
	pushl %eax
	call _set_stat__NLKC
	addl $16,%esp
L5015:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl -8(%ebp),%ebx
	jle L5012
L5285:
	movl 80(%edi),%eax
	movl $3,76(%edi)
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call _send__HMKC
	addl $16,%esp
	jmp L5025
	.p2align 2
L5007:
	movl %eax,76(%edi)
	movl %eax,%esi
	andl $1,%esi
L5025:
	addl $-12,%esp
	pushl %edi
	call _refresh__OVZ
	addl $16,%esp
L5004:
	testl %esi,%esi
	jne L4903
	jmp L5287
	.p2align 2
L5029:
	cmpl $0,12(%ebp)
	je L4903
	movl 12(%ebp),%ecx
	addl $-4,%esp
	movl 12(%ecx),%eax
	pushl %eax
	movl 8(%ecx),%eax
	pushl %eax
	pushl $_INTERFACE__
	call _get_object__SEFC
	cmpl %edi,%eax
	sete %al
	xorl %edx,%edx
	movb %al,%dl
	movl 12(%ebp),%eax
	addl $16,%esp
	cmpb $0,17(%eax)
	setne %al
	andl $255,%eax
	addl $-8,%esp
	addl %eax,%eax
	pushl %eax
	pushl %edx
	call ___infix_or__TCKC
	movl %eax,%ebx
	movl 76(%edi),%eax
	addl $16,%esp
	cmpl %eax,%ebx
	je L4903
	cmpl $-1,%eax
	je L5040
	cmpl $1,%ebx
	jne L5043
	cmpl $3,%eax
	jne L5043
	movl 80(%edi),%eax
	movl $1,76(%edi)
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call _send__RQKC
	addl $16,%esp
	jmp L5044
	.p2align 2
L5043:
	movl %ebx,76(%edi)
L5044:
	movl 8(%edi),%eax
	addl $-12,%esp
	decl %eax
	pushl %eax
	movl 12(%edi),%eax
	decl %eax
	pushl %eax
	pushl $0
	pushl $0
	pushl %edi
	call _draw__to__7EMB
	addl $32,%esp
L5040:
	testl %ebx,%ebx
	jne L4903
	jmp L5287
	.p2align 2
L5053:
	cmpl $0,12(%ebp)
	je L4903
	movl 12(%ebp),%ecx
	addl $-12,%esp
	pushl %ecx
	call _is_moving_only__MSKC
	addl $16,%esp
	testb %al,%al
	je L5055
	movl 12(%ebp),%eax
	cmpb $0,17(%eax)
	je L5055
	addl $-4,%esp
	addl $-12,%esp
	pushl %eax
	call _dy__ZUKC
	pushl %eax
	movl 12(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _dx__OUKC
	addl $16,%esp
	pushl %eax
	pushl %edi
	call _move__AVKC
	jmp L4903
	.p2align 2
L5055:
	movl 12(%ebp),%ecx
	addl $-4,%esp
	movl 12(%ecx),%eax
	pushl %eax
	movl 8(%ecx),%eax
	pushl %eax
	pushl $_INTERFACE__
	call _get_object__SEFC
	addl $16,%esp
	cmpl %edi,%eax
	je L5057
	movl 8(%edi),%eax
	movl $0,72(%edi)
	addl $-12,%esp
	decl %eax
	pushl %eax
	movl 12(%edi),%eax
	decl %eax
	pushl %eax
	pushl $0
	pushl $0
	pushl %edi
	call _draw__to__PU6B
	movl 12(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	jmp L5288
	.p2align 2
L5057:
	cmpl $1,72(%edi)
	je L4903
	movl 8(%edi),%eax
	movl $1,72(%edi)
	addl $-12,%esp
	decl %eax
	pushl %eax
	movl 12(%edi),%eax
	decl %eax
	pushl %eax
	pushl $0
	pushl $0
	pushl %edi
	call _draw__to__PU6B
	jmp L4903
	.p2align 2
L5076:
	movb $0,-10(%ebp)
	movb $0,-9(%ebp)
	cmpl $0,12(%ebp)
	je L4903
	movl 12(%ebp),%edx
	addl $-4,%esp
	movl 12(%edx),%eax
	pushl %eax
	movl 8(%edx),%eax
	pushl %eax
	pushl $_INTERFACE__
	call _get_object__SEFC
	movl %eax,%edx
	movl 76(%edi),%eax
	addl $16,%esp
	cmpl $-1,%eax
	jne L5078
	cmpl %edi,%edx
	je L4903
	movl 12(%ebp),%ecx
	addl $-8,%esp
	pushl %ecx
	jmp L5288
	.p2align 2
L5078:
	testl $122,%eax
	jne L5083
	cmpl %edi,%edx
	je L5086
	movl 12(%ebp),%eax
	xorl %ebx,%ebx
	addl $-8,%esp
	pushl %eax
	pushl $_INTERFACE__
	call _receive__0LJC
	jmp L5289
	.p2align 2
L5086:
	movl 12(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _y_relative__DHQC
	movl %eax,%esi
	addl $16,%esp
	cmpl $16,%esi
	setg %bl
	addl $-8,%esp
	pushl $16
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	sete %al
	xorl %ebx,%ebx
	movb %al,%bl
	addl $-12,%esp
	pushl %edi
	call _y_max__800B
	addl $16,%esp
	subl $16,%eax
	cmpl %eax,%esi
	setg %al
	andl $255,%eax
	addl $-8,%esp
	sall $2,%eax
	pushl %eax
	pushl %ebx
	call ___infix_or__YLIC
	movl 12(%ebp),%ecx
	movl %eax,%ebx
	addl $16,%esp
	cmpb $0,17(%ecx)
	je L5120
	addl $-8,%esp
	leal (%ebx,%ebx),%eax
	pushl %eax
	pushl %ebx
	call ___infix_or__YLIC
	movl %eax,%ebx
	addl $16,%esp
	testl %ebx,%ebx
	jne L5290
	addl $-12,%esp
	pushl %edi
	call _cursor_begin__6C2B
	movl %eax,%ebx
	addl $-12,%esp
	pushl %edi
	call _cursor_size__FI2B
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	pushl %ebx
	pushl %esi
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	sall $4,%edx
	cmpl -4(%ebp),%esi
	setg %al
	andl $255,%eax
	addl $-8,%esp
	sall $5,%eax
	pushl %eax
	pushl %edx
	call ___infix_or__YLIC
	movl %eax,%ebx
	addl $16,%esp
	testl %ebx,%ebx
	jne L5290
	movl $64,%ebx
	jmp L5120
	.p2align 2
L5083:
	movl 12(%ebp),%ecx
	cmpb $0,17(%ecx)
	je L5121
	movl %eax,%ebx
L5290:
	movb $1,-9(%ebp)
	jmp L5120
	.p2align 2
L5121:
	cmpl %edi,%edx
	je L5123
	movl 12(%ebp),%eax
	xorl %ebx,%ebx
	addl $-8,%esp
	pushl %eax
	pushl $_INTERFACE__
	call _receive__0LJC
	jmp L5289
	.p2align 2
L5123:
	movl 12(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _y_relative__DHQC
	movl %eax,%esi
	addl $16,%esp
	cmpl $16,%esi
	setg %bl
	addl $-8,%esp
	pushl $16
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	sete %al
	xorl %ebx,%ebx
	movb %al,%bl
	addl $-12,%esp
	pushl %edi
	call _y_max__800B
	addl $16,%esp
	subl $16,%eax
	cmpl %eax,%esi
	setg %al
	andl $255,%eax
	addl $-8,%esp
	sall $2,%eax
	pushl %eax
	pushl %ebx
	call ___infix_or__YLIC
	movl %eax,%ebx
L5289:
	addl $16,%esp
L5120:
	cmpl %ebx,76(%edi)
	je L5140
	movl %ebx,76(%edi)
	movb $1,-10(%ebp)
L5140:
	cmpb $0,-9(%ebp)
	je L5141
	movl 88(%edi),%esi
	testb $2,76(%edi)
	je L5142
	testl %esi,%esi
	je L5142
	addl $-8,%esp
	pushl $0
	movl 92(%edi),%eax
	movl 88(%edi),%ecx
	subl %eax,%ecx
	movl %ecx,%eax
	pushl %eax
	call _max__2RJ
	movl %eax,88(%edi)
	addl $16,%esp
L5142:
	testb $8,76(%edi)
	je L5147
	movl 8(%edi),%eax
	movl 84(%edi),%edx
	addl $-8,%esp
	subl %eax,%edx
	movl %edx,%eax
	pushl %eax
	movl 88(%edi),%eax
	pushl %eax
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	je L5147
	movl 88(%edi),%ebx
	movl 92(%edi),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ecx
	movl 8(%edi),%eax
	movl 84(%edi),%edx
	addl $32,%esp
	subl %eax,%edx
	movl %ecx,%eax
	cmpl %edx,%eax
	jle L5154
	movl %edx,%eax
L5154:
	movl %eax,88(%edi)
L5147:
	testb $16,76(%edi)
	je L5157
	cmpl $0,88(%edi)
	je L5157
	addl $-8,%esp
	pushl $0
	movl 8(%edi),%eax
	movl 88(%edi),%ecx
	subl %eax,%ecx
	movl %ecx,%eax
	pushl %eax
	call _max__2RJ
	movl %eax,88(%edi)
	addl $16,%esp
L5157:
	testb $32,76(%edi)
	je L5162
	movl 8(%edi),%eax
	movl 84(%edi),%edx
	addl $-8,%esp
	subl %eax,%edx
	movl %edx,%eax
	pushl %eax
	movl 88(%edi),%eax
	pushl %eax
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	je L5162
	movl 88(%edi),%ebx
	movl 8(%edi),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ecx
	movl 8(%edi),%eax
	movl 84(%edi),%edx
	addl $32,%esp
	subl %eax,%edx
	movl %ecx,%eax
	cmpl %edx,%eax
	jle L5169
	movl %edx,%eax
L5169:
	movl %eax,88(%edi)
L5162:
	testb $64,76(%edi)
	je L5172
	movl 12(%ebp),%ecx
	addl $-12,%esp
	pushl %ecx
	call _dy__ZUKC
	addl $16,%esp
	testl %eax,%eax
	je L5172
	addl $-12,%esp
	pushl %edi
	call _y_max__800B
	leal -33(%eax),%ebx
	movl 12(%ebp),%eax
	addl $16,%esp
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call _dy__ZUKC
	pushl %eax
	addl $-8,%esp
	pushl %ebx
	addl $-12,%esp
	addl $-12,%esp
	pushl %edi
	call _count__WF2B
	addl $16,%esp
	pushl %eax
	call _to_real_16_16__7E2B
	addl $16,%esp
	pushl %eax
	call ___infix_div_diese__IG2B
	addl $16,%esp
	pushl %eax
	call ___infix_mul_diese__AH2B
	pushl %eax
	call _to_integer__RH2B
	movl 88(%edi),%ebx
	addl $48,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	movl %eax,88(%edi)
	addl $-8,%esp
	pushl $0
	movl 8(%edi),%eax
	movl 84(%edi),%edx
	subl %eax,%edx
	movl 88(%edi),%eax
	cmpl %edx,%eax
	jle L5183
	movl %edx,%eax
L5183:
	pushl %eax
	call _max__2RJ
	movl %eax,88(%edi)
	addl $16,%esp
L5172:
	cmpl %esi,88(%edi)
	je L5141
	movl 80(%edi),%eax
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call _send__ZWQC
	movb $1,-10(%ebp)
	addl $16,%esp
L5141:
	cmpb $0,-10(%ebp)
	je L4903
	movl 8(%edi),%eax
	addl $-12,%esp
	decl %eax
	pushl %eax
	movl 12(%edi),%eax
	decl %eax
	pushl %eax
	pushl $0
	pushl $0
	pushl %edi
	call _draw__to__NU0B
	jmp L4903
	.p2align 2
L5195:
	cmpl $0,12(%ebp)
	je L4903
	movl 12(%ebp),%edx
	addl $-4,%esp
	movl 12(%edx),%eax
	pushl %eax
	movl 8(%edx),%eax
	pushl %eax
	pushl $_INTERFACE__
	call _get_object__SEFC
	addl $16,%esp
	cmpl %edi,%eax
	je L4903
	movl 12(%ebp),%ecx
	addl $-8,%esp
	pushl %ecx
	jmp L5288
	.p2align 2
L5199:
	cmpl $0,12(%ebp)
	je L4903
	movl 12(%ebp),%edx
	addl $-4,%esp
	movl 12(%edx),%eax
	pushl %eax
	movl 8(%edx),%eax
	pushl %eax
	pushl $_INTERFACE__
	call _get_object__SEFC
	movl 76(%edi),%ebx
	movl 12(%ebp),%ecx
	addl $16,%esp
	cmpl %edi,%eax
	sete %al
	movl %eax,%esi
	andl $255,%esi
	andl $2,%ebx
	addl $-12,%esp
	pushl %ecx
	call _left_up__CHKC
	addl $16,%esp
	testb %al,%al
	setne %al
	andl $255,%eax
	addl $-8,%esp
	addl $-8,%esp
	addl %eax,%eax
	pushl %eax
	pushl %ebx
	call ___infix_xor__23QC
	addl $16,%esp
	pushl %eax
	pushl %esi
	call ___infix_or__TCKC
	movl 76(%edi),%edx
	movl %eax,%ebx
	addl $16,%esp
	cmpl %edx,%ebx
	je L4903
	cmpl $-1,%edx
	je L5212
	andl $2,%eax
	andl $2,%edx
	cmpl %edx,%eax
	je L5215
	movl 80(%edi),%eax
	movl %ebx,76(%edi)
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call _send__O5QC
	addl $16,%esp
	jmp L5220
	.p2align 2
L5215:
	movl %ebx,76(%edi)
L5220:
	movl 8(%edi),%eax
	addl $-12,%esp
	decl %eax
	pushl %eax
	movl 12(%edi),%eax
	decl %eax
	pushl %eax
	pushl $0
	pushl $0
	pushl %edi
	call _draw__to__HFU
	addl $32,%esp
L5212:
	testb $1,%bl
	jne L4903
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	jmp L5288
	.p2align 2
L5231:
	cmpl $0,12(%ebp)
	je L4903
	movl 12(%ebp),%edx
	addl $-4,%esp
	movl 12(%edx),%eax
	pushl %eax
	movl 8(%edx),%eax
	pushl %eax
	pushl $_INTERFACE__
	call _get_object__SEFC
	movl 76(%edi),%ebx
	movl %eax,%esi
	addl $16,%esp
	cmpl $-1,%ebx
	jne L5236
	cmpl %edi,%esi
	je L5236
	movl 12(%ebp),%ecx
	addl $-8,%esp
	pushl %ecx
	pushl $_INTERFACE__
	call _receive__0LJC
	addl $16,%esp
L5236:
	testl %ebx,%ebx
	jne L5239
	cmpl %edi,%esi
	jne L5240
	movl 8(%edi),%eax
	movl $1,76(%edi)
	addl $-12,%esp
	decl %eax
	pushl %eax
	movl 12(%edi),%eax
	decl %eax
	pushl %eax
	pushl $0
	pushl $0
	pushl %edi
	call _draw__to__HEWB
	addl $32,%esp
	jmp L5239
	.p2align 2
L5240:
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl $_INTERFACE__
	call _receive__0LJC
	addl $16,%esp
L5239:
	cmpl $1,%ebx
	jne L5251
	cmpl %edi,%esi
	jne L5252
	cmpb $0,_MOUSE__+25
	je L5251
	movl 84(%edi),%eax
	movl $2,76(%edi)
	addl $-12,%esp
	movl 4(%eax),%eax
	movl %eax,88(%edi)
	movl 8(%edi),%eax
	jmp L5291
	.p2align 2
L5252:
	movl 8(%edi),%eax
	movl $0,76(%edi)
	addl $-12,%esp
L5291:
	decl %eax
	pushl %eax
	movl 12(%edi),%eax
	decl %eax
	pushl %eax
	pushl $0
	pushl $0
	pushl %edi
	call _draw__to__HEWB
	addl $32,%esp
L5251:
	cmpl $2,%ebx
	jne L4903
	cmpl %edi,%esi
	je L4903
	cmpb $0,_MOUSE__+25
	je L4903
	movl 8(%edi),%eax
	movl $0,76(%edi)
	addl $-12,%esp
	decl %eax
	pushl %eax
	movl 12(%edi),%eax
	decl %eax
	pushl %eax
	pushl $0
	pushl $0
	pushl %edi
	call _draw__to__HEWB
	movl 80(%edi),%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call _send__QQTC
L5287:
	movl 12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
L5288:
	pushl $_INTERFACE__
	call _receive__0LJC
	jmp L4903
	.p2align 2
L5282:
	movl 12(%ebp),%ecx
	addl $-8,%esp
	pushl %ecx
	pushl %edi
	call _receive__0LJC
L4903:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_receive__CVRC:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edx
	movl 8(%ebp),%esi
	cmpl $77,(%edx)
	jne L5295
	xorl %edx,%edx
L5295:
	testl %edx,%edx
	je L5297
	movl 12(%edx),%eax
	addl $-4,%esp
	pushl %eax
	movl 8(%edx),%eax
	pushl %eax
	pushl $_INTERFACE__
	call _get_object__SEFC
	movl 76(%esi),%ebx
	movl %eax,%edi
	addl $16,%esp
	cmpl $-1,%ebx
	jne L5301
	cmpl %esi,%edi
	je L5301
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl $_INTERFACE__
	call _receive__6ZRC
	addl $16,%esp
L5301:
	testl %ebx,%ebx
	jne L5304
	cmpl %esi,%edi
	jne L5305
	movl 8(%esi),%eax
	movl $1,76(%esi)
	addl $-12,%esp
	decl %eax
	pushl %eax
	movl 12(%esi),%eax
	decl %eax
	pushl %eax
	pushl $0
	pushl $0
	pushl %esi
	call _draw__to__2HRB
	addl $32,%esp
	jmp L5304
	.p2align 2
L5305:
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl $_INTERFACE__
	call _receive__6ZRC
	addl $16,%esp
L5304:
	cmpl $1,%ebx
	jne L5316
	cmpl %esi,%edi
	jne L5317
	cmpb $0,_MOUSE__+25
	je L5316
	movl _text_tmp__4ZN,%eax
	movl $2,76(%esi)
	addl $-12,%esp
	pushl %eax
	call _clear__QPTB
	movl _text_tmp__4ZN,%eax
	addl $-8,%esp
	pushl %eax
	movl 84(%esi),%eax
	pushl %eax
	call _append_in__NQTB
	movl _text_tmp__4ZN,%eax
	addl $32,%esp
	addl $-12,%esp
	movl 4(%eax),%eax
	movl %eax,88(%esi)
	movl 8(%esi),%eax
	jmp L5415
	.p2align 2
L5317:
	movl 8(%esi),%eax
	movl $0,76(%esi)
	addl $-12,%esp
L5415:
	decl %eax
	pushl %eax
	movl 12(%esi),%eax
	decl %eax
	pushl %eax
	pushl $0
	pushl $0
	pushl %esi
	call _draw__to__2HRB
	addl $32,%esp
L5316:
	cmpl $2,%ebx
	jne L5297
	cmpl %esi,%edi
	je L5297
	cmpb $0,_MOUSE__+25
	je L5297
	movl _text_tmp__4ZN,%eax
	movl $0,76(%esi)
	addl $-12,%esp
	pushl %eax
	call _to_integer__W3TC
	movl %eax,%edx
	movl 92(%esi),%eax
	addl $16,%esp
	cmpl %eax,%edx
	jle L5341
	movl %edx,%eax
L5341:
	movl 96(%esi),%edx
	cmpl %edx,%eax
	jle L5345
	movl %edx,%eax
L5345:
	movl %eax,84(%esi)
	movl 8(%esi),%eax
	addl $-12,%esp
	decl %eax
	pushl %eax
	movl 12(%esi),%eax
	decl %eax
	pushl %eax
	pushl $0
	pushl $0
	pushl %esi
	call _draw__to__2HRB
	movl 80(%esi),%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call _send__D4TC
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl $_INTERFACE__
	call _receive__6ZRC
	addl $32,%esp
L5297:
	movl 12(%ebp),%eax
	xorl %ebx,%ebx
	cmpl $77,(%eax)
	jne L5355
	movl %eax,%ebx
L5355:
	testl %ebx,%ebx
	je L5357
	cmpl $2,76(%esi)
	jne L5357
	xorl %eax,%eax
	movw 8(%ebx),%ax
	addl $-12,%esp
	addl $-12,%esp
	pushl %eax
	call ___infix_greater_greater__PRTC
	andl $65535,%eax
	pushl %eax
	call _to_usmallint__QRTC
	movb %al,-8(%ebp)
	addl $32,%esp
	addl $-12,%esp
	addl $-8,%esp
	pushl $255
	xorl %eax,%eax
	movw 8(%ebx),%ax
	pushl %eax
	call ___infix_and__VRTC
	andl $65535,%eax
	pushl %eax
	call _to_character__1RTC
	movb %al,-1(%ebp)
	addl $32,%esp
	movb -8(%ebp),%al
	testl $8,%eax
	je L5359
	movb -1(%ebp),%al
	movb %al,-2(%ebp)
	cmpb $13,%al
	jne L5362
	movl _text_tmp__4ZN,%eax
	movl $0,76(%esi)
	addl $-12,%esp
	pushl %eax
	call _to_integer__W3TC
	movl %eax,%edx
	movl 92(%esi),%eax
	addl $16,%esp
	cmpl %eax,%edx
	jle L5365
	movl %edx,%eax
L5365:
	movl 96(%esi),%edx
	cmpl %edx,%eax
	jle L5369
	movl %edx,%eax
L5369:
	movl %eax,84(%esi)
	movl 8(%esi),%eax
	addl $-12,%esp
	decl %eax
	pushl %eax
	movl 12(%esi),%eax
	decl %eax
	pushl %eax
	pushl $0
	pushl $0
	pushl %esi
	call _draw__to__2HRB
	movl 80(%esi),%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call _send__D4TC
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl $_INTERFACE__
	call _receive__6ZRC
	addl $32,%esp
L5362:
	cmpb $76,-1(%ebp)
	jne L5379
	movl 88(%esi),%eax
	testl %eax,%eax
	je L5379
	decl %eax
	movl %eax,88(%esi)
L5379:
	cmpb $82,-1(%ebp)
	jne L5383
	movl _text_tmp__4ZN,%eax
	movl 88(%esi),%ebx
	cmpl 4(%eax),%ebx
	je L5383
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	movl %eax,88(%esi)
L5383:
	cmpb $66,-1(%ebp)
	jne L5387
	movl $0,88(%esi)
L5387:
	cmpb $69,-1(%ebp)
	jne L5389
	movl _text_tmp__4ZN,%eax
	movl 4(%eax),%eax
	movl %eax,88(%esi)
L5389:
	cmpb $8,-1(%ebp)
	jne L5390
	movl 88(%esi),%eax
	testl %eax,%eax
	je L5390
	addl $-8,%esp
	pushl %eax
	movl _text_tmp__4ZN,%eax
	pushl %eax
	call _remove__VEUB
	addl $16,%esp
	decl 88(%esi)
L5390:
	cmpb $83,-2(%ebp)
	jne L5398
	movl _text_tmp__4ZN,%eax
	movl 88(%esi),%ebx
	cmpl 4(%eax),%ebx
	je L5398
	addl $-8,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	movl _text_tmp__4ZN,%eax
	pushl %eax
	call _remove__VEUB
	addl $16,%esp
	jmp L5398
	.p2align 2
L5359:
	addl $-12,%esp
	movsbl -1(%ebp),%ebx
	pushl %ebx
	call ___infix_greater_equal__5BGC
	addl $16,%esp
	movl %ebx,%edi
	testb %al,%al
	je L5401
	addl $-12,%esp
	pushl %edi
	call ___infix_less_equal__5CGC
	addl $16,%esp
	testb %al,%al
	jne L5400
L5401:
	cmpb $45,-1(%ebp)
	jne L5398
	movl 92(%esi),%eax
	testl %eax,%eax
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L5398
L5400:
	movl 88(%esi),%eax
	addl $-4,%esp
	pushl %eax
	pushl %edi
	movl _text_tmp__4ZN,%eax
	pushl %eax
	call _insert__to__O9TB
	movl 88(%esi),%ebx
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	movl %eax,88(%esi)
L5398:
	movl 8(%esi),%eax
	addl $-12,%esp
	decl %eax
	pushl %eax
	movl 12(%esi),%eax
	decl %eax
	pushl %eax
	pushl $0
	pushl $0
	pushl %esi
	call _draw__to__2HRB
L5357:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_receive__Z6RC:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%edi
	movl %edi,%ebx
	cmpl $77,(%edi)
	jne L5417
	xorl %ebx,%ebx
L5417:
	testl %ebx,%ebx
	je L5419
	movl 12(%ebx),%eax
	addl $-4,%esp
	pushl %eax
	movl 8(%ebx),%eax
	pushl %eax
	pushl $_INTERFACE__
	call _get_object__SEFC
	addl $16,%esp
	cmpl %esi,%eax
	sete %al
	xorl %edx,%edx
	movb %al,%dl
	cmpb $0,17(%ebx)
	setne %al
	andl $255,%eax
	addl $-8,%esp
	addl %eax,%eax
	pushl %eax
	pushl %edx
	call ___infix_or__TCKC
	movl %eax,%ebx
	movl 76(%esi),%eax
	addl $16,%esp
	cmpl %eax,%ebx
	je L5419
	cmpl $-1,%eax
	je L5429
	cmpl $1,%ebx
	jne L5432
	cmpl $3,%eax
	jne L5432
	movl 80(%esi),%eax
	movl $1,76(%esi)
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call _send__AEKC
	addl $16,%esp
	jmp L5433
	.p2align 2
L5432:
	movl %ebx,76(%esi)
L5433:
	movl 8(%esi),%eax
	addl $-12,%esp
	decl %eax
	pushl %eax
	movl 12(%esi),%eax
	decl %eax
	pushl %eax
	pushl $0
	pushl $0
	pushl %esi
	call _draw__to__WCQ
	addl $32,%esp
L5429:
	testl %ebx,%ebx
	jne L5419
	addl $-8,%esp
	pushl %edi
	pushl $_INTERFACE__
	call _receive__6ZRC
L5419:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_receive__2ASC:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	cmpl $77,(%edi)
	jne L5443
	xorl %edi,%edi
L5443:
	testl %edi,%edi
	je L5445
	movl 12(%edi),%eax
	addl $-4,%esp
	pushl %eax
	movl 8(%edi),%eax
	pushl %eax
	pushl $_INTERFACE__
	call _get_object__SEFC
	cmpl 8(%ebp),%eax
	sete %al
	movl %eax,%esi
	movl 8(%ebp),%eax
	addl $16,%esp
	andl $255,%esi
	addl $-12,%esp
	movl 76(%eax),%ebx
	andl $2,%ebx
	pushl %edi
	call _left_up__CHKC
	addl $16,%esp
	testb %al,%al
	setne %al
	andl $255,%eax
	addl $-8,%esp
	addl %eax,%eax
	pushl %eax
	addl $-8,%esp
	pushl %ebx
	pushl %esi
	call ___infix_or__TCKC
	addl $16,%esp
	pushl %eax
	call ___infix_or__TCKC
	movl 8(%ebp),%ecx
	addl $16,%esp
	movl 76(%ecx),%edx
	cmpl %edx,%eax
	je L5445
	movl %eax,%esi
	andl $1,%esi
	cmpl $-1,%edx
	je L5458
	cmpl $3,%eax
	jne L5461
	testb $2,%dl
	jne L5461
	movl 84(%ecx),%eax
	movl _lower__FQX,%ebx
	movl (%eax),%edi
	cmpl %edi,%ebx
	jg L5483
	.p2align 2
L5466:
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 84(%edx),%eax
	pushl %eax
	call _item__OKKC
	movl 76(%eax),%eax
	addl $16,%esp
	testl $2,%eax
	je L5469
	cmpl $-1,%eax
	je L5469
	addl $-8,%esp
	pushl $0
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%ecx
	movl 84(%ecx),%eax
	pushl %eax
	call _item__OKKC
	addl $16,%esp
	pushl %eax
	call _set_stat__NLKC
	addl $16,%esp
L5469:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %edi,%ebx
	jle L5466
L5483:
	movl 8(%ebp),%eax
	movl 8(%ebp),%edx
	movl $3,76(%eax)
	addl $-8,%esp
	movl 80(%edx),%eax
	pushl %eax
	pushl %edx
	call _send__HMKC
	addl $16,%esp
	jmp L5479
	.p2align 2
L5461:
	movl 8(%ebp),%ecx
	movl %eax,76(%ecx)
	movl %eax,%esi
	andl $1,%esi
L5479:
	movl 8(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _refresh__OVZ
	addl $16,%esp
L5458:
	testl %esi,%esi
	jne L5445
	movl 12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl $_INTERFACE__
	call _receive__6ZRC
L5445:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_receive__YISC:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%edi
	movl %edi,%ebx
	cmpl $77,(%edi)
	jne L5485
	xorl %ebx,%ebx
L5485:
	testl %ebx,%ebx
	je L5487
	movl 12(%ebx),%eax
	addl $-4,%esp
	pushl %eax
	movl 8(%ebx),%eax
	pushl %eax
	pushl $_INTERFACE__
	call _get_object__SEFC
	addl $16,%esp
	cmpl %esi,%eax
	sete %al
	xorl %edx,%edx
	movb %al,%dl
	cmpb $0,17(%ebx)
	setne %al
	andl $255,%eax
	addl $-8,%esp
	addl %eax,%eax
	pushl %eax
	pushl %edx
	call ___infix_or__TCKC
	movl %eax,%ebx
	movl 76(%esi),%eax
	addl $16,%esp
	cmpl %eax,%ebx
	je L5487
	cmpl $-1,%eax
	je L5497
	cmpl $1,%ebx
	jne L5500
	cmpl $3,%eax
	jne L5500
	movl 80(%esi),%eax
	movl $1,76(%esi)
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call _send__RQKC
	addl $16,%esp
	jmp L5501
	.p2align 2
L5500:
	movl %ebx,76(%esi)
L5501:
	movl 8(%esi),%eax
	addl $-12,%esp
	decl %eax
	pushl %eax
	movl 12(%esi),%eax
	decl %eax
	pushl %eax
	pushl $0
	pushl $0
	pushl %esi
	call _draw__to__7EMB
	addl $32,%esp
L5497:
	testl %ebx,%ebx
	jne L5487
	addl $-8,%esp
	pushl %edi
	pushl $_INTERFACE__
	call _receive__6ZRC
L5487:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_receive__1MSC:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%edi
	movl %edi,%ebx
	cmpl $77,(%edi)
	jne L5511
	xorl %ebx,%ebx
L5511:
	testl %ebx,%ebx
	je L5513
	addl $-12,%esp
	pushl %ebx
	call _is_moving_only__MSKC
	addl $16,%esp
	testb %al,%al
	je L5514
	cmpb $0,17(%ebx)
	je L5514
	addl $-4,%esp
	addl $-12,%esp
	pushl %ebx
	call _dy__ZUKC
	pushl %eax
	addl $-12,%esp
	pushl %ebx
	call _dx__OUKC
	addl $16,%esp
	pushl %eax
	pushl %esi
	call _move__AVKC
	jmp L5513
	.p2align 2
L5514:
	movl 12(%ebx),%eax
	addl $-4,%esp
	pushl %eax
	movl 8(%ebx),%eax
	pushl %eax
	pushl $_INTERFACE__
	call _get_object__SEFC
	addl $16,%esp
	cmpl %esi,%eax
	je L5516
	movl 8(%esi),%eax
	movl $0,72(%esi)
	addl $-12,%esp
	decl %eax
	pushl %eax
	movl 12(%esi),%eax
	decl %eax
	pushl %eax
	pushl $0
	pushl $0
	pushl %esi
	call _draw__to__PU6B
	addl $32,%esp
	addl $-8,%esp
	pushl %edi
	pushl $_INTERFACE__
	call _receive__6ZRC
	jmp L5513
	.p2align 2
L5516:
	cmpl $1,72(%esi)
	je L5513
	movl 8(%esi),%eax
	movl $1,72(%esi)
	addl $-12,%esp
	decl %eax
	pushl %eax
	movl 12(%esi),%eax
	decl %eax
	pushl %eax
	pushl $0
	pushl $0
	pushl %esi
	call _draw__to__PU6B
L5513:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_receive__5PSC:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%edi
	movb $0,-10(%ebp)
	movb $0,-9(%ebp)
	movl %edi,-8(%ebp)
	cmpl $77,(%edi)
	jne L5536
	movl $0,-8(%ebp)
L5536:
	cmpl $0,-8(%ebp)
	je L5538
	movl -8(%ebp),%edx
	addl $-4,%esp
	movl 12(%edx),%eax
	pushl %eax
	movl 8(%edx),%eax
	pushl %eax
	pushl $_INTERFACE__
	call _get_object__SEFC
	movl %eax,%edx
	movl 76(%esi),%eax
	addl $16,%esp
	cmpl $-1,%eax
	jne L5539
	cmpl %esi,%edx
	je L5538
	addl $-8,%esp
	pushl %edi
	pushl $_INTERFACE__
	call _receive__6ZRC
	jmp L5538
	.p2align 2
L5539:
	testl $122,%eax
	jne L5544
	cmpl %esi,%edx
	je L5547
	xorl %ebx,%ebx
	addl $-8,%esp
	pushl %edi
	pushl $_INTERFACE__
	call _receive__6ZRC
	jmp L5656
	.p2align 2
L5547:
	movl -8(%ebp),%ecx
	addl $-12,%esp
	pushl %ecx
	call _y_relative__DHQC
	movl %eax,%edi
	addl $16,%esp
	cmpl $16,%edi
	setg %bl
	addl $-8,%esp
	pushl $16
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	sete %al
	xorl %ebx,%ebx
	movb %al,%bl
	addl $-12,%esp
	pushl %esi
	call _y_max__800B
	addl $16,%esp
	subl $16,%eax
	cmpl %eax,%edi
	setg %al
	andl $255,%eax
	addl $-8,%esp
	sall $2,%eax
	pushl %eax
	pushl %ebx
	call ___infix_or__YLIC
	movl %eax,%ebx
	movl -8(%ebp),%eax
	addl $16,%esp
	cmpb $0,17(%eax)
	je L5581
	addl $-8,%esp
	leal (%ebx,%ebx),%eax
	pushl %eax
	pushl %ebx
	call ___infix_or__YLIC
	movl %eax,%ebx
	addl $16,%esp
	testl %ebx,%ebx
	jne L5657
	addl $-12,%esp
	pushl %esi
	call _cursor_begin__6C2B
	movl %eax,%ebx
	addl $-12,%esp
	pushl %esi
	call _cursor_size__FI2B
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	pushl %ebx
	pushl %edi
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	sall $4,%edx
	cmpl -4(%ebp),%edi
	setg %al
	andl $255,%eax
	addl $-8,%esp
	sall $5,%eax
	pushl %eax
	pushl %edx
	call ___infix_or__YLIC
	movl %eax,%ebx
	addl $16,%esp
	testl %ebx,%ebx
	jne L5657
	movl $64,%ebx
	jmp L5581
	.p2align 2
L5544:
	movl -8(%ebp),%ecx
	cmpb $0,17(%ecx)
	je L5582
	movl %eax,%ebx
L5657:
	movb $1,-9(%ebp)
	jmp L5581
	.p2align 2
L5582:
	cmpl %esi,%edx
	je L5584
	xorl %ebx,%ebx
	addl $-8,%esp
	pushl %edi
	pushl $_INTERFACE__
	call _receive__6ZRC
	jmp L5656
	.p2align 2
L5584:
	movl -8(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _y_relative__DHQC
	movl %eax,%edi
	addl $16,%esp
	cmpl $16,%edi
	setg %bl
	addl $-8,%esp
	pushl $16
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	sete %al
	xorl %ebx,%ebx
	movb %al,%bl
	addl $-12,%esp
	pushl %esi
	call _y_max__800B
	addl $16,%esp
	subl $16,%eax
	cmpl %eax,%edi
	setg %al
	andl $255,%eax
	addl $-8,%esp
	sall $2,%eax
	pushl %eax
	pushl %ebx
	call ___infix_or__YLIC
	movl %eax,%ebx
L5656:
	addl $16,%esp
L5581:
	cmpl %ebx,76(%esi)
	je L5601
	movl %ebx,76(%esi)
	movb $1,-10(%ebp)
L5601:
	cmpb $0,-9(%ebp)
	je L5602
	movl 88(%esi),%edi
	testb $2,76(%esi)
	je L5603
	testl %edi,%edi
	je L5603
	addl $-8,%esp
	pushl $0
	movl %edi,%eax
	subl 92(%esi),%eax
	pushl %eax
	call _max__2RJ
	movl %eax,88(%esi)
	addl $16,%esp
L5603:
	testb $8,76(%esi)
	je L5608
	movl 8(%esi),%eax
	movl 84(%esi),%edx
	addl $-8,%esp
	subl %eax,%edx
	movl %edx,%eax
	pushl %eax
	movl 88(%esi),%eax
	pushl %eax
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	je L5608
	movl 88(%esi),%ebx
	movl 92(%esi),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ecx
	movl 8(%esi),%eax
	movl 84(%esi),%edx
	addl $32,%esp
	subl %eax,%edx
	movl %ecx,%eax
	cmpl %edx,%eax
	jle L5615
	movl %edx,%eax
L5615:
	movl %eax,88(%esi)
L5608:
	testb $16,76(%esi)
	je L5618
	movl 88(%esi),%eax
	testl %eax,%eax
	je L5618
	addl $-8,%esp
	pushl $0
	subl 8(%esi),%eax
	pushl %eax
	call _max__2RJ
	movl %eax,88(%esi)
	addl $16,%esp
L5618:
	testb $32,76(%esi)
	je L5623
	movl 8(%esi),%eax
	movl 84(%esi),%ecx
	addl $-8,%esp
	subl %eax,%ecx
	movl %ecx,%eax
	pushl %eax
	movl 88(%esi),%eax
	pushl %eax
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	je L5623
	movl 88(%esi),%ebx
	movl 8(%esi),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ecx
	movl 8(%esi),%eax
	movl 84(%esi),%edx
	addl $32,%esp
	subl %eax,%edx
	movl %ecx,%eax
	cmpl %edx,%eax
	jle L5630
	movl %edx,%eax
L5630:
	movl %eax,88(%esi)
L5623:
	testb $64,76(%esi)
	je L5633
	movl -8(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _dy__ZUKC
	addl $16,%esp
	testl %eax,%eax
	je L5633
	addl $-12,%esp
	pushl %esi
	call _y_max__800B
	movl -8(%ebp),%edx
	addl $16,%esp
	leal -33(%eax),%ebx
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call _dy__ZUKC
	pushl %eax
	addl $-8,%esp
	pushl %ebx
	addl $-12,%esp
	addl $-12,%esp
	pushl %esi
	call _count__WF2B
	addl $16,%esp
	pushl %eax
	call _to_real_16_16__7E2B
	addl $16,%esp
	pushl %eax
	call ___infix_div_diese__IG2B
	addl $16,%esp
	pushl %eax
	call ___infix_mul_diese__AH2B
	pushl %eax
	call _to_integer__RH2B
	movl 88(%esi),%ebx
	addl $48,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ecx
	addl $32,%esp
	movl %ecx,88(%esi)
	addl $-8,%esp
	pushl $0
	movl 8(%esi),%eax
	movl 84(%esi),%edx
	subl %eax,%edx
	movl %ecx,%eax
	cmpl %edx,%eax
	jle L5644
	movl %edx,%eax
L5644:
	pushl %eax
	call _max__2RJ
	movl %eax,88(%esi)
	addl $16,%esp
L5633:
	cmpl %edi,88(%esi)
	je L5602
	movl 80(%esi),%eax
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call _send__ZWQC
	movb $1,-10(%ebp)
	addl $16,%esp
L5602:
	cmpb $0,-10(%ebp)
	je L5538
	movl 8(%esi),%eax
	addl $-12,%esp
	decl %eax
	pushl %eax
	movl 12(%esi),%eax
	decl %eax
	pushl %eax
	pushl $0
	pushl $0
	pushl %esi
	call _draw__to__NU0B
L5538:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_receive__YCTC:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	cmpl $77,(%edi)
	jne L5664
	xorl %edi,%edi
L5664:
	testl %edi,%edi
	je L5666
	movl 12(%edi),%eax
	addl $-4,%esp
	pushl %eax
	movl 8(%edi),%eax
	pushl %eax
	pushl $_INTERFACE__
	call _get_object__SEFC
	cmpl 8(%ebp),%eax
	sete %al
	movl %eax,%esi
	movl 8(%ebp),%eax
	addl $16,%esp
	andl $255,%esi
	addl $-12,%esp
	movl 76(%eax),%ebx
	andl $2,%ebx
	pushl %edi
	call _left_up__CHKC
	addl $16,%esp
	testb %al,%al
	setne %al
	andl $255,%eax
	addl $-8,%esp
	addl $-8,%esp
	addl %eax,%eax
	pushl %eax
	pushl %ebx
	call ___infix_xor__23QC
	addl $16,%esp
	pushl %eax
	pushl %esi
	call ___infix_or__TCKC
	movl %eax,%ebx
	movl 8(%ebp),%eax
	addl $16,%esp
	movl 76(%eax),%edx
	cmpl %edx,%ebx
	je L5666
	cmpl $-1,%edx
	je L5678
	movl %ebx,%eax
	andl $2,%eax
	andl $2,%edx
	cmpl %edx,%eax
	je L5681
	movl 8(%ebp),%edx
	movl %ebx,76(%edx)
	addl $-8,%esp
	movl 80(%edx),%eax
	pushl %eax
	pushl %edx
	call _send__O5QC
	addl $16,%esp
	jmp L5686
	.p2align 2
L5681:
	movl 8(%ebp),%eax
	movl %ebx,76(%eax)
L5686:
	movl 8(%ebp),%edx
	addl $-12,%esp
	movl 8(%edx),%eax
	decl %eax
	pushl %eax
	movl 12(%edx),%eax
	decl %eax
	pushl %eax
	pushl $0
	pushl $0
	pushl %edx
	call _draw__to__HFU
	addl $32,%esp
L5678:
	testb $1,%bl
	jne L5666
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl $_INTERFACE__
	call _receive__6ZRC
L5666:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_receive__VHTC:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edx
	movl 8(%ebp),%esi
	cmpl $77,(%edx)
	jne L5698
	xorl %edx,%edx
L5698:
	testl %edx,%edx
	je L5700
	movl 12(%edx),%eax
	addl $-4,%esp
	pushl %eax
	movl 8(%edx),%eax
	pushl %eax
	pushl $_INTERFACE__
	call _get_object__SEFC
	movl 76(%esi),%ebx
	movl %eax,%edi
	addl $16,%esp
	cmpl $-1,%ebx
	jne L5704
	cmpl %esi,%edi
	je L5704
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl $_INTERFACE__
	call _receive__6ZRC
	addl $16,%esp
L5704:
	testl %ebx,%ebx
	jne L5707
	cmpl %esi,%edi
	jne L5708
	movl 8(%esi),%eax
	movl $1,76(%esi)
	addl $-12,%esp
	decl %eax
	pushl %eax
	movl 12(%esi),%eax
	decl %eax
	pushl %eax
	pushl $0
	pushl $0
	pushl %esi
	call _draw__to__HEWB
	addl $32,%esp
	jmp L5707
	.p2align 2
L5708:
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl $_INTERFACE__
	call _receive__6ZRC
	addl $16,%esp
L5707:
	cmpl $1,%ebx
	jne L5719
	cmpl %esi,%edi
	jne L5720
	cmpb $0,_MOUSE__+25
	je L5719
	movl 84(%esi),%eax
	movl $2,76(%esi)
	addl $-12,%esp
	movl 4(%eax),%eax
	movl %eax,88(%esi)
	movl 8(%esi),%eax
	jmp L5795
	.p2align 2
L5720:
	movl 8(%esi),%eax
	movl $0,76(%esi)
	addl $-12,%esp
L5795:
	decl %eax
	pushl %eax
	movl 12(%esi),%eax
	decl %eax
	pushl %eax
	pushl $0
	pushl $0
	pushl %esi
	call _draw__to__HEWB
	addl $32,%esp
L5719:
	cmpl $2,%ebx
	jne L5700
	cmpl %esi,%edi
	je L5700
	cmpb $0,_MOUSE__+25
	je L5700
	movl 8(%esi),%eax
	movl $0,76(%esi)
	addl $-12,%esp
	decl %eax
	pushl %eax
	movl 12(%esi),%eax
	decl %eax
	pushl %eax
	pushl $0
	pushl $0
	pushl %esi
	call _draw__to__HEWB
	movl 80(%esi),%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call _send__QQTC
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl $_INTERFACE__
	call _receive__6ZRC
	addl $32,%esp
L5700:
	movl 12(%ebp),%eax
	xorl %ebx,%ebx
	cmpl $77,(%eax)
	jne L5750
	movl %eax,%ebx
L5750:
	testl %ebx,%ebx
	je L5752
	cmpl $2,76(%esi)
	jne L5752
	xorl %eax,%eax
	movw 8(%ebx),%ax
	addl $-12,%esp
	addl $-12,%esp
	pushl %eax
	call ___infix_greater_greater__PRTC
	andl $65535,%eax
	pushl %eax
	call _to_usmallint__QRTC
	movb %al,-4(%ebp)
	addl $32,%esp
	addl $-12,%esp
	addl $-8,%esp
	pushl $255
	xorl %eax,%eax
	movw 8(%ebx),%ax
	pushl %eax
	call ___infix_and__VRTC
	andl $65535,%eax
	pushl %eax
	call _to_character__1RTC
	movb %al,%bl
	addl $32,%esp
	movb -4(%ebp),%al
	testl $8,%eax
	je L5754
	cmpb $13,%bl
	jne L5757
	movl 8(%esi),%eax
	movl $0,76(%esi)
	addl $-12,%esp
	decl %eax
	pushl %eax
	movl 12(%esi),%eax
	decl %eax
	pushl %eax
	pushl $0
	pushl $0
	pushl %esi
	call _draw__to__HEWB
	movl 80(%esi),%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call _send__QQTC
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl $_INTERFACE__
	call _receive__6ZRC
	addl $32,%esp
L5757:
	cmpb $76,%bl
	jne L5766
	movl 88(%esi),%eax
	testl %eax,%eax
	je L5766
	decl %eax
	movl %eax,88(%esi)
L5766:
	cmpb $82,%bl
	jne L5770
	movl 84(%esi),%eax
	movl 88(%esi),%edi
	cmpl 4(%eax),%edi
	je L5770
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	addl $32,%esp
	movl %eax,88(%esi)
L5770:
	cmpb $66,%bl
	jne L5774
	movl $0,88(%esi)
L5774:
	cmpb $69,%bl
	jne L5776
	movl 84(%esi),%eax
	movl 4(%eax),%eax
	movl %eax,88(%esi)
L5776:
	cmpb $8,%bl
	jne L5777
	movl 88(%esi),%eax
	testl %eax,%eax
	je L5777
	addl $-8,%esp
	pushl %eax
	movl 84(%esi),%eax
	pushl %eax
	call _remove__VEUB
	addl $16,%esp
	decl 88(%esi)
L5777:
	cmpb $83,%bl
	jne L5785
	movl 84(%esi),%eax
	movl 88(%esi),%ebx
	cmpl 4(%eax),%ebx
	je L5785
	addl $-8,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	movl 84(%esi),%eax
	pushl %eax
	call _remove__VEUB
	addl $16,%esp
	jmp L5785
	.p2align 2
L5754:
	movl 88(%esi),%eax
	addl $-4,%esp
	pushl %eax
	movsbl %bl,%eax
	pushl %eax
	movl 84(%esi),%eax
	pushl %eax
	call _insert__to__O9TB
	movl 88(%esi),%ebx
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	movl %eax,88(%esi)
L5785:
	movl 8(%esi),%eax
	addl $-12,%esp
	decl %eax
	pushl %eax
	movl 12(%esi),%eax
	decl %eax
	pushl %eax
	pushl $0
	pushl $0
	pushl %esi
	call _draw__to__HEWB
L5752:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_receive__6ZRC:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	movl 4(%edi),%eax
	testl %eax,%eax
	jne L5799
	movl _storage_message__NL,%esi
	cmpl $0,4(%esi)
	jne L5800
	addl $-12,%esp
	pushl %edi
	call _create__next__H2RC
	movl %eax,4(%esi)
	movl $1,(%esi)
	movl %eax,8(%esi)
	movl $1,12(%esi)
	jmp L5807
	.p2align 2
L5800:
	addl $-12,%esp
	pushl %edi
	call _create__next__H2RC
	movl %eax,%edi
	movl 8(%esi),%eax
	movl %edi,4(%eax)
	movl (%esi),%ebx
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,(%esi)
	movl %edi,8(%esi)
	jmp L5807
	.p2align 2
L5799:
	movl %edi,%edx
	cmpl $77,(%edi)
	jne L5808
	xorl %edx,%edx
L5808:
	testl %edx,%edx
	je L5807
	movl 12(%edx),%eax
	addl $-4,%esp
	pushl %eax
	movl 8(%edx),%eax
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _get_object__SEFC
	addl $16,%esp
	cmpl _focus__LL,%eax
	je L5807
	movl %eax,_focus__LL
	movl %eax,4(%edi)
	movl _focus__LL,%ebx
	movl (%ebx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L5807
	jmp *L5833(,%eax,4)
	.p2align 2
L5833:
	.long L5832
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5807
	.long L5821
	.long L5818
	.long L5830
	.long L5807
	.long L5819
	.long L5823
	.long L5820
	.long L5817
	.long L5831
	.long L5822
	.p2align 2
L5817:
	addl $-8,%esp
	pushl %edi
	pushl %ebx
	call _receive__CVRC
	jmp L5807
	.p2align 2
L5818:
	addl $-8,%esp
	pushl %edi
	pushl %ebx
	call _receive__Z6RC
	jmp L5807
	.p2align 2
L5819:
	addl $-8,%esp
	pushl %edi
	pushl %ebx
	call _receive__2ASC
	jmp L5807
	.p2align 2
L5820:
	addl $-8,%esp
	pushl %edi
	pushl %ebx
	call _receive__YISC
	jmp L5807
	.p2align 2
L5821:
	addl $-8,%esp
	pushl %edi
	pushl %ebx
	call _receive__1MSC
	jmp L5807
	.p2align 2
L5822:
	addl $-8,%esp
	pushl %edi
	pushl %ebx
	call _receive__5PSC
	jmp L5807
	.p2align 2
L5823:
	movl %edi,%edx
	cmpl $77,(%edi)
	jne L5824
	xorl %edx,%edx
L5824:
	testl %edx,%edx
	je L5807
	movl 12(%edx),%eax
	addl $-4,%esp
	pushl %eax
	movl 8(%edx),%eax
	pushl %eax
	pushl $_INTERFACE__
	call _get_object__SEFC
	addl $16,%esp
	cmpl %ebx,%eax
	je L5807
	addl $-8,%esp
	pushl %edi
	pushl $_INTERFACE__
	call _receive__6ZRC
	jmp L5807
	.p2align 2
L5830:
	addl $-8,%esp
	pushl %edi
	pushl %ebx
	call _receive__YCTC
	jmp L5807
	.p2align 2
L5831:
	addl $-8,%esp
	pushl %edi
	pushl %ebx
	call _receive__VHTC
	jmp L5807
	.p2align 2
L5832:
	addl $-8,%esp
	pushl %edi
	pushl %ebx
	call _receive__6ZRC
L5807:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_print_nbx__AFB:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $28,-4(%ebp)
L5836:
	addl $-8,%esp
	pushl $0
	movl -4(%ebp),%eax
	pushl %eax
	call ___infix_greater__3W
	movsbl %al,%eax
	addl $16,%esp
	cmpl $0,-4(%ebp)
	je L5839
	testl %eax,%eax
	je L5837
L5839:
	addl $-8,%esp
	pushl $15
	movl 8(%ebp),%eax
	movl -4(%ebp),%ecx
	shrl %cl,%eax
	pushl %eax
	call ___infix_and__THB
	movb %al,-5(%ebp)
	addl $-12,%esp
	pushl $10
	call _to_smallint__GJB
	addl $32,%esp
	addl $-8,%esp
	movsbl %al,%edi
	pushl %edi
	movsbl -5(%ebp),%esi
	pushl %esi
	call ___infix_greater__YJB
	movb %al,%bl
	addl $-8,%esp
	pushl %edi
	pushl %esi
	call ___infix_equal_equal__5JB
	orb %al,%bl
	addl $32,%esp
	testb %bl,%bl
	je L5842
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	addl $-12,%esp
	pushl $10
	call _to_smallint__GJB
	subb %al,-5(%ebp)
	movsbl -5(%ebp),%eax
	pushl %eax
	call _to_character__TKB
	movsbl %al,%eax
	pushl %eax
	pushl $65
	call ___infix_add__TLB
	movsbl %al,%eax
	pushl %eax
	call _print__ENB
	addl $64,%esp
	jmp L5843
	.p2align 2
L5842:
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %esi
	call _to_character__TKB
	movsbl %al,%eax
	pushl %eax
	pushl $48
	call ___infix_add__TLB
	movsbl %al,%eax
	pushl %eax
	call _print__ENB
	addl $48,%esp
L5843:
	addl $-4,-4(%ebp)
	jmp L5836
	.p2align 2
L5837:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_calloc__3O8:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl %ebx,%eax
	imull _pointer_size__OD,%eax
	addl $-12,%esp
	pushl %eax
	call _allocation__C7
	movl %eax,%edi
	addl $16,%esp
	movl %ebx,%esi
L5947:
	subl $1,%esi
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L5934
	addl $-4,%esp
	pushl %esi
	pushl $0
	pushl %edi
	call _put__to__MS8
	addl $16,%esp
	jmp L5947
	.p2align 2
L5934:
	leal -24(%ebp),%esp
	movl %edi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clip_next_child__SRO:
	pushl %ebp
	movl %esp,%ebp
	subl $76,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl $0,-32(%ebp)
	movl $0,60(%eax)
	movl 56(%eax),%edx
	testl %edx,%edx
	je L6012
	movl 12(%edx),%eax
	movl (%eax),%eax
	movl %eax,-16(%ebp)
	movl 16(%edx),%eax
	movl (%eax),%eax
	movl %eax,-20(%ebp)
	movl 20(%edx),%eax
	movl (%eax),%eax
	movl %eax,-24(%ebp)
	movl 24(%edx),%eax
	movl 8(%ebp),%edx
	movl (%eax),%eax
	movl %eax,-28(%ebp)
	movl 44(%edx),%edx
	movl %edx,-48(%ebp)
	testl %edx,%edx
	je L6014
	.p2align 2
L6015:
	movl -48(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L6016
	jmp *L6028(,%eax,4)
	.p2align 2
L6028:
	.long L6026
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6025
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6016
	.long L6026
	.long L6027
	.long L6026
	.long L6016
	.long L6026
	.long L6026
	.long L6027
	.long L6027
	.long L6027
	.long L6027
	.p2align 2
L6025:
	movl -48(%ebp),%eax
	movl 52(%eax),%ebx
	jmp L6016
	.p2align 2
L6026:
	movl -48(%ebp),%edx
	movl 56(%edx),%ebx
	jmp L6016
	.p2align 2
L6027:
	movl -48(%ebp),%eax
	movl 56(%eax),%ebx
L6016:
	movl %ebx,%edi
	testl %edi,%edi
	je L6030
	addl $-12,%esp
	pushl %edi
	call _active_y__65I
	addl $16,%esp
L6030:
	movl -48(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L6031
	jmp *L6043(,%eax,4)
	.p2align 2
L6043:
	.long L6041
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6040
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6031
	.long L6041
	.long L6042
	.long L6041
	.long L6031
	.long L6041
	.long L6041
	.long L6042
	.long L6042
	.long L6042
	.long L6042
	.p2align 2
L6040:
	movl -48(%ebp),%eax
	movl 48(%eax),%esi
	jmp L6031
	.p2align 2
L6041:
	movl -48(%ebp),%edx
	movl 52(%edx),%esi
	jmp L6031
	.p2align 2
L6042:
	movl -48(%ebp),%eax
	movl 52(%eax),%esi
L6031:
	movl %esi,-48(%ebp)
	testl %esi,%esi
	jne L6015
L6014:
	movl 8(%ebp),%edx
	movl %edx,-48(%ebp)
	.p2align 2
L6118:
	movl -48(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L6049
	jmp *L6061(,%eax,4)
	.p2align 2
L6061:
	.long L6059
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6058
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6049
	.long L6059
	.long L6060
	.long L6059
	.long L6049
	.long L6059
	.long L6059
	.long L6060
	.long L6060
	.long L6060
	.long L6060
	.p2align 2
L6058:
	movl -48(%ebp),%eax
	movl 44(%eax),%eax
	jmp L6230
	.p2align 2
L6059:
	movl -48(%ebp),%edx
	movl 48(%edx),%edx
	movl %edx,-12(%ebp)
	jmp L6049
	.p2align 2
L6060:
	movl -48(%ebp),%eax
	movl 48(%eax),%eax
L6230:
	movl %eax,-12(%ebp)
L6049:
	movl -12(%ebp),%esi
	testl %esi,%esi
	je L6064
	.p2align 2
L6065:
	movl (%esi),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L6066
	jmp *L6078(,%eax,4)
	.p2align 2
L6078:
	.long L6077
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6074
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6066
	.long L6077
	.long L6077
	.long L6077
	.long L6066
	.long L6077
	.long L6077
	.long L6076
	.long L6076
	.long L6076
	.long L6076
	.p2align 2
L6074:
	movl 52(%esi),%eax
	movl %eax,-4(%ebp)
	jmp L6066
	.p2align 2
L6076:
	movl 56(%esi),%eax
	movl %eax,-4(%ebp)
	jmp L6066
	.p2align 2
L6077:
	movl 56(%esi),%edx
	movl %edx,-4(%ebp)
L6066:
	movl -4(%ebp),%edi
	testl %edi,%edi
	je L6080
	movl 12(%edi),%eax
	movl -20(%ebp),%edx
	cmpl %edx,(%eax)
	jg L6080
	movl 16(%edi),%eax
	movl -16(%ebp),%edx
	addl $-8,%esp
	movl (%eax),%eax
	cmpl -16(%ebp),%eax
	setg %bl
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L6080
	movl 20(%edi),%eax
	movl -28(%ebp),%edx
	addl $-8,%esp
	movl (%eax),%eax
	cmpl -28(%ebp),%eax
	setg %bl
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L6080
	movl 24(%edi),%eax
	movl -24(%ebp),%edx
	cmpl %edx,(%eax)
	jle L6080
	addl $-12,%esp
	pushl %edi
	call _active_y__65I
	addl $16,%esp
L6080:
	movl (%esi),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L6089
	jmp *L6101(,%eax,4)
	.p2align 2
L6101:
	.long L6100
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6097
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6089
	.long L6100
	.long L6100
	.long L6100
	.long L6089
	.long L6100
	.long L6100
	.long L6100
	.long L6100
	.long L6099
	.long L6100
	.p2align 2
L6097:
	movl 44(%esi),%esi
	jmp L6231
	.p2align 2
L6099:
L6100:
	movl 48(%esi),%esi
L6231:
	movl %esi,-8(%ebp)
L6089:
	movl -8(%ebp),%esi
	testl %esi,%esi
	jne L6065
L6064:
	movl -48(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L6104
	jmp *L6116(,%eax,4)
	.p2align 2
L6116:
	.long L6114
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6113
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6104
	.long L6114
	.long L6115
	.long L6114
	.long L6104
	.long L6114
	.long L6114
	.long L6115
	.long L6115
	.long L6115
	.long L6115
	.p2align 2
L6113:
	movl -48(%ebp),%eax
	movl 36(%eax),%eax
	jmp L6232
	.p2align 2
L6114:
	movl -48(%ebp),%edx
	movl 40(%edx),%edx
	movl %edx,-40(%ebp)
	jmp L6104
	.p2align 2
L6115:
	movl -48(%ebp),%eax
	movl 40(%eax),%eax
L6232:
	movl %eax,-40(%ebp)
L6104:
	movl -40(%ebp),%edx
	movl %edx,-48(%ebp)
	testl %edx,%edx
	jne L6118
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__S8F
	movl _list_y__L3,%esi
	movl $0,_first_clip__P3
	movl -24(%ebp),%eax
	movl %eax,-56(%ebp)
	addl $16,%esp
	testl %esi,%esi
	je L6012
	jmp L6233
	.p2align 2
L6124:
	movl 12(%esi),%esi
	testl %esi,%esi
	je L6228
L6233:
	movl 4(%esi),%eax
	cmpb $0,1(%eax)
	je L6124
	testl %esi,%esi
	jne L6127
L6228:
	movl -28(%ebp),%edx
	movl %edx,-60(%ebp)
	subl $1,-60(%ebp)
	jmp L6130
	.p2align 2
L6127:
	movl (%esi),%eax
	movl -28(%ebp),%edx
	movl %eax,-32(%ebp)
	cmpl %edx,%eax
	jle L6132
	movl %edx,%eax
L6132:
	subl $1,%eax
	movl %eax,-60(%ebp)
L6130:
	movl -60(%ebp),%eax
	cmpl %eax,-56(%ebp)
	jg L6137
	movl _first_clip__P3,%eax
	movl _list_x__K3,%edx
	movl $0,_last_clip__O3
	movl %eax,_top_clip__Q3
	movl -16(%ebp),%eax
	movl %edx,-44(%ebp)
	movl 8(%ebp),%edx
	movl $0,-36(%ebp)
	movl %eax,-52(%ebp)
	movl %edx,-48(%ebp)
	.p2align 2
L6181:
	movl -44(%ebp),%eax
	movl 4(%eax),%edi
	cmpb $0,(%edi)
	je L6144
	movl _stack_plan__N3,%eax
	addl $-8,%esp
	movl 8(%eax),%edx
	movl 4(%edi),%eax
	cmpl %eax,%edx
	setg %bl
	pushl %eax
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L6146
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	addl $16,%esp
	testl %eax,%eax
	jne L6145
L6146:
	movl 4(%edi),%eax
	addl $-4,%esp
	pushl %eax
	pushl %edi
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__L7O
	movl -36(%ebp),%edx
	addl $16,%esp
	cmpl %edx,4(%edi)
	jle L6144
	movl -44(%ebp),%edx
	movl (%edx),%eax
	decl %eax
	cmpl -20(%ebp),%eax
	jle L6155
	movl -20(%ebp),%eax
L6155:
	movl %eax,%ebx
	cmpl %ebx,-52(%ebp)
	jg L6158
	movl -60(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	movl -56(%ebp),%edx
	pushl %edx
	movl -52(%ebp),%eax
	pushl %eax
	movl -48(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _add_clip__from__to__5KP
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,-52(%ebp)
	addl $32,%esp
L6158:
	movl 4(%edi),%edx
	movl %edx,-36(%ebp)
	movl 8(%edi),%edi
	movl %edi,-48(%ebp)
	jmp L6144
	.p2align 2
L6145:
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__ZSP
	movl -36(%ebp),%eax
	addl $16,%esp
	cmpl %eax,4(%edi)
	jne L6144
	movl -44(%ebp),%edx
	movl (%edx),%eax
	movl %eax,%ebx
	cmpl -20(%ebp),%ebx
	jle L6167
	movl -20(%ebp),%ebx
L6167:
	cmpl %ebx,-52(%ebp)
	jg L6180
	movl -60(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	movl -56(%ebp),%edx
	pushl %edx
	movl -52(%ebp),%eax
	pushl %eax
	movl -48(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _add_clip__from__to__5KP
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,-52(%ebp)
	addl $32,%esp
	.p2align 2
L6180:
	subl $1,-36(%ebp)
	movl -36(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	addl $16,%esp
	testl %eax,%eax
	je L6180
	movl -36(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	movl 8(%eax),%eax
	movl %eax,-48(%ebp)
	addl $16,%esp
L6144:
	movl -44(%ebp),%edx
	movl 8(%edx),%edx
	movl %edx,-44(%ebp)
	testl %edx,%edx
	jne L6181
	movl -20(%ebp),%eax
	cmpl %eax,-52(%ebp)
	jg L6182
	movl -60(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %eax
	movl -56(%ebp),%eax
	pushl %eax
	movl -52(%ebp),%edx
	pushl %edx
	movl -48(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _add_clip__from__to__5KP
	addl $32,%esp
L6182:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -60(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-56(%ebp)
	addl $32,%esp
L6137:
	testl %esi,%esi
	je L6012
	.p2align 2
L6194:
	movl 4(%esi),%edi
	cmpb $0,1(%edi)
	je L6191
	cmpb $0,8(%esi)
	je L6192
	addl $-12,%esp
	pushl %edi
	call _active_x__IMJ
	addl $16,%esp
	jmp L6191
	.p2align 2
L6192:
	addl $-12,%esp
	pushl %edi
	call _desactive_y__SMJ
	addl $-12,%esp
	pushl %edi
	call _desactive_x__WMJ
	addl $32,%esp
L6191:
	movl 12(%esi),%esi
	testl %esi,%esi
	je L6012
	movl -32(%ebp),%edx
	cmpl %edx,(%esi)
	je L6194
	jmp L6233
	.p2align 2
L6012:
	movl 8(%ebp),%edx
	movl 52(%edx),%eax
	testl %eax,%eax
	je L6198
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L6198
	jmp *L6211(,%edx,4)
	.p2align 2
L6211:
	.long L6200
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6210
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6198
	.long L6205
	.long L6202
	.long L6208
	.long L6198
	.long L6203
	.long L6207
	.long L6204
	.long L6201
	.long L6209
	.long L6206
	.p2align 2
L6200:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__N0I
	jmp L6234
	.p2align 2
L6201:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__UJQB
	jmp L6234
	.p2align 2
L6202:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__SRO
	jmp L6234
	.p2align 2
L6203:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__XZY
	jmp L6234
	.p2align 2
L6204:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__HHLB
	jmp L6234
	.p2align 2
L6205:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__MW5B
	jmp L6234
	.p2align 2
L6206:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__FVZB
	jmp L6234
	.p2align 2
L6207:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__JKIB
	jmp L6234
	.p2align 2
L6208:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__9IT
	jmp L6234
	.p2align 2
L6209:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__RFVB
	jmp L6234
	.p2align 2
L6210:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__BEF
L6234:
	addl $16,%esp
L6198:
	movl 8(%ebp),%edx
	movl 44(%edx),%eax
	testl %eax,%eax
	je L6213
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L6213
	jmp *L6226(,%edx,4)
	.p2align 2
L6226:
	.long L6216
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6223
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6213
	.long L6220
	.long L6215
	.long L6224
	.long L6213
	.long L6218
	.long L6222
	.long L6219
	.long L6217
	.long L6225
	.long L6221
	.p2align 2
L6215:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__SRO
	jmp L6213
	.p2align 2
L6216:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__N0I
	jmp L6213
	.p2align 2
L6217:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__UJQB
	jmp L6213
	.p2align 2
L6218:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__XZY
	jmp L6213
	.p2align 2
L6219:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__HHLB
	jmp L6213
	.p2align 2
L6220:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__MW5B
	jmp L6213
	.p2align 2
L6221:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__FVZB
	jmp L6213
	.p2align 2
L6222:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__JKIB
	jmp L6213
	.p2align 2
L6223:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__BEF
	jmp L6213
	.p2align 2
L6224:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__9IT
	jmp L6213
	.p2align 2
L6225:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__RFVB
L6213:
	leal -88(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clip_next_child__XZY:
	pushl %ebp
	movl %esp,%ebp
	subl $76,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl $0,-32(%ebp)
	movl $0,60(%eax)
	movl 56(%eax),%edx
	testl %edx,%edx
	je L6236
	movl 12(%edx),%eax
	movl (%eax),%eax
	movl %eax,-16(%ebp)
	movl 16(%edx),%eax
	movl (%eax),%eax
	movl %eax,-20(%ebp)
	movl 20(%edx),%eax
	movl (%eax),%eax
	movl %eax,-24(%ebp)
	movl 24(%edx),%eax
	movl 8(%ebp),%edx
	movl (%eax),%eax
	movl %eax,-28(%ebp)
	movl 44(%edx),%edx
	movl %edx,-48(%ebp)
	testl %edx,%edx
	je L6238
	.p2align 2
L6239:
	movl -48(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L6240
	jmp *L6252(,%eax,4)
	.p2align 2
L6252:
	.long L6248
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6250
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6240
	.long L6251
	.long L6251
	.long L6251
	.long L6240
	.long L6248
	.long L6251
	.long L6248
	.long L6251
	.long L6251
	.long L6248
	.p2align 2
L6248:
	movl -48(%ebp),%edx
	movl 56(%edx),%ebx
	jmp L6240
	.p2align 2
L6250:
	movl -48(%ebp),%edx
	movl 52(%edx),%ebx
	jmp L6240
	.p2align 2
L6251:
	movl -48(%ebp),%eax
	movl 56(%eax),%ebx
L6240:
	movl %ebx,%edi
	testl %edi,%edi
	je L6254
	addl $-12,%esp
	pushl %edi
	call _active_y__65I
	addl $16,%esp
L6254:
	movl -48(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L6255
	jmp *L6267(,%eax,4)
	.p2align 2
L6267:
	.long L6263
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6265
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6255
	.long L6266
	.long L6266
	.long L6266
	.long L6255
	.long L6263
	.long L6266
	.long L6263
	.long L6266
	.long L6266
	.long L6263
	.p2align 2
L6263:
	movl -48(%ebp),%edx
	movl 52(%edx),%esi
	jmp L6255
	.p2align 2
L6265:
	movl -48(%ebp),%edx
	movl 48(%edx),%esi
	jmp L6255
	.p2align 2
L6266:
	movl -48(%ebp),%eax
	movl 52(%eax),%esi
L6255:
	movl %esi,-48(%ebp)
	testl %esi,%esi
	jne L6239
L6238:
	movl 8(%ebp),%edx
	movl %edx,-48(%ebp)
	.p2align 2
L6342:
	movl -48(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L6273
	jmp *L6285(,%eax,4)
	.p2align 2
L6285:
	.long L6281
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6283
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6273
	.long L6284
	.long L6284
	.long L6284
	.long L6273
	.long L6281
	.long L6284
	.long L6281
	.long L6284
	.long L6284
	.long L6281
	.p2align 2
L6281:
	movl -48(%ebp),%edx
	movl 48(%edx),%edx
	movl %edx,-12(%ebp)
	jmp L6273
	.p2align 2
L6283:
	movl -48(%ebp),%edx
	movl 44(%edx),%edx
	movl %edx,-12(%ebp)
	jmp L6273
	.p2align 2
L6284:
	movl -48(%ebp),%eax
	movl 48(%eax),%eax
	movl %eax,-12(%ebp)
L6273:
	movl -12(%ebp),%esi
	testl %esi,%esi
	je L6288
	.p2align 2
L6289:
	movl (%esi),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L6290
	jmp *L6302(,%eax,4)
	.p2align 2
L6302:
	.long L6301
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6299
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6290
	.long L6300
	.long L6301
	.long L6301
	.long L6290
	.long L6300
	.long L6300
	.long L6301
	.long L6300
	.long L6300
	.long L6301
	.p2align 2
L6299:
	movl 52(%esi),%edx
	jmp L6454
	.p2align 2
L6300:
	movl 56(%esi),%eax
	movl %eax,-4(%ebp)
	jmp L6290
	.p2align 2
L6301:
	movl 56(%esi),%edx
L6454:
	movl %edx,-4(%ebp)
L6290:
	movl -4(%ebp),%edi
	testl %edi,%edi
	je L6304
	movl 12(%edi),%eax
	movl -20(%ebp),%edx
	cmpl %edx,(%eax)
	jg L6304
	movl 16(%edi),%eax
	movl -16(%ebp),%edx
	addl $-8,%esp
	movl (%eax),%eax
	cmpl -16(%ebp),%eax
	setg %bl
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L6304
	movl 20(%edi),%eax
	movl -28(%ebp),%edx
	addl $-8,%esp
	movl (%eax),%eax
	cmpl -28(%ebp),%eax
	setg %bl
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L6304
	movl 24(%edi),%eax
	movl -24(%ebp),%edx
	cmpl %edx,(%eax)
	jle L6304
	addl $-12,%esp
	pushl %edi
	call _active_y__65I
	addl $16,%esp
L6304:
	movl (%esi),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L6313
	jmp *L6325(,%eax,4)
	.p2align 2
L6325:
	.long L6324
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6322
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6313
	.long L6324
	.long L6324
	.long L6324
	.long L6313
	.long L6324
	.long L6324
	.long L6324
	.long L6324
	.long L6323
	.long L6324
	.p2align 2
L6322:
	movl 44(%esi),%esi
	jmp L6455
	.p2align 2
L6323:
L6324:
	movl 48(%esi),%esi
L6455:
	movl %esi,-8(%ebp)
L6313:
	movl -8(%ebp),%esi
	testl %esi,%esi
	jne L6289
L6288:
	movl -48(%ebp),%edx
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L6328
	jmp *L6340(,%eax,4)
	.p2align 2
L6340:
	.long L6336
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6338
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6328
	.long L6339
	.long L6339
	.long L6339
	.long L6328
	.long L6336
	.long L6339
	.long L6336
	.long L6339
	.long L6339
	.long L6336
	.p2align 2
L6336:
	movl -48(%ebp),%edx
	movl 40(%edx),%edx
	movl %edx,-40(%ebp)
	jmp L6328
	.p2align 2
L6338:
	movl -48(%ebp),%edx
	movl 36(%edx),%edx
	movl %edx,-40(%ebp)
	jmp L6328
	.p2align 2
L6339:
	movl -48(%ebp),%eax
	movl 40(%eax),%eax
	movl %eax,-40(%ebp)
L6328:
	movl -40(%ebp),%edx
	movl %edx,-48(%ebp)
	testl %edx,%edx
	jne L6342
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 56(%edx),%eax
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__S8F
	movl _list_y__L3,%esi
	movl $0,_first_clip__P3
	movl -24(%ebp),%eax
	movl %eax,-56(%ebp)
	addl $16,%esp
	testl %esi,%esi
	je L6236
	jmp L6456
	.p2align 2
L6348:
	movl 12(%esi),%esi
	testl %esi,%esi
	je L6452
L6456:
	movl 4(%esi),%eax
	cmpb $0,1(%eax)
	je L6348
	testl %esi,%esi
	jne L6351
L6452:
	movl -28(%ebp),%edx
	movl %edx,-60(%ebp)
	subl $1,-60(%ebp)
	jmp L6354
	.p2align 2
L6351:
	movl (%esi),%eax
	movl -28(%ebp),%edx
	movl %eax,-32(%ebp)
	cmpl %edx,%eax
	jle L6356
	movl %edx,%eax
L6356:
	subl $1,%eax
	movl %eax,-60(%ebp)
L6354:
	movl -60(%ebp),%eax
	cmpl %eax,-56(%ebp)
	jg L6361
	movl _first_clip__P3,%eax
	movl _list_x__K3,%edx
	movl $0,_last_clip__O3
	movl %eax,_top_clip__Q3
	movl -16(%ebp),%eax
	movl %edx,-44(%ebp)
	movl 8(%ebp),%edx
	movl $0,-36(%ebp)
	movl %eax,-52(%ebp)
	movl %edx,-48(%ebp)
	.p2align 2
L6405:
	movl -44(%ebp),%eax
	movl 4(%eax),%edi
	cmpb $0,(%edi)
	je L6368
	movl _stack_plan__N3,%eax
	addl $-8,%esp
	movl 8(%eax),%edx
	movl 4(%edi),%eax
	cmpl %eax,%edx
	setg %bl
	pushl %eax
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L6370
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	addl $16,%esp
	testl %eax,%eax
	jne L6369
L6370:
	movl 4(%edi),%eax
	addl $-4,%esp
	pushl %eax
	pushl %edi
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__L7O
	movl -36(%ebp),%edx
	addl $16,%esp
	cmpl %edx,4(%edi)
	jle L6368
	movl -44(%ebp),%edx
	movl (%edx),%eax
	decl %eax
	cmpl -20(%ebp),%eax
	jle L6379
	movl -20(%ebp),%eax
L6379:
	movl %eax,%ebx
	cmpl %ebx,-52(%ebp)
	jg L6382
	movl -60(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	movl -56(%ebp),%edx
	pushl %edx
	movl -52(%ebp),%eax
	pushl %eax
	movl -48(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _add_clip__from__to__1FZ
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,-52(%ebp)
	addl $32,%esp
L6382:
	movl 4(%edi),%edx
	movl %edx,-36(%ebp)
	movl 8(%edi),%edi
	movl %edi,-48(%ebp)
	jmp L6368
	.p2align 2
L6369:
	movl 4(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _force__to__ZSP
	movl -36(%ebp),%eax
	addl $16,%esp
	cmpl %eax,4(%edi)
	jne L6368
	movl -44(%ebp),%edx
	movl (%edx),%eax
	movl %eax,%ebx
	cmpl -20(%ebp),%ebx
	jle L6391
	movl -20(%ebp),%ebx
L6391:
	cmpl %ebx,-52(%ebp)
	jg L6404
	movl -60(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	movl -56(%ebp),%edx
	pushl %edx
	movl -52(%ebp),%eax
	pushl %eax
	movl -48(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _add_clip__from__to__1FZ
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,-52(%ebp)
	addl $32,%esp
	.p2align 2
L6404:
	subl $1,-36(%ebp)
	movl -36(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	addl $16,%esp
	testl %eax,%eax
	je L6404
	movl -36(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl _stack_plan__N3,%eax
	pushl %eax
	call _item__P5O
	movl 8(%eax),%eax
	movl %eax,-48(%ebp)
	addl $16,%esp
L6368:
	movl -44(%ebp),%edx
	movl 8(%edx),%edx
	movl %edx,-44(%ebp)
	testl %edx,%edx
	jne L6405
	movl -20(%ebp),%eax
	cmpl %eax,-52(%ebp)
	jg L6406
	movl -60(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %eax
	movl -56(%ebp),%eax
	pushl %eax
	movl -52(%ebp),%edx
	pushl %edx
	movl -48(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _add_clip__from__to__1FZ
	addl $32,%esp
L6406:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -60(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-56(%ebp)
	addl $32,%esp
L6361:
	testl %esi,%esi
	je L6236
	.p2align 2
L6418:
	movl 4(%esi),%edi
	cmpb $0,1(%edi)
	je L6415
	cmpb $0,8(%esi)
	je L6416
	addl $-12,%esp
	pushl %edi
	call _active_x__IMJ
	addl $16,%esp
	jmp L6415
	.p2align 2
L6416:
	addl $-12,%esp
	pushl %edi
	call _desactive_y__SMJ
	addl $-12,%esp
	pushl %edi
	call _desactive_x__WMJ
	addl $32,%esp
L6415:
	movl 12(%esi),%esi
	testl %esi,%esi
	je L6236
	movl -32(%ebp),%edx
	cmpl %edx,(%esi)
	je L6418
	jmp L6456
	.p2align 2
L6236:
	movl 8(%ebp),%edx
	movl 52(%edx),%eax
	testl %eax,%eax
	je L6422
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L6422
	jmp *L6435(,%edx,4)
	.p2align 2
L6435:
	.long L6426
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6434
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6422
	.long L6430
	.long L6424
	.long L6425
	.long L6422
	.long L6428
	.long L6432
	.long L6429
	.long L6427
	.long L6433
	.long L6431
	.p2align 2
L6424:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__SRO
	jmp L6457
	.p2align 2
L6425:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__9IT
	jmp L6457
	.p2align 2
L6426:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__N0I
	jmp L6457
	.p2align 2
L6427:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__UJQB
	jmp L6457
	.p2align 2
L6428:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__XZY
	jmp L6457
	.p2align 2
L6429:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__HHLB
	jmp L6457
	.p2align 2
L6430:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__MW5B
	jmp L6457
	.p2align 2
L6431:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__FVZB
	jmp L6457
	.p2align 2
L6432:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__JKIB
	jmp L6457
	.p2align 2
L6433:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__RFVB
	jmp L6457
	.p2align 2
L6434:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__BEF
L6457:
	addl $16,%esp
L6422:
	movl 8(%ebp),%edx
	movl 44(%edx),%eax
	testl %eax,%eax
	je L6437
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L6437
	jmp *L6450(,%edx,4)
	.p2align 2
L6450:
	.long L6442
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6448
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6437
	.long L6445
	.long L6439
	.long L6441
	.long L6437
	.long L6440
	.long L6447
	.long L6444
	.long L6443
	.long L6449
	.long L6446
	.p2align 2
L6439:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__SRO
	jmp L6437
	.p2align 2
L6440:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__XZY
	jmp L6437
	.p2align 2
L6441:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__9IT
	jmp L6437
	.p2align 2
L6442:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__N0I
	jmp L6437
	.p2align 2
L6443:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__UJQB
	jmp L6437
	.p2align 2
L6444:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__HHLB
	jmp L6437
	.p2align 2
L6445:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__MW5B
	jmp L6437
	.p2align 2
L6446:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__FVZB
	jmp L6437
	.p2align 2
L6447:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__JKIB
	jmp L6437
	.p2align 2
L6448:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__BEF
	jmp L6437
	.p2align 2
L6449:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__RFVB
L6437:
	leal -88(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clip_next_child__MW5B:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%ebx
	addl $-12,%esp
	pushl %ebx
	call _creat_clip__YW5B
	addl $16,%esp
	movl 52(%ebx),%eax
	testl %eax,%eax
	je L6459
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L6459
	jmp *L6472(,%edx,4)
	.p2align 2
L6472:
	.long L6469
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6471
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6459
	.long L6470
	.long L6462
	.long L6467
	.long L6459
	.long L6463
	.long L6466
	.long L6464
	.long L6461
	.long L6468
	.long L6465
	.p2align 2
L6461:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__UJQB
	jmp L6489
	.p2align 2
L6462:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__SRO
	jmp L6489
	.p2align 2
L6463:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__XZY
	jmp L6489
	.p2align 2
L6464:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__HHLB
	jmp L6489
	.p2align 2
L6465:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__FVZB
	jmp L6489
	.p2align 2
L6466:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__JKIB
	jmp L6489
	.p2align 2
L6467:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__9IT
	jmp L6489
	.p2align 2
L6468:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__RFVB
	jmp L6489
	.p2align 2
L6469:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__N0I
	jmp L6489
	.p2align 2
L6470:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__MW5B
	jmp L6489
	.p2align 2
L6471:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__BEF
L6489:
	addl $16,%esp
L6459:
	movl 44(%ebx),%eax
	testl %eax,%eax
	je L6474
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L6474
	jmp *L6487(,%edx,4)
	.p2align 2
L6487:
	.long L6485
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6486
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6474
	.long L6480
	.long L6477
	.long L6483
	.long L6474
	.long L6478
	.long L6482
	.long L6479
	.long L6476
	.long L6484
	.long L6481
	.p2align 2
L6476:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__UJQB
	jmp L6474
	.p2align 2
L6477:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__SRO
	jmp L6474
	.p2align 2
L6478:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__XZY
	jmp L6474
	.p2align 2
L6479:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__HHLB
	jmp L6474
	.p2align 2
L6480:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__MW5B
	jmp L6474
	.p2align 2
L6481:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__FVZB
	jmp L6474
	.p2align 2
L6482:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__JKIB
	jmp L6474
	.p2align 2
L6483:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__9IT
	jmp L6474
	.p2align 2
L6484:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__RFVB
	jmp L6474
	.p2align 2
L6485:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__N0I
	jmp L6474
	.p2align 2
L6486:
	addl $-12,%esp
	pushl %eax
	call _clip_next_child__BEF
L6474:
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_force__to__S8F:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	cmpl $0,8(%edi)
	jl L6492
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl (%edi),%eax
	pushl %eax
	call _put__to__WAG
	movb $1,%al
	addl $16,%esp
	jmp L6495
	.p2align 2
L6492:
	movb $0,%al
L6495:
	testb %al,%al
	jne L6497
	movl 8(%edi),%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	testl %eax,%eax
	jne L6498
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call _add_last__GDG
	jmp L6497
	.p2align 2
L6498:
	movl $1,%ebx
	addl $-12,%esp
	pushl %edi
	call _count__NEG
	addl $16,%esp
	cmpl %eax,%ebx
	jle L6506
	movl 4(%edi),%eax
	testl %eax,%eax
	jne L6508
	addl $-12,%esp
	pushl $1
	call _calloc__TUF
	movl %eax,(%edi)
	addl $16,%esp
	movl $1,4(%edi)
	jmp L6530
	.p2align 2
L6508:
	cmpl $1,%eax
	setg %bl
	addl $-8,%esp
	pushl $1
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L6530
	addl $-8,%esp
	pushl $2
	movl 4(%edi),%eax
	pushl %eax
	jmp L6545
	.p2align 2
L6522:
	addl $-8,%esp
	pushl $2
	pushl %esi
L6545:
	call ___infix_mul__XUH
	movl %eax,%esi
	addl $16,%esp
	cmpl $1,%esi
	setg %bl
	addl $-8,%esp
	pushl $1
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L6522
	addl $-4,%esp
	pushl %esi
	movl 4(%edi),%eax
	pushl %eax
	movl (%edi),%eax
	pushl %eax
	call _realloc__with__TIG
	movl %eax,(%edi)
	movl %esi,4(%edi)
	addl $16,%esp
	jmp L6530
	.p2align 2
L6506:
	addl $-12,%esp
	pushl %edi
	call _count__NEG
	addl $16,%esp
	cmpl %eax,%ebx
	je L6530
	addl $-12,%esp
	pushl %edi
	call _count__NEG
	movl %eax,%esi
	movl (%edi),%eax
	addl $16,%esp
	subl $1,%esi
	movl %eax,-4(%ebp)
	movl $1,%ebx
	jmp L6535
	.p2align 2
L6537:
	addl $-8,%esp
	pushl %ebx
	movl -4(%ebp),%eax
	pushl %eax
	call _put__to__HYF
	addl $-8,%esp
	addl $16,%esp
	pushl $1
	pushl %ebx
	call ___infix_add__Q5B
	movl %eax,%ebx
	addl $16,%esp
L6535:
	addl $-8,%esp
	pushl %esi
	pushl %ebx
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	jne L6537
L6530:
	movl 12(%ebp),%eax
	movl $0,8(%edi)
	addl $-8,%esp
	pushl %eax
	movl (%edi),%eax
	pushl %eax
	call _put__to__WAG
L6497:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_force__to__ZSP:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%edi
	movl 8(%esi),%ebx
	cmpl %ebx,%edi
	jle L6614
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	cmpl %eax,%edi
	jne L6583
	addl $-12,%esp
	pushl %esi
	call _count__NEG
	movl 8(%esi),%ebx
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 4(%esi),%edx
	movl %eax,%ecx
	addl $32,%esp
	movl %edx,%eax
	subl $1,%eax
	cmpl %eax,%ecx
	jg L6586
	movl 8(%esi),%ebx
	jmp L6615
	.p2align 2
L6586:
	testl %edx,%edx
	jne L6598
	addl $-12,%esp
	pushl $2
	call _calloc__TUF
	movl %eax,(%esi)
	movl $2,4(%esi)
	movl $0,8(%esi)
	jmp L6597
	.p2align 2
L6598:
	addl $-8,%esp
	pushl %edx
	pushl $2
	call ___infix_mul__EIG
	addl $16,%esp
	movl %eax,%ebx
	addl $-4,%esp
	pushl %ebx
	movl 4(%esi),%eax
	pushl %eax
	movl (%esi),%eax
	pushl %eax
	call _realloc__with__TIG
	movl %ebx,4(%esi)
	movl 8(%esi),%ebx
	movl %eax,(%esi)
	addl $16,%esp
L6615:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,8(%esi)
L6597:
	movl (%esi),%edx
	movl 8(%esi),%eax
	movl $0,(%edx,%eax,4)
	jmp L6582
	.p2align 2
L6583:
	addl $-8,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	pushl %esi
	call _resize__TAP
L6614:
	movl (%esi),%eax
	movl $0,(%eax,%edi,4)
L6582:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clipping__to__VQJ:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl 12(%ebp),%eax
	addl $-8,%esp
	movl 12(%edi),%ebx
	movl 8(%edi),%esi
	decl %ebx
	decl %esi
	pushl $0
	pushl %eax
	call _max__2RJ
	addl $16,%esp
	cmpl %ebx,%eax
	jle L6672
	movl %ebx,%eax
L6672:
	movl %eax,16(%edi)
	addl $-8,%esp
	pushl $0
	movl 20(%ebp),%eax
	pushl %eax
	call _max__2RJ
	addl $16,%esp
	cmpl %ebx,%eax
	jle L6677
	movl %ebx,%eax
L6677:
	movl %eax,24(%edi)
	addl $-8,%esp
	pushl $0
	movl 16(%ebp),%eax
	pushl %eax
	call _max__2RJ
	addl $16,%esp
	cmpl %esi,%eax
	jle L6682
	movl %esi,%eax
L6682:
	movl %eax,20(%edi)
	addl $-8,%esp
	pushl $0
	movl 24(%ebp),%eax
	pushl %eax
	call _max__2RJ
	cmpl %esi,%eax
	jle L6687
	movl %esi,%eax
L6687:
	leal -24(%ebp),%esp
	movl %eax,28(%edi)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_draw__to__WCQ:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl 12(%ebp),%esi
	movl 16(%ebp),%ebx
	movl 20(%ebp),%ecx
	movl $0,-4(%ebp)
	movl _parent_video__C2,%eax
	movl 24(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	pushl %ecx
	pushl %ebx
	pushl %esi
	pushl %edi
	call _clipping__to__OEQ
	addl $32,%esp
	addl $-12,%esp
	pushl %edi
	call _x_max__DHQ
	movl %eax,%esi
	addl $-12,%esp
	pushl %edi
	call _y_max__SHQ
	movl _color_dark__M2N,%edx
	movl %eax,%ebx
	movl _parent_video__C2,%eax
	addl $32,%esp
	addl $-12,%esp
	pushl %edx
	call _color__5IQ
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %ebx
	pushl $0
	pushl %edi
	call _move_to__KJQ
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-8,%esp
	pushl $0
	pushl %edi
	call _line_v_until__0JQ
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-8,%esp
	pushl %esi
	pushl %edi
	call _line_h_until__99Q
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl _color_light__N2N,%edx
	addl $-12,%esp
	pushl %edx
	call _color__5IQ
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-8,%esp
	pushl %ebx
	pushl %edi
	call _line_v_until__0JQ
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-8,%esp
	pushl $0
	pushl %edi
	call _line_h_until__99Q
	addl $16,%esp
	testb $2,76(%edi)
	jne L6725
	addl $-12,%esp
	pushl %edi
	call _x_max__DHQ
	movl %eax,%esi
	addl $16,%esp
	addl $-12,%esp
	pushl %edi
	call _y_max__SHQ
	movl _color_light__N2N,%edx
	movl %eax,%ebx
	movl _parent_video__C2,%eax
	subl $1,%esi
	addl $16,%esp
	subl $1,%ebx
	addl $-12,%esp
	pushl %edx
	call _color__5IQ
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %ebx
	pushl $1
	pushl %edi
	call _move_to__KJQ
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-8,%esp
	pushl $1
	pushl %edi
	call _line_v_until__0JQ
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-8,%esp
	pushl %esi
	pushl %edi
	call _line_h_until__99Q
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl _color_dark__M2N,%edx
	addl $-12,%esp
	pushl %edx
	call _color__5IQ
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-8,%esp
	pushl %ebx
	pushl %edi
	call _line_v_until__0JQ
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-8,%esp
	pushl $1
	pushl %edi
	call _line_h_until__99Q
	addl $16,%esp
	movl _color_back__O2N,%esi
	addl $-12,%esp
	pushl %edi
	call _x_max__DHQ
	movl %eax,%ebx
	addl $16,%esp
	addl $-12,%esp
	pushl %edi
	call _y_max__SHQ
	movl %eax,%edx
	movl _parent_video__C2,%eax
	subl $2,%ebx
	addl $16,%esp
	subl $2,%edx
	cmpl $16,(%eax)
	jne L6754
	addl $-8,%esp
	pushl %esi
	pushl %edx
	pushl %ebx
	pushl $2
	pushl $2
	jmp L6795
	.p2align 2
L6754:
	addl $-8,%esp
	pushl %esi
	pushl %edx
	pushl %ebx
	pushl $2
	pushl $2
	jmp L6795
	.p2align 2
L6725:
	movl $2,-4(%ebp)
	movl _color_back__O2N,%esi
	addl $-12,%esp
	pushl %edi
	call _x_max__DHQ
	movl %eax,%ebx
	addl $16,%esp
	addl $-12,%esp
	pushl %edi
	call _y_max__SHQ
	movl %eax,%edx
	movl _parent_video__C2,%eax
	subl $1,%ebx
	addl $16,%esp
	subl $1,%edx
	addl $-8,%esp
	pushl %esi
	pushl %edx
	pushl %ebx
	pushl $1
	pushl $1
L6795:
	pushl %edi
	call _rectangle_fill__to__color__OVR
	addl $32,%esp
	movl 76(%edi),%eax
	testl $1,%eax
	jne L6766
	movl _parent_video__C2,%eax
	movl _black__4R,%edx
	jmp L6796
	.p2align 2
L6766:
	cmpl $-1,%eax
	jne L6774
	movl _parent_video__C2,%eax
	movl _color_dark__M2N,%edx
	jmp L6782
	.p2align 2
L6774:
	movl _parent_video__C2,%eax
	movl _red__6R,%edx
L6796:
	movl _parent_video__C2,%eax
L6782:
	addl $-12,%esp
	pushl %edx
	call _color__5IQ
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl 72(%edi),%edx
	addl $-12,%esp
	pushl %edx
	call _font_width__A8R
	addl $16,%esp
	movl %eax,%esi
	movl 72(%edi),%eax
	movl %eax,-8(%ebp)
	addl $-12,%esp
	pushl %edi
	call _x_max__DHQ
	movl %eax,%ebx
	movl -4(%ebp),%eax
	addl $16,%esp
	subl %esi,%ebx
	sarl $1,%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	addl $-12,%esp
	pushl %edi
	call _y_max__SHQ
	movl %eax,%ebx
	movl -4(%ebp),%eax
	addl $16,%esp
	subl $16,%ebx
	sarl $1,%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $32,%esp
	cmpl $16,(%eax)
	jne L6793
	pushl %edx
	pushl %esi
	movl -8(%ebp),%eax
	pushl %eax
	pushl %edi
	call _print__to__8ES
	jmp L6794
	.p2align 2
L6793:
	pushl %edx
	pushl %esi
	movl -8(%ebp),%eax
	pushl %eax
	pushl %edi
	call _print__to__8ES
L6794:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_font_width__size__MPS:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edx
	movl 8(%ebp),%ecx
	movl $0,-4(%ebp)
	movl _lower__2WK,%edi
	movl 4(%ecx),%eax
	movl %eax,-8(%ebp)
	cmpl %edx,%eax
	jle L6832
	movl %edx,-8(%ebp)
	jmp L6832
	.p2align 2
L6804:
	addl $-8,%esp
	movl %edi,%eax
	subl $1,%eax
	pushl %eax
	movl 8(%ebp),%edx
	movl (%edx),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	addl $-12,%esp
	movsbl %al,%eax
	pushl %eax
	call _code__1LB
	movsbl %al,%esi
	addl $16,%esp
	cmpl $32,%esi
	setg %bl
	addl $-8,%esp
	pushl $32
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L6812
	cmpl $127,%esi
	setg %bl
	addl $-8,%esp
	pushl $127
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L6811
L6812:
	xorl %esi,%esi
	jmp L6821
	.p2align 2
L6811:
	subl $32,%esi
L6821:
	movl $___index_font,%eax
	xorl %ebx,%ebx
	addl $-8,%esp
	addl $-12,%esp
	movw (%eax,%esi,2),%bx
	movw 2(%eax,%esi,2),%ax
	andl $65535,%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%ecx
	pushl %ecx
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl %ebx,%esi
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
L6832:
	cmpl -8(%ebp),%edi
	jle L6804
	leal -40(%ebp),%esp
	movl -4(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_draw__to__HFU:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%edi
	movl 16(%ebp),%esi
	movl 20(%ebp),%ecx
	movl _parent_video__C2,%eax
	movl 24(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	pushl %ecx
	pushl %esi
	pushl %edi
	pushl %ebx
	call _clipping__to__2GU
	addl $32,%esp
	movl _parent_video__C2,%eax
	movl _color_back__O2N,%edx
	addl $-8,%esp
	pushl %edx
	pushl $15
	pushl $15
	pushl $0
	pushl $0
	pushl %ebx
	call _rectangle__to__color__BKU
	addl $32,%esp
	movl _parent_video__C2,%eax
	movl _color_dark__M2N,%edx
	addl $-12,%esp
	pushl %edx
	call _color__PKU
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl $14
	pushl $1
	pushl %ebx
	call _move_to__KLU
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-8,%esp
	pushl $1
	pushl %ebx
	call _line_v_until__AKV
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-8,%esp
	pushl $14
	pushl %ebx
	call _line_h_until__BNU
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl _color_light__N2N,%edx
	addl $-12,%esp
	pushl %edx
	call _color__PKU
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-8,%esp
	pushl $14
	pushl %ebx
	call _line_v_until__AKV
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-8,%esp
	pushl $1
	pushl %ebx
	call _line_h_until__BNU
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl _color_back_light__P2N,%edx
	addl $-8,%esp
	pushl %edx
	pushl $13
	pushl $13
	pushl $2
	pushl $2
	pushl %ebx
	call _rectangle_fill__to__color__I3V
	addl $32,%esp
	movl 12(%ebx),%esi
	movl 8(%ebx),%ecx
	movl _color_back__O2N,%edx
	movl _parent_video__C2,%eax
	decl %esi
	decl %ecx
	addl $-8,%esp
	pushl %edx
	pushl %ecx
	pushl %esi
	pushl $0
	pushl $16
	pushl %ebx
	call _rectangle_fill__to__color__I3V
	addl $32,%esp
	testb $2,76(%ebx)
	je L6903
	movl _parent_video__C2,%eax
	movl _black__4R,%edx
	movl _parent_video__C2,%eax
	addl $-12,%esp
	pushl %edx
	call _color__PKU
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-12,%esp
	pushl $12
	pushl $12
	pushl $3
	pushl $3
	pushl %ebx
	call _line__to__2EW
	addl $32,%esp
	movl _parent_video__C2,%eax
	addl $-12,%esp
	pushl $12
	pushl $11
	pushl $4
	pushl $3
	pushl %ebx
	call _line__to__2EW
	addl $32,%esp
	movl _parent_video__C2,%eax
	addl $-12,%esp
	pushl $11
	pushl $12
	pushl $3
	pushl $4
	pushl %ebx
	call _line__to__2EW
	addl $32,%esp
	movl _parent_video__C2,%eax
	addl $-12,%esp
	pushl $12
	pushl $3
	pushl $3
	pushl $12
	pushl %ebx
	call _line__to__2EW
	addl $32,%esp
	movl _parent_video__C2,%eax
	addl $-12,%esp
	pushl $11
	pushl $3
	pushl $3
	pushl $11
	pushl %ebx
	call _line__to__2EW
	addl $32,%esp
	movl _parent_video__C2,%eax
	addl $-12,%esp
	pushl $12
	pushl $4
	pushl $4
	pushl $12
	pushl %ebx
	call _line__to__2EW
	addl $32,%esp
L6903:
	movl 76(%ebx),%eax
	cmpl $-1,%eax
	jne L6946
	movl _parent_video__C2,%eax
	movl _color_dark__M2N,%edx
	jmp L6964
	.p2align 2
L6946:
	testl $1,%eax
	jne L6954
	movl _parent_video__C2,%eax
	movl _black__4R,%edx
	jmp L6971
	.p2align 2
L6954:
	movl _parent_video__C2,%eax
	movl _red__6R,%edx
L6971:
	movl _parent_video__C2,%eax
L6964:
	addl $-12,%esp
	pushl %edx
	call _color__PKU
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl 72(%ebx),%edx
	cmpl $16,(%eax)
	jne L6968
	pushl $0
	pushl $19
	pushl %edx
	pushl %ebx
	call _print__to__NJX
	jmp L6969
	.p2align 2
L6968:
	pushl $0
	pushl $19
	pushl %edx
	pushl %ebx
	call _print__to__NJX
L6969:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_append_plan__JKY:
	pushl %ebp
	movl %esp,%ebp
	subl $92,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 40(%eax),%edx
	testl %edx,%edx
	je L6995
	movl (%edx),%eax
	cmpl $28,%eax
	je L6997
	ja L7002
	cmpl $17,%eax
	je L6998
	jmp L6996
	.p2align 2
L7002:
	cmpl $78,%eax
	je L6999
	jmp L6996
	.p2align 2
L6997:
	movl 52(%edx),%ecx
	jmp L6996
	.p2align 2
L6998:
L6999:
	movl 56(%edx),%ecx
L6996:
	movl %ecx,%esi
	testl %esi,%esi
	je L7017
	movl 12(%esi),%eax
	movl (%eax),%eax
	movl %eax,-4(%ebp)
	movl 16(%esi),%eax
	movl (%eax),%eax
	movl %eax,-12(%ebp)
	movl 20(%esi),%eax
	movl (%eax),%eax
	movl %eax,-8(%ebp)
	movl 24(%esi),%eax
	movl (%eax),%eax
	decl %eax
	jmp L7210
	.p2align 2
L6995:
	movl $0,-8(%ebp)
	movl $0,-4(%ebp)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L7009
	movl 12(%eax),%edx
	jmp L7010
	.p2align 2
L7009:
	movl 8(%eax),%edx
L7010:
	subl $1,%edx
	movl %edx,-12(%ebp)
	cmpl $16,(%eax)
	jne L7013
	movl 8(%eax),%eax
	jmp L7014
	.p2align 2
L7013:
	movl 4(%eax),%eax
L7014:
	subl $1,%eax
L7210:
	movl %eax,-16(%ebp)
	movb $0,%al
	testb %al,%al
	jne L7017
	movl 8(%ebp),%edx
	movl 8(%ebp),%ecx
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%edx),%edx
	movl %edx,-20(%ebp)
	movl 12(%ecx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl 8(%ebp),%ecx
	movl %eax,%esi
	addl $32,%esp
	subl $1,%esi
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%edx),%edx
	movl %edx,-24(%ebp)
	movl 8(%ecx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl %eax,-44(%ebp)
	addl $32,%esp
	subl $1,-44(%ebp)
	cmpl -4(%ebp),%esi
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L7017
	movl -12(%ebp),%ecx
	cmpl %ecx,-20(%ebp)
	jg L7017
	movl -8(%ebp),%eax
	cmpl %eax,-44(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -44(%ebp),%edx
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L7017
	movl -16(%ebp),%ecx
	cmpl %ecx,-24(%ebp)
	jg L7017
	movl -4(%ebp),%eax
	movl %eax,-48(%ebp)
	cmpl %eax,-20(%ebp)
	jle L7034
	movl -20(%ebp),%edx
	movl %edx,-48(%ebp)
L7034:
	movl -12(%ebp),%ecx
	movl %esi,-52(%ebp)
	cmpl %ecx,%esi
	jle L7038
	movl %ecx,-52(%ebp)
L7038:
	movl -8(%ebp),%eax
	movl %eax,-56(%ebp)
	cmpl %eax,-24(%ebp)
	jle L7042
	movl -24(%ebp),%edx
	movl %edx,-56(%ebp)
L7042:
	movl -44(%ebp),%ecx
	movl -16(%ebp),%eax
	movl %ecx,-60(%ebp)
	cmpl %eax,%ecx
	jle L7046
	movl %eax,-60(%ebp)
L7046:
	addl $-12,%esp
	pushl $36
	call _allocation__C7
	movl %eax,%ebx
	addl $-4,%esp
	pushl $36
	pushl $_PLAN__
	pushl %ebx
	call _copy__from__size__NPD
	movl 8(%ebp),%edx
	movl %edx,8(%ebx)
	movl %ebx,56(%edx)
	movl 8(%ebp),%ebx
	addl $32,%esp
	jmp L7103
	.p2align 2
L7105:
	testl %eax,%eax
	jne L7209
L7103:
	movl (%ebx),%ecx
	cmpl $28,%ecx
	je L7058
	ja L7062
	cmpl $17,%ecx
	je L7059
	jmp L7055
	.p2align 2
L7062:
	cmpl $78,%ecx
	je L7059
	cmpl $82,%ecx
	jne L7055
	movl 48(%ebx),%eax
	movl %eax,-32(%ebp)
	jmp L7055
	.p2align 2
L7058:
	movl 44(%ebx),%eax
	movl %eax,-32(%ebp)
	jmp L7055
	.p2align 2
L7059:
	movl 48(%ebx),%edx
	movl %edx,-32(%ebp)
L7055:
	movl -32(%ebp),%eax
L7063:
	testl %eax,%eax
	je L7064
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L7065
	jmp *L7077(,%edx,4)
	.p2align 2
L7077:
	.long L7076
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7074
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7065
	.long L7076
	.long L7076
	.long L7076
	.long L7065
	.long L7076
	.long L7076
	.long L7076
	.long L7076
	.long L7075
	.long L7076
	.p2align 2
L7074:
	movl 52(%eax),%edi
	jmp L7065
	.p2align 2
L7075:
L7076:
	movl 56(%eax),%edi
L7065:
	testl %edi,%edi
	sete %dl
	jmp L7079
	.p2align 2
L7064:
	movb $0,%dl
L7079:
	testb %dl,%dl
	je L7080
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L7081
	jmp *L7093(,%edx,4)
	.p2align 2
L7093:
	.long L7092
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7090
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7081
	.long L7092
	.long L7092
	.long L7092
	.long L7081
	.long L7092
	.long L7092
	.long L7092
	.long L7092
	.long L7091
	.long L7092
	.p2align 2
L7090:
	movl 44(%eax),%eax
	jmp L7211
	.p2align 2
L7091:
L7092:
	movl 48(%eax),%eax
L7211:
	movl %eax,-28(%ebp)
L7081:
	movl -28(%ebp),%eax
	jmp L7063
	.p2align 2
L7080:
	cmpl $28,%ecx
	je L7098
	ja L7102
	cmpl $17,%ecx
	je L7099
	jmp L7095
	.p2align 2
L7102:
	cmpl $78,%ecx
	je L7099
	cmpl $82,%ecx
	jne L7095
	jmp L7099
	.p2align 2
L7098:
	movl 36(%ebx),%ebx
	jmp L7212
	.p2align 2
L7099:
	movl 40(%ebx),%ebx
L7212:
	movl %ebx,-36(%ebp)
L7095:
	movl -36(%ebp),%ebx
	testl %ebx,%ebx
	jne L7105
	testl %eax,%eax
	je L7106
L7209:
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L7107
	jmp *L7119(,%edx,4)
	.p2align 2
L7119:
	.long L7118
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7116
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7107
	.long L7118
	.long L7118
	.long L7118
	.long L7107
	.long L7118
	.long L7118
	.long L7118
	.long L7118
	.long L7117
	.long L7118
	.p2align 2
L7116:
	movl 52(%eax),%eax
	jmp L7213
	.p2align 2
L7117:
L7118:
	movl 56(%eax),%eax
L7213:
	movl %eax,-40(%ebp)
L7107:
	movl -40(%ebp),%esi
	movl 8(%ebp),%ecx
	addl $-8,%esp
	addl $-12,%esp
	movl 56(%ecx),%eax
	movl %esi,32(%eax)
	movl 56(%ecx),%edx
	movl 28(%esi),%eax
	movl %eax,28(%edx)
	movl 56(%ecx),%eax
	movl 4(%esi),%ebx
	movl %eax,28(%esi)
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%ecx
	movl %eax,%edx
	addl $32,%esp
	movl 56(%ecx),%eax
	movl %edx,4(%eax)
	jmp L7127
	.p2align 2
L7106:
	movl 8(%ebp),%edx
	movl 8(%ebp),%ecx
	movl 56(%edx),%eax
	movl _list_plan__J3,%edx
	movl %edx,28(%eax)
	movl 56(%ecx),%eax
	movl %eax,_list_plan__J3
	movl $1,4(%eax)
L7127:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 28(%eax),%esi
	testl %esi,%esi
	je L7131
	movl 4(%esi),%ebx
	movl %eax,32(%esi)
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,4(%esi)
	movl 28(%esi),%eax
	addl $32,%esp
	testl %eax,%eax
	je L7131
	addl $-12,%esp
	pushl %eax
	call _inc_level__XXI
	addl $16,%esp
L7131:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -60(%ebp),%ecx
	pushl %ecx
	call ___infix_sub__F6B
	movl %eax,-44(%ebp)
	movl 8(%ebp),%eax
	addl $32,%esp
	addl $-12,%esp
	movl 56(%eax),%ebx
	pushl $16
	call _allocation__C7
	movl %eax,%esi
	addl $-4,%esp
	pushl $16
	pushl $_LIMIT_X__
	pushl %esi
	call _copy__from__size__NPD
	movl %ebx,4(%esi)
	movl -48(%ebp),%edx
	movl 8(%ebp),%ecx
	addl $32,%esp
	movl %edx,(%esi)
	movl %esi,%ebx
	xorl %edi,%edi
	movl 56(%ecx),%eax
	movl %ebx,12(%eax)
	movl _list_x__K3,%eax
	movl %eax,-64(%ebp)
	movl %eax,%ecx
	testl %ecx,%ecx
	je L7149
	movl 12(%ecx),%edi
	movl (%ecx),%edx
	movl (%ebx),%eax
	movl %eax,%ebx
	cmpl %ebx,%edx
	jg L7149
	movl %ebx,-68(%ebp)
	.p2align 2
L7145:
	cmpl -68(%ebp),%edx
	jne L7146
	movl 4(%esi),%edx
	movl 4(%ecx),%eax
	movl 4(%edx),%edx
	cmpl %edx,4(%eax)
	jle L7149
L7146:
	movl %ecx,%edi
	movl 8(%ecx),%ecx
	testl %ecx,%ecx
	je L7149
	movl (%ecx),%edx
	cmpl %ebx,%edx
	jle L7145
L7149:
	movl %ecx,8(%esi)
	movl %edi,12(%esi)
	movl %esi,%eax
	testl %edi,%edi
	je L7153
	movl -64(%ebp),%eax
	movl %esi,8(%edi)
L7153:
	testl %ecx,%ecx
	je L7155
	movl %esi,12(%ecx)
L7155:
	movl %eax,_list_x__K3
	movl 8(%ebp),%edx
	addl $-12,%esp
	movl 56(%edx),%ebx
	pushl $16
	call _allocation__C7
	movl %eax,%esi
	addl $-4,%esp
	pushl $16
	pushl $_LIMIT_X__
	pushl %esi
	call _copy__from__size__NPD
	movl %ebx,4(%esi)
	movl -52(%ebp),%ecx
	movl 8(%ebp),%edx
	addl $32,%esp
	movl %ecx,(%esi)
	movl 56(%edx),%eax
	movl %esi,16(%eax)
	movl 56(%edx),%eax
	xorl %edi,%edi
	movl 12(%eax),%ecx
	testl %ecx,%ecx
	je L7168
	movl 12(%ecx),%edi
	movl (%ecx),%edx
	movl (%esi),%eax
	movl %eax,%ebx
	cmpl %ebx,%edx
	jg L7168
	movl %ebx,-72(%ebp)
	.p2align 2
L7164:
	cmpl -72(%ebp),%edx
	jne L7165
	movl 4(%esi),%edx
	movl 4(%ecx),%eax
	movl 4(%edx),%edx
	cmpl %edx,4(%eax)
	jle L7168
L7165:
	movl %ecx,%edi
	movl 8(%ecx),%ecx
	testl %ecx,%ecx
	je L7168
	movl (%ecx),%edx
	cmpl %ebx,%edx
	jle L7164
L7168:
	movl %ecx,8(%esi)
	movl %edi,12(%esi)
	testl %edi,%edi
	je L7172
	movl %esi,8(%edi)
L7172:
	testl %ecx,%ecx
	je L7176
	movl %esi,12(%ecx)
L7176:
	movl 8(%ebp),%ecx
	movl 56(%ecx),%ebx
	call _clone__H5E
	movl %eax,%edi
	movb $1,8(%edi)
	movl %ebx,4(%edi)
	movl -56(%ebp),%eax
	movl 8(%ebp),%edx
	movl _list_y__L3,%ecx
	movl %eax,(%edi)
	movl %ecx,%esi
	movl 56(%edx),%eax
	movl %edi,20(%eax)
	movl %ecx,-76(%ebp)
	movl $0,-80(%ebp)
	jmp L7179
	.p2align 2
L7181:
	movl %esi,-80(%ebp)
	movl 12(%esi),%esi
L7179:
	testl %esi,%esi
	je L7186
	movl (%esi),%eax
	movl (%edi),%edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L7181
L7186:
	movl %esi,12(%edi)
	movl -80(%ebp),%eax
	movl %eax,16(%edi)
	movl %edi,%eax
	cmpl $0,-80(%ebp)
	je L7188
	movl -76(%ebp),%eax
	movl -80(%ebp),%edx
	movl %edi,12(%edx)
L7188:
	testl %esi,%esi
	je L7190
	movl %edi,16(%esi)
L7190:
	movl %eax,_list_y__L3
	movl 8(%ebp),%ecx
	movl 56(%ecx),%ebx
	call _clone__H5E
	movl %eax,%edi
	movb $0,8(%edi)
	movl %ebx,4(%edi)
	movl -44(%ebp),%eax
	movl 8(%ebp),%edx
	movl %eax,(%edi)
	movl 56(%edx),%eax
	movl %edi,24(%eax)
	movl 56(%edx),%eax
	movl $0,-84(%ebp)
	movl 20(%eax),%esi
	jmp L7195
	.p2align 2
L7197:
	movl %esi,-84(%ebp)
	movl 12(%esi),%esi
L7195:
	testl %esi,%esi
	je L7202
	movl (%esi),%eax
	movl (%edi),%edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L7197
L7202:
	movl %esi,12(%edi)
	movl -84(%ebp),%ecx
	movl %ecx,16(%edi)
	testl %ecx,%ecx
	je L7204
	movl %edi,12(%ecx)
L7204:
	testl %esi,%esi
	je L7017
	movl %edi,16(%esi)
L7017:
	leal -104(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_hash_code__IB8:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	xorl %esi,%esi
	addl $-8,%esp
	movl 4(%eax),%edi
	pushl %edi
	pushl $1
	call ___infix_greater__3W
	addl $16,%esp
	testb %al,%al
	jne L7226
	addl $-8,%esp
	addl $-12,%esp
	addl $-12,%esp
	addl $-8,%esp
	pushl $0
	movl 8(%ebp),%edx
	movl (%edx),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	movsbl %al,%eax
	pushl %eax
	call _code__1LB
	movsbl %al,%eax
	pushl %eax
	call _to_numeric__FD8
	pushl %eax
	addl $-8,%esp
	pushl $0
	pushl $5
	call ___infix_mul__EIG
	addl $16,%esp
	pushl %eax
	call ___infix_add__6C8
	addl $48,%esp
	movl %eax,%esi
	movl $2,%ebx
	jmp L7238
	.p2align 2
L7240:
	addl $-8,%esp
	addl $-12,%esp
	addl $-12,%esp
	addl $-8,%esp
	movl %ebx,%eax
	subl $1,%eax
	pushl %eax
	movl 8(%ebp),%edx
	movl (%edx),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	movsbl %al,%eax
	pushl %eax
	call _code__1LB
	movsbl %al,%eax
	pushl %eax
	call _to_numeric__FD8
	pushl %eax
	addl $-8,%esp
	pushl %esi
	pushl $5
	call ___infix_mul__EIG
	addl $16,%esp
	pushl %eax
	call ___infix_add__6C8
	addl $48,%esp
	movl %eax,%esi
	incl %ebx
L7238:
	addl $-8,%esp
	pushl %edi
	pushl %ebx
	call ___infix_greater__3W
	addl $16,%esp
	testb %al,%al
	je L7240
L7226:
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L7253
	addl $-12,%esp
	pushl %esi
	call ___prefix_logicnot__7F8
	movl %eax,%esi
L7253:
	leal -24(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_external__I48:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl %eax,-4(%ebp)
	movl 4(%eax),%ebx
	call _clone__X68
	movl %eax,%edi
	testl %ebx,%ebx
	jle L7294
	addl $-8,%esp
	pushl %ebx
	movl 8(%edi),%eax
	pushl %eax
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	je L7294
	addl $-12,%esp
	pushl %ebx
	call _calloc__3O8
	movl %eax,(%edi)
	movl %ebx,8(%edi)
	addl $16,%esp
L7294:
	movl $0,4(%edi)
	movl -4(%ebp),%eax
	movl 4(%eax),%edx
	movl %edx,4(%edi)
	testl %edx,%edx
	jle L7298
	movl 8(%edi),%eax
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L7301
	movl 4(%edi),%eax
	addl $-12,%esp
	pushl %eax
	call _calloc__3O8
	movl %eax,(%edi)
	movl 4(%edi),%eax
	movl %eax,8(%edi)
	addl $16,%esp
L7301:
	movl 4(%edi),%esi
	movl (%edi),%eax
	movl %eax,-8(%ebp)
	movl -4(%ebp),%eax
	decl %esi
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	movl (%eax),%eax
	movl %eax,-12(%ebp)
L7330:
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L7298
	addl $-4,%esp
	pushl %esi
	addl $-8,%esp
	pushl %esi
	movl -12(%ebp),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	movsbl %al,%eax
	pushl %eax
	movl -8(%ebp),%eax
	pushl %eax
	call _put__to__MS8
	addl $16,%esp
	subl $1,%esi
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	jmp L7330
	.p2align 2
L7298:
	movl 4(%edi),%ebx
	cmpl %ebx,8(%edi)
	jle L7322
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	movl %eax,4(%edi)
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call _item__UF9
	addl $16,%esp
	testb %al,%al
	je L7327
	movl 4(%edi),%eax
	addl $-4,%esp
	pushl %eax
	pushl $0
	pushl %edi
	call _put__to__6G9
	jmp L7327
	.p2align 2
L7322:
	addl $-8,%esp
	pushl $0
	pushl %edi
	call _add_last__8I9
L7327:
	movl (%edi),%eax
	leal -40(%ebp),%esp
	decl 4(%edi)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_append__0WAB:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%eax
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 4(%eax),%eax
	movl %eax,-4(%ebp)
	movl 4(%edx),%ebx
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,%edi
	addl $32,%esp
	addl $-8,%esp
	movl 8(%edx),%eax
	cmpl %edi,%eax
	setg %bl
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L7363
	movl 8(%ebp),%eax
	movl 8(%eax),%ebx
	testl %ebx,%ebx
	jne L7367
	movl %edi,8(%eax)
	addl $-12,%esp
	pushl %edi
	call _calloc__3O8
	movl 8(%ebp),%edx
	movl %eax,(%edx)
	addl $16,%esp
	jmp L7363
	.p2align 2
L7367:
	movl 8(%ebp),%eax
	movl %edi,%ecx
	movl (%eax),%edx
	movl _pointer_size__OD,%eax
	imull %eax,%ecx
	imull %ebx,%eax
	addl $-4,%esp
	pushl %ecx
	pushl %eax
	pushl %edx
	call _realloc__size__to__TLG
	movl %eax,-8(%ebp)
	addl $16,%esp
	movl %edi,%esi
	subl $1,%esi
	cmpl %esi,%ebx
	jg L7391
	.p2align 2
L7375:
	addl $-4,%esp
	pushl %ebx
	pushl $0
	movl -8(%ebp),%edx
	pushl %edx
	call _put__to__MS8
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L7375
L7391:
	movl -8(%ebp),%edx
	movl 8(%ebp),%eax
	movl %edx,(%eax)
	movl %edi,8(%eax)
L7363:
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	xorl %ebx,%ebx
	movl (%eax),%eax
	movl %eax,-12(%ebp)
	movl (%edx),%edx
	movl 8(%ebp),%eax
	movl %edx,-16(%ebp)
	movl 4(%eax),%esi
	cmpl -4(%ebp),%ebx
	je L7390
	.p2align 2
L7384:
	addl $-4,%esp
	pushl %esi
	addl $-8,%esp
	pushl %ebx
	movl -16(%ebp),%edx
	pushl %edx
	call _item__J5K
	addl $16,%esp
	movsbl %al,%eax
	pushl %eax
	movl -12(%ebp),%eax
	pushl %eax
	call _put__to__MS8
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	cmpl -4(%ebp),%ebx
	jne L7384
L7390:
	movl 8(%ebp),%edx
	leal -40(%ebp),%esp
	movl %edi,4(%edx)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_print__XFCB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	call _clone__X68
	movl %eax,-4(%ebp)
	addl $-8,%esp
	pushl $0
	pushl $11
	call ___infix_greater__3W
	addl $16,%esp
	testb %al,%al
	je L7441
	addl $-8,%esp
	pushl $11
	movl -4(%ebp),%edx
	movl 8(%edx),%eax
	pushl %eax
	call ___infix_less__6TH
	addl $16,%esp
	testb %al,%al
	je L7441
	addl $-12,%esp
	pushl $11
	call _calloc__3O8
	movl -4(%ebp),%edx
	movl %eax,(%edx)
	addl $16,%esp
	movl $11,8(%edx)
L7441:
	movl -4(%ebp),%eax
	movl $0,4(%eax)
	addl $-8,%esp
	pushl $0
	pushl %ebx
	call ___infix_equal_equal__CKCB
	addl $16,%esp
	testb %al,%al
	je L7448
	addl $-8,%esp
	pushl $48
	movl -4(%ebp),%edx
	pushl %edx
	call _extend__RKCB
	addl $16,%esp
	jmp L7450
	.p2align 2
L7448:
	testl %ebx,%ebx
	jle L7451
	movl %ebx,%esi
	jmp L7454
	.p2align 2
L7451:
	addl $-8,%esp
	pushl $45
	movl -4(%ebp),%eax
	movl %ebx,%esi
	negl %esi
	pushl %eax
	call _extend__RKCB
	addl $16,%esp
L7454:
	movl -4(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 4(%edx),%ebx
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
	movl $10,%ebx
	jmp L7460
	.p2align 2
L7462:
	addl $-8,%esp
	addl $-12,%esp
	addl $-8,%esp
	pushl $10
	pushl %esi
	call ___infix_mod__3MCB
	pushl %eax
	call _digit__RNCB
	movsbl %al,%eax
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	call _extend__RKCB
	movl %esi,%eax
	cltd
	idivl %ebx
	addl $48,%esp
	movl %eax,%esi
L7460:
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__CKCB
	addl $16,%esp
	testb %al,%al
	je L7462
	movl -4(%ebp),%edx
	movl 4(%edx),%esi
	jmp L7468
	.p2align 2
L7470:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	movl -4(%ebp),%eax
	pushl %eax
	call _swap__with__9SCB
	addl $16,%esp
	subl $1,%esi
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
L7468:
	cmpl %esi,%edi
	setg %bl
	addl $-8,%esp
	pushl %esi
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L7470
L7450:
	movl -4(%ebp),%edx
	movl _lower__2WK,%ebx
	movl 4(%edx),%esi
	cmpl %esi,%ebx
	jg L7487
	.p2align 2
L7480:
	addl $-12,%esp
	addl $-8,%esp
	pushl %ebx
	movl -4(%ebp),%eax
	pushl %eax
	call _item__UF9
	movsbl %al,%eax
	pushl %eax
	call _put_character__WOB
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L7480
L7487:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_calloc__S0DB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	call _element_sizeof__J2DB
	imull %ebx,%eax
	addl $-12,%esp
	pushl %eax
	call _allocation__C7
	movl %eax,%edi
	addl $16,%esp
	movl %ebx,%esi
L7531:
	subl $1,%esi
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L7518
	addl $-4,%esp
	call _object_size__J3DB
	pushl %eax
	addl $-12,%esp
	pushl $_PIXEL_24__
	call _to_pointer__Y6DB
	addl $16,%esp
	pushl %eax
	addl $-12,%esp
	addl $-8,%esp
	pushl %esi
	pushl %edi
	call _item__64DB
	addl $16,%esp
	pushl %eax
	call _to_pointer__Y6DB
	addl $16,%esp
	pushl %eax
	call _copy__from__size__NPD
	addl $16,%esp
	jmp L7531
	.p2align 2
L7518:
	leal -24(%ebp),%esp
	movl %edi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_h__until__image__G6EB:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	movl 20(%ebp),%eax
	movl 8(%ebp),%edx
	movl %eax,-4(%ebp)
	addl $-4,%esp
	movl 24(%edx),%eax
	pushl %eax
	movl 16(%edx),%eax
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	call _in_range__to__T9J
	addl $16,%esp
	testb %al,%al
	je L7542
	cmpl -4(%ebp),%edi
	jle L7543
	movl %edi,%esi
	movl -4(%ebp),%edi
	movl %esi,-4(%ebp)
L7543:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 20(%edx),%eax
	movl -4(%ebp),%edx
	cmpl -4(%ebp),%eax
	setg %bl
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L7545
	movl 8(%ebp),%eax
	movl 20(%eax),%eax
	movl %eax,-4(%ebp)
L7545:
	movl 8(%ebp),%edx
	movl %edi,%esi
	movl 12(%edx),%eax
	cmpl %edi,%eax
	jle L7549
	movl %eax,%esi
L7549:
	cmpl -4(%ebp),%edi
	jg L7542
	movl 16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl %esi,%ebx
	subl %edi,%ebx
	pushl %edx
	call _get_line__HCFB
	movl %eax,-8(%ebp)
	movl %ebx,%edi
	movl %esi,%ebx
	addl $16,%esp
	cmpl -4(%ebp),%ebx
	jg L7542
	.p2align 2
L7558:
	addl $-8,%esp
	pushl %edi
	movl 24(%ebp),%eax
	pushl %eax
	call _item__ZIFB
	addl $-8,%esp
	pushl %eax
	addl $-8,%esp
	pushl %ebx
	movl -8(%ebp),%edx
	movl 12(%edx),%eax
	pushl %eax
	call _item__64DB
	addl $16,%esp
	pushl %eax
	call _copy__ZJFB
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl -4(%ebp),%ebx
	jle L7558
L7542:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_read__size__F2FB:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _count__P2FB
	movl 16(%ebp),%edx
	movl %eax,%ebx
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 12(%ebp),%ecx
	movl %eax,-20(%ebp)
	addl $32,%esp
	movl 4(%ecx),%esi
	cmpl %esi,%eax
	jle L7579
	testl %esi,%esi
	jne L7581
	addl $-12,%esp
	pushl %eax
	call _calloc__S0DB
	movl 12(%ebp),%edx
	movl %eax,12(%edx)
	addl $16,%esp
	jmp L7582
	.p2align 2
L7581:
	movl 12(%ebp),%ecx
	addl $-4,%esp
	movl 12(%ecx),%ebx
	call _element_sizeof__J2DB
	imull -20(%ebp),%eax
	pushl %eax
	call _element_sizeof__J2DB
	imull %esi,%eax
	pushl %eax
	pushl %ebx
	call _realloc__size__to__TLG
	movl %esi,%ebx
	movl -20(%ebp),%esi
	movl %eax,%edi
	addl $16,%esp
	subl $1,%esi
	cmpl %esi,%ebx
	jg L7672
	.p2align 2
L7589:
	addl $-4,%esp
	call _object_size__J3DB
	pushl %eax
	addl $-12,%esp
	pushl $_PIXEL_24__
	call _to_pointer__Y6DB
	addl $16,%esp
	pushl %eax
	addl $-12,%esp
	addl $-8,%esp
	pushl %ebx
	pushl %edi
	call _item__64DB
	addl $16,%esp
	pushl %eax
	call _to_pointer__Y6DB
	addl $16,%esp
	pushl %eax
	call _copy__from__size__NPD
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L7589
L7672:
	movl 12(%ebp),%eax
	movl %edi,12(%eax)
L7582:
	movl -20(%ebp),%ecx
	movl 12(%ebp),%edx
	movl %ecx,4(%edx)
L7579:
	movl $0,-4(%ebp)
	call _element_sizeof__0FGB
	movl %eax,%esi
	imull 16(%ebp),%esi
	movl 8(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	movl 4(%eax),%ebx
	pushl %esi
	call ___prefix_sub__DTB
	pushl %eax
	pushl %ebx
	call ___infix_sub__STB
	movl 8(%ebp),%ecx
	movl %eax,%edx
	movl (%ecx),%eax
	addl $32,%esp
	movl 20(%eax),%eax
	cmpl %eax,%edx
	jbe L7598
	movl %eax,%esi
	subl 4(%ecx),%esi
L7598:
	movl 8(%ebp),%edx
	addl $-4,%esp
	movl 4(%edx),%eax
	movl 12(%edx),%edx
	pushl $0
	pushl %eax
	pushl %edx
	call _fseek
	movl 8(%ebp),%ecx
	movl $2048,-16(%ebp)
	movl _tmp_buffer__WABB,%eax
	addl $16,%esp
	addl $-12,%esp
	movl 8(%ecx),%ebx
	pushl %eax
	call _force_conversion__86BB
	movl %eax,(%ebx)
	movl _object_size__3QD,%eax
	movl %eax,4(%ebx)
	addl $16,%esp
	movl $-1,8(%ebx)
	testl %esi,%esi
	je L7673
	.p2align 2
L7610:
	addl $-8,%esp
	pushl $2048
	pushl %esi
	call ___infix_greater_equal__4EC
	addl $16,%esp
	testb %al,%al
	jne L7613
	movl %esi,-16(%ebp)
L7613:
	movl 8(%ebp),%ecx
	movl _tmp_buffer__WABB,%edx
	movl 12(%ecx),%eax
	pushl %eax
	movl -16(%ebp),%eax
	pushl %eax
	pushl $1
	pushl %edx
	call _fread
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl 8(%ebp),%ecx
	movl %eax,-4(%ebp)
	movl -16(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 4(%ecx),%ebx
	pushl %eax
	call ___prefix_sub__DTB
	pushl %eax
	pushl %ebx
	call ___infix_sub__STB
	movl 8(%ebp),%edx
	movl %eax,4(%edx)
	movl -16(%ebp),%ecx
	movl %ecx,-24(%ebp)
	movl 8(%ebp),%ecx
	addl $32,%esp
	subl $1,-24(%ebp)
	addl $-12,%esp
	movl 8(%edx),%eax
	movl -24(%ebp),%edx
	movl %edx,8(%eax)
	movl 8(%ecx),%ecx
	movl 12(%ebp),%eax
	movl %ecx,-8(%ebp)
	pushl %eax
	call _count__P2FB
	movl %eax,%ebx
	call _element_sizeof__0FGB
	imull %eax,%ebx
	movl 12(%ebp),%edx
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 8(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl -24(%ebp),%ecx
	movl %eax,%edi
	addl $32,%esp
	addl $-8,%esp
	pushl %ecx
	pushl $0
	call ___infix_greater__3W
	addl $16,%esp
	subl -16(%ebp),%esi
	movl %esi,-28(%ebp)
	testb %al,%al
	jne L7627
	movl 12(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _get_storage__1LGB
	addl $-8,%esp
	addl $16,%esp
	pushl $0
	movl -8(%ebp),%edx
	movl %eax,%ebx
	pushl %edx
	call _item__EMGB
	movb %al,(%edi,%ebx)
	movl 12(%ebp),%ecx
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 8(%ecx),%ebx
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	call _element_sizeof__0FGB
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	pushl %esi
	call ___infix_div__AZ5
	imull %ebx,%eax
	movl 12(%ebp),%edx
	addl $16,%esp
	subl %eax,%esi
	movl %esi,%eax
	movl %eax,8(%edx)
	testl %eax,%eax
	jne L7636
	movl (%edx),%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 12(%ebp),%ecx
	addl $32,%esp
	movl %eax,(%ecx)
L7636:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
	movl $1,-12(%ebp)
	jmp L7645
	.p2align 2
L7647:
	movl 12(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _get_storage__1LGB
	movl -12(%ebp),%edx
	addl $-8,%esp
	addl $16,%esp
	pushl %edx
	movl -8(%ebp),%ecx
	movl %eax,%ebx
	pushl %ecx
	call _item__EMGB
	movb %al,(%edi,%ebx)
	movl 12(%ebp),%eax
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 8(%eax),%ebx
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	call _element_sizeof__0FGB
	movl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	pushl %esi
	call ___infix_div__AZ5
	imull %ebx,%eax
	movl 12(%ebp),%edx
	addl $16,%esp
	subl %eax,%esi
	movl %esi,%eax
	movl %eax,8(%edx)
	testl %eax,%eax
	jne L7656
	movl (%edx),%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 12(%ebp),%ecx
	addl $32,%esp
	movl %eax,(%ecx)
L7656:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
	incl -12(%ebp)
L7645:
	movl -24(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl -12(%ebp),%edx
	pushl %edx
	call ___infix_greater__3W
	addl $16,%esp
	testb %al,%al
	je L7647
L7627:
	movl 8(%ebp),%ecx
	movl -28(%ebp),%esi
	movl 8(%ecx),%eax
	movl $-1,8(%eax)
	testl %esi,%esi
	jne L7610
L7673:
	leal -56(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_add_last__8I9:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edx
	movb 12(%ebp),%al
	movb %al,-1(%ebp)
	movl 8(%edx),%ebx
	cmpl 4(%edx),%ebx
	jg L7687
	testl %ebx,%ebx
	jne L7690
	movl $32,8(%edx)
	addl $-12,%esp
	pushl $32
	call _calloc__3O8
	movl 8(%ebp),%edx
	movl %eax,(%edx)
	addl $16,%esp
	jmp L7687
	.p2align 2
L7690:
	movl 8(%ebp),%edx
	leal (%ebx,%ebx),%eax
	movl %eax,-8(%ebp)
	movl (%edx),%ecx
	movl _pointer_size__OD,%edx
	imull %edx,%eax
	imull %ebx,%edx
	addl $-4,%esp
	pushl %eax
	pushl %edx
	pushl %ecx
	call _realloc__size__to__TLG
	movl -8(%ebp),%esi
	movl %eax,%edi
	addl $16,%esp
	subl $1,%esi
	cmpl %esi,%ebx
	jg L7710
	.p2align 2
L7701:
	addl $-4,%esp
	pushl %ebx
	pushl $0
	pushl %edi
	call _put__to__MS8
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L7701
L7710:
	movl 8(%ebp),%eax
	movl %edi,(%eax)
	movl -8(%ebp),%edx
	movl %edx,8(%eax)
L7687:
	movl 8(%ebp),%edx
	addl $-4,%esp
	movl 4(%edx),%eax
	pushl %eax
	movsbl -1(%ebp),%eax
	pushl %eax
	movl (%edx),%eax
	pushl %eax
	call _put__to__MS8
	movl 8(%ebp),%eax
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 4(%eax),%ebx
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	leal -40(%ebp),%esp
	movl %eax,4(%edx)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_hash_code__3IHB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	xorl %esi,%esi
	addl $-8,%esp
	movl 4(%eax),%edi
	pushl %edi
	pushl $1
	call ___infix_greater__3W
	addl $16,%esp
	testb %al,%al
	jne L7713
	addl $-8,%esp
	addl $-12,%esp
	addl $-12,%esp
	addl $-8,%esp
	pushl $1
	movl 8(%ebp),%eax
	pushl %eax
	call _item__UF9
	movsbl %al,%eax
	pushl %eax
	call _code__1LB
	movsbl %al,%eax
	pushl %eax
	call _to_numeric__FD8
	pushl %eax
	addl $-8,%esp
	pushl $0
	pushl $5
	call ___infix_mul__EIG
	addl $16,%esp
	pushl %eax
	call ___infix_add__6C8
	addl $64,%esp
	movl %eax,%esi
	movl $2,%ebx
	jmp L7722
	.p2align 2
L7724:
	addl $-8,%esp
	addl $-12,%esp
	addl $-12,%esp
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%eax
	pushl %eax
	call _item__UF9
	movsbl %al,%eax
	pushl %eax
	call _code__1LB
	movsbl %al,%eax
	pushl %eax
	call _to_numeric__FD8
	pushl %eax
	addl $-8,%esp
	pushl %esi
	pushl $5
	call ___infix_mul__EIG
	addl $16,%esp
	pushl %eax
	call ___infix_add__6C8
	addl $64,%esp
	movl %eax,%esi
	incl %ebx
L7722:
	addl $-8,%esp
	pushl %edi
	pushl %ebx
	call ___infix_greater__3W
	addl $16,%esp
	testb %al,%al
	je L7724
L7713:
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L7734
	addl $-12,%esp
	pushl %esi
	call ___prefix_logicnot__7F8
	movl %eax,%esi
L7734:
	leal -24(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clipping__to__8HJB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl 12(%ebp),%eax
	addl $-8,%esp
	movl 12(%edi),%ebx
	movl 8(%edi),%esi
	decl %ebx
	decl %esi
	pushl $0
	pushl %eax
	call _max__2RJ
	addl $16,%esp
	cmpl %ebx,%eax
	jle L7772
	movl %ebx,%eax
L7772:
	movl %eax,16(%edi)
	addl $-8,%esp
	pushl $0
	movl 20(%ebp),%eax
	pushl %eax
	call _max__2RJ
	addl $16,%esp
	cmpl %ebx,%eax
	jle L7777
	movl %ebx,%eax
L7777:
	movl %eax,24(%edi)
	addl $-8,%esp
	pushl $0
	movl 16(%ebp),%eax
	pushl %eax
	call _max__2RJ
	addl $16,%esp
	cmpl %esi,%eax
	jle L7782
	movl %esi,%eax
L7782:
	movl %eax,20(%edi)
	addl $-8,%esp
	pushl $0
	movl 24(%ebp),%eax
	pushl %eax
	call _max__2RJ
	cmpl %esi,%eax
	jle L7787
	movl %esi,%eax
L7787:
	leal -24(%ebp),%esp
	movl %eax,28(%edi)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_put_bitmap__to__8KJB:
	pushl %ebp
	movl %esp,%ebp
	subl $76,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%edi
	movl 8(%ebp),%edx
	movl 20(%ebp),%esi
	movl 16(%edx),%eax
	movl %eax,-44(%ebp)
	cmpl %eax,%edi
	jle L7792
	movl %edi,-44(%ebp)
L7792:
	movl 8(%ebp),%ecx
	movl 20(%ecx),%eax
	movl %eax,%ebx
	cmpl %ebx,%esi
	jle L7796
	movl %esi,%ebx
L7796:
	movl 12(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 8(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl 8(%ebp),%ecx
	addl $32,%esp
	subl $1,%eax
	movl 24(%ecx),%edx
	movl %eax,-48(%ebp)
	cmpl %edx,%eax
	jle L7803
	movl %edx,-48(%ebp)
L7803:
	movl 12(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 4(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl 8(%ebp),%ecx
	addl $32,%esp
	subl $1,%eax
	movl 28(%ecx),%edx
	movl %eax,-52(%ebp)
	cmpl %edx,%eax
	jle L7810
	movl %edx,-52(%ebp)
L7810:
	movl -48(%ebp),%eax
	cmpl %eax,-44(%ebp)
	jg L7813
	cmpl -52(%ebp),%ebx
	jg L7813
	movl -44(%ebp),%edx
	movl -52(%ebp),%ecx
	movl %ebx,-4(%ebp)
	subl %esi,-4(%ebp)
	movl %edx,-8(%ebp)
	subl %edi,-8(%ebp)
	movl %ebx,-40(%ebp)
	cmpl %ecx,%ebx
	jg L7813
	.p2align 2
L7822:
	movl -4(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	call _get_line__HCFB
	movl 8(%ebp),%ecx
	movl %eax,-36(%ebp)
	addl $16,%esp
	cmpl $0,56(%ecx)
	je L7825
	movl 64(%ecx),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -44(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-24(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -40(%ebp),%ecx
	pushl %ecx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-28(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -48(%ebp),%ecx
	pushl %ecx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,%edi
	movl 56(%edx),%eax
	addl $32,%esp
	movl 24(%eax),%eax
	addl $-8,%esp
	movl (%eax),%eax
	cmpl %eax,-28(%ebp)
	setg %bl
	pushl %eax
	movl -28(%ebp),%ecx
	pushl %ecx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L7825
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%eax
	addl $-8,%esp
	movl (%eax),%eax
	cmpl %eax,-28(%ebp)
	setg %bl
	pushl %eax
	movl -28(%ebp),%ecx
	pushl %ecx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L7825
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 12(%eax),%eax
	addl $-8,%esp
	movl (%eax),%esi
	cmpl %esi,-24(%ebp)
	setg %bl
	pushl %esi
	movl -24(%ebp),%ecx
	pushl %ecx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L7835
	addl $-8,%esp
	addl $-12,%esp
	pushl %esi
	call ___prefix_sub__05B
	pushl %eax
	movl -8(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -24(%ebp),%edx
	movl %eax,-32(%ebp)
	addl $32,%esp
	subl %edx,-32(%ebp)
	movl %esi,-24(%ebp)
	jmp L7841
	.p2align 2
L7835:
	movl -8(%ebp),%ecx
	movl %ecx,-32(%ebp)
L7841:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 16(%eax),%eax
	movl (%eax),%eax
	movl %edi,-56(%ebp)
	cmpl %eax,%edi
	jle L7843
	movl %eax,-56(%ebp)
L7843:
	movl -56(%ebp),%ecx
	cmpl %ecx,-24(%ebp)
	jg L7825
	.p2align 2
L7943:
	movl -28(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl -24(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%ecx
	pushl %ecx
	call _get_clip__HUJB
	movl 8(%eax),%edx
	movl -56(%ebp),%ecx
	addl $16,%esp
	movl %ecx,-60(%ebp)
	cmpl %edx,%ecx
	jle L7853
	movl %edx,-60(%ebp)
L7853:
	movl 16(%eax),%edx
	cmpl 8(%ebp),%edx
	jne L7856
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L7887
	movl -28(%ebp),%ebx
	movl -28(%ebp),%eax
	sall $8,%ebx
	sall $6,%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	movl -24(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl -32(%ebp),%edx
	movl %eax,%ebx
	addl $32,%esp
	movl %edx,-12(%ebp)
	call _display_off__KTK
	movl -60(%ebp),%ecx
	movl %ebx,%esi
	addl $-8,%esp
	addl $-12,%esp
	pushl %ecx
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
	subl -24(%ebp),%edi
	cmpl %edi,%esi
	jg L7951
	.p2align 2
L7866:
	movl -12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl -36(%ebp),%edx
	pushl %edx
	call _get_color__ABKB
	movl %eax,%ebx
	addl $-8,%esp
	addl $-12,%esp
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call _to_usmallint__NOK
	addl $16,%esp
	andl $255,%eax
	shrl $5,%eax
	andl $255,%eax
	pushl %eax
	addl $-8,%esp
	addl $-12,%esp
	movl %ebx,%eax
	andl $65280,%eax
	shrl $10,%eax
	pushl %eax
	call _to_usmallint__NOK
	addl $16,%esp
	andl $56,%eax
	pushl %eax
	addl $-12,%esp
	shrl $16,%ebx
	pushl %ebx
	call _to_usmallint__NOK
	addl $16,%esp
	andl $192,%eax
	pushl %eax
	call ___infix_or__5QK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_or__5QK
	addl $-4,%esp
	andl $255,%eax
	pushl %eax
	pushl %esi
	xorl %eax,%eax
	movw ___desc_video,%ax
	pushl %eax
	call __farpokeb
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -12(%ebp),%ecx
	pushl %ecx
	call ___infix_sub__F6B
	movl %eax,-12(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	cmpl %edi,%esi
	jle L7866
L7951:
	movw $1,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	addl $16,%esp
	jmp L7891
	.p2align 2
L7887:
	call _get_line__YFKB
	addl $-8,%esp
	pushl $___dj_stdout
	pushl $78
	call _fputc
	addl $16,%esp
	addl $-12,%esp
	pushl $1
	call _exit
	.p2align 2
L7856:
	movl (%edx),%eax
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L7892
	jmp *L7904(,%ecx,4)
	.p2align 2
L7904:
	.long L7903
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7896
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7892
	.long L7903
	.long L7903
	.long L7903
	.long L7892
	.long L7903
	.long L7903
	.long L7903
	.long L7903
	.long L7903
	.long L7902
	.p2align 2
L7896:
	movl 60(%edx),%ecx
	jmp L7952
	.p2align 2
L7902:
L7903:
	movl 64(%edx),%ecx
L7952:
	movl %ecx,-20(%ebp)
L7892:
	movl -24(%ebp),%esi
	subl -20(%ebp),%esi
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L7907
	jmp *L7919(,%ecx,4)
	.p2align 2
L7919:
	.long L7918
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7911
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7907
	.long L7918
	.long L7918
	.long L7918
	.long L7907
	.long L7918
	.long L7918
	.long L7918
	.long L7918
	.long L7918
	.long L7917
	.p2align 2
L7911:
	movl 64(%edx),%ecx
	jmp L7953
	.p2align 2
L7917:
L7918:
	movl 68(%edx),%ecx
L7953:
	movl %ecx,-16(%ebp)
L7907:
	movl -28(%ebp),%ebx
	movl -60(%ebp),%ecx
	subl -16(%ebp),%ebx
	subl -20(%ebp),%ecx
	addl $-17,%eax
	cmpl $70,%eax
	ja L7891
	jmp *L7935(,%eax,4)
	.p2align 2
L7935:
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7932
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.long L7891
	.p2align 2
L7932:
	movl -32(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl -36(%ebp),%eax
	pushl %eax
	pushl %ecx
	pushl %ebx
	pushl %esi
	pushl %edx
	call _slave_line_h_hard__until__image__offset__LQWC
	addl $32,%esp
L7891:
	movl -60(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	movl -32(%ebp),%ecx
	pushl %ecx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	subl -24(%ebp),%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,-32(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -60(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -56(%ebp),%edx
	movl %eax,-24(%ebp)
	addl $32,%esp
	cmpl %edx,%eax
	jle L7943
L7825:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%ecx
	pushl %ecx
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -40(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -52(%ebp),%edx
	movl %eax,-40(%ebp)
	addl $32,%esp
	cmpl %edx,%eax
	jle L7822
L7813:
	leal -88(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_draw__to__7EMB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%edi
	movl 16(%ebp),%esi
	movl 20(%ebp),%ecx
	movl _parent_video__C2,%eax
	movl 24(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	pushl %ecx
	pushl %esi
	pushl %edi
	pushl %ebx
	call _clipping__to__WGMB
	addl $32,%esp
	movl 76(%ebx),%eax
	testl $1,%eax
	je L7985
	cmpl $-1,%eax
	jne L7984
L7985:
	addl $-12,%esp
	pushl %ebx
	call _x_max__FKMB
	movl %eax,%esi
	addl $-12,%esp
	pushl %ebx
	call _y_max__UKMB
	movl _color_back__O2N,%edx
	movl %eax,%ecx
	movl _parent_video__C2,%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %edx
	pushl %ecx
	pushl %esi
	pushl $0
	pushl $0
	pushl %ebx
	call _rectangle__to__color__NLMB
	addl $32,%esp
	jmp L7994
	.p2align 2
L7984:
	testl $2,%eax
	jne L7995
	movl _parent_video__C2,%eax
	movl _color_light__N2N,%edx
	addl $-12,%esp
	pushl %edx
	call _color__1LMB
	addl $16,%esp
	addl $-12,%esp
	pushl %ebx
	call _y_max__UKMB
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $16,%esp
	addl $-4,%esp
	pushl %edx
	pushl $0
	pushl %ebx
	call _move_to__WMMB
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-8,%esp
	pushl $0
	pushl %ebx
	call _line_v_until__YLNB
	addl $16,%esp
	addl $-12,%esp
	pushl %ebx
	call _x_max__FKMB
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $16,%esp
	addl $-8,%esp
	pushl %edx
	pushl %ebx
	call _line_h_until__NOMB
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl _color_dark__M2N,%edx
	jmp L8044
	.p2align 2
L7995:
	movl _parent_video__C2,%eax
	movl _color_dark__M2N,%edx
	addl $-12,%esp
	pushl %edx
	call _color__1LMB
	addl $16,%esp
	addl $-12,%esp
	pushl %ebx
	call _y_max__UKMB
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $16,%esp
	addl $-4,%esp
	pushl %edx
	pushl $0
	pushl %ebx
	call _move_to__WMMB
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-8,%esp
	pushl $0
	pushl %ebx
	call _line_v_until__YLNB
	addl $16,%esp
	addl $-12,%esp
	pushl %ebx
	call _x_max__FKMB
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $16,%esp
	addl $-8,%esp
	pushl %edx
	pushl %ebx
	call _line_h_until__NOMB
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl _color_light__N2N,%edx
L8044:
	addl $-12,%esp
	pushl %edx
	call _color__1LMB
	addl $16,%esp
	addl $-12,%esp
	pushl %ebx
	call _y_max__UKMB
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $16,%esp
	addl $-8,%esp
	pushl %edx
	pushl %ebx
	call _line_v_until__YLNB
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-8,%esp
	pushl $0
	pushl %ebx
	call _line_h_until__NOMB
	addl $16,%esp
L7994:
	movl _parent_video__C2,%eax
	movl 84(%ebx),%edx
	pushl $1
	pushl $1
	pushl %edx
	pushl %ebx
	call _put_bitmap__to__W7NB
	addl $16,%esp
	cmpl $-1,76(%ebx)
	jne L8037
	addl $-12,%esp
	pushl %ebx
	call _x_max__FKMB
	movl %eax,%esi
	addl $-12,%esp
	pushl %ebx
	call _y_max__UKMB
	movl _color_back__O2N,%edx
	movl %eax,%ecx
	movl _parent_video__C2,%eax
	addl $32,%esp
	cmpl $16,(%eax)
	jne L8042
	addl $-8,%esp
	pushl %edx
	pushl %ecx
	pushl %esi
	pushl $0
	pushl $0
	pushl %ebx
	call _line__to__color__TROB
	jmp L8037
	.p2align 2
L8042:
	addl $-8,%esp
	pushl %edx
	pushl %ecx
	pushl %esi
	pushl $0
	pushl $0
	pushl %ebx
	call _line__to__color__TROB
L8037:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_draw__to__2HRB:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl _parent_video__C2,%eax
	movl 8(%ebp),%edi
	movl 24(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	movl 20(%ebp),%eax
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	pushl %edi
	call _clipping__to__UKRB
	addl $32,%esp
	movl _parent_video__C2,%eax
	movl 72(%edi),%edx
	addl $-12,%esp
	pushl %edx
	call _font_width__NNRB
	movl %eax,%ebx
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl _color_back__O2N,%edx
	movl %eax,%esi
	movl _parent_video__C2,%eax
	addl $32,%esp
	addl $-12,%esp
	pushl %edx
	call _color__CSRB
	addl $16,%esp
	addl $-12,%esp
	pushl %edi
	call _y_max__NSRB
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $16,%esp
	addl $-12,%esp
	pushl %edx
	pushl %esi
	pushl $0
	pushl $0
	pushl %edi
	call _rectangle_fill__to__ETRB
	addl $32,%esp
	cmpl $-1,76(%edi)
	jne L8085
	movl _parent_video__C2,%eax
	movl _color_dark__M2N,%edx
	jmp L8093
	.p2align 2
L8085:
	movl _parent_video__C2,%eax
	movl _black__4R,%edx
	movl _parent_video__C2,%eax
L8093:
	addl $-12,%esp
	pushl %edx
	call _color__CSRB
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl 72(%edi),%edx
	pushl $1
	pushl $1
	pushl %edx
	pushl %edi
	call _print__to__SVSB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	addl $-12,%esp
	pushl %edi
	call _y_max__NSRB
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $16,%esp
	addl $-4,%esp
	pushl %edx
	pushl %esi
	pushl %edi
	call _move_to__STRB
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-8,%esp
	pushl $0
	pushl %edi
	call _line_v_until__2BTB
	addl $16,%esp
	addl $-12,%esp
	pushl %edi
	call _x_max__ZGTB
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $16,%esp
	addl $-8,%esp
	pushl %edx
	pushl %edi
	call _line_h_until__HHTB
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl _color_light__N2N,%edx
	addl $-12,%esp
	pushl %edx
	call _color__CSRB
	addl $16,%esp
	addl $-12,%esp
	pushl %edi
	call _y_max__NSRB
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $16,%esp
	addl $-8,%esp
	pushl %edx
	pushl %edi
	call _line_v_until__2BTB
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-8,%esp
	pushl %esi
	pushl %edi
	call _line_h_until__HHTB
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl _color_back_light__P2N,%edx
	addl $-12,%esp
	pushl %edx
	call _color__CSRB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-12,%esp
	pushl %edi
	call _x_max__ZGTB
	movl %eax,%ebx
	addl $16,%esp
	addl $-12,%esp
	pushl %edi
	call _y_max__NSRB
	movl %eax,%edx
	movl _parent_video__C2,%eax
	subl $1,%ebx
	addl $16,%esp
	subl $1,%edx
	addl $-12,%esp
	pushl %edx
	pushl %ebx
	pushl $1
	movl -4(%ebp),%eax
	pushl %eax
	pushl %edi
	call _rectangle_fill__to__ETRB
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	addl $32,%esp
	movl %eax,%esi
	cmpl %esi,12(%ebp)
	jle L8128
	movl 12(%ebp),%esi
L8128:
	addl $-8,%esp
	pushl $1
	movl 16(%ebp),%eax
	pushl %eax
	call _max__2RJ
	movl %eax,-8(%ebp)
	addl $-12,%esp
	pushl %edi
	call _x_max__ZGTB
	movl 20(%ebp),%ebx
	addl $32,%esp
	subl $1,%eax
	cmpl %eax,%ebx
	jle L8135
	movl %eax,%ebx
L8135:
	addl $-12,%esp
	pushl %edi
	call _y_max__NSRB
	movl 24(%ebp),%edx
	addl $16,%esp
	subl $1,%eax
	cmpl %eax,%edx
	jle L8141
	movl %eax,%edx
L8141:
	movl _parent_video__C2,%eax
	addl $-12,%esp
	pushl %edx
	pushl %ebx
	movl -8(%ebp),%eax
	pushl %eax
	pushl %esi
	pushl %edi
	call _clipping__to__UKRB
	addl $32,%esp
	cmpl $2,76(%edi)
	je L8146
	movl _text_tmp__4ZN,%eax
	addl $-12,%esp
	pushl %eax
	call _clear__QPTB
	movl _text_tmp__4ZN,%eax
	addl $-8,%esp
	pushl %eax
	movl 84(%edi),%eax
	pushl %eax
	call _append_in__NQTB
	addl $32,%esp
L8146:
	cmpl $0,76(%edi)
	jne L8147
	movl _parent_video__C2,%eax
	movl _black__4R,%edx
	movl _parent_video__C2,%eax
	addl $-12,%esp
	pushl %edx
	call _color__CSRB
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl _text_tmp__4ZN,%edx
	addl $-12,%esp
	pushl %edx
	call _font_width__BXTB
	addl $16,%esp
	movl %eax,%ebx
	addl $-12,%esp
	pushl %edi
	call _x_max__ZGTB
	movl _text_tmp__4ZN,%ecx
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $16,%esp
	subl $2,%edx
	subl %ebx,%edx
	jmp L8185
	.p2align 2
L8147:
	movl _parent_video__C2,%eax
	movl _red__6R,%edx
	addl $-12,%esp
	pushl %edx
	call _color__CSRB
	addl $16,%esp
	cmpl $2,76(%edi)
	jne L8165
	movl 88(%edi),%eax
	addl $-4,%esp
	pushl %eax
	pushl $124
	movl _text_tmp__4ZN,%eax
	pushl %eax
	call _insert__to__O9TB
	movl _text_tmp__4ZN,%edx
	movl _parent_video__C2,%eax
	addl $16,%esp
	addl $-12,%esp
	pushl %edx
	call _font_width__BXTB
	addl $16,%esp
	movl %eax,%ebx
	addl $-12,%esp
	pushl %edi
	call _x_max__ZGTB
	movl _text_tmp__4ZN,%ecx
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $16,%esp
	subl $2,%edx
	subl %ebx,%edx
	pushl $1
	pushl %edx
	pushl %ecx
	pushl %edi
	call _print__to__D2TB
	addl $16,%esp
	movl 88(%edi),%ebx
	addl $-8,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	movl _text_tmp__4ZN,%eax
	pushl %eax
	call _remove__VEUB
	jmp L8160
	.p2align 2
L8165:
	movl _parent_video__C2,%eax
	movl _text_tmp__4ZN,%edx
	addl $-12,%esp
	pushl %edx
	call _font_width__BXTB
	addl $16,%esp
	movl %eax,%ebx
	addl $-12,%esp
	pushl %edi
	call _x_max__ZGTB
	movl _text_tmp__4ZN,%ecx
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $16,%esp
	subl $2,%edx
	subl %ebx,%edx
	cmpl $16,(%eax)
	jne L8183
L8185:
	pushl $1
	pushl %edx
	pushl %ecx
	pushl %edi
	call _print__to__D2TB
	jmp L8160
	.p2align 2
L8183:
	pushl $1
	pushl %edx
	pushl %ecx
	pushl %edi
	call _print__to__D2TB
L8160:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_draw__to__HEWB:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl _parent_video__C2,%eax
	movl 8(%ebp),%esi
	movl 24(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	movl 20(%ebp),%eax
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	pushl %esi
	call _clipping__to__4GWB
	addl $32,%esp
	movl _parent_video__C2,%eax
	movl 72(%esi),%edx
	addl $-12,%esp
	pushl %edx
	call _font_width__XJWB
	movl %eax,%ebx
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	movl _color_back__O2N,%edx
	movl _parent_video__C2,%eax
	addl $32,%esp
	addl $-12,%esp
	pushl %edx
	call _color__MOWB
	addl $16,%esp
	addl $-12,%esp
	pushl %esi
	call _y_max__XOWB
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $16,%esp
	addl $-12,%esp
	pushl %edx
	movl -4(%ebp),%eax
	pushl %eax
	pushl $0
	pushl $0
	pushl %esi
	call _rectangle_fill__to__OPWB
	addl $32,%esp
	cmpl $-1,76(%esi)
	jne L8226
	movl _parent_video__C2,%eax
	movl _color_dark__M2N,%edx
	jmp L8234
	.p2align 2
L8226:
	movl _parent_video__C2,%eax
	movl _black__4R,%edx
	movl _parent_video__C2,%eax
L8234:
	addl $-12,%esp
	pushl %edx
	call _color__MOWB
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl 72(%esi),%edx
	pushl $1
	pushl $1
	pushl %edx
	pushl %esi
	call _print__to__8RXB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-12,%esp
	pushl %esi
	call _y_max__XOWB
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $16,%esp
	addl $-4,%esp
	pushl %edx
	movl -4(%ebp),%eax
	pushl %eax
	pushl %esi
	call _move_to__2PWB
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-8,%esp
	pushl $0
	pushl %esi
	call _line_v_until__O8XB
	addl $16,%esp
	addl $-12,%esp
	pushl %esi
	call _x_max__LDYB
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $16,%esp
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call _line_h_until__3DYB
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl _color_light__N2N,%edx
	addl $-12,%esp
	pushl %edx
	call _color__MOWB
	addl $16,%esp
	addl $-12,%esp
	pushl %esi
	call _y_max__XOWB
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $16,%esp
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call _line_v_until__O8XB
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl -4(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call _line_h_until__3DYB
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl _color_back_light__P2N,%edx
	addl $-12,%esp
	pushl %edx
	call _color__MOWB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
	addl $-12,%esp
	pushl %esi
	call _x_max__LDYB
	movl %eax,%ebx
	addl $16,%esp
	addl $-12,%esp
	pushl %esi
	call _y_max__XOWB
	movl %eax,%edx
	movl _parent_video__C2,%eax
	subl $1,%ebx
	addl $16,%esp
	subl $1,%edx
	addl $-12,%esp
	pushl %edx
	pushl %ebx
	pushl $1
	pushl %edi
	pushl %esi
	call _rectangle_fill__to__OPWB
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	addl $32,%esp
	movl %eax,%edi
	cmpl %edi,12(%ebp)
	jle L8269
	movl 12(%ebp),%edi
L8269:
	addl $-8,%esp
	pushl $1
	movl 16(%ebp),%eax
	pushl %eax
	call _max__2RJ
	movl %eax,-8(%ebp)
	addl $-12,%esp
	pushl %esi
	call _x_max__LDYB
	movl 20(%ebp),%ebx
	addl $32,%esp
	subl $1,%eax
	cmpl %eax,%ebx
	jle L8276
	movl %eax,%ebx
L8276:
	addl $-12,%esp
	pushl %esi
	call _y_max__XOWB
	movl 24(%ebp),%edx
	addl $16,%esp
	subl $1,%eax
	cmpl %eax,%edx
	jle L8282
	movl %eax,%edx
L8282:
	movl _parent_video__C2,%eax
	addl $-12,%esp
	pushl %edx
	pushl %ebx
	movl -8(%ebp),%eax
	pushl %eax
	pushl %edi
	pushl %esi
	call _clipping__to__4GWB
	addl $32,%esp
	cmpl $0,76(%esi)
	jne L8287
	movl _parent_video__C2,%eax
	movl _black__4R,%edx
	addl $-12,%esp
	pushl %edx
	call _color__MOWB
	addl $16,%esp
	movl 84(%esi),%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl $2
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $32,%esp
	jmp L8331
	.p2align 2
L8287:
	movl _parent_video__C2,%eax
	movl _red__6R,%edx
	addl $-12,%esp
	pushl %edx
	call _color__MOWB
	addl $16,%esp
	cmpl $2,76(%esi)
	jne L8302
	movl 88(%esi),%eax
	addl $-4,%esp
	pushl %eax
	pushl $124
	movl 84(%esi),%eax
	pushl %eax
	call _insert__to__O9TB
	movl 84(%esi),%ecx
	movl 88(%esi),%edx
	movl _parent_video__C2,%eax
	addl $16,%esp
	addl $-8,%esp
	pushl %edx
	pushl %ecx
	call _font_width__size__JUYB
	movl %eax,%ebx
	addl $16,%esp
	addl $-12,%esp
	pushl %esi
	call _x_max__LDYB
	addl $16,%esp
	subl -4(%ebp),%eax
	subl $3,%eax
	cmpl %eax,%ebx
	jle L8305
	addl $-8,%esp
	addl $-12,%esp
	pushl $2
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
	addl $-12,%esp
	pushl %esi
	call _x_max__LDYB
	addl $16,%esp
	subl -4(%ebp),%eax
	subl $3,%eax
	subl %eax,%ebx
	movl %edi,%edx
	subl %ebx,%edx
	jmp L8317
	.p2align 2
L8305:
	addl $-8,%esp
	addl $-12,%esp
	pushl $2
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,%edx
	addl $32,%esp
L8317:
	movl _parent_video__C2,%eax
	movl 84(%esi),%ecx
	pushl $1
	pushl %edx
	pushl %ecx
	pushl %esi
	call _print__to__1MYB
	addl $16,%esp
	movl 88(%esi),%ebx
	addl $-8,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	movl 84(%esi),%eax
	pushl %eax
	call _remove__VEUB
	jmp L8297
	.p2align 2
L8302:
	movl 84(%esi),%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl $2
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $32,%esp
	cmpl $16,(%eax)
	jne L8329
L8331:
	pushl $1
	pushl %edx
	pushl %ebx
	pushl %esi
	call _print__to__1MYB
	jmp L8297
	.p2align 2
L8329:
	pushl $1
	pushl %edx
	pushl %ebx
	pushl %esi
	call _print__to__1MYB
L8297:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_draw__to__NU0B:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl 12(%ebp),%esi
	movl 16(%ebp),%ebx
	movl 20(%ebp),%ecx
	movl $0,-4(%ebp)
	movl _parent_video__C2,%eax
	movl 24(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	pushl %ecx
	pushl %ebx
	pushl %esi
	pushl %edi
	call _clipping__to__6X0B
	addl $32,%esp
	addl $-12,%esp
	addl $-12,%esp
	pushl %edi
	call _y_max__800B
	addl $16,%esp
	subl $16,%eax
	pushl %eax
	pushl $15
	pushl $16
	pushl $0
	pushl %edi
	call _draw_border_in__to__T10B
	addl $32,%esp
	cmpl $-1,76(%edi)
	je L8367
	addl $-12,%esp
	pushl %edi
	call _cursor_begin__6C2B
	movl %eax,%ebx
	addl $-12,%esp
	pushl %edi
	call _cursor_size__FI2B
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,-8(%ebp)
	addl $32,%esp
	addl $-12,%esp
	pushl %eax
	pushl $14
	pushl %ebx
	pushl $1
	pushl %edi
	call _draw_border_out__to__PK2B
	movl _color_back__O2N,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl -8(%ebp),%edx
	movl %eax,%ecx
	movl _parent_video__C2,%eax
	addl $32,%esp
	subl $1,%edx
	addl $-8,%esp
	pushl %esi
	pushl %edx
	pushl $13
	pushl %ecx
	pushl $2
	pushl %edi
	call _rectangle_fill__to__color__EN2B
	addl $32,%esp
	cmpl $17,%ebx
	jle L8381
	movl _color_back_light__P2N,%edx
	movl _parent_video__C2,%eax
	movl %ebx,%ecx
	subl $1,%ecx
	addl $-8,%esp
	pushl %edx
	pushl %ecx
	pushl $14
	pushl $17
	pushl $1
	pushl %edi
	call _rectangle_fill__to__color__EN2B
	addl $32,%esp
L8381:
	addl $-12,%esp
	pushl %edi
	call _y_max__800B
	addl $16,%esp
	subl $17,%eax
	cmpl %eax,-8(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -8(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L8405
	movl _color_back_light__P2N,%esi
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -8(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	addl $-12,%esp
	pushl %edi
	call _y_max__800B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $16,%esp
	subl $17,%edx
	cmpl $16,(%eax)
	jne L8403
	addl $-8,%esp
	pushl %esi
	pushl %edx
	pushl $14
	pushl %ebx
	jmp L8585
	.p2align 2
L8403:
	addl $-8,%esp
	pushl %esi
	pushl %edx
	pushl $14
	pushl %ebx
	jmp L8585
	.p2align 2
L8367:
	movl _color_back_light__P2N,%ebx
	addl $-12,%esp
	pushl %edi
	call _y_max__800B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $16,%esp
	subl $17,%edx
	addl $-8,%esp
	pushl %ebx
	pushl %edx
	pushl $14
	pushl $17
L8585:
	pushl $1
	pushl %edi
	call _rectangle_fill__to__color__EN2B
	addl $32,%esp
L8405:
	addl $-12,%esp
	pushl $15
	pushl $15
	pushl $0
	pushl $0
	pushl %edi
	call _draw_border_in__to__T10B
	addl $32,%esp
	testb $2,76(%edi)
	jne L8417
	addl $-12,%esp
	pushl $14
	pushl $14
	pushl $1
	pushl $1
	pushl %edi
	call _draw_border_out__to__PK2B
	movl _color_back__O2N,%edx
	movl _parent_video__C2,%eax
	addl $32,%esp
	cmpl $16,(%eax)
	jne L8428
	addl $-8,%esp
	pushl %edx
	pushl $13
	pushl $13
	pushl $2
	pushl $2
	jmp L8586
	.p2align 2
L8428:
	addl $-8,%esp
	pushl %edx
	pushl $13
	pushl $13
	pushl $2
	pushl $2
	jmp L8586
	.p2align 2
L8417:
	movl $1,-4(%ebp)
	movl _parent_video__C2,%eax
	movl _color_back__O2N,%edx
	addl $-8,%esp
	pushl %edx
	pushl $14
	pushl $14
	pushl $1
	pushl $1
L8586:
	pushl %edi
	call _rectangle_fill__to__color__EN2B
	addl $32,%esp
	movl 76(%edi),%eax
	testl $1,%eax
	jne L8438
	movl _parent_video__C2,%eax
	movl _black__4R,%edx
	jmp L8588
	.p2align 2
L8438:
	cmpl $-1,%eax
	jne L8446
	movl _parent_video__C2,%eax
	movl _color_dark__M2N,%edx
	jmp L8454
	.p2align 2
L8446:
	movl _parent_video__C2,%eax
	movl _red__6R,%edx
L8588:
	movl _parent_video__C2,%eax
L8454:
	addl $-12,%esp
	pushl %edx
	call _color__E20B
	addl $16,%esp
	movl -4(%ebp),%eax
	movl -4(%ebp),%esi
	movl _parent_video__C2,%edx
	negl %eax
	addl $7,%esi
	movl $5,%ecx
	subl %eax,%ecx
	movl %eax,-16(%ebp)
	addl $-4,%esp
	pushl %ecx
	pushl %esi
	pushl %edi
	call _poly_move_to__252B
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl $11,%ecx
	subl -16(%ebp),%ecx
	movl $9,%edx
	subl -16(%ebp),%edx
	addl $-4,%esp
	pushl %edx
	pushl %ecx
	pushl %edi
	call _poly_line_to__GA3B
	addl $16,%esp
	movl -4(%ebp),%ecx
	movl -4(%ebp),%edx
	movl _parent_video__C2,%eax
	addl $3,%ecx
	addl $9,%edx
	addl $-4,%esp
	pushl %edx
	pushl %ecx
	pushl %edi
	call _poly_line_to__GA3B
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-12,%esp
	pushl %edi
	call _poly_trace__5T3B
	addl $16,%esp
	movl $0,-4(%ebp)
	addl $-12,%esp
	addl $-12,%esp
	pushl %edi
	call _y_max__800B
	pushl %eax
	pushl $15
	addl $-12,%esp
	pushl %edi
	call _y_max__800B
	addl $16,%esp
	subl $15,%eax
	pushl %eax
	pushl $0
	pushl %edi
	call _draw_border_in__to__T10B
	addl $48,%esp
	testb $8,76(%edi)
	jne L8505
	addl $-12,%esp
	addl $-12,%esp
	pushl %edi
	call _y_max__800B
	addl $16,%esp
	subl $1,%eax
	pushl %eax
	pushl $14
	addl $-12,%esp
	pushl %edi
	call _y_max__800B
	addl $16,%esp
	subl $14,%eax
	pushl %eax
	pushl $1
	pushl %edi
	call _draw_border_out__to__PK2B
	movl _color_back__O2N,%esi
	addl $32,%esp
	addl $-12,%esp
	pushl %edi
	call _y_max__800B
	movl %eax,%ebx
	addl $16,%esp
	addl $-12,%esp
	pushl %edi
	call _y_max__800B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	subl $13,%ebx
	addl $16,%esp
	subl $2,%edx
	cmpl $16,(%eax)
	jne L8520
	addl $-8,%esp
	pushl %esi
	pushl %edx
	pushl $13
	pushl %ebx
	pushl $2
	jmp L8587
	.p2align 2
L8520:
	addl $-8,%esp
	pushl %esi
	pushl %edx
	pushl $13
	pushl %ebx
	pushl $2
	jmp L8587
	.p2align 2
L8505:
	movl $1,-4(%ebp)
	movl _color_back__O2N,%esi
	addl $-12,%esp
	pushl %edi
	call _y_max__800B
	movl %eax,%ebx
	addl $16,%esp
	addl $-12,%esp
	pushl %edi
	call _y_max__800B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	subl $14,%ebx
	addl $16,%esp
	subl $1,%edx
	addl $-8,%esp
	pushl %esi
	pushl %edx
	pushl $14
	pushl %ebx
	pushl $1
L8587:
	pushl %edi
	call _rectangle_fill__to__color__EN2B
	addl $32,%esp
	movl 76(%edi),%eax
	testl $4,%eax
	jne L8532
	movl _parent_video__C2,%eax
	movl _black__4R,%edx
	jmp L8589
	.p2align 2
L8532:
	cmpl $-1,%eax
	jne L8540
	movl _parent_video__C2,%eax
	movl _color_dark__M2N,%edx
	jmp L8548
	.p2align 2
L8540:
	movl _parent_video__C2,%eax
	movl _red__6R,%edx
L8589:
	movl _parent_video__C2,%eax
L8548:
	addl $-12,%esp
	pushl %edx
	call _color__E20B
	addl $16,%esp
	movl -4(%ebp),%ebx
	movl -4(%ebp),%eax
	addl $7,%eax
	movl %eax,-12(%ebp)
	addl $-12,%esp
	pushl %edi
	call _y_max__800B
	movl %eax,%esi
	movl -4(%ebp),%eax
	addl $16,%esp
	subl $6,%esi
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	negl %ebx
	addl $32,%esp
	movl %ebx,-16(%ebp)
	addl $-4,%esp
	pushl %edx
	movl -12(%ebp),%eax
	pushl %eax
	pushl %edi
	call _poly_move_to__252B
	addl $16,%esp
	movl $11,%ebx
	subl -16(%ebp),%ebx
	addl $-12,%esp
	pushl %edi
	call _y_max__800B
	movl %eax,%esi
	movl -4(%ebp),%eax
	addl $16,%esp
	subl $10,%esi
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $32,%esp
	addl $-4,%esp
	pushl %edx
	pushl %ebx
	pushl %edi
	call _poly_line_to__GA3B
	addl $16,%esp
	movl $3,%esi
	subl -16(%ebp),%esi
	addl $-12,%esp
	pushl %edi
	call _y_max__800B
	movl %eax,%ebx
	movl -4(%ebp),%eax
	addl $16,%esp
	subl $10,%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $32,%esp
	addl $-4,%esp
	pushl %edx
	pushl %esi
	pushl %edi
	call _poly_line_to__GA3B
	addl $16,%esp
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L8583
	addl $-12,%esp
	pushl %edi
	call _poly_trace__5T3B
	jmp L8584
	.p2align 2
L8583:
	addl $-12,%esp
	pushl %edi
	call _poly_trace__5T3B
L8584:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_draw__to__PU6B:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%edi
	movl 16(%ebp),%ebx
	movl 20(%ebp),%ecx
	movl _parent_video__C2,%eax
	movl 24(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	pushl %ecx
	pushl %ebx
	pushl %edi
	pushl %esi
	call _clipping__to__HW6B
	addl $32,%esp
	movl _parent_video__C2,%eax
	addl $-12,%esp
	pushl $6579350
	call _color__5Y6B
	addl $16,%esp
	movl _parent_video__C2,%eax
	pushl $0
	pushl $15
	pushl $0
	pushl %esi
	call _line_v__until__SZ6B
	addl $16,%esp
	movl 80(%esi),%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call _line_h_until__TW7B
	addl $16,%esp
	movl 80(%esi),%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $15
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $32,%esp
	addl $-4,%esp
	pushl $15
	pushl %edx
	pushl %esi
	call _line_to__3J8B
	addl $16,%esp
	addl $-12,%esp
	pushl %esi
	call _x_max__FU7B
	movl %eax,%ebx
	addl $-12,%esp
	pushl %esi
	call _y_max__2R7B
	movl %eax,%ecx
	movl _parent_video__C2,%eax
	addl $32,%esp
	movl _black__4R,%edx
	movl _parent_video__C2,%eax
	addl $-8,%esp
	pushl %edx
	pushl %ecx
	pushl %ebx
	pushl $16
	pushl $0
	pushl %esi
	call _rectangle__to__color__4H9B
	addl $32,%esp
	addl $-12,%esp
	pushl %esi
	call _y_max__2R7B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $16,%esp
	subl $3,%edx
	addl $-12,%esp
	pushl $4473974
	pushl $19
	pushl %edx
	pushl $3
	pushl %esi
	call _line_v__until__color__ZQ9B
	addl $32,%esp
	addl $-12,%esp
	pushl %esi
	call _x_max__FU7B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $16,%esp
	subl $3,%edx
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call _line_h_until__TW7B
	addl $16,%esp
	addl $-12,%esp
	pushl %esi
	call _y_max__2R7B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $16,%esp
	subl $3,%edx
	addl $-4,%esp
	pushl $13158655
	pushl %edx
	pushl %esi
	call _line_v_until__color__IS9B
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-8,%esp
	pushl $3
	pushl %esi
	call _line_h_until__TW7B
	addl $16,%esp
	addl $-12,%esp
	pushl %esi
	call _x_max__FU7B
	movl %eax,%ebx
	addl $16,%esp
	addl $-12,%esp
	pushl %esi
	call _y_max__2R7B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	subl $1,%ebx
	addl $16,%esp
	subl $1,%edx
	addl $-8,%esp
	pushl $6579350
	pushl %edx
	pushl %ebx
	pushl $17
	pushl $1
	pushl %esi
	call _rectangle__to__color__4H9B
	addl $32,%esp
	addl $-12,%esp
	pushl %esi
	call _x_max__FU7B
	movl %eax,%ebx
	addl $16,%esp
	addl $-12,%esp
	pushl %esi
	call _y_max__2R7B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	subl $2,%ebx
	addl $16,%esp
	subl $2,%edx
	addl $-12,%esp
	pushl %edx
	pushl %ebx
	pushl $18
	pushl $2
	pushl %esi
	call _rectangle__to__QI9B
	addl $32,%esp
	movl _parent_video__C2,%eax
	addl $-12,%esp
	pushl $13158655
	call _color__5Y6B
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl $1
	pushl $1
	pushl %esi
	call _poly_move_to__SV9B
	addl $16,%esp
	movl 80(%esi),%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $32,%esp
	addl $-4,%esp
	pushl $1
	pushl %edx
	pushl %esi
	call _poly_line_to__XZ9B
	addl $16,%esp
	movl 80(%esi),%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl $15
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $32,%esp
	addl $-4,%esp
	pushl $15
	pushl %edx
	pushl %esi
	call _poly_line_to__XZ9B
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl $15
	pushl $1
	pushl %esi
	call _poly_line_to__XZ9B
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-12,%esp
	pushl %esi
	call _poly_trace__KHAC
	addl $16,%esp
	cmpl $0,72(%esi)
	jne L8682
	movl _parent_video__C2,%eax
	movl _black__4R,%edx
	jmp L8698
	.p2align 2
L8682:
	movl _parent_video__C2,%eax
	movl _red__6R,%edx
L8698:
	movl _parent_video__C2,%eax
	addl $-12,%esp
	pushl %edx
	call _color__5Y6B
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl 76(%esi),%edx
	cmpl $16,(%eax)
	jne L8696
	pushl $-1
	pushl $3
	pushl %edx
	pushl %esi
	call _print__to__8EBC
	jmp L8697
	.p2align 2
L8696:
	pushl $-1
	pushl $3
	pushl %edx
	pushl %esi
	call _print__to__8EBC
L8697:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_light__XHCC:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	movl $237,%eax
	pushl %esi
	pushl %ebx
	movb %al,-4(%ebp)
	addl $-8,%esp
	movb _KEYBOARD__+20,%dl
	movl %edx,%eax
	shrl $3,%eax
	andl $4,%eax
	pushl %eax
	addl $-8,%esp
	movl %edx,%eax
	shrl $5,%eax
	andl $2,%eax
	pushl %eax
	movl %edx,%eax
	shrl $7,%eax
	andl $1,%eax
	pushl %eax
	call ___infix_or__5QK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_or__5QK
	movl %eax,%esi
	.p2align 2
L8721:
	movl $100,%ecx
/APP
	movw %cx,%dx 
	inb %dx,%al 
	movw %ax,%cx  
/NO_APP
	testb $2,%cl
	jne L8721
	movl $96,%ecx
	movb -4(%ebp),%bl
/APP
	movw %cx,%dx 
      movb %bl,%al     
      outb %al,%dx  
	.p2align 2
/NO_APP
L8735:
	movl $100,%ecx
/APP
	movw %cx,%dx 
	inb %dx,%al 
	movw %ax,%cx  
/NO_APP
	xorl $-1,%ecx
	testb $1,%cl
	jne L8735
	movl $96,%ecx
/APP
	movw %cx,%dx 
      movb %si,%al     
      outb %al,%dx  
	.p2align 2
/NO_APP
L8748:
	movl $100,%ecx
/APP
	movw %cx,%dx 
	inb %dx,%al 
	movw %ax,%cx  
/NO_APP
	xorl $-1,%ecx
	testb $1,%cl
	jne L8748
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_object__SEFC:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	movl 16(%ebp),%esi
	movl $0,-4(%ebp)
	addl $-4,%esp
	pushl %esi
	pushl %edi
	movl 8(%ebp),%eax
	pushl %eax
	call _get_clip__66J
	addl $16,%esp
	testl %eax,%eax
	je L8773
	movl 16(%eax),%eax
	cmpl 8(%ebp),%eax
	je L8791
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L8776
	jmp *L8788(,%edx,4)
	.p2align 2
L8788:
	.long L8787
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8784
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8776
	.long L8781
	.long L8778
	.long L8785
	.long L8776
	.long L8779
	.long L8783
	.long L8780
	.long L8777
	.long L8786
	.long L8782
	.p2align 2
L8777:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__HKEC
	jmp L8792
	.p2align 2
L8778:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__SLEC
	jmp L8792
	.p2align 2
L8779:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__6MEC
	jmp L8792
	.p2align 2
L8780:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__NOEC
	jmp L8792
	.p2align 2
L8781:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__5PEC
	jmp L8792
	.p2align 2
L8782:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__ASEC
	jmp L8792
	.p2align 2
L8783:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__YTEC
	jmp L8792
	.p2align 2
L8784:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__NVEC
	jmp L8792
	.p2align 2
L8785:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__0AFC
	jmp L8792
	.p2align 2
L8786:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__VCFC
	jmp L8792
	.p2align 2
L8787:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__SEFC
L8792:
	movl %eax,%ebx
L8776:
	movl %ebx,-4(%ebp)
	testl %ebx,%ebx
	jne L8773
L8791:
	movl 8(%ebp),%eax
	movl %eax,-4(%ebp)
L8773:
	leal -24(%ebp),%esp
	movl -4(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_append_in__NQTB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	testl %eax,%eax
	jne L8796
	addl $-8,%esp
	pushl $48
	movl 12(%ebp),%eax
	pushl %eax
	call _extend__RKCB
	jmp L8799
	.p2align 2
L8796:
	testl %eax,%eax
	jle L8800
	movl %eax,%esi
	jmp L8803
	.p2align 2
L8800:
	addl $-8,%esp
	pushl $45
	movl 12(%ebp),%edx
	movl %eax,%esi
	negl %esi
	pushl %edx
	call _extend__RKCB
	addl $16,%esp
L8803:
	movl 12(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	movl 4(%eax),%ebx
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
	testl %esi,%esi
	je L8828
	movl $10,%ebx
	.p2align 2
L8811:
	addl $-8,%esp
	addl $-12,%esp
	addl $-8,%esp
	pushl $10
	pushl %esi
	call ___infix_mod__3MCB
	pushl %eax
	call _digit__RNCB
	movsbl %al,%eax
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	call _extend__RKCB
	movl %esi,%eax
	cltd
	idivl %ebx
	addl $48,%esp
	movl %eax,%esi
	testl %esi,%esi
	jne L8811
L8828:
	movl 12(%ebp),%edx
	movl 4(%edx),%esi
	jmp L8818
	.p2align 2
L8820:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	movl 12(%ebp),%eax
	pushl %eax
	call _swap__with__9SCB
	addl $16,%esp
	subl $1,%esi
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
L8818:
	cmpl %esi,%edi
	setg %bl
	addl $-8,%esp
	pushl %esi
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L8820
L8799:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_integer__W3TC:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $1,-8(%ebp)
	movl -8(%ebp),%edx
	movl 8(%ebp),%eax
	xorl %esi,%esi
	movb $0,-1(%ebp)
	xorl %edi,%edi
	cmpl 4(%eax),%edx
	jg L8885
	.p2align 2
L8833:
	movl -8(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _item__UF9
	movb %al,%bl
	addl $16,%esp
	testl %edi,%edi
	jne L8848
	cmpb $32,%bl
	je L8876
	cmpb $9,%bl
	je L8876
	cmpb $10,%bl
	je L8876
	cmpb $13,%bl
	je L8876
	testb %bl,%bl
	je L8876
	cmpb $12,%bl
	je L8876
	cmpb $11,%bl
	je L8876
	cmpb $43,%bl
	sete %al
	testb %al,%al
	je L8839
	movl $1,%edi
L8839:
	testb %al,%al
	jne L8876
	cmpb $45,%bl
	jne L8843
	movb $1,-1(%ebp)
	movl $1,%edi
	jmp L8876
	.p2align 2
L8843:
	addl $-12,%esp
	movsbl %bl,%eax
	pushl %eax
	call _decimal_value__97FC
	movl %eax,%esi
	addl $16,%esp
	movl $2,%edi
	jmp L8876
	.p2align 2
L8848:
	cmpl $1,%edi
	sete -2(%ebp)
	cmpb $0,-2(%ebp)
	je L8850
	addl $-12,%esp
	movsbl %bl,%eax
	pushl %eax
	call _decimal_value__97FC
	movl %eax,%esi
	addl $16,%esp
	cmpb $0,-1(%ebp)
	je L8851
	negl %esi
L8851:
	movl $2,%edi
L8850:
	cmpb $0,-2(%ebp)
	jne L8876
	cmpl $2,%edi
	sete -4(%ebp)
	cmpb $0,-4(%ebp)
	je L8858
	movb $0,-3(%ebp)
	addl $-12,%esp
	movsbl %bl,%ebx
	pushl %ebx
	call ___infix_greater_equal__5BGC
	addl $16,%esp
	testb %al,%al
	je L8859
	addl $-12,%esp
	pushl %ebx
	call ___infix_less_equal__5CGC
	movb %al,-3(%ebp)
	addl $16,%esp
L8859:
	cmpb $0,-3(%ebp)
	je L8860
	cmpb $0,-1(%ebp)
	je L8861
	addl $-8,%esp
	pushl %esi
	pushl $10
	call ___infix_mul__EIG
	movl %eax,%esi
	addl $-12,%esp
	pushl %ebx
	call _decimal_value__97FC
	addl $32,%esp
	subl %eax,%esi
	jmp L8858
	.p2align 2
L8861:
	addl $-8,%esp
	pushl %esi
	pushl $10
	call ___infix_mul__EIG
	movl %eax,%esi
	addl $-12,%esp
	pushl %ebx
	call _decimal_value__97FC
	addl $32,%esp
	addl %eax,%esi
	jmp L8858
	.p2align 2
L8860:
	movl $3,%edi
L8858:
	cmpb $0,-4(%ebp)
	jne L8876
	cmpl $3,%edi
	jne L8876
	movl 8(%ebp),%eax
	movl 4(%eax),%eax
	movl %eax,-8(%ebp)
L8876:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -8(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-8(%ebp)
	addl $32,%esp
	cmpl 4(%edx),%eax
	jle L8833
L8885:
	leal -40(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_send__D4TC:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	xorl %ebx,%ebx
	movb _gui_p_end__JXL,%bl
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__VRK
	andl $255,%eax
	pushl %eax
	pushl %ebx
	call ___infix_sub__ASK
	movb %al,%bl
	addl $32,%esp
	andb $15,%bl
	cmpb _gui_p_beg__IXL,%bl
	je L8891
	addl $-8,%esp
	xorl %eax,%eax
	movb _gui_p_end__JXL,%al
	pushl %eax
	movl _gui_buffer_event__HXL,%eax
	pushl %eax
	call _item__HXGC
	movl %eax,%edx
	movl 8(%ebp),%eax
	movl %eax,4(%edx)
	movl 12(%ebp),%eax
	movl %eax,(%edx)
	movb %bl,_gui_p_end__JXL
	addl $-12,%esp
	addl $-8,%esp
	xorl %eax,%eax
	movb _gui_p_beg__IXL,%al
	pushl %eax
	movl _gui_buffer_event__HXL,%eax
	pushl %eax
	call _item__HXGC
	pushl %eax
	call _receive__L0GC
	addl $48,%esp
	xorl %ebx,%ebx
	movb _gui_p_beg__IXL,%bl
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__VRK
	andl $255,%eax
	pushl %eax
	pushl %ebx
	call ___infix_sub__ASK
	andb $15,%al
	movb %al,_gui_p_beg__IXL
L8891:
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_send__AEKC:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	xorl %ebx,%ebx
	movb _gui_p_end__JXL,%bl
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__VRK
	andl $255,%eax
	pushl %eax
	pushl %ebx
	call ___infix_sub__ASK
	movb %al,%bl
	addl $32,%esp
	andb $15,%bl
	cmpb _gui_p_beg__IXL,%bl
	je L8915
	addl $-8,%esp
	xorl %eax,%eax
	movb _gui_p_end__JXL,%al
	pushl %eax
	movl _gui_buffer_event__HXL,%eax
	pushl %eax
	call _item__HXGC
	movl %eax,%edx
	movl 8(%ebp),%eax
	movl %eax,4(%edx)
	movl 12(%ebp),%eax
	movl %eax,(%edx)
	movb %bl,_gui_p_end__JXL
	addl $-12,%esp
	addl $-8,%esp
	xorl %eax,%eax
	movb _gui_p_beg__IXL,%al
	pushl %eax
	movl _gui_buffer_event__HXL,%eax
	pushl %eax
	call _item__HXGC
	pushl %eax
	call _receive__L0GC
	addl $48,%esp
	xorl %ebx,%ebx
	movb _gui_p_beg__IXL,%bl
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__VRK
	andl $255,%eax
	pushl %eax
	pushl %ebx
	call ___infix_sub__ASK
	andb $15,%al
	movb %al,_gui_p_beg__IXL
L8915:
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_send__HMKC:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	xorl %ebx,%ebx
	movb _gui_p_end__JXL,%bl
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__VRK
	andl $255,%eax
	pushl %eax
	pushl %ebx
	call ___infix_sub__ASK
	movb %al,%bl
	addl $32,%esp
	andb $15,%bl
	cmpb _gui_p_beg__IXL,%bl
	je L8946
	addl $-8,%esp
	xorl %eax,%eax
	movb _gui_p_end__JXL,%al
	pushl %eax
	movl _gui_buffer_event__HXL,%eax
	pushl %eax
	call _item__HXGC
	movl %eax,%edx
	movl 8(%ebp),%eax
	movl %eax,4(%edx)
	movl 12(%ebp),%eax
	movl %eax,(%edx)
	movb %bl,_gui_p_end__JXL
	addl $-12,%esp
	addl $-8,%esp
	xorl %eax,%eax
	movb _gui_p_beg__IXL,%al
	pushl %eax
	movl _gui_buffer_event__HXL,%eax
	pushl %eax
	call _item__HXGC
	pushl %eax
	call _receive__L0GC
	addl $48,%esp
	xorl %ebx,%ebx
	movb _gui_p_beg__IXL,%bl
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__VRK
	andl $255,%eax
	pushl %eax
	pushl %ebx
	call ___infix_sub__ASK
	andb $15,%al
	movb %al,_gui_p_beg__IXL
L8946:
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_send__RQKC:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	xorl %ebx,%ebx
	movb _gui_p_end__JXL,%bl
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__VRK
	andl $255,%eax
	pushl %eax
	pushl %ebx
	call ___infix_sub__ASK
	movb %al,%bl
	addl $32,%esp
	andb $15,%bl
	cmpb _gui_p_beg__IXL,%bl
	je L8956
	addl $-8,%esp
	xorl %eax,%eax
	movb _gui_p_end__JXL,%al
	pushl %eax
	movl _gui_buffer_event__HXL,%eax
	pushl %eax
	call _item__HXGC
	movl %eax,%edx
	movl 8(%ebp),%eax
	movl %eax,4(%edx)
	movl 12(%ebp),%eax
	movl %eax,(%edx)
	movb %bl,_gui_p_end__JXL
	addl $-12,%esp
	addl $-8,%esp
	xorl %eax,%eax
	movb _gui_p_beg__IXL,%al
	pushl %eax
	movl _gui_buffer_event__HXL,%eax
	pushl %eax
	call _item__HXGC
	pushl %eax
	call _receive__L0GC
	addl $48,%esp
	xorl %ebx,%ebx
	movb _gui_p_beg__IXL,%bl
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__VRK
	andl $255,%eax
	pushl %eax
	pushl %ebx
	call ___infix_sub__ASK
	andb $15,%al
	movb %al,_gui_p_beg__IXL
L8956:
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_move__AVKC:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl $0,-28(%ebp)
	movl $0,-20(%ebp)
	movl $0,-24(%ebp)
	movl $0,-16(%ebp)
	xorl %edi,%edi
	movl $0,-8(%ebp)
	movl $0,-12(%ebp)
	movl $0,-4(%ebp)
	movl 56(%esi),%ebx
	testl %ebx,%ebx
	je L8971
	movl 12(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-4(%ebp)
	movl 16(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-12(%ebp)
	movl 20(%ebx),%eax
	movl (%eax),%eax
	movl %eax,-8(%ebp)
	movl 24(%ebx),%eax
	movl (%eax),%edi
	decl %edi
L8971:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	pushl %esi
	call _sub_move__7YKC
	addl $16,%esp
	addl $-12,%esp
	pushl %esi
	call _clip_next_child__MW5B
	movl 40(%esi),%edx
	addl $16,%esp
	testl %edx,%edx
	je L8981
	movl (%edx),%eax
	cmpl $28,%eax
	je L8975
	ja L8976
	cmpl $17,%eax
	je L8977
	jmp L8981
	.p2align 2
L8976:
	cmpl $78,%eax
	je L8979
	jmp L8981
	.p2align 2
L8975:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__MEF
	jmp L9013
	.p2align 2
L8977:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__Z0I
	jmp L9013
	.p2align 2
L8979:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__YW5B
L9013:
	addl $16,%esp
L8981:
	movl 56(%esi),%edx
	testl %edx,%edx
	je L8982
	movl 12(%edx),%eax
	movl (%eax),%eax
	movl %eax,-16(%ebp)
	movl 16(%edx),%eax
	movl (%eax),%eax
	movl %eax,-24(%ebp)
	movl 20(%edx),%eax
	movl (%eax),%eax
	movl %eax,-20(%ebp)
	movl 24(%edx),%eax
	movl (%eax),%eax
	decl %eax
	movl %eax,-28(%ebp)
L8982:
	testl %ebx,%ebx
	je L9008
	testl %edx,%edx
	je L8985
	movl 12(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _abs__NTPC
	addl $16,%esp
	cmpl 12(%esi),%eax
	jg L8987
	movl 16(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _abs__NTPC
	addl $16,%esp
	cmpl 8(%esi),%eax
	jle L8986
L8987:
	addl $-12,%esp
	pushl %edi
	movl -12(%ebp),%eax
	pushl %eax
	movl -8(%ebp),%eax
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	pushl %esi
	call _redraw__to__GVPC
	movl -28(%ebp),%eax
	addl $32,%esp
	addl $-12,%esp
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	jmp L9014
	.p2align 2
L8986:
	movl -28(%ebp),%eax
	addl $-12,%esp
	cmpl %eax,%edi
	jle L8992
	movl %edi,%eax
L8992:
	pushl %eax
	movl -24(%ebp),%eax
	cmpl %eax,-12(%ebp)
	jle L8996
	movl -12(%ebp),%eax
L8996:
	pushl %eax
	movl -8(%ebp),%eax
	cmpl -20(%ebp),%eax
	jle L9000
	movl -20(%ebp),%eax
L9000:
	pushl %eax
	movl -4(%ebp),%eax
	cmpl -16(%ebp),%eax
	jle L9004
L9014:
	movl -16(%ebp),%eax
L9004:
	pushl %eax
	pushl %esi
	call _redraw__to__GVPC
	jmp L9007
	.p2align 2
L8985:
	addl $-12,%esp
	pushl %edi
	movl -12(%ebp),%eax
	pushl %eax
	movl -8(%ebp),%eax
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	pushl %esi
	call _redraw__to__GVPC
	movb $1,%al
	addl $32,%esp
	jmp L9009
	.p2align 2
L9008:
	movb $0,%al
L9009:
	testb %al,%al
	jne L9007
	cmpl $0,56(%esi)
	je L9007
	movl -28(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	movl -16(%ebp),%eax
	pushl %eax
	pushl %esi
	call _redraw__to__GVPC
L9007:
	leal -56(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_y_relative__DHQC:
	pushl %ebp
	movl %esp,%ebp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%eax),%esi
	movl 4(%eax),%eax
	movl (%eax),%ecx
	addl $-17,%ecx
	cmpl $70,%ecx
	ja L9016
	jmp *L9029(,%ecx,4)
	.p2align 2
L9029:
	.long L9028
	.long L9016
	.long L9016
	.long L9017
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9028
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9016
	.long L9028
	.long L9028
	.long L9028
	.long L9016
	.long L9028
	.long L9028
	.long L9028
	.long L9028
	.long L9027
	.long L9028
	.p2align 2
L9017:
	xorl %edx,%edx
	jmp L9016
	.p2align 2
L9027:
L9028:
	movl %eax,%edx
L9016:
	movl (%edx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L9031
	jmp *L9043(,%eax,4)
	.p2align 2
L9043:
	.long L9042
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9039
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9031
	.long L9042
	.long L9042
	.long L9042
	.long L9031
	.long L9042
	.long L9042
	.long L9042
	.long L9042
	.long L9041
	.long L9042
	.p2align 2
L9039:
	movl 64(%edx),%ebx
	jmp L9031
	.p2align 2
L9041:
L9042:
	movl 68(%edx),%ebx
L9031:
	subl %ebx,%esi
	movl %esi,%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_cursor_begin__6C2B:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%eax
	addl $-12,%esp
	addl $-8,%esp
	movl 8(%eax),%ebx
	movl 88(%eax),%edx
	addl $-34,%ebx
	pushl %edx
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call _count__WF2B
	addl $16,%esp
	pushl %eax
	addl $-12,%esp
	pushl %ebx
	call _to_real_16_16__7E2B
	addl $16,%esp
	pushl %eax
	call ___infix_div_diese__IG2B
	addl $16,%esp
	pushl %eax
	call ___infix_mul_diese__AH2B
	pushl %eax
	call _to_integer__RH2B
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $17
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_cursor_size__FI2B:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edx
	addl $-12,%esp
	addl $-8,%esp
	movl 8(%edx),%eax
	leal -34(%eax),%edi
	pushl %eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call _count__WF2B
	addl $16,%esp
	pushl %eax
	addl $-12,%esp
	pushl %edi
	call _to_real_16_16__7E2B
	addl $16,%esp
	pushl %eax
	call ___infix_div_diese__IG2B
	addl $16,%esp
	pushl %eax
	call ___infix_mul_diese__AH2B
	pushl %eax
	call _to_integer__RH2B
	movl %eax,%esi
	addl $32,%esp
	cmpl %edi,%esi
	setg %bl
	addl $-8,%esp
	pushl %edi
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	je L9068
	movl %edi,%esi
	subl $1,%esi
L9068:
	leal -24(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_send__ZWQC:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	xorl %ebx,%ebx
	movb _gui_p_end__JXL,%bl
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__VRK
	andl $255,%eax
	pushl %eax
	pushl %ebx
	call ___infix_sub__ASK
	movb %al,%bl
	addl $32,%esp
	andb $15,%bl
	cmpb _gui_p_beg__IXL,%bl
	je L9094
	addl $-8,%esp
	xorl %eax,%eax
	movb _gui_p_end__JXL,%al
	pushl %eax
	movl _gui_buffer_event__HXL,%eax
	pushl %eax
	call _item__HXGC
	movl %eax,%edx
	movl 8(%ebp),%eax
	movl %eax,4(%edx)
	movl 12(%ebp),%eax
	movl %eax,(%edx)
	movb %bl,_gui_p_end__JXL
	addl $-12,%esp
	addl $-8,%esp
	xorl %eax,%eax
	movb _gui_p_beg__IXL,%al
	pushl %eax
	movl _gui_buffer_event__HXL,%eax
	pushl %eax
	call _item__HXGC
	pushl %eax
	call _receive__L0GC
	addl $48,%esp
	xorl %ebx,%ebx
	movb _gui_p_beg__IXL,%bl
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__VRK
	andl $255,%eax
	pushl %eax
	pushl %ebx
	call ___infix_sub__ASK
	andb $15,%al
	movb %al,_gui_p_beg__IXL
L9094:
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_send__O5QC:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	xorl %ebx,%ebx
	movb _gui_p_end__JXL,%bl
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__VRK
	andl $255,%eax
	pushl %eax
	pushl %ebx
	call ___infix_sub__ASK
	movb %al,%bl
	addl $32,%esp
	andb $15,%bl
	cmpb _gui_p_beg__IXL,%bl
	je L9106
	addl $-8,%esp
	xorl %eax,%eax
	movb _gui_p_end__JXL,%al
	pushl %eax
	movl _gui_buffer_event__HXL,%eax
	pushl %eax
	call _item__HXGC
	movl %eax,%edx
	movl 8(%ebp),%eax
	movl %eax,4(%edx)
	movl 12(%ebp),%eax
	movl %eax,(%edx)
	movb %bl,_gui_p_end__JXL
	addl $-12,%esp
	addl $-8,%esp
	xorl %eax,%eax
	movb _gui_p_beg__IXL,%al
	pushl %eax
	movl _gui_buffer_event__HXL,%eax
	pushl %eax
	call _item__HXGC
	pushl %eax
	call _receive__L0GC
	addl $48,%esp
	xorl %ebx,%ebx
	movb _gui_p_beg__IXL,%bl
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__VRK
	andl $255,%eax
	pushl %eax
	pushl %ebx
	call ___infix_sub__ASK
	andb $15,%al
	movb %al,_gui_p_beg__IXL
L9106:
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_send__QQTC:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	xorl %ebx,%ebx
	movb _gui_p_end__JXL,%bl
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__VRK
	andl $255,%eax
	pushl %eax
	pushl %ebx
	call ___infix_sub__ASK
	movb %al,%bl
	addl $32,%esp
	andb $15,%bl
	cmpb _gui_p_beg__IXL,%bl
	je L9116
	addl $-8,%esp
	xorl %eax,%eax
	movb _gui_p_end__JXL,%al
	pushl %eax
	movl _gui_buffer_event__HXL,%eax
	pushl %eax
	call _item__HXGC
	movl %eax,%edx
	movl 8(%ebp),%eax
	movl %eax,4(%edx)
	movl 12(%ebp),%eax
	movl %eax,(%edx)
	movb %bl,_gui_p_end__JXL
	addl $-12,%esp
	addl $-8,%esp
	xorl %eax,%eax
	movb _gui_p_beg__IXL,%al
	pushl %eax
	movl _gui_buffer_event__HXL,%eax
	pushl %eax
	call _item__HXGC
	pushl %eax
	call _receive__L0GC
	addl $48,%esp
	xorl %ebx,%ebx
	movb _gui_p_beg__IXL,%bl
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__VRK
	andl $255,%eax
	pushl %eax
	pushl %ebx
	call ___infix_sub__ASK
	andb $15,%al
	movb %al,_gui_p_beg__IXL
L9116:
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_remove__VEUB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl $0
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
	testl %edi,%edi
	jle L9129
	movl 4(%esi),%eax
	movl %eax,-4(%ebp)
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	jmp L9145
	.p2align 2
L9136:
	addl $-4,%esp
	movl %ebx,%eax
	subl %edi,%eax
	pushl %eax
	addl $-8,%esp
	pushl %ebx
	pushl %esi
	call _item__UF9
	addl $16,%esp
	movsbl %al,%eax
	pushl %eax
	pushl %esi
	call _put__to__6G9
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
L9145:
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl -4(%ebp),%ebx
	jle L9136
	subl %edi,4(%esi)
L9129:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_add_last__GDG:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	addl $-12,%esp
	pushl %esi
	call _count__NEG
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 8(%esi),%ebx
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 4(%esi),%edx
	movl %eax,%ecx
	addl $32,%esp
	movl %edx,%eax
	subl $1,%eax
	cmpl %eax,%ecx
	jg L9247
	movl 8(%esi),%ebx
	jmp L9269
	.p2align 2
L9247:
	testl %edx,%edx
	jne L9259
	addl $-12,%esp
	pushl $2
	call _calloc__TUF
	movl %eax,(%esi)
	addl $16,%esp
	movl $2,4(%esi)
	movl $0,8(%esi)
	jmp L9258
	.p2align 2
L9259:
	addl $-8,%esp
	pushl %edx
	pushl $2
	call ___infix_mul__EIG
	addl $16,%esp
	movl %eax,%ebx
	addl $-4,%esp
	pushl %ebx
	movl 4(%esi),%eax
	pushl %eax
	movl (%esi),%eax
	pushl %eax
	call _realloc__with__TIG
	movl %ebx,4(%esi)
	movl 8(%esi),%ebx
	movl %eax,(%esi)
	addl $16,%esp
L9269:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	movl %eax,8(%esi)
L9258:
	movl 8(%esi),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	movl (%esi),%eax
	pushl %eax
	call _put__to__LMH
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_resize__TAP:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	movl 8(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	movl 8(%eax),%ebx
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	cmpl %eax,%edi
	jle L9288
	movl 8(%ebp),%edx
	cmpl $0,4(%edx)
	jne L9293
	addl $-12,%esp
	pushl %edi
	call _calloc__TUF
	movl 8(%ebp),%edx
	movl %eax,(%edx)
	movl %edi,4(%edx)
	movb $1,%al
	addl $16,%esp
	jmp L9294
	.p2align 2
L9293:
	movb $0,%al
L9294:
	movl %edi,-16(%ebp)
	subl $1,-16(%ebp)
	testb %al,%al
	jne L9326
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 4(%edx),%eax
	cmpl %edi,%eax
	setg %bl
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L9326
	movl 8(%ebp),%eax
	movl 4(%eax),%esi
	.p2align 2
L9305:
	addl %esi,%esi
	cmpl %edi,%esi
	setg %bl
	addl $-8,%esp
	pushl %edi
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L9305
	movl 8(%ebp),%edx
	addl $-4,%esp
	movl (%edx),%ebx
	movl 4(%edx),%eax
	movl %eax,-4(%ebp)
	call _pointer_size__TWF
	imull %esi,%eax
	pushl %eax
	call _pointer_size__TWF
	imull -4(%ebp),%eax
	pushl %eax
	pushl %ebx
	call _realloc__size__to__TLG
	movl -4(%ebp),%ebx
	movl %eax,-8(%ebp)
	addl $16,%esp
	movl %esi,%edi
	subl $1,%edi
	jmp L9317
	.p2align 2
L9319:
	addl $-8,%esp
	pushl %ebx
	movl -8(%ebp),%edx
	pushl %edx
	call _put__to__HYF
	addl $-8,%esp
	addl $16,%esp
	pushl $1
	pushl %ebx
	call ___infix_add__Q5B
	movl %eax,%ebx
	addl $16,%esp
L9317:
	addl $-8,%esp
	pushl %edi
	pushl %ebx
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	jne L9319
	movl -8(%ebp),%edx
	movl 8(%ebp),%eax
	movl %edx,(%eax)
	movl %esi,4(%eax)
	jmp L9326
	.p2align 2
L9288:
	movl 8(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	movl 8(%eax),%ebx
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	movl %edi,-16(%ebp)
	subl $1,-16(%ebp)
	cmpl %eax,%edi
	je L9326
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 8(%edx),%ebx
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%esi
	movl 8(%ebp),%eax
	addl $32,%esp
	subl $1,%esi
	movl %edi,%ebx
	movl (%eax),%eax
	movl %eax,-12(%ebp)
	jmp L9336
	.p2align 2
L9338:
	addl $-8,%esp
	pushl %ebx
	movl -12(%ebp),%edx
	pushl %edx
	call _put__to__HYF
	addl $-8,%esp
	addl $16,%esp
	pushl $1
	pushl %ebx
	call ___infix_add__Q5B
	movl %eax,%ebx
	addl $16,%esp
L9336:
	addl $-8,%esp
	pushl %esi
	pushl %ebx
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	jne L9338
L9326:
	movl -16(%ebp),%edx
	movl 8(%ebp),%eax
	leal -40(%ebp),%esp
	movl %edx,8(%eax)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clipping__to__OEQ:
	pushl %ebp
	movl %esp,%ebp
	pushl %edi
	pushl %esi
	pushl %ebx
	xorl %eax,%eax
	movl 8(%ebp),%ebx
	movl 12(%ebp),%esi
	movl 20(%ebp),%edi
	movl 12(%ebx),%edx
	movl 8(%ebx),%ecx
	decl %edx
	decl %ecx
	testl %esi,%esi
	jle L9370
	movl %esi,%eax
L9370:
	cmpl %edx,%eax
	jle L9374
	movl %edx,%eax
L9374:
	movl %eax,16(%ebx)
	xorl %eax,%eax
	testl %edi,%edi
	jle L9379
	movl %edi,%eax
L9379:
	cmpl %edx,%eax
	jle L9383
	movl %edx,%eax
L9383:
	movl %eax,24(%ebx)
	xorl %eax,%eax
	cmpl $0,16(%ebp)
	jle L9388
	movl 16(%ebp),%eax
L9388:
	cmpl %ecx,%eax
	jle L9392
	movl %ecx,%eax
L9392:
	movl %eax,20(%ebx)
	xorl %eax,%eax
	cmpl $0,24(%ebp)
	jle L9397
	movl 24(%ebp),%eax
L9397:
	cmpl %ecx,%eax
	jle L9401
	movl %ecx,%eax
L9401:
	movl %eax,28(%ebx)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_v_until__0JQ:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%edi
	movl 8(%ebp),%edx
	addl $-4,%esp
	movl 36(%eax),%esi
	movl %edi,36(%eax)
	movl 24(%edx),%eax
	pushl %eax
	movl 16(%edx),%eax
	pushl %eax
	movl 32(%edx),%eax
	pushl %eax
	call _in_range__to__T9J
	addl $16,%esp
	testb %al,%al
	je L9415
	cmpl %edi,%esi
	jle L9416
	movl %esi,%eax
	movl %edi,%esi
	movl %eax,%edi
L9416:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 28(%edx),%eax
	cmpl %edi,%eax
	setg %bl
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L9418
	movl 8(%ebp),%eax
	movl 28(%eax),%edi
L9418:
	movl 8(%ebp),%edx
	movl 20(%edx),%eax
	cmpl %esi,%eax
	jle L9422
	movl %eax,%esi
L9422:
	cmpl %edi,%esi
	jg L9415
	movl %esi,%ebx
	cmpl %edi,%ebx
	jg L9415
	.p2align 2
L9429:
	movl 8(%ebp),%eax
	movl 32(%eax),%edx
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L9432
	movl 32(%eax),%eax
	jmp L9433
	.p2align 2
L9432:
	movl 28(%eax),%eax
L9433:
	pushl %eax
	pushl %ebx
	pushl %edx
	movl 8(%ebp),%edx
	pushl %edx
	call _pixel_hard__color__7NQ
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %edi,%ebx
	jle L9429
L9415:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_h_until__99Q:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%esi
	movl 8(%ebp),%edx
	addl $-4,%esp
	movl 32(%eax),%edi
	movl %esi,32(%eax)
	movl 28(%edx),%eax
	pushl %eax
	movl 20(%edx),%eax
	pushl %eax
	movl 36(%edx),%eax
	pushl %eax
	call _in_range__to__T9J
	addl $16,%esp
	testb %al,%al
	je L9438
	cmpl %esi,%edi
	jle L9439
	movl %edi,%eax
	movl %esi,%edi
	movl %eax,%esi
L9439:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 24(%edx),%eax
	cmpl %esi,%eax
	setg %bl
	pushl %esi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L9441
	movl 8(%ebp),%eax
	movl 24(%eax),%esi
L9441:
	movl 8(%ebp),%edx
	movl 16(%edx),%eax
	cmpl %edi,%eax
	jle L9445
	movl %eax,%edi
L9445:
	cmpl %esi,%edi
	jg L9438
	movl 8(%ebp),%eax
	movl 36(%eax),%edx
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L9450
	movl 32(%eax),%eax
	jmp L9451
	.p2align 2
L9450:
	movl 28(%eax),%eax
L9451:
	addl $-12,%esp
	pushl %eax
	pushl %esi
	pushl %edx
	pushl %edi
	movl 8(%ebp),%edx
	pushl %edx
	call _line_h_hard__until__color__CER
L9438:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_print__to__8ES:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%eax
	movl %eax,-4(%ebp)
	movl _lower__2WK,%edx
	movl 12(%ebp),%eax
	movl %edx,-12(%ebp)
	movl 4(%eax),%eax
	movl %eax,-16(%ebp)
	cmpl %eax,%edx
	jg L9514
	.p2align 2
L9469:
	movl -12(%ebp),%eax
	addl $-8,%esp
	subl $1,%eax
	pushl %eax
	movl 12(%ebp),%edx
	movl (%edx),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	addl $-12,%esp
	movsbl %al,%eax
	pushl %eax
	call _code__1LB
	movsbl %al,%esi
	addl $16,%esp
	cmpl $32,%esi
	setg %bl
	addl $-8,%esp
	pushl $32
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L9477
	cmpl $127,%esi
	setg %bl
	addl $-8,%esp
	pushl $127
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L9476
L9477:
	xorl %esi,%esi
	jmp L9486
	.p2align 2
L9476:
	subl $32,%esi
L9486:
	movl $___index_font,%eax
	xorl %edi,%edi
	xorl %edx,%edx
	movw (%eax,%esi,2),%di
	movw 2(%eax,%esi,2),%dx
	movl %edx,-8(%ebp)
	cmpl %edx,%edi
	je L9490
	.p2align 2
L9491:
	movl 20(%ebp),%ebx
	movl $1,%esi
	leal (%edi,%edi),%eax
	movl %eax,-20(%ebp)
	.p2align 2
L9495:
	movl -20(%ebp),%eax
	movl $___graph_font,%edx
	testw %si,(%eax,%edx)
	je L9496
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %ebx
	movl -4(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _pixel_to__0JS
	addl $16,%esp
L9496:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	leal (%esi,%esi),%eax
	andl $65534,%eax
	movl %eax,%esi
	testw %ax,%ax
	jne L9495
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
	cmpl -8(%ebp),%edi
	jne L9491
L9490:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -12(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl -16(%ebp),%edx
	movl %eax,-12(%ebp)
	addl $32,%esp
	cmpl %edx,%eax
	jle L9469
L9514:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clipping__to__2GU:
	pushl %ebp
	movl %esp,%ebp
	pushl %edi
	pushl %esi
	pushl %ebx
	xorl %eax,%eax
	movl 8(%ebp),%ebx
	movl 12(%ebp),%esi
	movl 20(%ebp),%edi
	movl 12(%ebx),%edx
	movl 8(%ebx),%ecx
	decl %edx
	decl %ecx
	testl %esi,%esi
	jle L9523
	movl %esi,%eax
L9523:
	cmpl %edx,%eax
	jle L9527
	movl %edx,%eax
L9527:
	movl %eax,16(%ebx)
	xorl %eax,%eax
	testl %edi,%edi
	jle L9532
	movl %edi,%eax
L9532:
	cmpl %edx,%eax
	jle L9536
	movl %edx,%eax
L9536:
	movl %eax,24(%ebx)
	xorl %eax,%eax
	cmpl $0,16(%ebp)
	jle L9541
	movl 16(%ebp),%eax
L9541:
	cmpl %ecx,%eax
	jle L9545
	movl %ecx,%eax
L9545:
	movl %eax,20(%ebx)
	xorl %eax,%eax
	cmpl $0,24(%ebp)
	jle L9550
	movl 24(%ebp),%eax
L9550:
	cmpl %ecx,%eax
	jle L9554
	movl %ecx,%eax
L9554:
	movl %eax,28(%ebx)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_v_until__AKV:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%edi
	movl 8(%ebp),%edx
	movb $0,-1(%ebp)
	addl $-4,%esp
	movl 36(%eax),%esi
	movl %edi,36(%eax)
	movl 24(%edx),%eax
	pushl %eax
	movl 16(%edx),%eax
	pushl %eax
	movl 32(%edx),%eax
	pushl %eax
	call _in_range__to__T9J
	addl $16,%esp
	testb %al,%al
	je L9567
	movb $1,-1(%ebp)
	cmpl %edi,%esi
	jle L9568
	movl %esi,%eax
	movl %edi,%esi
	movl %eax,%edi
L9568:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 28(%edx),%eax
	cmpl %edi,%eax
	setg %bl
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L9570
	movl 8(%ebp),%eax
	movl 28(%eax),%edi
	movb $0,-1(%ebp)
L9570:
	movl 8(%ebp),%edx
	movl 20(%edx),%eax
	cmpl %esi,%eax
	jle L9574
	movl %eax,%esi
	movb $0,-1(%ebp)
L9574:
	cmpl %edi,%esi
	jg L9567
	movl %esi,%ebx
	cmpl %edi,%ebx
	jg L9567
	.p2align 2
L9581:
	movl 8(%ebp),%eax
	movl 32(%eax),%edx
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L9584
	movl 32(%eax),%eax
	jmp L9585
	.p2align 2
L9584:
	movl 28(%eax),%eax
L9585:
	pushl %eax
	pushl %ebx
	pushl %edx
	movl 8(%ebp),%edx
	pushl %edx
	call _pixel_hard__color__HOV
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %edi,%ebx
	jle L9581
L9567:
	leal -24(%ebp),%esp
	movsbl -1(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_h_until__BNU:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%esi
	movl 8(%ebp),%edx
	movb $0,-1(%ebp)
	addl $-4,%esp
	movl 32(%eax),%edi
	movl %esi,32(%eax)
	movl 28(%edx),%eax
	pushl %eax
	movl 20(%edx),%eax
	pushl %eax
	movl 36(%edx),%eax
	pushl %eax
	call _in_range__to__T9J
	addl $16,%esp
	testb %al,%al
	je L9590
	movb $1,-1(%ebp)
	cmpl %esi,%edi
	jle L9591
	movl %edi,%eax
	movl %esi,%edi
	movl %eax,%esi
L9591:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 24(%edx),%eax
	cmpl %esi,%eax
	setg %bl
	pushl %esi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L9593
	movl 8(%ebp),%eax
	movl 24(%eax),%esi
	movb $0,-1(%ebp)
L9593:
	movl 8(%ebp),%edx
	movl 16(%edx),%eax
	cmpl %edi,%eax
	jle L9597
	movl %eax,%edi
	movb $0,-1(%ebp)
L9597:
	cmpl %esi,%edi
	jg L9590
	movl 8(%ebp),%eax
	movl 36(%eax),%edx
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L9602
	movl 32(%eax),%eax
	jmp L9603
	.p2align 2
L9602:
	movl 28(%eax),%eax
L9603:
	addl $-12,%esp
	pushl %eax
	pushl %esi
	pushl %edx
	pushl %edi
	movl 8(%ebp),%edx
	pushl %edx
	call _line_h_hard__until__color__ERU
L9590:
	leal -24(%ebp),%esp
	movsbl -1(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_print__to__NJX:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%eax
	movl %eax,-4(%ebp)
	movl _lower__2WK,%edx
	movl 12(%ebp),%eax
	movl %edx,-12(%ebp)
	movl 4(%eax),%eax
	movl %eax,-16(%ebp)
	cmpl %eax,%edx
	jg L9670
	.p2align 2
L9625:
	movl -12(%ebp),%eax
	addl $-8,%esp
	subl $1,%eax
	pushl %eax
	movl 12(%ebp),%edx
	movl (%edx),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	addl $-12,%esp
	movsbl %al,%eax
	pushl %eax
	call _code__1LB
	movsbl %al,%esi
	addl $16,%esp
	cmpl $32,%esi
	setg %bl
	addl $-8,%esp
	pushl $32
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L9633
	cmpl $127,%esi
	setg %bl
	addl $-8,%esp
	pushl $127
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L9632
L9633:
	xorl %esi,%esi
	jmp L9642
	.p2align 2
L9632:
	subl $32,%esi
L9642:
	movl $___index_font,%eax
	xorl %edi,%edi
	xorl %edx,%edx
	movw (%eax,%esi,2),%di
	movw 2(%eax,%esi,2),%dx
	movl %edx,-8(%ebp)
	cmpl %edx,%edi
	je L9646
	.p2align 2
L9647:
	movl 20(%ebp),%ebx
	movl $1,%esi
	leal (%edi,%edi),%eax
	movl %eax,-20(%ebp)
	.p2align 2
L9651:
	movl -20(%ebp),%eax
	movl $___graph_font,%edx
	testw %si,(%eax,%edx)
	je L9652
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %ebx
	movl -4(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _pixel_to__ZNW
	addl $16,%esp
L9652:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	leal (%esi,%esi),%eax
	andl $65534,%eax
	movl %eax,%esi
	testw %ax,%ax
	jne L9651
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
	cmpl -8(%ebp),%edi
	jne L9647
L9646:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -12(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl -16(%ebp),%edx
	movl %eax,-12(%ebp)
	addl $32,%esp
	cmpl %edx,%eax
	jle L9625
L9670:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_font_width__size__O8X:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edx
	movl 8(%ebp),%ecx
	movl $0,-4(%ebp)
	movl _lower__2WK,%edi
	movl 4(%ecx),%eax
	movl %eax,-8(%ebp)
	cmpl %edx,%eax
	jle L9710
	movl %edx,-8(%ebp)
	jmp L9710
	.p2align 2
L9682:
	addl $-8,%esp
	movl %edi,%eax
	subl $1,%eax
	pushl %eax
	movl 8(%ebp),%edx
	movl (%edx),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	addl $-12,%esp
	movsbl %al,%eax
	pushl %eax
	call _code__1LB
	movsbl %al,%esi
	addl $16,%esp
	cmpl $32,%esi
	setg %bl
	addl $-8,%esp
	pushl $32
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L9690
	cmpl $127,%esi
	setg %bl
	addl $-8,%esp
	pushl $127
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L9689
L9690:
	xorl %esi,%esi
	jmp L9699
	.p2align 2
L9689:
	subl $32,%esi
L9699:
	movl $___index_font,%eax
	xorl %ebx,%ebx
	addl $-8,%esp
	addl $-12,%esp
	movw (%eax,%esi,2),%bx
	movw 2(%eax,%esi,2),%ax
	andl $65535,%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%ecx
	pushl %ecx
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl %ebx,%esi
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
L9710:
	cmpl -8(%ebp),%edi
	jle L9682
	leal -40(%ebp),%esp
	movl -4(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_draw__to__NWZ:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%edi
	movl 16(%ebp),%esi
	movl 20(%ebp),%ecx
	movl _parent_video__C2,%eax
	movl 24(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	pushl %ecx
	pushl %esi
	pushl %edi
	pushl %ebx
	call _clipping__to__AYZ
	addl $32,%esp
	movl 12(%ebx),%esi
	movl 8(%ebx),%ecx
	movl _color_back__O2N,%edx
	movl _parent_video__C2,%eax
	decl %esi
	decl %ecx
	addl $-8,%esp
	pushl %edx
	pushl %ecx
	pushl %esi
	pushl $0
	pushl $0
	pushl %ebx
	call _rectangle_fill__to__color__71Z
	addl $32,%esp
	movl _parent_video__C2,%eax
	movl _color_dark__M2N,%edx
	addl $-12,%esp
	pushl %edx
	call _color__L2Z
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl $7
	pushl $1
	pushl %ebx
	call _move_to__G3Z
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl $1
	pushl $7
	pushl %ebx
	call _line_to__I40
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl $7
	pushl $13
	pushl %ebx
	call _line_to__I40
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl _color_light__N2N,%edx
	addl $-12,%esp
	pushl %edx
	call _color__L2Z
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl $13
	pushl $7
	pushl %ebx
	call _line_to__I40
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl $7
	pushl $1
	pushl %ebx
	call _line_to__I40
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl _color_back_light__P2N,%edx
	addl $-12,%esp
	pushl %edx
	call _color__L2Z
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl $2
	pushl $7
	pushl %ebx
	call _poly_move_to__PJ2
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl $7
	pushl $12
	pushl %ebx
	call _poly_line_to__DL3
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl $12
	pushl $7
	pushl %ebx
	call _poly_line_to__DL3
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl $7
	pushl $2
	pushl %ebx
	call _poly_line_to__DL3
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-12,%esp
	pushl %ebx
	call _poly_trace__024
	addl $16,%esp
	testb $2,76(%ebx)
	je L9766
	movl _parent_video__C2,%eax
	movl _black__4R,%edx
	movl _parent_video__C2,%eax
	addl $-12,%esp
	pushl %edx
	call _color__L2Z
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl $4
	pushl $7
	pushl %ebx
	call _poly_move_to__PJ2
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl $7
	pushl $10
	pushl %ebx
	call _poly_line_to__DL3
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl $10
	pushl $7
	pushl %ebx
	call _poly_line_to__DL3
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl $7
	pushl $4
	pushl %ebx
	call _poly_line_to__DL3
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-12,%esp
	pushl %ebx
	call _poly_trace__024
	addl $16,%esp
L9766:
	movl 76(%ebx),%eax
	cmpl $-1,%eax
	jne L9791
	movl _parent_video__C2,%eax
	movl _color_dark__M2N,%edx
	jmp L9809
	.p2align 2
L9791:
	testl $1,%eax
	jne L9799
	movl _parent_video__C2,%eax
	movl _black__4R,%edx
	jmp L9816
	.p2align 2
L9799:
	movl _parent_video__C2,%eax
	movl _red__6R,%edx
L9816:
	movl _parent_video__C2,%eax
L9809:
	addl $-12,%esp
	pushl %edx
	call _color__L2Z
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl 72(%ebx),%edx
	cmpl $16,(%eax)
	jne L9813
	pushl $0
	pushl $19
	pushl %edx
	pushl %ebx
	call _print__to__WO6
	jmp L9814
	.p2align 2
L9813:
	pushl $0
	pushl $19
	pushl %edx
	pushl %ebx
	call _print__to__WO6
L9814:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_create__1X9:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	xorl %eax,%eax
	pushl %edi
	pushl %esi
	pushl %ebx
	xorl %ebx,%ebx
	movb 12(%ebp),%bl
	movb 16(%ebp),%al
	movl %eax,-4(%ebp)
	movb 20(%ebp),%al
	movb %al,-5(%ebp)
	addl $-8,%esp
	pushl $16
	xorl %eax,%eax
	movw 8(%ebp),%ax
	pushl %eax
	call ___infix_less_less__I09
	movl %eax,%esi
	addl $-8,%esp
	pushl $8
	addl $-12,%esp
	pushl %ebx
	call _to_uinteger__M09
	addl $16,%esp
	pushl %eax
	call ___infix_less_less__I09
	movl %eax,%edi
	addl $32,%esp
	addl $-8,%esp
	pushl %esi
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	addl $16,%esp
	pushl %eax
	call ___infix_sub__STB
	movl %eax,%ebx
	addl $16,%esp
	addl $-8,%esp
	pushl %edi
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	addl $16,%esp
	pushl %eax
	call ___infix_sub__STB
	addl $16,%esp
	andl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	addl $16,%esp
	pushl %eax
	call ___infix_sub__STB
	movl %eax,%ebx
	movl -4(%ebp),%eax
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call _to_uinteger__M09
	pushl %eax
	pushl %ebx
	call ___infix_or__C19
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	salb $5,-5(%ebp)
	xorl %eax,%eax
	movb -5(%ebp),%al
	pushl %eax
	call _to_uinteger__M09
	pushl %eax
	pushl %esi
	call ___infix_or__C19
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_create__G39:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	xorl %eax,%eax
	pushl %edi
	pushl %esi
	pushl %ebx
	xorl %ebx,%ebx
	movb 12(%ebp),%bl
	movb 16(%ebp),%al
	movl %eax,-4(%ebp)
	addl $-8,%esp
	pushl $24
	addl $-12,%esp
	xorl %eax,%eax
	movb 8(%ebp),%al
	pushl %eax
	call _to_uinteger__M09
	addl $16,%esp
	pushl %eax
	call ___infix_less_less__I09
	movl %eax,%esi
	addl $-8,%esp
	pushl $16
	addl $-12,%esp
	pushl %ebx
	call _to_uinteger__M09
	addl $16,%esp
	pushl %eax
	call ___infix_less_less__I09
	movl %eax,%edi
	addl $32,%esp
	addl $-8,%esp
	pushl %esi
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	addl $16,%esp
	pushl %eax
	call ___infix_sub__STB
	movl %eax,%ebx
	addl $16,%esp
	addl $-8,%esp
	pushl %edi
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	addl $16,%esp
	pushl %eax
	call ___infix_sub__STB
	addl $16,%esp
	andl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	addl $16,%esp
	pushl %eax
	call ___infix_sub__STB
	movl %eax,%ebx
	addl $16,%esp
	addl $-8,%esp
	pushl $8
	movl -4(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _to_uinteger__M09
	addl $16,%esp
	pushl %eax
	call ___infix_less_less__I09
	movl %eax,%esi
	addl $16,%esp
	addl $-8,%esp
	pushl %ebx
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	addl $16,%esp
	pushl %eax
	call ___infix_sub__STB
	movl %eax,%ebx
	addl $16,%esp
	addl $-8,%esp
	pushl %esi
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	addl $16,%esp
	pushl %eax
	call ___infix_sub__STB
	addl $16,%esp
	andl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	addl $16,%esp
	pushl %eax
	call ___infix_sub__STB
	addl $16,%esp
	addl $-8,%esp
	pushl %eax
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	addl $16,%esp
	pushl %eax
	call ___infix_sub__STB
	movl %eax,%ebx
	addl $16,%esp
	addl $-8,%esp
	pushl $0
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	addl $16,%esp
	pushl %eax
	call ___infix_sub__STB
	addl $16,%esp
	andl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	addl $16,%esp
	pushl %eax
	call ___infix_sub__STB
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_realloc__size__to__TLG:
	pushl %ebp
	movl %esp,%ebp
	subl $76,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%ebx
	movl 16(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _allocation__C7
	movl %eax,-32(%ebp)
	addl $-4,%esp
	pushl %ebx
	pushl %esi
	pushl %eax
	call _copy__from__size__NPD
	addl $32,%esp
	cmpl $128,%ebx
	jg L9902
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,-36(%ebp)
	andl $254,-36(%ebp)
	movl -36(%ebp),%edx
	movl %edx,-40(%ebp)
	sarl $1,-40(%ebp)
	subl $1,-40(%ebp)
	movl _small_fat__C5,%eax
	movl -40(%ebp),%ecx
	addl $32,%esp
	movl (%eax,%ecx,4),%edi
	movl %edi,-24(%ebp)
L9913:
	movl _object_size__97,%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__DTB
	pushl %eax
	pushl %edi
	call ___infix_sub__STB
	movl %eax,-44(%ebp)
	addl $32,%esp
	addl $-8,%esp
	pushl $-2
	movl (%edi),%eax
	pushl %eax
	call ___infix_and__THB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__DTB
	pushl %eax
	movl -44(%ebp),%eax
	pushl %eax
	call ___infix_sub__STB
	movl -44(%ebp),%edx
	movl %eax,-48(%ebp)
	addl $32,%esp
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call ___infix_greater_diese__JUG
	movl -44(%ebp),%ecx
	movb %al,%bl
	addl $-8,%esp
	pushl %ecx
	pushl %esi
	call ___infix_equal_equal__LFC
	orb %al,%bl
	addl $32,%esp
	testb %bl,%bl
	je L9920
	movl -48(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call ___infix_greater_diese__JUG
	addl $16,%esp
	testb %al,%al
	je L9919
L9920:
	movl 12(%edi),%edi
	jmp L9913
	.p2align 2
L9919:
	movl _object_size__97,%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__DTB
	pushl %eax
	pushl %edi
	call ___infix_sub__STB
	subl %eax,%esi
	movl _object_size__97,%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__DTB
	pushl %eax
	pushl %edi
	call ___infix_sub__STB
	movl %eax,%edx
	movw 18(%edi),%ax
	shrl $1,%esi
	andl $65535,%esi
	movl %esi,%ebx
	andl $65535,%ebx
	movw %ax,(%edx,%ebx,2)
	movw 16(%edi),%ax
	addl $32,%esp
	movw %si,18(%edi)
	subl -36(%ebp),%eax
	movw %ax,16(%edi)
	cmpw $4,%ax
	jne L9929
	movl 12(%edi),%edx
	movl 8(%edi),%eax
	movl %eax,8(%edx)
	movl %edx,12(%eax)
	cmpl -24(%ebp),%edi
	jne L9932
	cmpl %edi,%edx
	jne L9933
	movl _small_fat__C5,%eax
	movl -40(%ebp),%edx
	movl $0,(%eax,%edx,4)
	jmp L9932
	.p2align 2
L9933:
	movl -40(%ebp),%ecx
	addl $-4,%esp
	pushl %ecx
	pushl %edx
	movl _small_fat__C5,%eax
	pushl %eax
	call _put__to__91G
	addl $16,%esp
L9932:
	addl $-8,%esp
	pushl $-2
	movl (%edi),%eax
	pushl %eax
	call ___infix_and__THB
	movl %eax,-20(%ebp)
	movl 4(%edi),%eax
	movl %eax,-4(%ebp)
	movl $0,-52(%ebp)
	movl _object_size__97,%eax
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__DTB
	pushl %eax
	pushl %edi
	call ___infix_sub__STB
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	pushl $-2
	movl (%edi),%eax
	pushl %eax
	call ___infix_and__THB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__DTB
	pushl %eax
	pushl %ebx
	call ___infix_sub__STB
	movl _end_memory__F5,%ebx
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	pushl %eax
	pushl %ebx
	call ___infix_sub__STB
	addl $32,%esp
	cmpl %eax,%esi
	je L9945
	movl %esi,-52(%ebp)
L9945:
	movl -52(%ebp),%edx
	movl %edx,-8(%ebp)
	cmpl $0,-4(%ebp)
	je L9948
	movl -4(%ebp),%ecx
	testb $1,(%ecx)
	jne L9948
	movl %ecx,%esi
	addl $-8,%esp
	pushl $-2
	movl (%esi),%eax
	pushl %eax
	call ___infix_and__THB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__DTB
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__STB
	movl %eax,%ebx
	movl _object_size__97,%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__DTB
	pushl %eax
	pushl %ebx
	call ___infix_sub__STB
	movl %eax,-20(%ebp)
	addl $32,%esp
	jmp L9956
	.p2align 2
L9948:
	movl %edi,%esi
L9956:
	cmpl $0,-52(%ebp)
	je L9957
	movl -52(%ebp),%ecx
	movl (%ecx),%edx
	movl %edx,%eax
	xorl $-1,%eax
	testl $1,%eax
	je L9957
	addl $-8,%esp
	pushl $-2
	pushl %edx
	call ___infix_and__THB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__DTB
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__STB
	movl %eax,%ebx
	movl _object_size__97,%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__DTB
	pushl %eax
	pushl %ebx
	call ___infix_sub__STB
	movl -52(%ebp),%ecx
	movl %eax,-20(%ebp)
	addl $32,%esp
	movl 8(%ecx),%edx
	movl 12(%ecx),%eax
	testl %edx,%edx
	jne L9965
	movl %eax,_first_free__D5
	jmp L9966
	.p2align 2
L9965:
	movl %eax,12(%edx)
L9966:
	testl %eax,%eax
	je L9968
	movl %edx,8(%eax)
L9968:
	movl $0,-56(%ebp)
	movl _object_size__97,%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__DTB
	pushl %eax
	movl -52(%ebp),%eax
	pushl %eax
	call ___infix_sub__STB
	addl $32,%esp
	addl $-8,%esp
	pushl $-2
	movl -52(%ebp),%edx
	movl %eax,%ebx
	movl (%edx),%eax
	pushl %eax
	call ___infix_and__THB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__DTB
	pushl %eax
	pushl %ebx
	call ___infix_sub__STB
	movl _end_memory__F5,%ebx
	movl %eax,%edi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	pushl %eax
	pushl %ebx
	call ___infix_sub__STB
	addl $32,%esp
	cmpl %eax,%edi
	je L9977
	movl %edi,-56(%ebp)
L9977:
	movl -56(%ebp),%ecx
	movl %ecx,-8(%ebp)
L9957:
	movl (%esi),%eax
	addl $-8,%esp
	andl $1,%eax
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_or__KLC
	movl %eax,(%esi)
	addl $16,%esp
	cmpl $0,-8(%ebp)
	je L10065
	movl -8(%ebp),%edx
	movl %esi,4(%edx)
	jmp L10054
	.p2align 2
L9929:
	cmpl -24(%ebp),%edi
	je L10004
	movl 12(%edi),%edx
	movl 8(%edi),%eax
	movl %eax,8(%edx)
	movl %edx,12(%eax)
	movl -24(%ebp),%ecx
	addl $-4,%esp
	movl 8(%ecx),%eax
	movl %ecx,12(%edi)
	movl %eax,8(%edi)
	movl %edi,8(%ecx)
	movl %edi,12(%eax)
	movl -40(%ebp),%eax
	pushl %eax
	pushl %edi
	movl _small_fat__C5,%eax
	pushl %eax
	call _put__to__91G
	jmp L10004
	.p2align 2
L9902:
	subl _object_size__97,%esi
	addl $-8,%esp
	pushl $-2
	movl (%esi),%eax
	pushl %eax
	call ___infix_and__THB
	movl %eax,-28(%ebp)
	movl 4(%esi),%edx
	movl %edx,-16(%ebp)
	movl $0,-12(%ebp)
	movl _object_size__97,%eax
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__DTB
	pushl %eax
	pushl %esi
	call ___infix_sub__STB
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	pushl $-2
	movl (%esi),%eax
	pushl %eax
	call ___infix_and__THB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__DTB
	pushl %eax
	pushl %ebx
	call ___infix_sub__STB
	movl _end_memory__F5,%ebx
	movl %eax,%edi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	pushl %eax
	pushl %ebx
	call ___infix_sub__STB
	addl $32,%esp
	cmpl %eax,%edi
	je L10014
	movl %edi,-12(%ebp)
L10014:
	movl -12(%ebp),%edi
	cmpl $0,-16(%ebp)
	je L10026
	movl -16(%ebp),%ecx
	testb $1,(%ecx)
	jne L10026
	movl %ecx,%esi
	addl $-8,%esp
	pushl $-2
	movl (%esi),%eax
	pushl %eax
	call ___infix_and__THB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__DTB
	pushl %eax
	movl -28(%ebp),%eax
	pushl %eax
	call ___infix_sub__STB
	movl %eax,%ebx
	movl _object_size__97,%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__DTB
	pushl %eax
	pushl %ebx
	call ___infix_sub__STB
	movl %eax,-28(%ebp)
	addl $32,%esp
L10026:
	cmpl $0,-12(%ebp)
	je L10027
	movl -12(%ebp),%ecx
	movl (%ecx),%edx
	movl %edx,%eax
	xorl $-1,%eax
	testl $1,%eax
	je L10027
	addl $-8,%esp
	pushl $-2
	pushl %edx
	call ___infix_and__THB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__DTB
	pushl %eax
	movl -28(%ebp),%eax
	pushl %eax
	call ___infix_sub__STB
	movl %eax,%ebx
	movl _object_size__97,%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__DTB
	pushl %eax
	pushl %ebx
	call ___infix_sub__STB
	movl -12(%ebp),%ecx
	movl %eax,-28(%ebp)
	addl $32,%esp
	movl 8(%ecx),%edx
	movl 12(%ecx),%eax
	testl %edx,%edx
	jne L10035
	movl %eax,_first_free__D5
	jmp L10036
	.p2align 2
L10035:
	movl %eax,12(%edx)
L10036:
	testl %eax,%eax
	je L10038
	movl %edx,8(%eax)
L10038:
	movl $0,-60(%ebp)
	movl _object_size__97,%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__DTB
	pushl %eax
	movl -12(%ebp),%eax
	pushl %eax
	call ___infix_sub__STB
	addl $32,%esp
	addl $-8,%esp
	pushl $-2
	movl -12(%ebp),%edx
	movl %eax,%ebx
	movl (%edx),%eax
	pushl %eax
	call ___infix_and__THB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__DTB
	pushl %eax
	pushl %ebx
	call ___infix_sub__STB
	movl _end_memory__F5,%ebx
	movl %eax,%edi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	pushl %eax
	pushl %ebx
	call ___infix_sub__STB
	addl $32,%esp
	cmpl %eax,%edi
	je L10047
	movl %edi,-60(%ebp)
L10047:
	movl -60(%ebp),%edi
L10027:
	movl (%esi),%eax
	addl $-8,%esp
	andl $1,%eax
	pushl %eax
	movl -28(%ebp),%ecx
	pushl %ecx
	call ___infix_or__KLC
	movl %eax,(%esi)
	addl $16,%esp
	testl %edi,%edi
	jne L10053
L10065:
	movl %esi,_last_block__H5
	jmp L10054
	.p2align 2
L10053:
	movl %esi,4(%edi)
L10054:
	testb $1,(%esi)
	je L10004
	addl $-12,%esp
	pushl %esi
	call _to_free__P9G
	movl _first_free__D5,%eax
	movl $0,8(%esi)
	movl %eax,12(%esi)
	testl %eax,%eax
	je L10062
	movl %esi,8(%eax)
L10062:
	movl %esi,_first_free__D5
L10004:
	leal -88(%ebp),%esp
	movl -32(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_clip__HUJB:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%edi
	movl 8(%ebp),%eax
	movb $0,-4(%ebp)
	movb $0,-2(%ebp)
	movb $0,-5(%ebp)
	movb $0,-3(%ebp)
	movb $0,-1(%ebp)
	movl 60(%eax),%esi
	testl %esi,%esi
	je L10116
	movl (%esi),%ebx
	movl 8(%esi),%edx
	movl %edx,-12(%ebp)
	movl $0,-16(%ebp)
	addl $-8,%esp
	pushl %ebx
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,12(%ebp)
	sete %al
	orb %dl,%al
	je L10119
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-16(%ebp)
L10119:
	cmpb $0,-16(%ebp)
	je L10117
	movl 4(%esi),%ebx
	movl 12(%esi),%eax
	movl %eax,-20(%ebp)
	movl $0,-24(%ebp)
	addl $-8,%esp
	pushl %ebx
	pushl %edi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%edi
	sete %al
	orb %dl,%al
	je L10122
	movl -20(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %edi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-24(%ebp)
L10122:
	cmpb $0,-24(%ebp)
	jne L10116
L10117:
	movl 4(%esi),%eax
	cmpl %eax,%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L10124
	movl (%esi),%eax
	cmpl %eax,12(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L10124
	jmp L10131
	.p2align 2
L10133:
	movl 28(%esi),%esi
L10131:
	testl %esi,%esi
	je L10150
	movl 4(%esi),%eax
	cmpl %eax,%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L10133
	jmp L10149
	.p2align 2
L10124:
	movl 12(%esi),%eax
	cmpl %eax,%edi
	jle L10149
	movl 12(%ebp),%edx
	cmpl 8(%esi),%edx
	jle L10149
	testl %esi,%esi
	je L10150
	cmpl %eax,%edi
	jle L10149
	.p2align 2
L10145:
	movl 32(%esi),%esi
	testl %esi,%esi
	je L10150
	cmpl 12(%esi),%edi
	jg L10145
L10149:
	testl %esi,%esi
	je L10150
	cmpl %edi,4(%esi)
	setg -1(%ebp)
	movl 8(%esi),%eax
	movl 12(%ebp),%edx
	cmpl 12(%ebp),%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	sete -3(%ebp)
	movb -1(%ebp),%al
	orb -3(%ebp),%al
	jmp L10155
	.p2align 2
L10150:
	movb $0,%al
L10155:
	testb %al,%al
	je L10169
	cmpb $0,-5(%ebp)
	je L10157
	cmpb $0,-1(%ebp)
	jne L10194
	cmpb $0,-3(%ebp)
	je L10163
L10195:
	movl 24(%esi),%esi
	jmp L10163
	.p2align 2
L10157:
	cmpb $0,-3(%ebp)
	jne L10195
	cmpb $0,-1(%ebp)
	je L10163
L10194:
	movl 28(%esi),%esi
L10163:
	xorb $1,-5(%ebp)
	jmp L10149
	.p2align 2
L10169:
	testl %esi,%esi
	je L10170
	movl 12(%esi),%eax
	cmpl %edi,%eax
	setg %bl
	addl $-8,%esp
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	movl 12(%ebp),%eax
	addl $16,%esp
	testb %bl,%bl
	sete -2(%ebp)
	cmpl %eax,(%esi)
	setg -4(%ebp)
	movb -2(%ebp),%al
	orb -4(%ebp),%al
	jmp L10175
	.p2align 2
L10170:
	movb $0,%al
L10175:
	testb %al,%al
	je L10176
	cmpb $0,-5(%ebp)
	je L10177
	cmpb $0,-2(%ebp)
	jne L10196
	cmpb $0,-4(%ebp)
	je L10183
L10197:
	movl 20(%esi),%esi
	jmp L10183
	.p2align 2
L10177:
	cmpb $0,-4(%ebp)
	jne L10197
	cmpb $0,-2(%ebp)
	je L10183
L10196:
	movl 32(%esi),%esi
L10183:
	xorb $1,-5(%ebp)
	jmp L10169
	.p2align 2
L10176:
	testl %esi,%esi
	je L10116
	movl 8(%ebp),%edx
	movl %esi,60(%edx)
L10116:
	leal -56(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_color__ABKB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 12(%edx),%eax
	pushl %eax
	call _item__64DB
	movl %eax,%ebx
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	xorl %eax,%eax
	movb (%ebx),%al
	pushl %eax
	call _to_uinteger__M09
	pushl %eax
	addl $-8,%esp
	pushl $16
	addl $-12,%esp
	xorl %eax,%eax
	movb 2(%ebx),%al
	pushl %eax
	call _to_uinteger__M09
	addl $16,%esp
	pushl %eax
	call ___infix_less_less__I09
	addl $16,%esp
	movl %eax,%edi
	addl $-8,%esp
	pushl $8
	addl $-12,%esp
	xorl %eax,%eax
	movb 1(%ebx),%al
	pushl %eax
	call _to_uinteger__M09
	addl $16,%esp
	pushl %eax
	call ___infix_less_less__I09
	addl $16,%esp
	movl %eax,%esi
	addl $-8,%esp
	pushl %edi
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	addl $16,%esp
	pushl %eax
	call ___infix_sub__STB
	movl %eax,%ebx
	addl $16,%esp
	addl $-8,%esp
	pushl %esi
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	addl $16,%esp
	pushl %eax
	call ___infix_sub__STB
	addl $16,%esp
	andl %eax,%ebx
	addl $-8,%esp
	pushl %ebx
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	addl $16,%esp
	pushl %eax
	call ___infix_sub__STB
	addl $16,%esp
	pushl %eax
	call ___infix_or__C19
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_slave_line_h_hard__until__image__offset__LQWC:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	cmpl $16,16(%ebp)
	setg %bl
	addl $-8,%esp
	pushl $16
	movl 16(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L10215
	movl 8(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	movl 80(%eax),%ebx
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	movl 16(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	cmpl %eax,20(%ebp)
	jle L10215
	movl 8(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	movl 80(%eax),%ebx
	pushl $2
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	movl 16(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	cmpl %eax,%edi
	jle L10228
	movl %edi,%eax
L10228:
	movl %eax,%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl %ebx
	call ___prefix_sub__05B
	pushl %eax
	movl 28(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	addl $32,%esp
	subl %edi,%eax
	addl $-8,%esp
	pushl %eax
	movl 24(%ebp),%eax
	pushl %eax
	movl 20(%ebp),%eax
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	pushl %ebx
	movl 8(%ebp),%eax
	pushl %eax
	call _line_h_hard__until__image__offset__ITWC
	movb $1,%al
	addl $32,%esp
	jmp L10233
	.p2align 2
L10215:
	movb $0,%al
L10233:
	testb %al,%al
	jne L10235
	movl 8(%ebp),%eax
	movb $0,-1(%ebp)
	addl $-4,%esp
	addl $-12,%esp
	pushl %eax
	call _y_max__2R7B
	addl $16,%esp
	subl $4,%eax
	pushl %eax
	pushl $20
	movl 16(%ebp),%eax
	pushl %eax
	call _in_range__to__NS7B
	addl $16,%esp
	testb %al,%al
	je L10236
	movl 8(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _x_max__FU7B
	addl $16,%esp
	subl $3,%eax
	cmpl %eax,%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L10236
	cmpl $3,20(%ebp)
	setg -1(%ebp)
L10236:
	cmpb $0,-1(%ebp)
	je L10235
	movl $4,%esi
	cmpl $4,%edi
	jle L10249
	movl %edi,%esi
L10249:
	movl 8(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _x_max__FU7B
	movl %eax,%edx
	movl 20(%ebp),%eax
	addl $16,%esp
	subl $4,%edx
	cmpl %edx,%eax
	jle L10255
	movl %edx,%eax
L10255:
	movl %eax,%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl %esi
	call ___prefix_sub__05B
	pushl %eax
	movl 28(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	addl $32,%esp
	subl %edi,%eax
	addl $-8,%esp
	pushl %eax
	movl 24(%ebp),%eax
	pushl %eax
	pushl %ebx
	movl 16(%ebp),%eax
	pushl %eax
	pushl %esi
	movl 8(%ebp),%eax
	pushl %eax
	call _line_h_hard__until__image__offset__ITWC
L10235:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clipping__to__WGMB:
	pushl %ebp
	movl %esp,%ebp
	pushl %edi
	pushl %esi
	pushl %ebx
	xorl %eax,%eax
	movl 8(%ebp),%ebx
	movl 12(%ebp),%esi
	movl 20(%ebp),%edi
	movl 12(%ebx),%edx
	movl 8(%ebx),%ecx
	decl %edx
	decl %ecx
	testl %esi,%esi
	jle L10267
	movl %esi,%eax
L10267:
	cmpl %edx,%eax
	jle L10271
	movl %edx,%eax
L10271:
	movl %eax,16(%ebx)
	xorl %eax,%eax
	testl %edi,%edi
	jle L10276
	movl %edi,%eax
L10276:
	cmpl %edx,%eax
	jle L10280
	movl %edx,%eax
L10280:
	movl %eax,24(%ebx)
	xorl %eax,%eax
	cmpl $0,16(%ebp)
	jle L10285
	movl 16(%ebp),%eax
L10285:
	cmpl %ecx,%eax
	jle L10289
	movl %ecx,%eax
L10289:
	movl %eax,20(%ebx)
	xorl %eax,%eax
	cmpl $0,24(%ebp)
	jle L10294
	movl 24(%ebp),%eax
L10294:
	cmpl %ecx,%eax
	jle L10298
	movl %ecx,%eax
L10298:
	movl %eax,28(%ebx)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_v_until__YLNB:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	movb $0,-5(%ebp)
	addl $-8,%esp
	movl 36(%eax),%edi
	movl %edx,-4(%ebp)
	movl 32(%eax),%esi
	movl 16(%eax),%ebx
	movl %edx,36(%eax)
	movl 24(%eax),%eax
	movl %eax,-12(%ebp)
	movl $0,-16(%ebp)
	pushl %ebx
	pushl %esi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%esi
	sete %al
	orb %dl,%al
	je L10319
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-16(%ebp)
L10319:
	cmpb $0,-16(%ebp)
	je L10317
	movb $1,-5(%ebp)
	cmpl -4(%ebp),%edi
	jle L10321
	movl %edi,%eax
	movl -4(%ebp),%edi
	movl %eax,-4(%ebp)
L10321:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 28(%edx),%eax
	movl -4(%ebp),%edx
	cmpl -4(%ebp),%eax
	setg %bl
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L10323
	movl 8(%ebp),%eax
	movl 28(%eax),%eax
	movl %eax,-4(%ebp)
	movb $0,-5(%ebp)
L10323:
	movl 8(%ebp),%edx
	movl 20(%edx),%eax
	cmpl %edi,%eax
	jle L10327
	movl %eax,%edi
	movb $0,-5(%ebp)
L10327:
	cmpl -4(%ebp),%edi
	jg L10317
	movl %edi,%ebx
	cmpl -4(%ebp),%ebx
	jg L10317
	.p2align 2
L10334:
	movl 8(%ebp),%eax
	movl 32(%eax),%edx
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L10337
	movl 32(%eax),%eax
	jmp L10338
	.p2align 2
L10337:
	movl 28(%eax),%eax
L10338:
	pushl %eax
	pushl %ebx
	pushl %edx
	movl 8(%ebp),%edx
	pushl %edx
	call _pixel_hard__color__5PNB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl -4(%ebp),%ebx
	jle L10334
L10317:
	leal -40(%ebp),%esp
	movsbl -5(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_h_until__NOMB:
	pushl %ebp
	movl %esp,%ebp
	subl $60,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	movb $0,-25(%ebp)
	addl $-8,%esp
	movl 32(%eax),%edi
	movl %edx,-4(%ebp)
	movl 36(%eax),%esi
	movl 20(%eax),%ebx
	movl 28(%eax),%ecx
	movl %edx,32(%eax)
	movl %ecx,-32(%ebp)
	movl $0,-36(%ebp)
	pushl %ebx
	pushl %esi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%esi
	sete %al
	orb %dl,%al
	je L10345
	movl -32(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-36(%ebp)
L10345:
	cmpb $0,-36(%ebp)
	je L10343
	movb $1,-25(%ebp)
	cmpl -4(%ebp),%edi
	jle L10347
	movl %edi,%eax
	movl -4(%ebp),%edi
	movl %eax,-4(%ebp)
L10347:
	movl 8(%ebp),%ecx
	movl -4(%ebp),%edx
	addl $-8,%esp
	movl 24(%ecx),%eax
	cmpl -4(%ebp),%eax
	setg %bl
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L10349
	movl 8(%ebp),%ecx
	movl 24(%ecx),%ecx
	movl %ecx,-4(%ebp)
	movb $0,-25(%ebp)
L10349:
	movl 8(%ebp),%edx
	movl 16(%edx),%eax
	cmpl %edi,%eax
	jle L10353
	movl %eax,%edi
	movb $0,-25(%ebp)
L10353:
	cmpl -4(%ebp),%edi
	jg L10343
	movl 8(%ebp),%ecx
	movl _parent_video__C2,%eax
	movl 36(%ecx),%ebx
	cmpl $16,(%eax)
	jne L10358
	movl 32(%eax),%eax
	jmp L10479
	.p2align 2
L10358:
	movl 28(%eax),%eax
L10479:
	movl %eax,-24(%ebp)
	movl 8(%ebp),%eax
	cmpl $0,56(%eax)
	je L10343
	movl 64(%eax),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,%edi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%ecx
	movl %eax,-16(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%ecx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,%esi
	movl 56(%edx),%eax
	addl $32,%esp
	movl 24(%eax),%eax
	addl $-8,%esp
	movl (%eax),%eax
	cmpl %eax,-16(%ebp)
	setg %bl
	pushl %eax
	movl -16(%ebp),%ecx
	pushl %ecx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L10343
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%eax
	addl $-8,%esp
	movl (%eax),%eax
	cmpl %eax,-16(%ebp)
	setg %bl
	pushl %eax
	movl -16(%ebp),%ecx
	pushl %ecx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L10343
	movl 8(%ebp),%eax
	movl 56(%eax),%edx
	movl 12(%edx),%eax
	movl (%eax),%eax
	cmpl %eax,%edi
	jle L10371
	movl %edi,%eax
L10371:
	movl %eax,%edi
	movl 16(%edx),%eax
	movl (%eax),%eax
	movl %esi,-40(%ebp)
	cmpl %eax,%esi
	jle L10480
	movl %eax,-40(%ebp)
	jmp L10480
	.p2align 2
L10475:
	movl -16(%ebp),%edx
	addl $-4,%esp
	pushl %edx
	pushl %edi
	movl 8(%ebp),%ecx
	pushl %ecx
	call _get_clip__XWMB
	movl 8(%eax),%edx
	movl -40(%ebp),%ecx
	addl $16,%esp
	movl %ecx,-44(%ebp)
	cmpl %edx,%ecx
	jle L10385
	movl %edx,-44(%ebp)
L10385:
	movl 16(%eax),%edx
	cmpl 8(%ebp),%edx
	jne L10388
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L10423
	movl -24(%ebp),%eax
	shrl $16,%eax
	movl %eax,%ebx
	movl -24(%ebp),%eax
	andl $192,%ebx
	shrl $10,%eax
	andl $56,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	pushl %ebx
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movb %al,%bl
	movl -24(%ebp),%eax
	addl $48,%esp
	shrl $5,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	andl $7,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movl -16(%ebp),%ebx
	movb %al,-17(%ebp)
	movl -16(%ebp),%eax
	addl $48,%esp
	sall $8,%ebx
	sall $6,%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edi
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	movw $2,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	movl -44(%ebp),%eax
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl %edi,%esi
	cmpl %esi,%ebx
	jg L10478
	.p2align 2
L10415:
	addl $-4,%esp
	xorl %eax,%eax
	movb -17(%ebp),%al
	pushl %eax
	pushl %ebx
	xorl %eax,%eax
	movw ___desc_video,%ax
	pushl %eax
	call __farpokeb
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L10415
L10478:
	movw $1,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	addl $16,%esp
	jmp L10427
	.p2align 2
L10423:
	call _get_line__PGNB
	addl $-8,%esp
	pushl $___dj_stdout
	pushl $78
	call _fputc
	addl $16,%esp
	addl $-12,%esp
	pushl $1
	call _exit
	.p2align 2
L10388:
	movl (%edx),%eax
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L10428
	jmp *L10440(,%ecx,4)
	.p2align 2
L10440:
	.long L10439
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10433
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10428
	.long L10439
	.long L10439
	.long L10439
	.long L10428
	.long L10439
	.long L10439
	.long L10439
	.long L10439
	.long L10439
	.long L10438
	.p2align 2
L10433:
	movl 60(%edx),%ecx
	jmp L10481
	.p2align 2
L10438:
L10439:
	movl 64(%edx),%ecx
L10481:
	movl %ecx,-12(%ebp)
L10428:
	movl %edi,%esi
	subl -12(%ebp),%esi
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L10443
	jmp *L10455(,%ecx,4)
	.p2align 2
L10455:
	.long L10454
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10448
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10443
	.long L10454
	.long L10454
	.long L10454
	.long L10443
	.long L10454
	.long L10454
	.long L10454
	.long L10454
	.long L10454
	.long L10453
	.p2align 2
L10448:
	movl 64(%edx),%ecx
	jmp L10482
	.p2align 2
L10453:
L10454:
	movl 68(%edx),%ecx
L10482:
	movl %ecx,-8(%ebp)
L10443:
	movl -16(%ebp),%ebx
	movl -44(%ebp),%ecx
	subl -8(%ebp),%ebx
	subl -12(%ebp),%ecx
	addl $-17,%eax
	cmpl $70,%eax
	ja L10427
	jmp *L10471(,%eax,4)
	.p2align 2
L10471:
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10468
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.long L10427
	.p2align 2
L10468:
	movl -24(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	pushl %ecx
	pushl %ebx
	pushl %esi
	pushl %edx
	call _slave_line_h_hard__until__color__GC8B
	addl $32,%esp
L10427:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -44(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
L10480:
	cmpl -40(%ebp),%edi
	jle L10475
L10343:
	leal -72(%ebp),%esp
	movsbl -25(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_put_bitmap__to__W7NB:
	pushl %ebp
	movl %esp,%ebp
	subl $76,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%edi
	movl 8(%ebp),%edx
	movl 20(%ebp),%esi
	movl 16(%edx),%eax
	movl %eax,-48(%ebp)
	cmpl %eax,%edi
	jle L10485
	movl %edi,-48(%ebp)
L10485:
	movl 8(%ebp),%ecx
	movl 20(%ecx),%eax
	movl %eax,%ebx
	cmpl %ebx,%esi
	jle L10489
	movl %esi,%ebx
L10489:
	movl 12(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 8(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl 8(%ebp),%ecx
	addl $32,%esp
	subl $1,%eax
	movl 24(%ecx),%edx
	movl %eax,-52(%ebp)
	cmpl %edx,%eax
	jle L10496
	movl %edx,-52(%ebp)
L10496:
	movl 12(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 4(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl 8(%ebp),%ecx
	addl $32,%esp
	subl $1,%eax
	movl 28(%ecx),%edx
	movl %eax,-56(%ebp)
	cmpl %edx,%eax
	jle L10503
	movl %edx,-56(%ebp)
L10503:
	movl -52(%ebp),%eax
	cmpl %eax,-48(%ebp)
	jg L10506
	cmpl -56(%ebp),%ebx
	jg L10506
	movl -48(%ebp),%edx
	movl -56(%ebp),%ecx
	movl %ebx,-4(%ebp)
	subl %esi,-4(%ebp)
	movl %edx,-8(%ebp)
	subl %edi,-8(%ebp)
	movl %ebx,-44(%ebp)
	cmpl %ecx,%ebx
	jg L10506
	.p2align 2
L10515:
	movl 12(%ebp),%edx
	movl 72(%edx),%eax
	movl -4(%ebp),%ecx
	movl (%eax),%eax
	movl (%eax,%ecx,4),%eax
	movl %eax,-40(%ebp)
	movl 8(%ebp),%eax
	cmpl $0,56(%eax)
	je L10519
	movl 64(%eax),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -48(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl 8(%ebp),%ecx
	movl %eax,-24(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%ecx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -44(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-28(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -52(%ebp),%ecx
	pushl %ecx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,%edi
	movl 56(%edx),%eax
	addl $32,%esp
	movl 24(%eax),%eax
	addl $-8,%esp
	movl (%eax),%eax
	cmpl %eax,-28(%ebp)
	setg %bl
	pushl %eax
	movl -28(%ebp),%ecx
	pushl %ecx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L10519
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%eax
	addl $-8,%esp
	movl (%eax),%eax
	cmpl %eax,-28(%ebp)
	setg %bl
	pushl %eax
	movl -28(%ebp),%ecx
	pushl %ecx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L10519
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 12(%eax),%eax
	addl $-8,%esp
	movl (%eax),%esi
	cmpl %esi,-24(%ebp)
	setg %bl
	pushl %esi
	movl -24(%ebp),%ecx
	pushl %ecx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L10529
	addl $-8,%esp
	addl $-12,%esp
	pushl %esi
	call ___prefix_sub__05B
	pushl %eax
	movl -8(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -24(%ebp),%edx
	movl %eax,-32(%ebp)
	addl $32,%esp
	subl %edx,-32(%ebp)
	movl %esi,-24(%ebp)
	jmp L10535
	.p2align 2
L10529:
	movl -8(%ebp),%ecx
	movl %ecx,-32(%ebp)
L10535:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 16(%eax),%eax
	movl (%eax),%eax
	movl %edi,-60(%ebp)
	cmpl %eax,%edi
	jle L10537
	movl %eax,-60(%ebp)
L10537:
	movl -60(%ebp),%ecx
	cmpl %ecx,-24(%ebp)
	jg L10519
	.p2align 2
L10643:
	movl -28(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl -24(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%ecx
	pushl %ecx
	call _get_clip__XWMB
	movl 8(%eax),%edx
	movl -60(%ebp),%ecx
	addl $16,%esp
	movl %ecx,-64(%ebp)
	cmpl %edx,%ecx
	jle L10547
	movl %edx,-64(%ebp)
L10547:
	movl 16(%eax),%edx
	cmpl 8(%ebp),%edx
	jne L10550
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L10587
	movl -28(%ebp),%ebx
	movl -28(%ebp),%eax
	sall $8,%ebx
	sall $6,%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	movl -24(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl -32(%ebp),%edx
	movl %eax,%ebx
	addl $32,%esp
	movl %edx,-12(%ebp)
	movw $2,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	movl -64(%ebp),%ecx
	addl $16,%esp
	movl %ebx,%edi
	addl $-8,%esp
	addl $-12,%esp
	pushl %ecx
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,-36(%ebp)
	movl -24(%ebp),%eax
	addl $32,%esp
	subl %eax,-36(%ebp)
	cmpl -36(%ebp),%edi
	jg L10651
	.p2align 2
L10561:
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -40(%ebp),%ecx
	pushl %ecx
	call _get_color__ABKB
	movl %eax,%esi
	addl $16,%esp
	shrl $16,%eax
	movl %eax,%ebx
	andl $192,%ebx
	movl %esi,%eax
	shrl $10,%eax
	andl $56,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	pushl %ebx
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movb %al,%bl
	addl $48,%esp
	shrl $5,%esi
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	andl $7,%esi
	pushl %esi
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	addl $48,%esp
	addl $-4,%esp
	andl $255,%eax
	pushl %eax
	pushl %edi
	xorl %eax,%eax
	movw ___desc_video,%ax
	pushl %eax
	call __farpokeb
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -12(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-12(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
	cmpl -36(%ebp),%edi
	jle L10561
L10651:
	movw $1,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	addl $16,%esp
	jmp L10591
	.p2align 2
L10587:
	call _get_line__PGNB
	addl $-8,%esp
	pushl $___dj_stdout
	pushl $78
	call _fputc
	addl $16,%esp
	addl $-12,%esp
	pushl $1
	call _exit
	.p2align 2
L10550:
	movl (%edx),%eax
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L10592
	jmp *L10604(,%ecx,4)
	.p2align 2
L10604:
	.long L10603
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10597
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10592
	.long L10603
	.long L10603
	.long L10603
	.long L10592
	.long L10603
	.long L10603
	.long L10603
	.long L10603
	.long L10603
	.long L10602
	.p2align 2
L10597:
	movl 60(%edx),%ecx
	jmp L10652
	.p2align 2
L10602:
L10603:
	movl 64(%edx),%ecx
L10652:
	movl %ecx,-20(%ebp)
L10592:
	movl -24(%ebp),%esi
	subl -20(%ebp),%esi
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L10607
	jmp *L10619(,%ecx,4)
	.p2align 2
L10619:
	.long L10618
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10612
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10607
	.long L10618
	.long L10618
	.long L10618
	.long L10607
	.long L10618
	.long L10618
	.long L10618
	.long L10618
	.long L10618
	.long L10617
	.p2align 2
L10612:
	movl 64(%edx),%ecx
	jmp L10653
	.p2align 2
L10617:
L10618:
	movl 68(%edx),%ecx
L10653:
	movl %ecx,-16(%ebp)
L10607:
	movl -28(%ebp),%ebx
	movl -64(%ebp),%ecx
	subl -16(%ebp),%ebx
	subl -20(%ebp),%ecx
	addl $-17,%eax
	cmpl $70,%eax
	ja L10591
	jmp *L10635(,%eax,4)
	.p2align 2
L10635:
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10632
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.long L10591
	.p2align 2
L10632:
	movl -32(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl -40(%ebp),%eax
	pushl %eax
	pushl %ecx
	pushl %ebx
	pushl %esi
	pushl %edx
	call _slave_line_h_hard__until__image__offset__LQWC
	addl $32,%esp
L10591:
	movl -64(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	movl -32(%ebp),%ecx
	pushl %ecx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	subl -24(%ebp),%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,-32(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -64(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -60(%ebp),%edx
	movl %eax,-24(%ebp)
	addl $32,%esp
	cmpl %edx,%eax
	jle L10643
L10519:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%ecx
	pushl %ecx
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -44(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -56(%ebp),%edx
	movl %eax,-44(%ebp)
	addl $32,%esp
	cmpl %edx,%eax
	jle L10515
L10506:
	leal -88(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clipping__to__UKRB:
	pushl %ebp
	movl %esp,%ebp
	pushl %edi
	pushl %esi
	pushl %ebx
	xorl %eax,%eax
	movl 8(%ebp),%ebx
	movl 12(%ebp),%esi
	movl 20(%ebp),%edi
	movl 12(%ebx),%edx
	movl 8(%ebx),%ecx
	decl %edx
	decl %ecx
	testl %esi,%esi
	jle L10672
	movl %esi,%eax
L10672:
	cmpl %edx,%eax
	jle L10676
	movl %edx,%eax
L10676:
	movl %eax,16(%ebx)
	xorl %eax,%eax
	testl %edi,%edi
	jle L10681
	movl %edi,%eax
L10681:
	cmpl %edx,%eax
	jle L10685
	movl %edx,%eax
L10685:
	movl %eax,24(%ebx)
	xorl %eax,%eax
	cmpl $0,16(%ebp)
	jle L10690
	movl 16(%ebp),%eax
L10690:
	cmpl %ecx,%eax
	jle L10694
	movl %ecx,%eax
L10694:
	movl %eax,20(%ebx)
	xorl %eax,%eax
	cmpl $0,24(%ebp)
	jle L10699
	movl 24(%ebp),%eax
L10699:
	cmpl %ecx,%eax
	jle L10703
	movl %ecx,%eax
L10703:
	movl %eax,28(%ebx)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_print__to__SVSB:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%eax
	movl %eax,-4(%ebp)
	movl _lower__2WK,%edx
	movl 12(%ebp),%eax
	movl %edx,-12(%ebp)
	movl 4(%eax),%eax
	movl %eax,-16(%ebp)
	cmpl %eax,%edx
	jg L10768
	.p2align 2
L10723:
	movl -12(%ebp),%eax
	addl $-8,%esp
	subl $1,%eax
	pushl %eax
	movl 12(%ebp),%edx
	movl (%edx),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	addl $-12,%esp
	movsbl %al,%eax
	pushl %eax
	call _code__1LB
	movsbl %al,%esi
	addl $16,%esp
	cmpl $32,%esi
	setg %bl
	addl $-8,%esp
	pushl $32
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L10731
	cmpl $127,%esi
	setg %bl
	addl $-8,%esp
	pushl $127
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L10730
L10731:
	xorl %esi,%esi
	jmp L10740
	.p2align 2
L10730:
	subl $32,%esi
L10740:
	movl $___index_font,%eax
	xorl %edi,%edi
	xorl %edx,%edx
	movw (%eax,%esi,2),%di
	movw 2(%eax,%esi,2),%dx
	movl %edx,-8(%ebp)
	cmpl %edx,%edi
	je L10744
	.p2align 2
L10745:
	movl 20(%ebp),%ebx
	movl $1,%esi
	leal (%edi,%edi),%eax
	movl %eax,-20(%ebp)
	.p2align 2
L10749:
	movl -20(%ebp),%eax
	movl $___graph_font,%edx
	testw %si,(%eax,%edx)
	je L10750
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %ebx
	movl -4(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _pixel_to__I0SB
	addl $16,%esp
L10750:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	leal (%esi,%esi),%eax
	andl $65534,%eax
	movl %eax,%esi
	testw %ax,%ax
	jne L10749
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
	cmpl -8(%ebp),%edi
	jne L10745
L10744:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -12(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl -16(%ebp),%edx
	movl %eax,-12(%ebp)
	addl $32,%esp
	cmpl %edx,%eax
	jle L10723
L10768:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_v_until__2BTB:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	addl $-8,%esp
	movl 36(%eax),%edi
	movl %edx,-4(%ebp)
	movl 32(%eax),%esi
	movl 16(%eax),%ebx
	movl %edx,36(%eax)
	movl 24(%eax),%eax
	movl %eax,-8(%ebp)
	movl $0,-12(%ebp)
	pushl %ebx
	pushl %esi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%esi
	sete %al
	orb %dl,%al
	je L10774
	movl -8(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-12(%ebp)
L10774:
	cmpb $0,-12(%ebp)
	je L10772
	cmpl -4(%ebp),%edi
	jle L10776
	movl %edi,%eax
	movl -4(%ebp),%edi
	movl %eax,-4(%ebp)
L10776:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 28(%edx),%eax
	movl -4(%ebp),%edx
	cmpl -4(%ebp),%eax
	setg %bl
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L10778
	movl 8(%ebp),%eax
	movl 28(%eax),%eax
	movl %eax,-4(%ebp)
L10778:
	movl 8(%ebp),%edx
	movl 20(%edx),%eax
	cmpl %edi,%eax
	jle L10782
	movl %eax,%edi
L10782:
	cmpl -4(%ebp),%edi
	jg L10772
	movl %edi,%ebx
	cmpl -4(%ebp),%ebx
	jg L10772
	.p2align 2
L10789:
	movl 8(%ebp),%eax
	movl 32(%eax),%edx
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L10792
	movl 32(%eax),%eax
	jmp L10793
	.p2align 2
L10792:
	movl 28(%eax),%eax
L10793:
	pushl %eax
	pushl %ebx
	pushl %edx
	movl 8(%ebp),%edx
	pushl %edx
	call _pixel_hard__color__X2SB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl -4(%ebp),%ebx
	jle L10789
L10772:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_h_until__HHTB:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%edi
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 32(%eax),%eax
	movl %eax,-4(%ebp)
	movl 36(%edx),%esi
	movl 20(%edx),%ebx
	movl 28(%edx),%eax
	movl %edi,32(%edx)
	movl %eax,-8(%ebp)
	movl $0,-12(%ebp)
	pushl %ebx
	pushl %esi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%esi
	sete %al
	orb %dl,%al
	je L10803
	movl -8(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-12(%ebp)
L10803:
	cmpb $0,-12(%ebp)
	je L10801
	cmpl %edi,-4(%ebp)
	jle L10805
	movl -4(%ebp),%eax
	movl %edi,-4(%ebp)
	movl %eax,%edi
L10805:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 24(%edx),%eax
	cmpl %edi,%eax
	setg %bl
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L10807
	movl 8(%ebp),%eax
	movl 24(%eax),%edi
L10807:
	movl 8(%ebp),%edx
	movl 16(%edx),%eax
	cmpl -4(%ebp),%eax
	jle L10811
	movl %eax,-4(%ebp)
L10811:
	cmpl %edi,-4(%ebp)
	jg L10801
	movl 8(%ebp),%eax
	movl 36(%eax),%edx
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L10816
	movl 32(%eax),%eax
	jmp L10817
	.p2align 2
L10816:
	movl 28(%eax),%eax
L10817:
	addl $-12,%esp
	pushl %eax
	pushl %edi
	pushl %edx
	movl -4(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _line_h_hard__until__color__D1RB
L10801:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_print__to__D2TB:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%eax
	movl %eax,-4(%ebp)
	movl _lower__2WK,%edx
	movl 12(%ebp),%eax
	movl %edx,-12(%ebp)
	movl 4(%eax),%eax
	movl %eax,-16(%ebp)
	cmpl %eax,%edx
	jg L10870
	.p2align 2
L10824:
	movl 12(%ebp),%edx
	movl (%edx),%eax
	movl -12(%ebp),%edx
	addl $-12,%esp
	movsbl -1(%eax,%edx),%eax
	pushl %eax
	call _code__1LB
	movsbl %al,%esi
	addl $16,%esp
	cmpl $32,%esi
	setg %bl
	addl $-8,%esp
	pushl $32
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L10833
	cmpl $127,%esi
	setg %bl
	addl $-8,%esp
	pushl $127
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L10832
L10833:
	xorl %esi,%esi
	jmp L10842
	.p2align 2
L10832:
	subl $32,%esi
L10842:
	movl $___index_font,%eax
	xorl %edi,%edi
	xorl %edx,%edx
	movw (%eax,%esi,2),%di
	movw 2(%eax,%esi,2),%dx
	movl %edx,-8(%ebp)
	cmpl %edx,%edi
	je L10846
	.p2align 2
L10847:
	movl 20(%ebp),%ebx
	movl $1,%esi
	leal (%edi,%edi),%eax
	movl %eax,-20(%ebp)
	.p2align 2
L10851:
	movl -20(%ebp),%eax
	movl $___graph_font,%edx
	testw %si,(%eax,%edx)
	je L10852
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %ebx
	movl -4(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _pixel_to__I0SB
	addl $16,%esp
L10852:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	leal (%esi,%esi),%eax
	andl $65534,%eax
	movl %eax,%esi
	testw %ax,%ax
	jne L10851
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
	cmpl -8(%ebp),%edi
	jne L10847
L10846:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -12(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl -16(%ebp),%edx
	movl %eax,-12(%ebp)
	addl $32,%esp
	cmpl %edx,%eax
	jle L10824
L10870:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clipping__to__4GWB:
	pushl %ebp
	movl %esp,%ebp
	pushl %edi
	pushl %esi
	pushl %ebx
	xorl %eax,%eax
	movl 8(%ebp),%ebx
	movl 12(%ebp),%esi
	movl 20(%ebp),%edi
	movl 12(%ebx),%edx
	movl 8(%ebx),%ecx
	decl %edx
	decl %ecx
	testl %esi,%esi
	jle L10879
	movl %esi,%eax
L10879:
	cmpl %edx,%eax
	jle L10883
	movl %edx,%eax
L10883:
	movl %eax,16(%ebx)
	xorl %eax,%eax
	testl %edi,%edi
	jle L10888
	movl %edi,%eax
L10888:
	cmpl %edx,%eax
	jle L10892
	movl %edx,%eax
L10892:
	movl %eax,24(%ebx)
	xorl %eax,%eax
	cmpl $0,16(%ebp)
	jle L10897
	movl 16(%ebp),%eax
L10897:
	cmpl %ecx,%eax
	jle L10901
	movl %ecx,%eax
L10901:
	movl %eax,20(%ebx)
	xorl %eax,%eax
	cmpl $0,24(%ebp)
	jle L10906
	movl 24(%ebp),%eax
L10906:
	cmpl %ecx,%eax
	jle L10910
	movl %ecx,%eax
L10910:
	movl %eax,28(%ebx)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_print__to__8RXB:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%eax
	movl %eax,-4(%ebp)
	movl _lower__2WK,%edx
	movl 12(%ebp),%eax
	movl %edx,-12(%ebp)
	movl 4(%eax),%eax
	movl %eax,-16(%ebp)
	cmpl %eax,%edx
	jg L10975
	.p2align 2
L10930:
	movl -12(%ebp),%eax
	addl $-8,%esp
	subl $1,%eax
	pushl %eax
	movl 12(%ebp),%edx
	movl (%edx),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	addl $-12,%esp
	movsbl %al,%eax
	pushl %eax
	call _code__1LB
	movsbl %al,%esi
	addl $16,%esp
	cmpl $32,%esi
	setg %bl
	addl $-8,%esp
	pushl $32
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L10938
	cmpl $127,%esi
	setg %bl
	addl $-8,%esp
	pushl $127
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L10937
L10938:
	xorl %esi,%esi
	jmp L10947
	.p2align 2
L10937:
	subl $32,%esi
L10947:
	movl $___index_font,%eax
	xorl %edi,%edi
	xorl %edx,%edx
	movw (%eax,%esi,2),%di
	movw 2(%eax,%esi,2),%dx
	movl %edx,-8(%ebp)
	cmpl %edx,%edi
	je L10951
	.p2align 2
L10952:
	movl 20(%ebp),%ebx
	movl $1,%esi
	leal (%edi,%edi),%eax
	movl %eax,-20(%ebp)
	.p2align 2
L10956:
	movl -20(%ebp),%eax
	movl $___graph_font,%edx
	testw %si,(%eax,%edx)
	je L10957
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %ebx
	movl -4(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _pixel_to__YWXB
	addl $16,%esp
L10957:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	leal (%esi,%esi),%eax
	andl $65534,%eax
	movl %eax,%esi
	testw %ax,%ax
	jne L10956
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
	cmpl -8(%ebp),%edi
	jne L10952
L10951:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -12(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl -16(%ebp),%edx
	movl %eax,-12(%ebp)
	addl $32,%esp
	cmpl %edx,%eax
	jle L10930
L10975:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_v_until__O8XB:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	addl $-8,%esp
	movl 36(%eax),%edi
	movl %edx,-4(%ebp)
	movl 32(%eax),%esi
	movl 16(%eax),%ebx
	movl %edx,36(%eax)
	movl 24(%eax),%eax
	movl %eax,-8(%ebp)
	movl $0,-12(%ebp)
	pushl %ebx
	pushl %esi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%esi
	sete %al
	orb %dl,%al
	je L10981
	movl -8(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-12(%ebp)
L10981:
	cmpb $0,-12(%ebp)
	je L10979
	cmpl -4(%ebp),%edi
	jle L10983
	movl %edi,%eax
	movl -4(%ebp),%edi
	movl %eax,-4(%ebp)
L10983:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 28(%edx),%eax
	movl -4(%ebp),%edx
	cmpl -4(%ebp),%eax
	setg %bl
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L10985
	movl 8(%ebp),%eax
	movl 28(%eax),%eax
	movl %eax,-4(%ebp)
L10985:
	movl 8(%ebp),%edx
	movl 20(%edx),%eax
	cmpl %edi,%eax
	jle L10989
	movl %eax,%edi
L10989:
	cmpl -4(%ebp),%edi
	jg L10979
	movl %edi,%ebx
	cmpl -4(%ebp),%ebx
	jg L10979
	.p2align 2
L10996:
	movl 8(%ebp),%eax
	movl 32(%eax),%edx
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L10999
	movl 32(%eax),%eax
	jmp L11000
	.p2align 2
L10999:
	movl 28(%eax),%eax
L11000:
	pushl %eax
	pushl %ebx
	pushl %edx
	movl 8(%ebp),%edx
	pushl %edx
	call _pixel_hard__color__DZXB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl -4(%ebp),%ebx
	jle L10996
L10979:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_h_until__3DYB:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%edi
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 32(%eax),%eax
	movl %eax,-4(%ebp)
	movl 36(%edx),%esi
	movl 20(%edx),%ebx
	movl 28(%edx),%eax
	movl %edi,32(%edx)
	movl %eax,-8(%ebp)
	movl $0,-12(%ebp)
	pushl %ebx
	pushl %esi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%esi
	sete %al
	orb %dl,%al
	je L11010
	movl -8(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-12(%ebp)
L11010:
	cmpb $0,-12(%ebp)
	je L11008
	cmpl %edi,-4(%ebp)
	jle L11012
	movl -4(%ebp),%eax
	movl %edi,-4(%ebp)
	movl %eax,%edi
L11012:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 24(%edx),%eax
	cmpl %edi,%eax
	setg %bl
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L11014
	movl 8(%ebp),%eax
	movl 24(%eax),%edi
L11014:
	movl 8(%ebp),%edx
	movl 16(%edx),%eax
	cmpl -4(%ebp),%eax
	jle L11018
	movl %eax,-4(%ebp)
L11018:
	cmpl %edi,-4(%ebp)
	jg L11008
	movl 8(%ebp),%eax
	movl 36(%eax),%edx
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11023
	movl 32(%eax),%eax
	jmp L11024
	.p2align 2
L11023:
	movl 28(%eax),%eax
L11024:
	addl $-12,%esp
	pushl %eax
	pushl %edi
	pushl %edx
	movl -4(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _line_h_hard__until__color__NXWB
L11008:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_print__to__1MYB:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%eax
	movl %eax,-4(%ebp)
	movl _lower__2WK,%edx
	movl 12(%ebp),%eax
	movl %edx,-12(%ebp)
	movl 4(%eax),%eax
	movl %eax,-16(%ebp)
	cmpl %eax,%edx
	jg L11074
	.p2align 2
L11028:
	movl 12(%ebp),%edx
	movl (%edx),%eax
	movl -12(%ebp),%edx
	addl $-12,%esp
	movsbl -1(%eax,%edx),%eax
	pushl %eax
	call _code__1LB
	movsbl %al,%esi
	addl $16,%esp
	cmpl $32,%esi
	setg %bl
	addl $-8,%esp
	pushl $32
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L11037
	cmpl $127,%esi
	setg %bl
	addl $-8,%esp
	pushl $127
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L11036
L11037:
	xorl %esi,%esi
	jmp L11046
	.p2align 2
L11036:
	subl $32,%esi
L11046:
	movl $___index_font,%eax
	xorl %edi,%edi
	xorl %edx,%edx
	movw (%eax,%esi,2),%di
	movw 2(%eax,%esi,2),%dx
	movl %edx,-8(%ebp)
	cmpl %edx,%edi
	je L11050
	.p2align 2
L11051:
	movl 20(%ebp),%ebx
	movl $1,%esi
	leal (%edi,%edi),%eax
	movl %eax,-20(%ebp)
	.p2align 2
L11055:
	movl -20(%ebp),%eax
	movl $___graph_font,%edx
	testw %si,(%eax,%edx)
	je L11056
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %ebx
	movl -4(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _pixel_to__YWXB
	addl $16,%esp
L11056:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	leal (%esi,%esi),%eax
	andl $65534,%eax
	movl %eax,%esi
	testw %ax,%ax
	jne L11055
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
	cmpl -8(%ebp),%edi
	jne L11051
L11050:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -12(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl -16(%ebp),%edx
	movl %eax,-12(%ebp)
	addl $32,%esp
	cmpl %edx,%eax
	jle L11028
L11074:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_font_width__size__JUYB:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edx
	movl 8(%ebp),%ecx
	movl $0,-4(%ebp)
	movl _lower__2WK,%edi
	movl 4(%ecx),%eax
	movl %eax,-8(%ebp)
	cmpl %edx,%eax
	jle L11112
	movl %edx,-8(%ebp)
	jmp L11112
	.p2align 2
L11083:
	movl 8(%ebp),%edx
	movl (%edx),%eax
	addl $-12,%esp
	movsbl -1(%eax,%edi),%eax
	pushl %eax
	call _code__1LB
	movsbl %al,%esi
	addl $16,%esp
	cmpl $32,%esi
	setg %bl
	addl $-8,%esp
	pushl $32
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L11092
	cmpl $127,%esi
	setg %bl
	addl $-8,%esp
	pushl $127
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L11091
L11092:
	xorl %esi,%esi
	jmp L11101
	.p2align 2
L11091:
	subl $32,%esi
L11101:
	movl $___index_font,%eax
	xorl %ebx,%ebx
	addl $-8,%esp
	addl $-12,%esp
	movw (%eax,%esi,2),%bx
	movw 2(%eax,%esi,2),%ax
	andl $65535,%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%ecx
	pushl %ecx
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl %ebx,%esi
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
L11112:
	cmpl -8(%ebp),%edi
	jle L11083
	leal -40(%ebp),%esp
	movl -4(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clipping__to__6X0B:
	pushl %ebp
	movl %esp,%ebp
	pushl %edi
	pushl %esi
	pushl %ebx
	xorl %eax,%eax
	movl 8(%ebp),%ebx
	movl 12(%ebp),%esi
	movl 20(%ebp),%edi
	movl 12(%ebx),%edx
	movl 8(%ebx),%ecx
	decl %edx
	decl %ecx
	testl %esi,%esi
	jle L11120
	movl %esi,%eax
L11120:
	cmpl %edx,%eax
	jle L11124
	movl %edx,%eax
L11124:
	movl %eax,16(%ebx)
	xorl %eax,%eax
	testl %edi,%edi
	jle L11129
	movl %edi,%eax
L11129:
	cmpl %edx,%eax
	jle L11133
	movl %edx,%eax
L11133:
	movl %eax,24(%ebx)
	xorl %eax,%eax
	cmpl $0,16(%ebp)
	jle L11138
	movl 16(%ebp),%eax
L11138:
	cmpl %ecx,%eax
	jle L11142
	movl %ecx,%eax
L11142:
	movl %eax,20(%ebx)
	xorl %eax,%eax
	cmpl $0,24(%ebp)
	jle L11147
	movl 24(%ebp),%eax
L11147:
	cmpl %ecx,%eax
	jle L11151
	movl %ecx,%eax
L11151:
	movl %eax,28(%ebx)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_draw_border_in__to__T10B:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%edi
	movl 24(%ebp),%esi
	movl _parent_video__C2,%eax
	movl _color_dark__M2N,%edx
	addl $-12,%esp
	pushl %edx
	call _color__E20B
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %ebx
	call _move_to__T20B
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl 16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _line_v_until__920B
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl 20(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _line_h_until__OU1B
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl _color_light__N2N,%edx
	addl $-12,%esp
	pushl %edx
	call _color__E20B
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-8,%esp
	pushl %esi
	pushl %ebx
	call _line_v_until__920B
	addl $16,%esp
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11167
	addl $-8,%esp
	pushl %edi
	pushl %ebx
	call _line_h_until__OU1B
	jmp L11168
	.p2align 2
L11167:
	addl $-8,%esp
	pushl %edi
	pushl %ebx
	call _line_h_until__OU1B
L11168:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_draw_border_out__to__PK2B:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%edi
	movl 24(%ebp),%esi
	movl _parent_video__C2,%eax
	movl _color_light__N2N,%edx
	addl $-12,%esp
	pushl %edx
	call _color__E20B
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %ebx
	call _move_to__T20B
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl 16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _line_v_until__920B
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl 20(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _line_h_until__OU1B
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl _color_dark__M2N,%edx
	addl $-12,%esp
	pushl %edx
	call _color__E20B
	addl $16,%esp
	movl _parent_video__C2,%eax
	addl $-8,%esp
	pushl %esi
	pushl %ebx
	call _line_v_until__920B
	addl $16,%esp
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11182
	addl $-8,%esp
	pushl %edi
	pushl %ebx
	call _line_h_until__OU1B
	jmp L11183
	.p2align 2
L11182:
	addl $-8,%esp
	pushl %edi
	pushl %ebx
	call _line_h_until__OU1B
L11183:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_poly_move_to__252B:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl _parent_video__C2,%eax
	movl 8(%ebp),%edi
	cmpl $16,(%eax)
	jne L11193
	movl 36(%eax),%eax
	jmp L11194
	.p2align 2
L11193:
	movl 32(%eax),%eax
L11194:
	testl %eax,%eax
	jne L11195
	call _create_with_capacity__OM2
	movl _parent_video__C2,%edx
	cmpl $16,(%edx)
	jne L11196
	movl %eax,48(%edx)
	jmp L11197
	.p2align 2
L11196:
	movl %eax,44(%edx)
L11197:
	call _create__A52
	movl _parent_video__C2,%edx
	cmpl $16,(%edx)
	jne L11198
	movl %eax,36(%edx)
	jmp L11199
	.p2align 2
L11198:
	movl %eax,32(%edx)
L11199:
	xorl %esi,%esi
	jmp L11200
	.p2align 2
L11202:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11205
	movl 36(%eax),%ebx
	jmp L11206
	.p2align 2
L11205:
	movl 32(%eax),%ebx
L11206:
	addl $-4,%esp
	pushl %esi
	call _clone__GC3
	pushl %eax
	pushl %ebx
	call _put__to__KE3
	addl $16,%esp
	incl %esi
L11200:
	addl $-8,%esp
	pushl $63
	pushl %esi
	call ___infix_greater__3W
	addl $16,%esp
	testb %al,%al
	je L11202
L11195:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11212
	movl 40(%eax),%eax
	jmp L11213
	.p2align 2
L11212:
	movl 36(%eax),%eax
L11213:
	testl %eax,%eax
	je L11214
	movl _parent_video__C2,%eax
	addl $-12,%esp
	pushl %edi
	call _connect_first__882B
	addl $16,%esp
L11214:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11217
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %edi
	call _move_to__T20B
	jmp L11218
	.p2align 2
L11217:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %edi
	call _move_to__T20B
L11218:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11219
	movl 12(%ebp),%edx
	movl %edx,68(%eax)
	jmp L11220
	.p2align 2
L11219:
	movl 12(%ebp),%edx
	movl %edx,64(%eax)
L11220:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11221
	movl 16(%ebp),%edx
	movl %edx,72(%eax)
	jmp L11222
	.p2align 2
L11221:
	movl 16(%ebp),%edx
	movl %edx,68(%eax)
L11222:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11223
	movl $0,52(%eax)
	jmp L11224
	.p2align 2
L11223:
	movl $0,48(%eax)
L11224:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11225
	movl $0,60(%eax)
	jmp L11226
	.p2align 2
L11225:
	movl $0,56(%eax)
L11226:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11227
	movl 44(%eax),%ecx
	jmp L11228
	.p2align 2
L11227:
	movl 40(%eax),%ecx
L11228:
	movl 16(%ebp),%edx
	cmpl %edx,%ecx
	jle L11230
	movl %ecx,%edx
L11230:
	cmpl $16,(%eax)
	jne L11233
	movl %edx,44(%eax)
	jmp L11234
	.p2align 2
L11233:
	movl %edx,40(%eax)
L11234:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_poly_line_to__GA3B:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edx
	movl 32(%edx),%eax
	movl %eax,-4(%ebp)
	movl 36(%edx),%eax
	movl %eax,-8(%ebp)
	movl 12(%ebp),%eax
	cmpl %eax,-4(%ebp)
	jne L11237
	movl 16(%ebp),%eax
	cmpl %eax,-8(%ebp)
	je L11236
L11237:
	movl _parent_video__C2,%eax
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	pushl %edx
	call _move_to__T20B
	addl $16,%esp
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11240
	movl 40(%eax),%edx
	jmp L11241
	.p2align 2
L11240:
	movl 36(%eax),%edx
L11241:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11242
	movl 36(%eax),%eax
	jmp L11243
	.p2align 2
L11242:
	movl 32(%eax),%eax
L11243:
	movl 8(%eax),%eax
	addl $-4,%eax
	cmpl %eax,%edx
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L11244
	xorl %esi,%esi
	jmp L11249
	.p2align 2
L11251:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11254
	movl 36(%eax),%ebx
	jmp L11255
	.p2align 2
L11254:
	movl 32(%eax),%ebx
L11255:
	addl $-8,%esp
	call _clone__GC3
	pushl %eax
	pushl %ebx
	call _add_last__DQ3
	addl $16,%esp
	incl %esi
L11249:
	addl $-8,%esp
	pushl $15
	pushl %esi
	call ___infix_greater__3W
	addl $16,%esp
	testb %al,%al
	je L11251
L11244:
	movl 16(%ebp),%eax
	cmpl %eax,-8(%ebp)
	jne L11261
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11262
	movl 36(%eax),%edx
	jmp L11263
	.p2align 2
L11262:
	movl 32(%eax),%edx
L11263:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11264
	movl 40(%eax),%eax
	jmp L11265
	.p2align 2
L11264:
	movl 36(%eax),%eax
L11265:
	addl $-8,%esp
	pushl %eax
	pushl %edx
	call _item__L13
	movl %eax,%esi
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L11266
	movl 40(%eax),%ebx
	jmp L11267
	.p2align 2
L11266:
	movl 36(%eax),%ebx
L11267:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl _parent_video__C2,%edx
	addl $32,%esp
	cmpl $16,(%edx)
	jne L11270
	movl %eax,40(%edx)
	jmp L11271
	.p2align 2
L11270:
	movl %eax,36(%edx)
L11271:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11272
	movl 48(%eax),%eax
	jmp L11273
	.p2align 2
L11272:
	movl 44(%eax),%eax
L11273:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _add_last__P33
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L11274
	movl 36(%eax),%edx
	jmp L11275
	.p2align 2
L11274:
	movl 32(%eax),%edx
L11275:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11276
	movl 40(%eax),%eax
	jmp L11277
	.p2align 2
L11276:
	movl 36(%eax),%eax
L11277:
	addl $-8,%esp
	pushl %eax
	pushl %edx
	call _item__L13
	movl %eax,%edi
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L11278
	movl 40(%eax),%ebx
	jmp L11279
	.p2align 2
L11278:
	movl 36(%eax),%ebx
L11279:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl _parent_video__C2,%edx
	addl $32,%esp
	cmpl $16,(%edx)
	jne L11282
	movl %eax,40(%edx)
	jmp L11283
	.p2align 2
L11282:
	movl %eax,36(%edx)
L11283:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11284
	movl 48(%eax),%eax
	jmp L11285
	.p2align 2
L11284:
	movl 44(%eax),%eax
L11285:
	addl $-8,%esp
	pushl %edi
	pushl %eax
	call _add_last__P33
	movl 12(%ebp),%eax
	addl $16,%esp
	cmpl %eax,-4(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L11286
	pushl $1
	movl -8(%ebp),%eax
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	pushl %esi
	call _make__add__ND4
	addl $16,%esp
	pushl $-1
	jmp L11364
	.p2align 2
L11286:
	pushl $-1
	movl -8(%ebp),%eax
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	pushl %esi
	call _make__add__ND4
	addl $16,%esp
	pushl $1
L11364:
	movl 16(%ebp),%eax
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	pushl %edi
	call _make__add__ND4
	jmp L11236
	.p2align 2
L11261:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11300
	movl 36(%eax),%edx
	jmp L11301
	.p2align 2
L11300:
	movl 32(%eax),%edx
L11301:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11302
	movl 40(%eax),%eax
	jmp L11303
	.p2align 2
L11302:
	movl 36(%eax),%eax
L11303:
	addl $-8,%esp
	pushl %eax
	pushl %edx
	call _item__L13
	movl %eax,%esi
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L11304
	movl 40(%eax),%ebx
	jmp L11305
	.p2align 2
L11304:
	movl 36(%eax),%ebx
L11305:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl _parent_video__C2,%edx
	addl $32,%esp
	cmpl $16,(%edx)
	jne L11308
	movl %eax,40(%edx)
	jmp L11309
	.p2align 2
L11308:
	movl %eax,36(%edx)
L11309:
	movl 16(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	movl -8(%ebp),%eax
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	pushl %esi
	call _make__to__YF4
	movl _parent_video__C2,%eax
	addl $32,%esp
	cmpl $16,(%eax)
	jne L11310
	movl 52(%eax),%eax
	jmp L11311
	.p2align 2
L11310:
	movl 48(%eax),%eax
L11311:
	testl %eax,%eax
	jne L11312
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11313
	movl 48(%eax),%eax
	jmp L11314
	.p2align 2
L11313:
	movl 44(%eax),%eax
L11314:
	addl $-12,%esp
	pushl %eax
	call _count__YE3
	movl _parent_video__C2,%edx
	addl $16,%esp
	cmpl $16,(%edx)
	jne L11315
	movl %eax,56(%edx)
	jmp L11316
	.p2align 2
L11315:
	movl %eax,52(%edx)
L11316:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11317
	movl %esi,52(%eax)
	jmp L11312
	.p2align 2
L11317:
	movl %esi,48(%eax)
L11312:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11319
	movl 60(%eax),%edx
	jmp L11320
	.p2align 2
L11319:
	movl 56(%eax),%edx
L11320:
	testl %edx,%edx
	je L11363
	cmpl $16,(%eax)
	jne L11323
	movl 60(%eax),%edx
	jmp L11324
	.p2align 2
L11323:
	movl 56(%eax),%edx
L11324:
	movb 16(%esi),%cl
	cmpb %cl,16(%edx)
	je L11325
L11363:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11326
	movl 48(%eax),%eax
	jmp L11327
	.p2align 2
L11326:
	movl 44(%eax),%eax
L11327:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _add_last__P33
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11328
	movl 48(%eax),%eax
	jmp L11329
	.p2align 2
L11328:
	movl 44(%eax),%eax
L11329:
	movl 8(%eax),%edx
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11330
	movl %edx,64(%eax)
	jmp L11331
	.p2align 2
L11330:
	movl %edx,60(%eax)
L11331:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11332
	movl %esi,60(%eax)
	jmp L11333
	.p2align 2
L11332:
	movl %esi,56(%eax)
L11333:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11334
	movl 44(%eax),%ecx
	jmp L11335
	.p2align 2
L11334:
	movl 40(%eax),%ecx
L11335:
	movl 16(%ebp),%edx
	cmpl %edx,%ecx
	jle L11337
	movl %ecx,%edx
L11337:
	cmpl $16,(%eax)
	jne L11340
	movl %edx,44(%eax)
	jmp L11236
	.p2align 2
L11340:
	movl %edx,40(%eax)
	jmp L11236
	.p2align 2
L11325:
	testb %cl,%cl
	je L11343
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11344
	movl 60(%eax),%eax
	jmp L11345
	.p2align 2
L11344:
	movl 56(%eax),%eax
L11345:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _set_next_y__LO4
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11346
	movl 44(%eax),%eax
	jmp L11347
	.p2align 2
L11346:
	movl 40(%eax),%eax
L11347:
	movl 16(%ebp),%edx
	cmpl %edx,%eax
	jle L11349
	movl %eax,%edx
L11349:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11352
	movl %edx,44(%eax)
	jmp L11354
	.p2align 2
L11352:
	movl %edx,40(%eax)
	jmp L11354
	.p2align 2
L11343:
	cmpl $16,(%eax)
	jne L11355
	movl 48(%eax),%eax
	jmp L11356
	.p2align 2
L11355:
	movl 44(%eax),%eax
L11356:
	movl _parent_video__C2,%edx
	cmpl $16,(%edx)
	jne L11357
	movl 64(%edx),%edx
	jmp L11358
	.p2align 2
L11357:
	movl 60(%edx),%edx
L11358:
	addl $-4,%esp
	pushl %edx
	pushl %esi
	pushl %eax
	call _put__to__HP4
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L11359
	movl 60(%eax),%eax
	jmp L11360
	.p2align 2
L11359:
	movl 56(%eax),%eax
L11360:
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call _set_next_y__LO4
L11354:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11361
	movl %esi,60(%eax)
	jmp L11236
	.p2align 2
L11361:
	movl %esi,56(%eax)
L11236:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_poly_trace__5T3B:
	pushl %ebp
	movl %esp,%ebp
	subl $60,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-4(%ebp)
	movl $0,-16(%ebp)
	movl $0,-24(%ebp)
	movl $0,-12(%ebp)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11366
	movl 44(%eax),%edx
	jmp L11367
	.p2align 2
L11366:
	movl 40(%eax),%edx
L11367:
	movl 8(%ebp),%ecx
	addl $-8,%esp
	movl 20(%ecx),%eax
	cmpl %eax,%edx
	setg %bl
	pushl %eax
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L11368
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11371
	movl 8(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	jmp L11544
	.p2align 2
L11371:
	movl 8(%ebp),%edx
	addl $-12,%esp
	pushl %edx
L11544:
	call _connect_first__882B
	addl $16,%esp
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11373
	movl 48(%eax),%eax
	jmp L11374
	.p2align 2
L11373:
	movl 44(%eax),%eax
L11374:
	movl 8(%eax),%esi
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L11376
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11379
	movl 48(%eax),%eax
	jmp L11380
	.p2align 2
L11379:
	movl 44(%eax),%eax
L11380:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _item__L13
	movl %eax,%edi
	addl $16,%esp
	movl %esi,-40(%ebp)
	subl $1,-40(%ebp)
	jmp L11381
	.p2align 2
L11383:
	movl 20(%edi),%edi
L11381:
	testl %edi,%edi
	je L11542
	movl 8(%edi),%eax
	movl 8(%ebp),%ecx
	addl $-8,%esp
	movl 20(%ecx),%edx
	cmpl %edx,%eax
	setg %bl
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L11383
	jmp L11389
	.p2align 2
L11542:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11390
	movl 48(%eax),%eax
	jmp L11391
	.p2align 2
L11390:
	movl 44(%eax),%eax
L11391:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _remove__VU4
	jmp L11545
	.p2align 2
L11389:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11393
	movl 48(%eax),%eax
	jmp L11394
	.p2align 2
L11393:
	movl 44(%eax),%eax
L11394:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _put__to__HP4
L11545:
	addl $16,%esp
	movl -40(%ebp),%esi
	jmp L11397
	.p2align 2
L11399:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11402
	movl 48(%eax),%eax
	jmp L11403
	.p2align 2
L11402:
	movl 44(%eax),%eax
L11403:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _item__L13
	movl %eax,%edi
	addl $16,%esp
	movl %esi,-44(%ebp)
	subl $1,-44(%ebp)
	jmp L11404
	.p2align 2
L11406:
	movl 20(%edi),%edi
L11404:
	testl %edi,%edi
	je L11543
	movl 8(%edi),%eax
	movl 8(%ebp),%ecx
	addl $-8,%esp
	movl 20(%ecx),%edx
	cmpl %edx,%eax
	setg %bl
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L11406
	jmp L11412
	.p2align 2
L11543:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11413
	movl 48(%eax),%eax
	jmp L11414
	.p2align 2
L11413:
	movl 44(%eax),%eax
L11414:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _remove__VU4
	jmp L11546
	.p2align 2
L11412:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11416
	movl 48(%eax),%eax
	jmp L11417
	.p2align 2
L11416:
	movl 44(%eax),%eax
L11417:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _put__to__HP4
L11546:
	addl $16,%esp
	movl -44(%ebp),%esi
L11397:
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L11399
L11376:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11421
	call _sort_list_y__E63B
	jmp L11422
	.p2align 2
L11421:
	call _sort_list_y__E63B
L11422:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11423
	movl 44(%eax),%eax
	jmp L11424
	.p2align 2
L11423:
	movl 40(%eax),%eax
L11424:
	movl 8(%ebp),%edx
	movl 28(%edx),%ecx
	movl %eax,%edx
	cmpl %ecx,%edx
	jle L11426
	movl %ecx,%edx
L11426:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11429
	movl %edx,44(%eax)
	jmp L11430
	.p2align 2
L11429:
	movl %edx,40(%eax)
L11430:
	movl $1,-28(%ebp)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11432
	movl 44(%eax),%eax
	jmp L11547
	.p2align 2
L11432:
	movl 40(%eax),%eax
L11547:
	movl %eax,-32(%ebp)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11434
	movl 48(%eax),%eax
	jmp L11435
	.p2align 2
L11434:
	movl 44(%eax),%eax
L11435:
	addl $-12,%esp
	pushl %eax
	call _first__4R5
	movl (%eax),%eax
	movl -32(%ebp),%ecx
	movl %eax,-36(%ebp)
	addl $16,%esp
	cmpl %ecx,%eax
	jg L11368
	.p2align 2
L11441:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11442
	movl 48(%eax),%edx
	jmp L11443
	.p2align 2
L11442:
	movl 44(%eax),%edx
L11443:
	movl -12(%ebp),%ecx
	cmpl 8(%edx),%ecx
	jg L11444
	cmpl $16,(%eax)
	jne L11447
	movl 48(%eax),%eax
	jmp L11448
	.p2align 2
L11447:
	movl 44(%eax),%eax
L11448:
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call _item__L13
	movl -36(%ebp),%ecx
	addl $16,%esp
	cmpl %ecx,(%eax)
	sete %al
	jmp L11449
	.p2align 2
L11444:
	movb $0,%al
L11449:
	testb %al,%al
	je L11450
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11451
	movl 48(%eax),%eax
	jmp L11452
	.p2align 2
L11451:
	movl 44(%eax),%eax
L11452:
	movl -24(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -12(%ebp),%ecx
	addl $-8,%esp
	pushl %ecx
	pushl %eax
	call _item__L13
	addl $16,%esp
	pushl %eax
	call _add__IW5
	movl %eax,-24(%ebp)
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -12(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-12(%ebp)
	addl $32,%esp
	jmp L11441
	.p2align 2
L11450:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_longint__1J4
	pushl %edx
	pushl %eax
	addl $-12,%esp
	pushl $0
	call _to_longint__1J4
	addl $16,%esp
	pushl %edx
	pushl %eax
	call ___infix_sub__8K4
	pushl %edx
	pushl %eax
	call _maximum__XJ4
	pushl %edx
	pushl %eax
	call ___infix_sub__8K4
	pushl %edx
	pushl %eax
	call _force_conversion__IL4
	movl %eax,%edx
	sarl $31,%edx
	addl $64,%esp
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call _force_conversion__IL4
	movl -24(%ebp),%edi
	movl %eax,-8(%ebp)
	addl $16,%esp
	testl %edi,%edi
	je L11458
	.p2align 2
L11459:
	movl 28(%edi),%edx
	movl 8(%ebp),%ecx
	movl %edx,-20(%ebp)
	addl $-8,%esp
	movl 20(%ecx),%eax
	cmpl %eax,-36(%ebp)
	setg %bl
	pushl %eax
	movl -36(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L11460
	cmpl $0,-16(%ebp)
	jne L11463
	movl 4(%edi),%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl $127
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	sarl $8,%esi
	cmpl -8(%ebp),%esi
	je L11463
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -8(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	addl $32,%esp
	cmpl %eax,%esi
	je L11463
	movl 8(%ebp),%ecx
	movl -4(%ebp),%eax
	cmpl 24(%ecx),%eax
	jg L11470
	movl 16(%ecx),%eax
	cmpl %eax,-8(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -8(%ebp),%edx
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L11470
	movl 8(%ebp),%ecx
	movl 16(%ecx),%eax
	movl %eax,%ecx
	cmpl %ecx,-4(%ebp)
	jle L11476
	movl -4(%ebp),%ecx
L11476:
	movl 8(%ebp),%eax
	movl 24(%eax),%edx
	movl -8(%ebp),%eax
	cmpl %edx,%eax
	jle L11480
	movl %edx,%eax
L11480:
	movl %eax,-8(%ebp)
	movl _parent_video__C2,%edx
	cmpl $16,(%edx)
	jne L11483
	movl 32(%edx),%edx
	jmp L11484
	.p2align 2
L11483:
	movl 28(%edx),%edx
L11484:
	addl $-12,%esp
	pushl %edx
	pushl %eax
	movl -36(%ebp),%edx
	pushl %edx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call _line_h_hard__until__color__RY1B
	addl $32,%esp
L11470:
	movl %esi,-4(%ebp)
L11463:
	cmpb $0,17(%edi)
	je L11485
	movl 12(%edi),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-16(%ebp)
	addl $32,%esp
	jmp L11487
	.p2align 2
L11485:
	movl -28(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	movl -16(%ebp),%ecx
	pushl %ecx
	call ___infix_sub__F6B
	movl %eax,-16(%ebp)
	addl $32,%esp
	negl -28(%ebp)
L11487:
	cmpl $0,-16(%ebp)
	jne L11460
	movl 4(%edi),%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl $128
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,-8(%ebp)
	addl $32,%esp
	sarl $8,-8(%ebp)
L11460:
	cmpl $0,8(%edi)
	je L11496
	addl $-12,%esp
	pushl %edi
	call _new_step__D85
	movl 24(%edi),%esi
	addl $16,%esp
	jmp L11497
	.p2align 2
L11499:
	movl 24(%esi),%esi
L11497:
	testl %esi,%esi
	je L11498
	movl 4(%edi),%eax
	movl 4(%esi),%edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L11499
L11498:
	movl 24(%edi),%edx
	cmpl %edx,%esi
	je L11510
	movl 28(%edi),%eax
	addl $-8,%esp
	pushl %eax
	pushl %edx
	call _set_next_x__4A6
	addl $16,%esp
	cmpl $0,28(%edi)
	je L11506
	movl 24(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl 28(%edi),%eax
	pushl %eax
	call _set_prev_x__GB6
	addl $16,%esp
L11506:
	addl $-8,%esp
	pushl %esi
	pushl %edi
	call _set_prev_x__GB6
	addl $16,%esp
	testl %esi,%esi
	je L11507
	movl 28(%esi),%eax
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call _set_next_x__4A6
	addl $-8,%esp
	pushl %edi
	pushl %esi
	call _set_next_x__4A6
	addl $32,%esp
	jmp L11508
	.p2align 2
L11507:
	movl -24(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call _set_next_x__4A6
	movl %edi,-24(%ebp)
	addl $16,%esp
L11508:
	movl 28(%edi),%eax
	testl %eax,%eax
	je L11510
	addl $-8,%esp
	pushl %edi
	pushl %eax
	call _set_prev_x__GB6
	jmp L11548
	.p2align 2
L11496:
	movl -24(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %edi
	call _next_line__XB6
	movl %eax,-24(%ebp)
L11548:
	addl $16,%esp
L11510:
	movl -20(%ebp),%edi
	testl %edi,%edi
	jne L11459
L11458:
	movl 8(%ebp),%ecx
	movl -4(%ebp),%eax
	cmpl 24(%ecx),%eax
	jg L11512
	movl 16(%ecx),%eax
	cmpl %eax,-8(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -8(%ebp),%edx
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L11512
	movl 8(%ebp),%ecx
	movl 16(%ecx),%eax
	movl %eax,%ecx
	cmpl %ecx,-4(%ebp)
	jle L11518
	movl -4(%ebp),%ecx
L11518:
	movl 8(%ebp),%eax
	movl %ecx,-4(%ebp)
	movl 24(%eax),%edx
	movl -8(%ebp),%eax
	cmpl %edx,%eax
	jle L11522
	movl %edx,%eax
L11522:
	movl _parent_video__C2,%edx
	cmpl $16,(%edx)
	jne L11525
	movl 32(%edx),%edx
	jmp L11526
	.p2align 2
L11525:
	movl 28(%edx),%edx
L11526:
	addl $-12,%esp
	pushl %edx
	pushl %eax
	movl -36(%ebp),%edx
	pushl %edx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call _line_h_hard__until__color__RY1B
	addl $32,%esp
L11512:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -36(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -32(%ebp),%edx
	movl %eax,-36(%ebp)
	addl $32,%esp
	cmpl %edx,%eax
	jle L11441
L11368:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11530
	movl $0,40(%eax)
	jmp L11532
	.p2align 2
L11530:
	movl $0,36(%eax)
L11532:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11534
	movl 48(%eax),%eax
	jmp L11535
	.p2align 2
L11534:
	movl 44(%eax),%eax
L11535:
	addl $-12,%esp
	pushl %eax
	call _clear__PH6
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L11536
	movl $0,52(%eax)
	jmp L11537
	.p2align 2
L11536:
	movl $0,48(%eax)
L11537:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_longint__1J4
	pushl %edx
	pushl %eax
	addl $-12,%esp
	pushl $0
	call _to_longint__1J4
	addl $16,%esp
	pushl %edx
	pushl %eax
	call ___infix_sub__8K4
	pushl %edx
	pushl %eax
	call _maximum__XJ4
	pushl %edx
	pushl %eax
	call ___infix_sub__8K4
	pushl %edx
	pushl %eax
	call _force_conversion__IL4
	movl %eax,%edx
	sarl $31,%edx
	addl $64,%esp
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call _force_conversion__IL4
	movl _parent_video__C2,%edx
	cmpl $16,(%edx)
	jne L11540
	movl %eax,44(%edx)
	jmp L11541
	.p2align 2
L11540:
	movl %eax,40(%edx)
L11541:
	leal -72(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clipping__to__HW6B:
	pushl %ebp
	movl %esp,%ebp
	pushl %edi
	pushl %esi
	pushl %ebx
	xorl %eax,%eax
	movl 8(%ebp),%ebx
	movl 12(%ebp),%esi
	movl 20(%ebp),%edi
	movl 12(%ebx),%edx
	movl 8(%ebx),%ecx
	decl %edx
	decl %ecx
	testl %esi,%esi
	jle L11556
	movl %esi,%eax
L11556:
	cmpl %edx,%eax
	jle L11560
	movl %edx,%eax
L11560:
	movl %eax,16(%ebx)
	xorl %eax,%eax
	testl %edi,%edi
	jle L11565
	movl %edi,%eax
L11565:
	cmpl %edx,%eax
	jle L11569
	movl %edx,%eax
L11569:
	movl %eax,24(%ebx)
	xorl %eax,%eax
	cmpl $0,16(%ebp)
	jle L11574
	movl 16(%ebp),%eax
L11574:
	cmpl %ecx,%eax
	jle L11578
	movl %ecx,%eax
L11578:
	movl %eax,20(%ebx)
	xorl %eax,%eax
	cmpl $0,24(%ebp)
	jle L11583
	movl 24(%ebp),%eax
L11583:
	cmpl %ecx,%eax
	jle L11587
	movl %ecx,%eax
L11587:
	movl %eax,28(%ebx)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_h_until__TW7B:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%edi
	movl 8(%ebp),%edx
	movb $0,-5(%ebp)
	addl $-8,%esp
	movl 32(%eax),%eax
	movl %eax,-4(%ebp)
	movl 36(%edx),%esi
	movl 20(%edx),%ebx
	movl 28(%edx),%eax
	movl %edi,32(%edx)
	movl %eax,-12(%ebp)
	movl $0,-16(%ebp)
	pushl %ebx
	pushl %esi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%esi
	sete %al
	orb %dl,%al
	je L11601
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-16(%ebp)
L11601:
	cmpb $0,-16(%ebp)
	je L11599
	movb $1,-5(%ebp)
	cmpl %edi,-4(%ebp)
	jle L11603
	movl -4(%ebp),%eax
	movl %edi,-4(%ebp)
	movl %eax,%edi
L11603:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 24(%edx),%eax
	cmpl %edi,%eax
	setg %bl
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L11605
	movl 8(%ebp),%eax
	movl 24(%eax),%edi
	movb $0,-5(%ebp)
L11605:
	movl 8(%ebp),%edx
	movl 16(%edx),%eax
	cmpl -4(%ebp),%eax
	jle L11609
	movl %eax,-4(%ebp)
	movb $0,-5(%ebp)
L11609:
	cmpl %edi,-4(%ebp)
	jg L11599
	movl 8(%ebp),%eax
	movl 36(%eax),%edx
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11614
	movl 32(%eax),%eax
	jmp L11615
	.p2align 2
L11614:
	movl 28(%eax),%eax
L11615:
	addl $-12,%esp
	pushl %eax
	pushl %edi
	pushl %edx
	movl -4(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _line_h_hard__until__color__K07B
L11599:
	leal -40(%ebp),%esp
	movsbl -5(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_to__3J8B:
	pushl %ebp
	movl %esp,%ebp
	subl $60,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 8(%ebp),%edx
	movl 16(%ebp),%edi
	movl 32(%eax),%eax
	movl %eax,-4(%ebp)
	movl 36(%edx),%edx
	movl 12(%ebp),%eax
	movl %edx,-8(%ebp)
	movl -4(%ebp),%edx
	movl %eax,-12(%ebp)
	subl %edx,-12(%ebp)
	subl -8(%ebp),%edi
	jne L11619
	movl _parent_video__C2,%eax
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _line_h_until__TW7B
	jmp L11624
	.p2align 2
L11619:
	cmpl $0,-12(%ebp)
	jne L11625
	movl _parent_video__C2,%eax
	movl 16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _line_v_until__H06B
	jmp L11624
	.p2align 2
L11625:
	movl 12(%ebp),%edx
	movl 8(%ebp),%eax
	movl %edx,32(%eax)
	movl 16(%ebp),%edx
	movl %edx,36(%eax)
	cmpl $0,-12(%ebp)
	setg %bl
	addl $-8,%esp
	pushl $0
	movl -12(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L11629
	testl %edi,%edi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L11633
	cmpl %edi,-12(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %edi
	movl -12(%ebp),%edx
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L11637
	leal (%edi,%edi),%eax
	movl %eax,-24(%ebp)
	movl %eax,%esi
	movl -12(%ebp),%eax
	movl -4(%ebp),%edx
	movl -8(%ebp),%edi
	subl -12(%ebp),%esi
	movl %esi,-16(%ebp)
	subl %eax,-16(%ebp)
	movl 12(%ebp),%eax
	movl %edx,-20(%ebp)
	cmpl %eax,%edx
	jg L11624
	.p2align 2
L11647:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _pixel_to__7R8B
	addl $16,%esp
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L11652
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl -16(%ebp),%edx
	movl %eax,%edi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	jmp L11869
	.p2align 2
L11652:
	movl -24(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
L11869:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl 12(%ebp),%edx
	movl %eax,-20(%ebp)
	addl $32,%esp
	cmpl %edx,%eax
	jle L11647
	jmp L11624
	.p2align 2
L11637:
	movl -12(%ebp),%eax
	addl %eax,%eax
	movl %eax,-28(%ebp)
	movl %eax,%esi
	movl -4(%ebp),%eax
	subl %edi,%esi
	movl %esi,-16(%ebp)
	subl %edi,-16(%ebp)
	movl -8(%ebp),%edi
	movl %eax,-20(%ebp)
	cmpl 16(%ebp),%edi
	jg L11624
	.p2align 2
L11672:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _pixel_to__7R8B
	addl $16,%esp
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L11677
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl %eax,-20(%ebp)
	movl -16(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	jmp L11870
	.p2align 2
L11677:
	movl -28(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
L11870:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
	cmpl 16(%ebp),%edi
	jle L11672
	jmp L11624
	.p2align 2
L11633:
	movl %edi,%eax
	negl %eax
	cmpl %eax,-12(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -12(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L11690
	movl -12(%ebp),%edx
	leal (%edi,%edi),%eax
	movl %eax,%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%esi
	movl -12(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl -8(%ebp),%edi
	movl %eax,-16(%ebp)
	movl 12(%ebp),%eax
	addl $32,%esp
	movl %edx,-20(%ebp)
	cmpl %eax,%edx
	jg L11624
	.p2align 2
L11703:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _pixel_to__7R8B
	addl $16,%esp
	testl %esi,%esi
	jg L11708
	movl -16(%ebp),%edx
	subl $1,%edi
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	jmp L11871
	.p2align 2
L11708:
	addl $-8,%esp
	addl $-12,%esp
	pushl %ebx
L11871:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 12(%ebp),%edx
	movl %eax,-20(%ebp)
	addl $32,%esp
	cmpl %edx,%eax
	jle L11703
	jmp L11624
	.p2align 2
L11690:
	movl -12(%ebp),%eax
	addl %eax,%eax
	movl %eax,-32(%ebp)
	addl $-8,%esp
	addl $-12,%esp
	pushl %edi
	call ___prefix_sub__05B
	pushl %eax
	movl -32(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edi
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl -8(%ebp),%edi
	movl %eax,-16(%ebp)
	addl $32,%esp
	movl %edx,-20(%ebp)
	jmp L11726
	.p2align 2
L11728:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _pixel_to__7R8B
	addl $16,%esp
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L11733
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -16(%ebp),%edx
	movl %eax,-20(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	jmp L11872
	.p2align 2
L11733:
	movl -32(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
L11872:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl $1,%edi
L11726:
	movl 16(%ebp),%edx
	cmpl 16(%ebp),%edi
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L11728
	jmp L11624
	.p2align 2
L11629:
	testl %edi,%edi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L11746
	movl -12(%ebp),%eax
	negl %eax
	cmpl %edi,%eax
	setg %bl
	addl $-8,%esp
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L11750
	leal (%edi,%edi),%eax
	movl %eax,-36(%ebp)
	movl -12(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -36(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl %eax,%esi
	movl -12(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl -8(%ebp),%edi
	movl %eax,-16(%ebp)
	addl $32,%esp
	movl %edx,-20(%ebp)
	jmp L11761
	.p2align 2
L11763:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _pixel_to__7R8B
	addl $16,%esp
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L11768
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	movl -16(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	jmp L11873
	.p2align 2
L11768:
	movl -36(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
L11873:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl $1,-20(%ebp)
L11761:
	movl 12(%ebp),%eax
	cmpl %eax,-20(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -20(%ebp),%edx
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L11763
	jmp L11624
	.p2align 2
L11750:
	movl -12(%ebp),%eax
	addl %eax,%eax
	movl %eax,%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl %edi
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edi
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,-16(%ebp)
	movl -4(%ebp),%eax
	movl -8(%ebp),%edi
	addl $32,%esp
	movl %eax,-20(%ebp)
	cmpl 16(%ebp),%edi
	jg L11624
	.p2align 2
L11788:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _pixel_to__7R8B
	addl $16,%esp
	testl %esi,%esi
	jg L11793
	movl -16(%ebp),%edx
	subl $1,-20(%ebp)
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	jmp L11874
	.p2align 2
L11793:
	addl $-8,%esp
	addl $-12,%esp
	pushl %ebx
L11874:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
	cmpl 16(%ebp),%edi
	jle L11788
	jmp L11624
	.p2align 2
L11746:
	movl -12(%ebp),%eax
	negl %eax
	movl %edi,%edx
	negl %edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L11806
	leal (%edi,%edi),%eax
	movl %eax,-40(%ebp)
	movl %eax,%esi
	movl -12(%ebp),%eax
	movl -4(%ebp),%edx
	movl -8(%ebp),%edi
	subl -12(%ebp),%esi
	movl %esi,-16(%ebp)
	subl %eax,-16(%ebp)
	movl %edx,-20(%ebp)
	jmp L11820
	.p2align 2
L11822:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _pixel_to__7R8B
	addl $16,%esp
	testl %esi,%esi
	jg L11827
	movl -16(%ebp),%eax
	subl $1,%edi
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	jmp L11875
	.p2align 2
L11827:
	movl -40(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
L11875:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl $1,-20(%ebp)
L11820:
	movl 12(%ebp),%eax
	cmpl %eax,-20(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -20(%ebp),%edx
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L11822
	jmp L11624
	.p2align 2
L11806:
	movl -12(%ebp),%eax
	movl -4(%ebp),%edx
	addl %eax,%eax
	movl %eax,%esi
	subl %edi,%esi
	movl %esi,-16(%ebp)
	subl %edi,-16(%ebp)
	movl -8(%ebp),%edi
	movl %eax,-44(%ebp)
	movl %edx,-20(%ebp)
	jmp L11845
	.p2align 2
L11847:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _pixel_to__7R8B
	addl $16,%esp
	testl %esi,%esi
	jg L11852
	movl -16(%ebp),%eax
	decl -20(%ebp)
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	jmp L11876
	.p2align 2
L11852:
	movl -44(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
L11876:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl $1,%edi
L11845:
	movl 16(%ebp),%eax
	cmpl 16(%ebp),%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L11847
L11624:
	leal -72(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_v__until__color__ZQ9B:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%edi
	movl 16(%ebp),%ecx
	movl 20(%ebp),%esi
	movl _parent_video__C2,%eax
	movl 24(%ebp),%edx
	cmpl $16,(%eax)
	jne L11895
	movl %edx,32(%eax)
	jmp L11899
	.p2align 2
L11895:
	movl %edx,28(%eax)
L11899:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11903
	addl $-4,%esp
	pushl %ecx
	pushl %edi
	pushl %ebx
	call _move_to__4Z6B
	movl _parent_video__C2,%eax
	addl $16,%esp
	jmp L11915
	.p2align 2
L11903:
	addl $-4,%esp
	pushl %ecx
	pushl %edi
	pushl %ebx
	call _move_to__4Z6B
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L11912
L11915:
	addl $-8,%esp
	pushl %esi
	pushl %ebx
	call _line_v_until__H06B
	jmp L11909
	.p2align 2
L11912:
	addl $-8,%esp
	pushl %esi
	pushl %ebx
	call _line_v_until__H06B
L11909:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_poly_move_to__SV9B:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl _parent_video__C2,%eax
	movl 8(%ebp),%edi
	cmpl $16,(%eax)
	jne L11933
	movl 36(%eax),%eax
	jmp L11934
	.p2align 2
L11933:
	movl 32(%eax),%eax
L11934:
	testl %eax,%eax
	jne L11935
	call _create_with_capacity__OM2
	movl _parent_video__C2,%edx
	cmpl $16,(%edx)
	jne L11936
	movl %eax,48(%edx)
	jmp L11937
	.p2align 2
L11936:
	movl %eax,44(%edx)
L11937:
	call _create__A52
	movl _parent_video__C2,%edx
	cmpl $16,(%edx)
	jne L11938
	movl %eax,36(%edx)
	jmp L11939
	.p2align 2
L11938:
	movl %eax,32(%edx)
L11939:
	xorl %esi,%esi
	jmp L11940
	.p2align 2
L11942:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11945
	movl 36(%eax),%ebx
	jmp L11946
	.p2align 2
L11945:
	movl 32(%eax),%ebx
L11946:
	addl $-4,%esp
	pushl %esi
	call _clone__GC3
	pushl %eax
	pushl %ebx
	call _put__to__KE3
	addl $16,%esp
	incl %esi
L11940:
	addl $-8,%esp
	pushl $63
	pushl %esi
	call ___infix_greater__3W
	addl $16,%esp
	testb %al,%al
	je L11942
L11935:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11952
	movl 40(%eax),%eax
	jmp L11953
	.p2align 2
L11952:
	movl 36(%eax),%eax
L11953:
	testl %eax,%eax
	je L11954
	movl _parent_video__C2,%eax
	addl $-12,%esp
	pushl %edi
	call _connect_first__SY9B
	addl $16,%esp
L11954:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11957
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %edi
	call _move_to__4Z6B
	jmp L11958
	.p2align 2
L11957:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %edi
	call _move_to__4Z6B
L11958:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11959
	movl 12(%ebp),%edx
	movl %edx,68(%eax)
	jmp L11960
	.p2align 2
L11959:
	movl 12(%ebp),%edx
	movl %edx,64(%eax)
L11960:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11961
	movl 16(%ebp),%edx
	movl %edx,72(%eax)
	jmp L11962
	.p2align 2
L11961:
	movl 16(%ebp),%edx
	movl %edx,68(%eax)
L11962:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11963
	movl $0,52(%eax)
	jmp L11964
	.p2align 2
L11963:
	movl $0,48(%eax)
L11964:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11965
	movl $0,60(%eax)
	jmp L11966
	.p2align 2
L11965:
	movl $0,56(%eax)
L11966:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11967
	movl 44(%eax),%ecx
	jmp L11968
	.p2align 2
L11967:
	movl 40(%eax),%ecx
L11968:
	movl 16(%ebp),%edx
	cmpl %edx,%ecx
	jle L11970
	movl %ecx,%edx
L11970:
	cmpl $16,(%eax)
	jne L11973
	movl %edx,44(%eax)
	jmp L11974
	.p2align 2
L11973:
	movl %edx,40(%eax)
L11974:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_poly_line_to__XZ9B:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edx
	movl 32(%edx),%eax
	movl %eax,-4(%ebp)
	movl 36(%edx),%eax
	movl %eax,-8(%ebp)
	movl 12(%ebp),%eax
	cmpl %eax,-4(%ebp)
	jne L11977
	movl 16(%ebp),%eax
	cmpl %eax,-8(%ebp)
	je L11976
L11977:
	movl _parent_video__C2,%eax
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	pushl %edx
	call _move_to__4Z6B
	addl $16,%esp
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11980
	movl 40(%eax),%edx
	jmp L11981
	.p2align 2
L11980:
	movl 36(%eax),%edx
L11981:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11982
	movl 36(%eax),%eax
	jmp L11983
	.p2align 2
L11982:
	movl 32(%eax),%eax
L11983:
	movl 8(%eax),%eax
	addl $-4,%eax
	cmpl %eax,%edx
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L11984
	xorl %esi,%esi
	jmp L11989
	.p2align 2
L11991:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11994
	movl 36(%eax),%ebx
	jmp L11995
	.p2align 2
L11994:
	movl 32(%eax),%ebx
L11995:
	addl $-8,%esp
	call _clone__GC3
	pushl %eax
	pushl %ebx
	call _add_last__DQ3
	addl $16,%esp
	incl %esi
L11989:
	addl $-8,%esp
	pushl $15
	pushl %esi
	call ___infix_greater__3W
	addl $16,%esp
	testb %al,%al
	je L11991
L11984:
	movl 16(%ebp),%eax
	cmpl %eax,-8(%ebp)
	jne L12001
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12002
	movl 36(%eax),%edx
	jmp L12003
	.p2align 2
L12002:
	movl 32(%eax),%edx
L12003:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12004
	movl 40(%eax),%eax
	jmp L12005
	.p2align 2
L12004:
	movl 36(%eax),%eax
L12005:
	addl $-8,%esp
	pushl %eax
	pushl %edx
	call _item__L13
	movl %eax,%esi
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L12006
	movl 40(%eax),%ebx
	jmp L12007
	.p2align 2
L12006:
	movl 36(%eax),%ebx
L12007:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl _parent_video__C2,%edx
	addl $32,%esp
	cmpl $16,(%edx)
	jne L12010
	movl %eax,40(%edx)
	jmp L12011
	.p2align 2
L12010:
	movl %eax,36(%edx)
L12011:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12012
	movl 48(%eax),%eax
	jmp L12013
	.p2align 2
L12012:
	movl 44(%eax),%eax
L12013:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _add_last__P33
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L12014
	movl 36(%eax),%edx
	jmp L12015
	.p2align 2
L12014:
	movl 32(%eax),%edx
L12015:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12016
	movl 40(%eax),%eax
	jmp L12017
	.p2align 2
L12016:
	movl 36(%eax),%eax
L12017:
	addl $-8,%esp
	pushl %eax
	pushl %edx
	call _item__L13
	movl %eax,%edi
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L12018
	movl 40(%eax),%ebx
	jmp L12019
	.p2align 2
L12018:
	movl 36(%eax),%ebx
L12019:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl _parent_video__C2,%edx
	addl $32,%esp
	cmpl $16,(%edx)
	jne L12022
	movl %eax,40(%edx)
	jmp L12023
	.p2align 2
L12022:
	movl %eax,36(%edx)
L12023:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12024
	movl 48(%eax),%eax
	jmp L12025
	.p2align 2
L12024:
	movl 44(%eax),%eax
L12025:
	addl $-8,%esp
	pushl %edi
	pushl %eax
	call _add_last__P33
	movl 12(%ebp),%eax
	addl $16,%esp
	cmpl %eax,-4(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L12026
	pushl $1
	movl -8(%ebp),%eax
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	pushl %esi
	call _make__add__ND4
	addl $16,%esp
	pushl $-1
	jmp L12104
	.p2align 2
L12026:
	pushl $-1
	movl -8(%ebp),%eax
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	pushl %esi
	call _make__add__ND4
	addl $16,%esp
	pushl $1
L12104:
	movl 16(%ebp),%eax
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	pushl %edi
	call _make__add__ND4
	jmp L11976
	.p2align 2
L12001:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12040
	movl 36(%eax),%edx
	jmp L12041
	.p2align 2
L12040:
	movl 32(%eax),%edx
L12041:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12042
	movl 40(%eax),%eax
	jmp L12043
	.p2align 2
L12042:
	movl 36(%eax),%eax
L12043:
	addl $-8,%esp
	pushl %eax
	pushl %edx
	call _item__L13
	movl %eax,%esi
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L12044
	movl 40(%eax),%ebx
	jmp L12045
	.p2align 2
L12044:
	movl 36(%eax),%ebx
L12045:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl _parent_video__C2,%edx
	addl $32,%esp
	cmpl $16,(%edx)
	jne L12048
	movl %eax,40(%edx)
	jmp L12049
	.p2align 2
L12048:
	movl %eax,36(%edx)
L12049:
	movl 16(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	movl -8(%ebp),%eax
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	pushl %esi
	call _make__to__YF4
	movl _parent_video__C2,%eax
	addl $32,%esp
	cmpl $16,(%eax)
	jne L12050
	movl 52(%eax),%eax
	jmp L12051
	.p2align 2
L12050:
	movl 48(%eax),%eax
L12051:
	testl %eax,%eax
	jne L12052
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12053
	movl 48(%eax),%eax
	jmp L12054
	.p2align 2
L12053:
	movl 44(%eax),%eax
L12054:
	addl $-12,%esp
	pushl %eax
	call _count__YE3
	movl _parent_video__C2,%edx
	addl $16,%esp
	cmpl $16,(%edx)
	jne L12055
	movl %eax,56(%edx)
	jmp L12056
	.p2align 2
L12055:
	movl %eax,52(%edx)
L12056:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12057
	movl %esi,52(%eax)
	jmp L12052
	.p2align 2
L12057:
	movl %esi,48(%eax)
L12052:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12059
	movl 60(%eax),%edx
	jmp L12060
	.p2align 2
L12059:
	movl 56(%eax),%edx
L12060:
	testl %edx,%edx
	je L12103
	cmpl $16,(%eax)
	jne L12063
	movl 60(%eax),%edx
	jmp L12064
	.p2align 2
L12063:
	movl 56(%eax),%edx
L12064:
	movb 16(%esi),%cl
	cmpb %cl,16(%edx)
	je L12065
L12103:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12066
	movl 48(%eax),%eax
	jmp L12067
	.p2align 2
L12066:
	movl 44(%eax),%eax
L12067:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _add_last__P33
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12068
	movl 48(%eax),%eax
	jmp L12069
	.p2align 2
L12068:
	movl 44(%eax),%eax
L12069:
	movl 8(%eax),%edx
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12070
	movl %edx,64(%eax)
	jmp L12071
	.p2align 2
L12070:
	movl %edx,60(%eax)
L12071:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12072
	movl %esi,60(%eax)
	jmp L12073
	.p2align 2
L12072:
	movl %esi,56(%eax)
L12073:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12074
	movl 44(%eax),%ecx
	jmp L12075
	.p2align 2
L12074:
	movl 40(%eax),%ecx
L12075:
	movl 16(%ebp),%edx
	cmpl %edx,%ecx
	jle L12077
	movl %ecx,%edx
L12077:
	cmpl $16,(%eax)
	jne L12080
	movl %edx,44(%eax)
	jmp L11976
	.p2align 2
L12080:
	movl %edx,40(%eax)
	jmp L11976
	.p2align 2
L12065:
	testb %cl,%cl
	je L12083
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12084
	movl 60(%eax),%eax
	jmp L12085
	.p2align 2
L12084:
	movl 56(%eax),%eax
L12085:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _set_next_y__LO4
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12086
	movl 44(%eax),%eax
	jmp L12087
	.p2align 2
L12086:
	movl 40(%eax),%eax
L12087:
	movl 16(%ebp),%edx
	cmpl %edx,%eax
	jle L12089
	movl %eax,%edx
L12089:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12092
	movl %edx,44(%eax)
	jmp L12094
	.p2align 2
L12092:
	movl %edx,40(%eax)
	jmp L12094
	.p2align 2
L12083:
	cmpl $16,(%eax)
	jne L12095
	movl 48(%eax),%eax
	jmp L12096
	.p2align 2
L12095:
	movl 44(%eax),%eax
L12096:
	movl _parent_video__C2,%edx
	cmpl $16,(%edx)
	jne L12097
	movl 64(%edx),%edx
	jmp L12098
	.p2align 2
L12097:
	movl 60(%edx),%edx
L12098:
	addl $-4,%esp
	pushl %edx
	pushl %esi
	pushl %eax
	call _put__to__HP4
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L12099
	movl 60(%eax),%eax
	jmp L12100
	.p2align 2
L12099:
	movl 56(%eax),%eax
L12100:
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call _set_next_y__LO4
L12094:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12101
	movl %esi,60(%eax)
	jmp L11976
	.p2align 2
L12101:
	movl %esi,56(%eax)
L11976:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_poly_trace__KHAC:
	pushl %ebp
	movl %esp,%ebp
	subl $60,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-4(%ebp)
	movl $0,-16(%ebp)
	movl $0,-24(%ebp)
	movl $0,-12(%ebp)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12106
	movl 44(%eax),%edx
	jmp L12107
	.p2align 2
L12106:
	movl 40(%eax),%edx
L12107:
	movl 8(%ebp),%ecx
	addl $-8,%esp
	movl 20(%ecx),%eax
	cmpl %eax,%edx
	setg %bl
	pushl %eax
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L12108
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12111
	movl 8(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	jmp L12284
	.p2align 2
L12111:
	movl 8(%ebp),%edx
	addl $-12,%esp
	pushl %edx
L12284:
	call _connect_first__SY9B
	addl $16,%esp
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12113
	movl 48(%eax),%eax
	jmp L12114
	.p2align 2
L12113:
	movl 44(%eax),%eax
L12114:
	movl 8(%eax),%esi
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L12116
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12119
	movl 48(%eax),%eax
	jmp L12120
	.p2align 2
L12119:
	movl 44(%eax),%eax
L12120:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _item__L13
	movl %eax,%edi
	addl $16,%esp
	movl %esi,-40(%ebp)
	subl $1,-40(%ebp)
	jmp L12121
	.p2align 2
L12123:
	movl 20(%edi),%edi
L12121:
	testl %edi,%edi
	je L12282
	movl 8(%edi),%eax
	movl 8(%ebp),%ecx
	addl $-8,%esp
	movl 20(%ecx),%edx
	cmpl %edx,%eax
	setg %bl
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L12123
	jmp L12129
	.p2align 2
L12282:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12130
	movl 48(%eax),%eax
	jmp L12131
	.p2align 2
L12130:
	movl 44(%eax),%eax
L12131:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _remove__VU4
	jmp L12285
	.p2align 2
L12129:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12133
	movl 48(%eax),%eax
	jmp L12134
	.p2align 2
L12133:
	movl 44(%eax),%eax
L12134:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _put__to__HP4
L12285:
	addl $16,%esp
	movl -40(%ebp),%esi
	jmp L12137
	.p2align 2
L12139:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12142
	movl 48(%eax),%eax
	jmp L12143
	.p2align 2
L12142:
	movl 44(%eax),%eax
L12143:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _item__L13
	movl %eax,%edi
	addl $16,%esp
	movl %esi,-44(%ebp)
	subl $1,-44(%ebp)
	jmp L12144
	.p2align 2
L12146:
	movl 20(%edi),%edi
L12144:
	testl %edi,%edi
	je L12283
	movl 8(%edi),%eax
	movl 8(%ebp),%ecx
	addl $-8,%esp
	movl 20(%ecx),%edx
	cmpl %edx,%eax
	setg %bl
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L12146
	jmp L12152
	.p2align 2
L12283:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12153
	movl 48(%eax),%eax
	jmp L12154
	.p2align 2
L12153:
	movl 44(%eax),%eax
L12154:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _remove__VU4
	jmp L12286
	.p2align 2
L12152:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12156
	movl 48(%eax),%eax
	jmp L12157
	.p2align 2
L12156:
	movl 44(%eax),%eax
L12157:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _put__to__HP4
L12286:
	addl $16,%esp
	movl -44(%ebp),%esi
L12137:
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L12139
L12116:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12161
	call _sort_list_y__GTAC
	jmp L12162
	.p2align 2
L12161:
	call _sort_list_y__GTAC
L12162:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12163
	movl 44(%eax),%eax
	jmp L12164
	.p2align 2
L12163:
	movl 40(%eax),%eax
L12164:
	movl 8(%ebp),%edx
	movl 28(%edx),%ecx
	movl %eax,%edx
	cmpl %ecx,%edx
	jle L12166
	movl %ecx,%edx
L12166:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12169
	movl %edx,44(%eax)
	jmp L12170
	.p2align 2
L12169:
	movl %edx,40(%eax)
L12170:
	movl $1,-28(%ebp)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12172
	movl 44(%eax),%eax
	jmp L12287
	.p2align 2
L12172:
	movl 40(%eax),%eax
L12287:
	movl %eax,-32(%ebp)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12174
	movl 48(%eax),%eax
	jmp L12175
	.p2align 2
L12174:
	movl 44(%eax),%eax
L12175:
	addl $-12,%esp
	pushl %eax
	call _first__4R5
	movl (%eax),%eax
	movl -32(%ebp),%ecx
	movl %eax,-36(%ebp)
	addl $16,%esp
	cmpl %ecx,%eax
	jg L12108
	.p2align 2
L12181:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12182
	movl 48(%eax),%edx
	jmp L12183
	.p2align 2
L12182:
	movl 44(%eax),%edx
L12183:
	movl -12(%ebp),%ecx
	cmpl 8(%edx),%ecx
	jg L12184
	cmpl $16,(%eax)
	jne L12187
	movl 48(%eax),%eax
	jmp L12188
	.p2align 2
L12187:
	movl 44(%eax),%eax
L12188:
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call _item__L13
	movl -36(%ebp),%ecx
	addl $16,%esp
	cmpl %ecx,(%eax)
	sete %al
	jmp L12189
	.p2align 2
L12184:
	movb $0,%al
L12189:
	testb %al,%al
	je L12190
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12191
	movl 48(%eax),%eax
	jmp L12192
	.p2align 2
L12191:
	movl 44(%eax),%eax
L12192:
	movl -24(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -12(%ebp),%ecx
	addl $-8,%esp
	pushl %ecx
	pushl %eax
	call _item__L13
	addl $16,%esp
	pushl %eax
	call _add__IW5
	movl %eax,-24(%ebp)
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -12(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-12(%ebp)
	addl $32,%esp
	jmp L12181
	.p2align 2
L12190:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_longint__1J4
	pushl %edx
	pushl %eax
	addl $-12,%esp
	pushl $0
	call _to_longint__1J4
	addl $16,%esp
	pushl %edx
	pushl %eax
	call ___infix_sub__8K4
	pushl %edx
	pushl %eax
	call _maximum__XJ4
	pushl %edx
	pushl %eax
	call ___infix_sub__8K4
	pushl %edx
	pushl %eax
	call _force_conversion__IL4
	movl %eax,%edx
	sarl $31,%edx
	addl $64,%esp
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call _force_conversion__IL4
	movl -24(%ebp),%edi
	movl %eax,-8(%ebp)
	addl $16,%esp
	testl %edi,%edi
	je L12198
	.p2align 2
L12199:
	movl 28(%edi),%edx
	movl 8(%ebp),%ecx
	movl %edx,-20(%ebp)
	addl $-8,%esp
	movl 20(%ecx),%eax
	cmpl %eax,-36(%ebp)
	setg %bl
	pushl %eax
	movl -36(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L12200
	cmpl $0,-16(%ebp)
	jne L12203
	movl 4(%edi),%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl $127
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	sarl $8,%esi
	cmpl -8(%ebp),%esi
	je L12203
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -8(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	addl $32,%esp
	cmpl %eax,%esi
	je L12203
	movl 8(%ebp),%ecx
	movl -4(%ebp),%eax
	cmpl 24(%ecx),%eax
	jg L12210
	movl 16(%ecx),%eax
	cmpl %eax,-8(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -8(%ebp),%edx
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L12210
	movl 8(%ebp),%ecx
	movl 16(%ecx),%eax
	movl %eax,%ecx
	cmpl %ecx,-4(%ebp)
	jle L12216
	movl -4(%ebp),%ecx
L12216:
	movl 8(%ebp),%eax
	movl 24(%eax),%edx
	movl -8(%ebp),%eax
	cmpl %edx,%eax
	jle L12220
	movl %edx,%eax
L12220:
	movl %eax,-8(%ebp)
	movl _parent_video__C2,%edx
	cmpl $16,(%edx)
	jne L12223
	movl 32(%edx),%edx
	jmp L12224
	.p2align 2
L12223:
	movl 28(%edx),%edx
L12224:
	addl $-12,%esp
	pushl %edx
	pushl %eax
	movl -36(%ebp),%edx
	pushl %edx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call _line_h_hard__until__color__K07B
	addl $32,%esp
L12210:
	movl %esi,-4(%ebp)
L12203:
	cmpb $0,17(%edi)
	je L12225
	movl 12(%edi),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-16(%ebp)
	addl $32,%esp
	jmp L12227
	.p2align 2
L12225:
	movl -28(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	movl -16(%ebp),%ecx
	pushl %ecx
	call ___infix_sub__F6B
	movl %eax,-16(%ebp)
	addl $32,%esp
	negl -28(%ebp)
L12227:
	cmpl $0,-16(%ebp)
	jne L12200
	movl 4(%edi),%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl $128
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,-8(%ebp)
	addl $32,%esp
	sarl $8,-8(%ebp)
L12200:
	cmpl $0,8(%edi)
	je L12236
	addl $-12,%esp
	pushl %edi
	call _new_step__D85
	movl 24(%edi),%esi
	addl $16,%esp
	jmp L12237
	.p2align 2
L12239:
	movl 24(%esi),%esi
L12237:
	testl %esi,%esi
	je L12238
	movl 4(%edi),%eax
	movl 4(%esi),%edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L12239
L12238:
	movl 24(%edi),%edx
	cmpl %edx,%esi
	je L12250
	movl 28(%edi),%eax
	addl $-8,%esp
	pushl %eax
	pushl %edx
	call _set_next_x__4A6
	addl $16,%esp
	cmpl $0,28(%edi)
	je L12246
	movl 24(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl 28(%edi),%eax
	pushl %eax
	call _set_prev_x__GB6
	addl $16,%esp
L12246:
	addl $-8,%esp
	pushl %esi
	pushl %edi
	call _set_prev_x__GB6
	addl $16,%esp
	testl %esi,%esi
	je L12247
	movl 28(%esi),%eax
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call _set_next_x__4A6
	addl $-8,%esp
	pushl %edi
	pushl %esi
	call _set_next_x__4A6
	addl $32,%esp
	jmp L12248
	.p2align 2
L12247:
	movl -24(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call _set_next_x__4A6
	movl %edi,-24(%ebp)
	addl $16,%esp
L12248:
	movl 28(%edi),%eax
	testl %eax,%eax
	je L12250
	addl $-8,%esp
	pushl %edi
	pushl %eax
	call _set_prev_x__GB6
	jmp L12288
	.p2align 2
L12236:
	movl -24(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %edi
	call _next_line__XB6
	movl %eax,-24(%ebp)
L12288:
	addl $16,%esp
L12250:
	movl -20(%ebp),%edi
	testl %edi,%edi
	jne L12199
L12198:
	movl 8(%ebp),%ecx
	movl -4(%ebp),%eax
	cmpl 24(%ecx),%eax
	jg L12252
	movl 16(%ecx),%eax
	cmpl %eax,-8(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -8(%ebp),%edx
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L12252
	movl 8(%ebp),%ecx
	movl 16(%ecx),%eax
	movl %eax,%ecx
	cmpl %ecx,-4(%ebp)
	jle L12258
	movl -4(%ebp),%ecx
L12258:
	movl 8(%ebp),%eax
	movl %ecx,-4(%ebp)
	movl 24(%eax),%edx
	movl -8(%ebp),%eax
	cmpl %edx,%eax
	jle L12262
	movl %edx,%eax
L12262:
	movl _parent_video__C2,%edx
	cmpl $16,(%edx)
	jne L12265
	movl 32(%edx),%edx
	jmp L12266
	.p2align 2
L12265:
	movl 28(%edx),%edx
L12266:
	addl $-12,%esp
	pushl %edx
	pushl %eax
	movl -36(%ebp),%edx
	pushl %edx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call _line_h_hard__until__color__K07B
	addl $32,%esp
L12252:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -36(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -32(%ebp),%edx
	movl %eax,-36(%ebp)
	addl $32,%esp
	cmpl %edx,%eax
	jle L12181
L12108:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12270
	movl $0,40(%eax)
	jmp L12272
	.p2align 2
L12270:
	movl $0,36(%eax)
L12272:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L12274
	movl 48(%eax),%eax
	jmp L12275
	.p2align 2
L12274:
	movl 44(%eax),%eax
L12275:
	addl $-12,%esp
	pushl %eax
	call _clear__PH6
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L12276
	movl $0,52(%eax)
	jmp L12277
	.p2align 2
L12276:
	movl $0,48(%eax)
L12277:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_longint__1J4
	pushl %edx
	pushl %eax
	addl $-12,%esp
	pushl $0
	call _to_longint__1J4
	addl $16,%esp
	pushl %edx
	pushl %eax
	call ___infix_sub__8K4
	pushl %edx
	pushl %eax
	call _maximum__XJ4
	pushl %edx
	pushl %eax
	call ___infix_sub__8K4
	pushl %edx
	pushl %eax
	call _force_conversion__IL4
	movl %eax,%edx
	sarl $31,%edx
	addl $64,%esp
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call _force_conversion__IL4
	movl _parent_video__C2,%edx
	cmpl $16,(%edx)
	jne L12280
	movl %eax,44(%edx)
	jmp L12281
	.p2align 2
L12280:
	movl %eax,40(%edx)
L12281:
	leal -72(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_print__to__8EBC:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%eax
	movl %eax,-4(%ebp)
	movl _lower__2WK,%edx
	movl 12(%ebp),%eax
	movl %edx,-12(%ebp)
	movl 4(%eax),%eax
	movl %eax,-16(%ebp)
	cmpl %eax,%edx
	jg L12337
	.p2align 2
L12292:
	movl -12(%ebp),%eax
	addl $-8,%esp
	subl $1,%eax
	pushl %eax
	movl 12(%ebp),%edx
	movl (%edx),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	addl $-12,%esp
	movsbl %al,%eax
	pushl %eax
	call _code__1LB
	movsbl %al,%esi
	addl $16,%esp
	cmpl $32,%esi
	setg %bl
	addl $-8,%esp
	pushl $32
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L12300
	cmpl $127,%esi
	setg %bl
	addl $-8,%esp
	pushl $127
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L12299
L12300:
	xorl %esi,%esi
	jmp L12309
	.p2align 2
L12299:
	subl $32,%esi
L12309:
	movl $___index_font,%eax
	xorl %edi,%edi
	xorl %edx,%edx
	movw (%eax,%esi,2),%di
	movw 2(%eax,%esi,2),%dx
	movl %edx,-8(%ebp)
	cmpl %edx,%edi
	je L12313
	.p2align 2
L12314:
	movl 20(%ebp),%ebx
	movl $1,%esi
	leal (%edi,%edi),%eax
	movl %eax,-20(%ebp)
	.p2align 2
L12318:
	movl -20(%ebp),%eax
	movl $___graph_font,%edx
	testw %si,(%eax,%edx)
	je L12319
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %ebx
	movl -4(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _pixel_to__7R8B
	addl $16,%esp
L12319:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	leal (%esi,%esi),%eax
	andl $65534,%eax
	movl %eax,%esi
	testw %ax,%ax
	jne L12318
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
	cmpl -8(%ebp),%edi
	jne L12314
L12313:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -12(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl -16(%ebp),%edx
	movl %eax,-12(%ebp)
	addl $32,%esp
	cmpl %edx,%eax
	jle L12292
L12337:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_clip__66J:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%edi
	movl 8(%ebp),%eax
	movb $0,-4(%ebp)
	movb $0,-2(%ebp)
	movb $0,-5(%ebp)
	movb $0,-3(%ebp)
	movb $0,-1(%ebp)
	movl 60(%eax),%esi
	testl %esi,%esi
	je L12347
	movl (%esi),%ebx
	movl 8(%esi),%edx
	movl %edx,-12(%ebp)
	movl $0,-16(%ebp)
	addl $-8,%esp
	pushl %ebx
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,12(%ebp)
	sete %al
	orb %dl,%al
	je L12350
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-16(%ebp)
L12350:
	cmpb $0,-16(%ebp)
	je L12348
	movl 4(%esi),%ebx
	movl 12(%esi),%eax
	movl %eax,-20(%ebp)
	movl $0,-24(%ebp)
	addl $-8,%esp
	pushl %ebx
	pushl %edi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%edi
	sete %al
	orb %dl,%al
	je L12353
	movl -20(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %edi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-24(%ebp)
L12353:
	cmpb $0,-24(%ebp)
	jne L12347
L12348:
	movl 4(%esi),%eax
	cmpl %eax,%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L12355
	movl (%esi),%eax
	cmpl %eax,12(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L12355
	jmp L12362
	.p2align 2
L12364:
	movl 28(%esi),%esi
L12362:
	testl %esi,%esi
	je L12381
	movl 4(%esi),%eax
	cmpl %eax,%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L12364
	jmp L12380
	.p2align 2
L12355:
	movl 12(%esi),%eax
	cmpl %eax,%edi
	jle L12380
	movl 12(%ebp),%edx
	cmpl 8(%esi),%edx
	jle L12380
	testl %esi,%esi
	je L12381
	cmpl %eax,%edi
	jle L12380
	.p2align 2
L12376:
	movl 32(%esi),%esi
	testl %esi,%esi
	je L12381
	cmpl 12(%esi),%edi
	jg L12376
L12380:
	testl %esi,%esi
	je L12381
	cmpl %edi,4(%esi)
	setg -1(%ebp)
	movl 8(%esi),%eax
	movl 12(%ebp),%edx
	cmpl 12(%ebp),%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	sete -3(%ebp)
	movb -1(%ebp),%al
	orb -3(%ebp),%al
	jmp L12386
	.p2align 2
L12381:
	movb $0,%al
L12386:
	testb %al,%al
	je L12400
	cmpb $0,-5(%ebp)
	je L12388
	cmpb $0,-1(%ebp)
	jne L12425
	cmpb $0,-3(%ebp)
	je L12394
L12426:
	movl 24(%esi),%esi
	jmp L12394
	.p2align 2
L12388:
	cmpb $0,-3(%ebp)
	jne L12426
	cmpb $0,-1(%ebp)
	je L12394
L12425:
	movl 28(%esi),%esi
L12394:
	xorb $1,-5(%ebp)
	jmp L12380
	.p2align 2
L12400:
	testl %esi,%esi
	je L12401
	movl 12(%esi),%eax
	cmpl %edi,%eax
	setg %bl
	addl $-8,%esp
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	movl 12(%ebp),%eax
	addl $16,%esp
	testb %bl,%bl
	sete -2(%ebp)
	cmpl %eax,(%esi)
	setg -4(%ebp)
	movb -2(%ebp),%al
	orb -4(%ebp),%al
	jmp L12406
	.p2align 2
L12401:
	movb $0,%al
L12406:
	testb %al,%al
	je L12407
	cmpb $0,-5(%ebp)
	je L12408
	cmpb $0,-2(%ebp)
	jne L12427
	cmpb $0,-4(%ebp)
	je L12414
L12428:
	movl 20(%esi),%esi
	jmp L12414
	.p2align 2
L12408:
	cmpb $0,-4(%ebp)
	jne L12428
	cmpb $0,-2(%ebp)
	je L12414
L12427:
	movl 32(%esi),%esi
L12414:
	xorb $1,-5(%ebp)
	jmp L12400
	.p2align 2
L12407:
	testl %esi,%esi
	je L12347
	movl 8(%ebp),%edx
	movl %esi,60(%edx)
L12347:
	leal -56(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_object__HKEC:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	movl 16(%ebp),%esi
	movl $0,-4(%ebp)
	addl $-4,%esp
	pushl %esi
	pushl %edi
	movl 8(%ebp),%eax
	pushl %eax
	call _get_clip__K5RB
	addl $16,%esp
	testl %eax,%eax
	je L12430
	movl 16(%eax),%eax
	cmpl 8(%ebp),%eax
	je L12448
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L12433
	jmp *L12445(,%edx,4)
	.p2align 2
L12445:
	.long L12444
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12441
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12433
	.long L12438
	.long L12435
	.long L12442
	.long L12433
	.long L12436
	.long L12440
	.long L12437
	.long L12434
	.long L12443
	.long L12439
	.p2align 2
L12434:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__HKEC
	jmp L12449
	.p2align 2
L12435:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__SLEC
	jmp L12449
	.p2align 2
L12436:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__6MEC
	jmp L12449
	.p2align 2
L12437:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__NOEC
	jmp L12449
	.p2align 2
L12438:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__5PEC
	jmp L12449
	.p2align 2
L12439:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__ASEC
	jmp L12449
	.p2align 2
L12440:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__YTEC
	jmp L12449
	.p2align 2
L12441:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__NVEC
	jmp L12449
	.p2align 2
L12442:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__0AFC
	jmp L12449
	.p2align 2
L12443:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__VCFC
	jmp L12449
	.p2align 2
L12444:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__SEFC
L12449:
	movl %eax,%ebx
L12433:
	movl %ebx,-4(%ebp)
	testl %ebx,%ebx
	jne L12430
L12448:
	movl 8(%ebp),%eax
	movl %eax,-4(%ebp)
L12430:
	leal -24(%ebp),%esp
	movl -4(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_object__SLEC:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	movl 16(%ebp),%esi
	movl $0,-4(%ebp)
	addl $-4,%esp
	pushl %esi
	pushl %edi
	movl 8(%ebp),%eax
	pushl %eax
	call _get_clip__BPQ
	addl $16,%esp
	testl %eax,%eax
	je L12451
	movl 16(%eax),%eax
	cmpl 8(%ebp),%eax
	je L12469
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L12454
	jmp *L12466(,%edx,4)
	.p2align 2
L12466:
	.long L12465
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12462
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12454
	.long L12459
	.long L12456
	.long L12463
	.long L12454
	.long L12457
	.long L12461
	.long L12458
	.long L12455
	.long L12464
	.long L12460
	.p2align 2
L12455:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__HKEC
	jmp L12470
	.p2align 2
L12456:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__SLEC
	jmp L12470
	.p2align 2
L12457:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__6MEC
	jmp L12470
	.p2align 2
L12458:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__NOEC
	jmp L12470
	.p2align 2
L12459:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__5PEC
	jmp L12470
	.p2align 2
L12460:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__ASEC
	jmp L12470
	.p2align 2
L12461:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__YTEC
	jmp L12470
	.p2align 2
L12462:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__NVEC
	jmp L12470
	.p2align 2
L12463:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__0AFC
	jmp L12470
	.p2align 2
L12464:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__VCFC
	jmp L12470
	.p2align 2
L12465:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__SEFC
L12470:
	movl %eax,%ebx
L12454:
	movl %ebx,-4(%ebp)
	testl %ebx,%ebx
	jne L12451
L12469:
	movl 8(%ebp),%eax
	movl %eax,-4(%ebp)
L12451:
	leal -24(%ebp),%esp
	movl -4(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_object__6MEC:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	movl 16(%ebp),%esi
	movl $0,-4(%ebp)
	addl $-4,%esp
	pushl %esi
	pushl %edi
	movl 8(%ebp),%eax
	pushl %eax
	call _get_clip__8E0
	addl $16,%esp
	testl %eax,%eax
	je L12472
	movl 16(%eax),%eax
	cmpl 8(%ebp),%eax
	je L12490
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L12475
	jmp *L12487(,%edx,4)
	.p2align 2
L12487:
	.long L12486
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12483
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12475
	.long L12480
	.long L12477
	.long L12484
	.long L12475
	.long L12478
	.long L12482
	.long L12479
	.long L12476
	.long L12485
	.long L12481
	.p2align 2
L12476:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__HKEC
	jmp L12491
	.p2align 2
L12477:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__SLEC
	jmp L12491
	.p2align 2
L12478:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__6MEC
	jmp L12491
	.p2align 2
L12479:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__NOEC
	jmp L12491
	.p2align 2
L12480:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__5PEC
	jmp L12491
	.p2align 2
L12481:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__ASEC
	jmp L12491
	.p2align 2
L12482:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__YTEC
	jmp L12491
	.p2align 2
L12483:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__NVEC
	jmp L12491
	.p2align 2
L12484:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__0AFC
	jmp L12491
	.p2align 2
L12485:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__VCFC
	jmp L12491
	.p2align 2
L12486:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__SEFC
L12491:
	movl %eax,%ebx
L12475:
	movl %ebx,-4(%ebp)
	testl %ebx,%ebx
	jne L12472
L12490:
	movl 8(%ebp),%eax
	movl %eax,-4(%ebp)
L12472:
	leal -24(%ebp),%esp
	movl -4(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_object__NOEC:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	movl 16(%ebp),%esi
	movl $0,-4(%ebp)
	addl $-4,%esp
	pushl %esi
	pushl %edi
	movl 8(%ebp),%eax
	pushl %eax
	call _get_clip__XWMB
	addl $16,%esp
	testl %eax,%eax
	je L12493
	movl 16(%eax),%eax
	cmpl 8(%ebp),%eax
	je L12511
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L12496
	jmp *L12508(,%edx,4)
	.p2align 2
L12508:
	.long L12507
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12504
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12496
	.long L12501
	.long L12498
	.long L12505
	.long L12496
	.long L12499
	.long L12503
	.long L12500
	.long L12497
	.long L12506
	.long L12502
	.p2align 2
L12497:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__HKEC
	jmp L12512
	.p2align 2
L12498:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__SLEC
	jmp L12512
	.p2align 2
L12499:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__6MEC
	jmp L12512
	.p2align 2
L12500:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__NOEC
	jmp L12512
	.p2align 2
L12501:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__5PEC
	jmp L12512
	.p2align 2
L12502:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__ASEC
	jmp L12512
	.p2align 2
L12503:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__YTEC
	jmp L12512
	.p2align 2
L12504:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__NVEC
	jmp L12512
	.p2align 2
L12505:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__0AFC
	jmp L12512
	.p2align 2
L12506:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__VCFC
	jmp L12512
	.p2align 2
L12507:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__SEFC
L12512:
	movl %eax,%ebx
L12496:
	movl %ebx,-4(%ebp)
	testl %ebx,%ebx
	jne L12493
L12511:
	movl 8(%ebp),%eax
	movl %eax,-4(%ebp)
L12493:
	leal -24(%ebp),%esp
	movl -4(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_object__5PEC:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	pushl %edi
	movl 8(%ebp),%edx
	xorl %esi,%esi
	pushl %edx
	call _get_clip__D56B
	addl $16,%esp
	testl %eax,%eax
	je L12514
	movl 16(%eax),%eax
	cmpl 8(%ebp),%eax
	je L12544
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L12517
	jmp *L12529(,%edx,4)
	.p2align 2
L12529:
	.long L12528
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12525
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12517
	.long L12522
	.long L12519
	.long L12526
	.long L12517
	.long L12520
	.long L12524
	.long L12521
	.long L12518
	.long L12527
	.long L12523
	.p2align 2
L12518:
	movl 16(%ebp),%edx
	addl $-4,%esp
	pushl %edx
	pushl %edi
	pushl %eax
	call _get_object__HKEC
	jmp L12545
	.p2align 2
L12519:
	movl 16(%ebp),%edx
	addl $-4,%esp
	pushl %edx
	pushl %edi
	pushl %eax
	call _get_object__SLEC
	jmp L12545
	.p2align 2
L12520:
	movl 16(%ebp),%edx
	addl $-4,%esp
	pushl %edx
	pushl %edi
	pushl %eax
	call _get_object__6MEC
	jmp L12545
	.p2align 2
L12521:
	movl 16(%ebp),%edx
	addl $-4,%esp
	pushl %edx
	pushl %edi
	pushl %eax
	call _get_object__NOEC
	jmp L12545
	.p2align 2
L12522:
	movl 16(%ebp),%edx
	addl $-4,%esp
	pushl %edx
	pushl %edi
	pushl %eax
	call _get_object__5PEC
	jmp L12545
	.p2align 2
L12523:
	movl 16(%ebp),%edx
	addl $-4,%esp
	pushl %edx
	pushl %edi
	pushl %eax
	call _get_object__ASEC
	jmp L12545
	.p2align 2
L12524:
	movl 16(%ebp),%edx
	addl $-4,%esp
	pushl %edx
	pushl %edi
	pushl %eax
	call _get_object__YTEC
	jmp L12545
	.p2align 2
L12525:
	movl 16(%ebp),%edx
	addl $-4,%esp
	pushl %edx
	pushl %edi
	pushl %eax
	call _get_object__NVEC
	jmp L12545
	.p2align 2
L12526:
	movl 16(%ebp),%edx
	addl $-4,%esp
	pushl %edx
	pushl %edi
	pushl %eax
	call _get_object__0AFC
	jmp L12545
	.p2align 2
L12527:
	movl 16(%ebp),%edx
	addl $-4,%esp
	pushl %edx
	pushl %edi
	pushl %eax
	call _get_object__VCFC
	jmp L12545
	.p2align 2
L12528:
	movl 16(%ebp),%edx
	addl $-4,%esp
	pushl %edx
	pushl %edi
	pushl %eax
	call _get_object__SEFC
L12545:
	movl %eax,%ebx
	addl $16,%esp
L12517:
	movl %ebx,%esi
	testl %esi,%esi
	jne L12514
L12544:
	movl 8(%ebp),%esi
L12514:
	cmpl 8(%ebp),%esi
	jne L12532
	subl 64(%esi),%edi
	movl %edi,-4(%ebp)
	movl 16(%ebp),%edi
	subl 68(%esi),%edi
	cmpl $16,%edi
	setg %bl
	addl $-8,%esp
	pushl $16
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L12532
	movl 80(%esi),%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edi
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	cmpl %eax,-4(%ebp)
	jle L12532
	xorl %esi,%esi
L12532:
	leal -24(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_object__ASEC:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	movl 16(%ebp),%esi
	movl $0,-4(%ebp)
	addl $-4,%esp
	pushl %esi
	pushl %edi
	movl 8(%ebp),%eax
	pushl %eax
	call _get_clip__K80B
	addl $16,%esp
	testl %eax,%eax
	je L12547
	movl 16(%eax),%eax
	cmpl 8(%ebp),%eax
	je L12565
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L12550
	jmp *L12562(,%edx,4)
	.p2align 2
L12562:
	.long L12561
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12558
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12550
	.long L12555
	.long L12552
	.long L12559
	.long L12550
	.long L12553
	.long L12557
	.long L12554
	.long L12551
	.long L12560
	.long L12556
	.p2align 2
L12551:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__HKEC
	jmp L12566
	.p2align 2
L12552:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__SLEC
	jmp L12566
	.p2align 2
L12553:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__6MEC
	jmp L12566
	.p2align 2
L12554:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__NOEC
	jmp L12566
	.p2align 2
L12555:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__5PEC
	jmp L12566
	.p2align 2
L12556:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__ASEC
	jmp L12566
	.p2align 2
L12557:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__YTEC
	jmp L12566
	.p2align 2
L12558:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__NVEC
	jmp L12566
	.p2align 2
L12559:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__0AFC
	jmp L12566
	.p2align 2
L12560:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__VCFC
	jmp L12566
	.p2align 2
L12561:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__SEFC
L12566:
	movl %eax,%ebx
L12550:
	movl %ebx,-4(%ebp)
	testl %ebx,%ebx
	jne L12547
L12565:
	movl 8(%ebp),%eax
	movl %eax,-4(%ebp)
L12547:
	leal -24(%ebp),%esp
	movl -4(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_object__YTEC:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	movl 16(%ebp),%esi
	movl $0,-4(%ebp)
	addl $-4,%esp
	pushl %esi
	pushl %edi
	movl 8(%ebp),%eax
	pushl %eax
	call _get_clip__HUJB
	addl $16,%esp
	testl %eax,%eax
	je L12568
	movl 16(%eax),%eax
	cmpl 8(%ebp),%eax
	je L12586
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L12571
	jmp *L12583(,%edx,4)
	.p2align 2
L12583:
	.long L12582
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12579
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12571
	.long L12576
	.long L12573
	.long L12580
	.long L12571
	.long L12574
	.long L12578
	.long L12575
	.long L12572
	.long L12581
	.long L12577
	.p2align 2
L12572:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__HKEC
	jmp L12587
	.p2align 2
L12573:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__SLEC
	jmp L12587
	.p2align 2
L12574:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__6MEC
	jmp L12587
	.p2align 2
L12575:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__NOEC
	jmp L12587
	.p2align 2
L12576:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__5PEC
	jmp L12587
	.p2align 2
L12577:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__ASEC
	jmp L12587
	.p2align 2
L12578:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__YTEC
	jmp L12587
	.p2align 2
L12579:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__NVEC
	jmp L12587
	.p2align 2
L12580:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__0AFC
	jmp L12587
	.p2align 2
L12581:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__VCFC
	jmp L12587
	.p2align 2
L12582:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__SEFC
L12587:
	movl %eax,%ebx
L12571:
	movl %ebx,-4(%ebp)
	testl %ebx,%ebx
	jne L12568
L12586:
	movl 8(%ebp),%eax
	movl %eax,-4(%ebp)
L12568:
	leal -24(%ebp),%esp
	movl -4(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_object__NVEC:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%edi
	movl 8(%ebp),%eax
	movl $0,-4(%ebp)
	movb $0,-12(%ebp)
	movb $0,-10(%ebp)
	movb $0,-13(%ebp)
	movb $0,-11(%ebp)
	movb $0,-9(%ebp)
	movl 56(%eax),%esi
	testl %esi,%esi
	je L12589
	movl (%esi),%ebx
	movl 8(%esi),%edx
	movl %edx,-20(%ebp)
	movl $0,-24(%ebp)
	addl $-8,%esp
	pushl %ebx
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,12(%ebp)
	sete %al
	orb %dl,%al
	je L12592
	movl -20(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-24(%ebp)
L12592:
	cmpb $0,-24(%ebp)
	je L12590
	movl 4(%esi),%ebx
	movl 12(%esi),%eax
	movl %eax,-28(%ebp)
	movl $0,-32(%ebp)
	addl $-8,%esp
	pushl %ebx
	pushl %edi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%edi
	sete %al
	orb %dl,%al
	je L12595
	movl -28(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %edi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-32(%ebp)
L12595:
	cmpb $0,-32(%ebp)
	jne L12589
L12590:
	movl 4(%esi),%eax
	cmpl %eax,%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L12597
	movl (%esi),%eax
	cmpl %eax,12(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L12597
	jmp L12604
	.p2align 2
L12606:
	movl 28(%esi),%esi
L12604:
	testl %esi,%esi
	je L12623
	movl 4(%esi),%eax
	cmpl %eax,%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L12606
	jmp L12622
	.p2align 2
L12597:
	movl 12(%esi),%eax
	cmpl %eax,%edi
	jle L12622
	movl 12(%ebp),%edx
	cmpl 8(%esi),%edx
	jle L12622
	testl %esi,%esi
	je L12623
	cmpl %eax,%edi
	jle L12622
	.p2align 2
L12618:
	movl 32(%esi),%esi
	testl %esi,%esi
	je L12623
	cmpl 12(%esi),%edi
	jg L12618
L12622:
	testl %esi,%esi
	je L12623
	cmpl %edi,4(%esi)
	setg -9(%ebp)
	movl 8(%esi),%eax
	movl 12(%ebp),%edx
	cmpl 12(%ebp),%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	sete -11(%ebp)
	movb -9(%ebp),%al
	orb -11(%ebp),%al
	jmp L12628
	.p2align 2
L12623:
	movb $0,%al
L12628:
	testb %al,%al
	je L12642
	cmpb $0,-13(%ebp)
	je L12630
	cmpb $0,-9(%ebp)
	jne L12685
	cmpb $0,-11(%ebp)
	je L12636
L12686:
	movl 24(%esi),%esi
	jmp L12636
	.p2align 2
L12630:
	cmpb $0,-11(%ebp)
	jne L12686
	cmpb $0,-9(%ebp)
	je L12636
L12685:
	movl 28(%esi),%esi
L12636:
	xorb $1,-13(%ebp)
	jmp L12622
	.p2align 2
L12642:
	testl %esi,%esi
	je L12643
	movl 12(%esi),%eax
	cmpl %edi,%eax
	setg %bl
	addl $-8,%esp
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	movl 12(%ebp),%eax
	addl $16,%esp
	testb %bl,%bl
	sete -10(%ebp)
	cmpl %eax,(%esi)
	setg -12(%ebp)
	movb -10(%ebp),%al
	orb -12(%ebp),%al
	jmp L12648
	.p2align 2
L12643:
	movb $0,%al
L12648:
	testb %al,%al
	je L12649
	cmpb $0,-13(%ebp)
	je L12650
	cmpb $0,-10(%ebp)
	jne L12687
	cmpb $0,-12(%ebp)
	je L12656
L12688:
	movl 20(%esi),%esi
	jmp L12656
	.p2align 2
L12650:
	cmpb $0,-12(%ebp)
	jne L12688
	cmpb $0,-10(%ebp)
	je L12656
L12687:
	movl 32(%esi),%esi
L12656:
	xorb $1,-13(%ebp)
	jmp L12642
	.p2align 2
L12649:
	testl %esi,%esi
	je L12589
	movl 8(%ebp),%edx
	movl %esi,56(%edx)
L12589:
	testl %esi,%esi
	je L12663
	movl 16(%esi),%eax
	cmpl 8(%ebp),%eax
	jne L12664
	movl 8(%ebp),%eax
	movl %eax,-4(%ebp)
	jmp L12663
	.p2align 2
L12664:
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L12666
	jmp *L12678(,%edx,4)
	.p2align 2
L12678:
	.long L12677
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12674
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12666
	.long L12671
	.long L12668
	.long L12675
	.long L12666
	.long L12669
	.long L12673
	.long L12670
	.long L12667
	.long L12676
	.long L12672
	.p2align 2
L12667:
	addl $-4,%esp
	pushl %edi
	movl 12(%ebp),%edx
	pushl %edx
	pushl %eax
	call _get_object__HKEC
	jmp L12689
	.p2align 2
L12668:
	addl $-4,%esp
	pushl %edi
	movl 12(%ebp),%edx
	pushl %edx
	pushl %eax
	call _get_object__SLEC
	jmp L12689
	.p2align 2
L12669:
	addl $-4,%esp
	pushl %edi
	movl 12(%ebp),%edx
	pushl %edx
	pushl %eax
	call _get_object__6MEC
	jmp L12689
	.p2align 2
L12670:
	addl $-4,%esp
	pushl %edi
	movl 12(%ebp),%edx
	pushl %edx
	pushl %eax
	call _get_object__NOEC
	jmp L12689
	.p2align 2
L12671:
	addl $-4,%esp
	pushl %edi
	movl 12(%ebp),%edx
	pushl %edx
	pushl %eax
	call _get_object__5PEC
	jmp L12689
	.p2align 2
L12672:
	addl $-4,%esp
	pushl %edi
	movl 12(%ebp),%edx
	pushl %edx
	pushl %eax
	call _get_object__ASEC
	jmp L12689
	.p2align 2
L12673:
	addl $-4,%esp
	pushl %edi
	movl 12(%ebp),%edx
	pushl %edx
	pushl %eax
	call _get_object__YTEC
	jmp L12689
	.p2align 2
L12674:
	addl $-4,%esp
	pushl %edi
	movl 12(%ebp),%edx
	pushl %edx
	pushl %eax
	call _get_object__NVEC
	jmp L12689
	.p2align 2
L12675:
	addl $-4,%esp
	pushl %edi
	movl 12(%ebp),%edx
	pushl %edx
	pushl %eax
	call _get_object__0AFC
	jmp L12689
	.p2align 2
L12676:
	addl $-4,%esp
	pushl %edi
	movl 12(%ebp),%edx
	pushl %edx
	pushl %eax
	call _get_object__VCFC
	jmp L12689
	.p2align 2
L12677:
	addl $-4,%esp
	pushl %edi
	movl 12(%ebp),%edx
	pushl %edx
	pushl %eax
	call _get_object__SEFC
L12689:
	movl %eax,-8(%ebp)
L12666:
	movl -8(%ebp),%eax
	movl %eax,-4(%ebp)
	testl %eax,%eax
	jne L12663
	movl 8(%ebp),%edx
	movl %edx,-4(%ebp)
L12663:
	leal -56(%ebp),%esp
	movl -4(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_object__0AFC:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	movl 16(%ebp),%esi
	movl $0,-4(%ebp)
	addl $-4,%esp
	pushl %esi
	pushl %edi
	movl 8(%ebp),%eax
	pushl %eax
	call _get_clip__LVU
	addl $16,%esp
	testl %eax,%eax
	je L12691
	movl 16(%eax),%eax
	cmpl 8(%ebp),%eax
	je L12709
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L12694
	jmp *L12706(,%edx,4)
	.p2align 2
L12706:
	.long L12705
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12702
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12694
	.long L12699
	.long L12696
	.long L12703
	.long L12694
	.long L12697
	.long L12701
	.long L12698
	.long L12695
	.long L12704
	.long L12700
	.p2align 2
L12695:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__HKEC
	jmp L12710
	.p2align 2
L12696:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__SLEC
	jmp L12710
	.p2align 2
L12697:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__6MEC
	jmp L12710
	.p2align 2
L12698:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__NOEC
	jmp L12710
	.p2align 2
L12699:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__5PEC
	jmp L12710
	.p2align 2
L12700:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__ASEC
	jmp L12710
	.p2align 2
L12701:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__YTEC
	jmp L12710
	.p2align 2
L12702:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__NVEC
	jmp L12710
	.p2align 2
L12703:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__0AFC
	jmp L12710
	.p2align 2
L12704:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__VCFC
	jmp L12710
	.p2align 2
L12705:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__SEFC
L12710:
	movl %eax,%ebx
L12694:
	movl %ebx,-4(%ebp)
	testl %ebx,%ebx
	jne L12691
L12709:
	movl 8(%ebp),%eax
	movl %eax,-4(%ebp)
L12691:
	leal -24(%ebp),%esp
	movl -4(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_object__VCFC:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	movl 16(%ebp),%esi
	movl $0,-4(%ebp)
	addl $-4,%esp
	pushl %esi
	pushl %edi
	movl 8(%ebp),%eax
	pushl %eax
	call _get_clip__U1WB
	addl $16,%esp
	testl %eax,%eax
	je L12712
	movl 16(%eax),%eax
	cmpl 8(%ebp),%eax
	je L12730
	movl (%eax),%edx
	addl $-17,%edx
	cmpl $70,%edx
	ja L12715
	jmp *L12727(,%edx,4)
	.p2align 2
L12727:
	.long L12726
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12723
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12715
	.long L12720
	.long L12717
	.long L12724
	.long L12715
	.long L12718
	.long L12722
	.long L12719
	.long L12716
	.long L12725
	.long L12721
	.p2align 2
L12716:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__HKEC
	jmp L12731
	.p2align 2
L12717:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__SLEC
	jmp L12731
	.p2align 2
L12718:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__6MEC
	jmp L12731
	.p2align 2
L12719:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__NOEC
	jmp L12731
	.p2align 2
L12720:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__5PEC
	jmp L12731
	.p2align 2
L12721:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__ASEC
	jmp L12731
	.p2align 2
L12722:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__YTEC
	jmp L12731
	.p2align 2
L12723:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__NVEC
	jmp L12731
	.p2align 2
L12724:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__0AFC
	jmp L12731
	.p2align 2
L12725:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__VCFC
	jmp L12731
	.p2align 2
L12726:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _get_object__SEFC
L12731:
	movl %eax,%ebx
L12715:
	movl %ebx,-4(%ebp)
	testl %ebx,%ebx
	jne L12712
L12730:
	movl 8(%ebp),%eax
	movl %eax,-4(%ebp)
L12712:
	leal -24(%ebp),%esp
	movl -4(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_sub_move__7YKC:
	pushl %ebp
	movl %esp,%ebp
	subl $76,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%eax),%ebx
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%ecx
	movl %eax,64(%ecx)
	movl 16(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%ecx),%ebx
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	addl $32,%esp
	movl %eax,68(%edx)
	movl $0,-12(%ebp)
	movl $0,-4(%ebp)
	movl $0,-8(%ebp)
	xorl %edi,%edi
	movb $0,%cl
	cmpl $0,56(%edx)
	jne L12747
	addl $-12,%esp
	pushl %edx
	call _append_plan__DH5B
	addl $16,%esp
	jmp L12748
	.p2align 2
L12747:
	movl 8(%ebp),%eax
	movl 40(%eax),%edx
	testl %edx,%edx
	je L12749
	movl (%edx),%eax
	cmpl $28,%eax
	je L12752
	ja L12756
	cmpl $17,%eax
	je L12753
	jmp L12750
	.p2align 2
L12756:
	cmpl $78,%eax
	jne L12750
	jmp L12753
	.p2align 2
L12752:
	movl 52(%edx),%esi
	jmp L12750
	.p2align 2
L12753:
	movl 56(%edx),%esi
L12750:
	testl %esi,%esi
	jne L12757
	movl 8(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _remove_plan__A4KC
	movb $1,%cl
	addl $16,%esp
	jmp L12761
	.p2align 2
L12757:
	movl 12(%esi),%eax
	movl (%eax),%edi
	movl 16(%esi),%eax
	movl (%eax),%eax
	movl %eax,-8(%ebp)
	movl 20(%esi),%eax
	movl (%eax),%eax
	movl %eax,-4(%ebp)
	movl 24(%esi),%eax
	movl (%eax),%eax
	decl %eax
	jmp L12899
	.p2align 2
L12749:
	movl $0,-4(%ebp)
	movl _parent_video__C2,%eax
	xorl %edi,%edi
	cmpl $16,(%eax)
	jne L12763
	movl 12(%eax),%edx
	jmp L12764
	.p2align 2
L12763:
	movl 8(%eax),%edx
L12764:
	subl $1,%edx
	movl %edx,-8(%ebp)
	cmpl $16,(%eax)
	jne L12767
	movl 8(%eax),%eax
	jmp L12768
	.p2align 2
L12767:
	movl 4(%eax),%eax
L12768:
	subl $1,%eax
L12899:
	movl %eax,-12(%ebp)
L12761:
	testb %cl,%cl
	jne L12748
	movl 8(%ebp),%ecx
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%ecx),%ecx
	movl %ecx,-16(%ebp)
	movl 12(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -16(%ebp),%ecx
	pushl %ecx
	call ___infix_sub__F6B
	movl %eax,%esi
	movl 8(%ebp),%eax
	movl 8(%ebp),%edx
	addl $32,%esp
	subl $1,%esi
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%eax),%eax
	movl %eax,-20(%ebp)
	movl 8(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%ecx
	pushl %ecx
	call ___infix_sub__F6B
	movl %eax,-24(%ebp)
	addl $32,%esp
	subl $1,-24(%ebp)
	cmpl %edi,%esi
	setg %bl
	addl $-8,%esp
	pushl %edi
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L12779
	movl -8(%ebp),%eax
	cmpl %eax,-16(%ebp)
	jg L12779
	movl -4(%ebp),%edx
	cmpl %edx,-24(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %edx
	movl -24(%ebp),%ecx
	pushl %ecx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L12779
	movl -12(%ebp),%eax
	cmpl %eax,-20(%ebp)
	jle L12778
L12779:
	movl 8(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _remove_plan__A4KC
	addl $16,%esp
	jmp L12748
	.p2align 2
L12778:
	cmpl %edi,-16(%ebp)
	jle L12790
	movl -16(%ebp),%edi
L12790:
	movl %esi,%ebx
	cmpl -8(%ebp),%ebx
	jle L12794
	movl -8(%ebp),%ebx
L12794:
	movl -4(%ebp),%ecx
	movl %ecx,-32(%ebp)
	cmpl %ecx,-20(%ebp)
	jle L12798
	movl -20(%ebp),%eax
	movl %eax,-32(%ebp)
L12798:
	movl -24(%ebp),%eax
	cmpl -12(%ebp),%eax
	jle L12802
	movl -12(%ebp),%eax
L12802:
	movl %eax,-24(%ebp)
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl %eax,-24(%ebp)
	addl $32,%esp
	addl $-8,%esp
	pushl %ebx
	movl 8(%ebp),%ecx
	movl 56(%ecx),%eax
	movl 16(%eax),%eax
	pushl %eax
	call _set_value__TFLC
	movl 8(%ebp),%eax
	movl 56(%eax),%edx
	addl $-8,%esp
	movl 12(%edx),%eax
	pushl %eax
	movl 16(%edx),%eax
	pushl %eax
	call _remove__E5KC
	movl 8(%ebp),%ecx
	movl 56(%ecx),%edx
	movl 12(%edx),%eax
	addl $32,%esp
	cmpl (%eax),%edi
	je L12807
	addl $-8,%esp
	pushl %edi
	movl 12(%edx),%eax
	pushl %eax
	call _set_value__TFLC
	movl _list_x__K3,%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 12(%eax),%eax
	pushl %eax
	call _remove__E5KC
	movl %eax,%edi
	movl %edi,_list_x__K3
	movl 8(%ebp),%ecx
	addl $32,%esp
	movl 56(%ecx),%eax
	movl %edi,%ecx
	movl 12(%eax),%ebx
	movl $0,-36(%ebp)
	testl %ecx,%ecx
	je L12814
	movl 12(%ecx),%eax
	movl %eax,-36(%ebp)
	movl (%ecx),%edx
	movl (%ebx),%eax
	movl %eax,%esi
	cmpl %esi,%edx
	jg L12814
	movl %esi,-40(%ebp)
	.p2align 2
L12810:
	cmpl -40(%ebp),%edx
	jne L12811
	movl 4(%ebx),%edx
	movl 4(%ecx),%eax
	movl 4(%edx),%edx
	cmpl %edx,4(%eax)
	jle L12814
L12811:
	movl %ecx,-36(%ebp)
	movl 8(%ecx),%ecx
	testl %ecx,%ecx
	je L12814
	movl (%ecx),%edx
	cmpl %esi,%edx
	jle L12810
L12814:
	movl %ecx,8(%ebx)
	movl -36(%ebp),%edx
	movl %edx,12(%ebx)
	movl %ebx,%eax
	testl %edx,%edx
	je L12818
	movl %edi,%eax
	movl %ebx,8(%edx)
L12818:
	testl %ecx,%ecx
	je L12820
	movl %ebx,12(%ecx)
L12820:
	movl %eax,_list_x__K3
L12807:
	movl 8(%ebp),%ecx
	movl 56(%ecx),%eax
	xorl %edi,%edi
	movl 16(%eax),%ebx
	movl 12(%eax),%ecx
	testl %ecx,%ecx
	je L12829
	movl 12(%ecx),%edi
	movl (%ecx),%edx
	movl (%ebx),%eax
	movl %eax,%esi
	cmpl %esi,%edx
	jg L12829
	movl %esi,-44(%ebp)
	.p2align 2
L12825:
	cmpl -44(%ebp),%edx
	jne L12826
	movl 4(%ebx),%edx
	movl 4(%ecx),%eax
	movl 4(%edx),%edx
	cmpl %edx,4(%eax)
	jle L12829
L12826:
	movl %ecx,%edi
	movl 8(%ecx),%ecx
	testl %ecx,%ecx
	je L12829
	movl (%ecx),%edx
	cmpl %esi,%edx
	jle L12825
L12829:
	movl %ecx,8(%ebx)
	movl %edi,12(%ebx)
	testl %edi,%edi
	je L12833
	movl %ebx,8(%edi)
L12833:
	testl %ecx,%ecx
	je L12837
	movl %ebx,12(%ecx)
L12837:
	movl -24(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 24(%eax),%eax
	pushl %eax
	call _set_value__VGLC
	movl 8(%ebp),%ecx
	movl 56(%ecx),%edx
	addl $-8,%esp
	movl 20(%edx),%eax
	pushl %eax
	movl 24(%edx),%eax
	pushl %eax
	call _remove__06KC
	movl 8(%ebp),%eax
	movl 56(%eax),%edx
	movl -32(%ebp),%ecx
	movl 20(%edx),%eax
	addl $32,%esp
	cmpl (%eax),%ecx
	je L12838
	addl $-8,%esp
	pushl %ecx
	movl 20(%edx),%eax
	pushl %eax
	call _set_value__VGLC
	movl _list_y__L3,%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%eax
	pushl %eax
	call _remove__06KC
	movl %eax,-48(%ebp)
	movl %eax,_list_y__L3
	movl 8(%ebp),%ecx
	movl -48(%ebp),%esi
	movl 56(%ecx),%eax
	addl $32,%esp
	movl 20(%eax),%edi
	movl $0,-52(%ebp)
	jmp L12839
	.p2align 2
L12841:
	movl %esi,-52(%ebp)
	movl 12(%esi),%esi
L12839:
	testl %esi,%esi
	je L12846
	movl (%esi),%eax
	movl (%edi),%edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L12841
L12846:
	movl %esi,12(%edi)
	movl -52(%ebp),%eax
	movl %eax,16(%edi)
	movl %edi,%eax
	cmpl $0,-52(%ebp)
	je L12848
	movl -48(%ebp),%eax
	movl -52(%ebp),%edx
	movl %edi,12(%edx)
L12848:
	testl %esi,%esi
	je L12850
	movl %edi,16(%esi)
L12850:
	movl %eax,_list_y__L3
L12838:
	movl 8(%ebp),%ecx
	movl 56(%ecx),%eax
	movl 24(%eax),%edi
	movl $0,-56(%ebp)
	movl 20(%eax),%esi
	jmp L12853
	.p2align 2
L12855:
	movl %esi,-56(%ebp)
	movl 12(%esi),%esi
L12853:
	testl %esi,%esi
	je L12860
	movl (%esi),%eax
	movl (%edi),%edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L12855
L12860:
	movl %esi,12(%edi)
	movl -56(%ebp),%eax
	movl %eax,16(%edi)
	testl %eax,%eax
	je L12862
	movl %edi,12(%eax)
L12862:
	testl %esi,%esi
	je L12748
	movl %edi,16(%esi)
L12748:
	movl 8(%ebp),%edx
	movl 44(%edx),%ebx
	testl %ebx,%ebx
	je L12868
	.p2align 2
L12869:
	movl (%ebx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L12870
	jmp *L12882(,%eax,4)
	.p2align 2
L12882:
	.long L12880
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12881
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12870
	.long L12875
	.long L12872
	.long L12878
	.long L12870
	.long L12873
	.long L12877
	.long L12874
	.long L12871
	.long L12879
	.long L12876
	.p2align 2
L12871:
	movl 16(%ebp),%ecx
	addl $-4,%esp
	pushl %ecx
	movl 12(%ebp),%eax
	pushl %eax
	pushl %ebx
	call _sub_move__KILC
	jmp L12900
	.p2align 2
L12872:
	movl 16(%ebp),%edx
	addl $-4,%esp
	pushl %edx
	movl 12(%ebp),%ecx
	pushl %ecx
	pushl %ebx
	call _sub_move__FYLC
	jmp L12900
	.p2align 2
L12873:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__DEMC
	jmp L12900
	.p2align 2
L12874:
	movl 16(%ebp),%ecx
	addl $-4,%esp
	pushl %ecx
	movl 12(%ebp),%eax
	pushl %eax
	pushl %ebx
	call _sub_move__EUMC
	jmp L12900
	.p2align 2
L12875:
	movl 16(%ebp),%edx
	addl $-4,%esp
	pushl %edx
	movl 12(%ebp),%ecx
	pushl %ecx
	pushl %ebx
	call _sub_move__7YKC
	jmp L12900
	.p2align 2
L12876:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KANC
	jmp L12900
	.p2align 2
L12877:
	movl 16(%ebp),%ecx
	addl $-4,%esp
	pushl %ecx
	movl 12(%ebp),%eax
	pushl %eax
	pushl %ebx
	call _sub_move__TQNC
	jmp L12900
	.p2align 2
L12878:
	movl 16(%ebp),%edx
	addl $-4,%esp
	pushl %edx
	movl 12(%ebp),%ecx
	pushl %ecx
	pushl %ebx
	call _sub_move__56NC
	jmp L12900
	.p2align 2
L12879:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KNOC
	jmp L12900
	.p2align 2
L12880:
	movl 16(%ebp),%ecx
	addl $-4,%esp
	pushl %ecx
	movl 12(%ebp),%eax
	pushl %eax
	pushl %ebx
	call _sub_move__13OC
	jmp L12900
	.p2align 2
L12881:
	movl 16(%ebp),%edx
	addl $-4,%esp
	pushl %edx
	movl 12(%ebp),%ecx
	pushl %ecx
	pushl %ebx
	call _sub_move__25XC
L12900:
	addl $16,%esp
L12870:
	movl (%ebx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L12884
	jmp *L12896(,%eax,4)
	.p2align 2
L12896:
	.long L12894
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12895
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12884
	.long L12889
	.long L12886
	.long L12892
	.long L12884
	.long L12887
	.long L12891
	.long L12888
	.long L12885
	.long L12893
	.long L12890
	.p2align 2
L12885:
	movl 52(%ebx),%ebx
	jmp L12901
	.p2align 2
L12886:
	movl 52(%ebx),%ebx
	jmp L12901
	.p2align 2
L12887:
	movl 52(%ebx),%ebx
	jmp L12901
	.p2align 2
L12888:
	movl 52(%ebx),%ebx
	jmp L12901
	.p2align 2
L12889:
	movl 52(%ebx),%ebx
	jmp L12901
	.p2align 2
L12890:
	movl 52(%ebx),%ebx
	jmp L12901
	.p2align 2
L12891:
	movl 52(%ebx),%ebx
	jmp L12901
	.p2align 2
L12892:
	movl 52(%ebx),%ebx
	jmp L12901
	.p2align 2
L12893:
	movl 52(%ebx),%ebx
	jmp L12901
	.p2align 2
L12894:
	movl 52(%ebx),%ebx
	jmp L12901
	.p2align 2
L12895:
	movl 48(%ebx),%ebx
L12901:
	movl %ebx,-28(%ebp)
L12884:
	movl -28(%ebp),%ebx
	testl %ebx,%ebx
	jne L12869
L12868:
	leal -88(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_redraw__to__GVPC:
	pushl %ebp
	movl %esp,%ebp
	subl $60,%esp
	xorl %ecx,%ecx
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl %eax,-8(%ebp)
	.p2align 2
L12967:
	movl -8(%ebp),%edx
	movl (%edx),%eax
	cmpl $28,%eax
	je L12918
	ja L12922
	cmpl $17,%eax
	je L12919
	jmp L12916
	.p2align 2
L12922:
	cmpl $78,%eax
	jne L12916
	jmp L12919
	.p2align 2
L12918:
	movl -8(%ebp),%edx
	movl 44(%edx),%edx
	movl %edx,-32(%ebp)
	jmp L12916
	.p2align 2
L12919:
	movl -8(%ebp),%eax
	movl 48(%eax),%eax
	movl %eax,-32(%ebp)
L12916:
	movl -32(%ebp),%esi
	jmp L12923
	.p2align 2
L12925:
	movl (%esi),%eax
	leal -17(%eax),%edx
	cmpl $70,%edx
	ja L12927
	jmp *L12939(,%edx,4)
	.p2align 2
L12939:
	.long L12938
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12937
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12927
	.long L12938
	.long L12938
	.long L12938
	.long L12927
	.long L12938
	.long L12938
	.long L12938
	.long L12938
	.long L12938
	.long L12938
	.p2align 2
L12937:
	movl 52(%esi),%edx
	jmp L13085
	.p2align 2
L12938:
	movl 56(%esi),%edx
L13085:
	movl %edx,-12(%ebp)
L12927:
	movl -12(%ebp),%edx
	movl %edx,-4(%ebp)
	testl %edx,%edx
	je L12941
	movl 4(%edx),%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ecx
	addl $32,%esp
	jmp L12923
	.p2align 2
L12941:
	addl $-17,%eax
	cmpl $70,%eax
	ja L12945
	jmp *L12957(,%eax,4)
	.p2align 2
L12957:
	.long L12956
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12955
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12945
	.long L12956
	.long L12956
	.long L12956
	.long L12945
	.long L12956
	.long L12956
	.long L12956
	.long L12956
	.long L12956
	.long L12956
	.p2align 2
L12955:
	movl 44(%esi),%edi
	jmp L12945
	.p2align 2
L12956:
	movl 48(%esi),%edi
L12945:
	movl %edi,%esi
L12923:
	testl %ecx,%ecx
	jne L12924
	testl %esi,%esi
	jne L12925
L12924:
	movl -8(%ebp),%edx
	movl (%edx),%eax
	cmpl $28,%eax
	je L12962
	ja L12966
	cmpl $17,%eax
	je L12963
	jmp L12960
	.p2align 2
L12966:
	cmpl $78,%eax
	jne L12960
	jmp L12963
	.p2align 2
L12962:
	movl -8(%ebp),%edx
	movl 36(%edx),%edx
	movl %edx,-36(%ebp)
	jmp L12960
	.p2align 2
L12963:
	movl -8(%ebp),%eax
	movl 40(%eax),%eax
	movl %eax,-36(%ebp)
L12960:
	movl -36(%ebp),%edx
	movl %edx,-8(%ebp)
	testl %edx,%edx
	je L12914
	testl %ecx,%ecx
	je L12967
L12914:
	testl %ecx,%ecx
	jne L12969
	movl $1,%ecx
L12969:
	movl _list_plan__J3,%eax
	movl %eax,-4(%ebp)
	testl %eax,%eax
	je L13084
	cmpl %ecx,4(%eax)
	je L12972
	.p2align 2
L12973:
	movl -4(%ebp),%edx
	movl 28(%edx),%edx
	movl %edx,-4(%ebp)
	testl %edx,%edx
	je L13084
	cmpl %ecx,4(%edx)
	jne L12973
L12972:
	cmpl $0,-4(%ebp)
	je L13084
	.p2align 2
L12978:
	movl -4(%ebp),%edx
	movl 12(%edx),%eax
	movl 12(%ebp),%edx
	movl (%eax),%eax
	movl %edx,-40(%ebp)
	cmpl %edx,%eax
	jle L12980
	movl %eax,-40(%ebp)
L12980:
	movl -4(%ebp),%edx
	movl -40(%ebp),%edi
	movl 16(%edx),%eax
	movl 20(%ebp),%edx
	movl (%eax),%eax
	movl %eax,-44(%ebp)
	cmpl %edx,%eax
	jle L12984
	movl %edx,-44(%ebp)
L12984:
	movl -4(%ebp),%edx
	movl -44(%ebp),%ebx
	movl 20(%edx),%eax
	movl 16(%ebp),%edx
	movl (%eax),%eax
	movl %edx,-48(%ebp)
	cmpl %edx,%eax
	jle L12988
	movl %eax,-48(%ebp)
L12988:
	movl -4(%ebp),%edx
	movl -48(%ebp),%ecx
	movl 24(%edx),%eax
	movl 24(%ebp),%edx
	movl (%eax),%eax
	decl %eax
	movl %eax,-52(%ebp)
	cmpl %edx,%eax
	jle L12994
	movl %edx,-52(%ebp)
L12994:
	movl -52(%ebp),%edx
	cmpl %ebx,%edi
	jg L12997
	cmpl %edx,%ecx
	jg L12997
	movl -4(%ebp),%eax
	movl 8(%eax),%esi
	movl (%esi),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L13002
	jmp *L13014(,%eax,4)
	.p2align 2
L13014:
	.long L13013
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13010
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13002
	.long L13013
	.long L13012
	.long L13013
	.long L13002
	.long L13013
	.long L13013
	.long L13012
	.long L13013
	.long L13012
	.long L13012
	.p2align 2
L13010:
	movl 60(%esi),%eax
	movl %eax,-16(%ebp)
	jmp L13002
	.p2align 2
L13012:
	movl 64(%esi),%eax
	movl %eax,-16(%ebp)
	jmp L13002
	.p2align 2
L13013:
	movl 64(%esi),%edx
	movl %edx,-16(%ebp)
L13002:
	movl -40(%ebp),%edi
	movl (%esi),%eax
	subl -16(%ebp),%edi
	leal -17(%eax),%edx
	cmpl $70,%edx
	ja L13017
	jmp *L13029(,%edx,4)
	.p2align 2
L13029:
	.long L13028
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13025
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13017
	.long L13028
	.long L13028
	.long L13028
	.long L13017
	.long L13028
	.long L13028
	.long L13028
	.long L13028
	.long L13027
	.long L13028
	.p2align 2
L13025:
	movl 60(%esi),%edx
	jmp L13086
	.p2align 2
L13027:
L13028:
	movl 64(%esi),%edx
L13086:
	movl %edx,-20(%ebp)
L13017:
	movl -44(%ebp),%ebx
	subl -20(%ebp),%ebx
	leal -17(%eax),%edx
	cmpl $70,%edx
	ja L13032
	jmp *L13044(,%edx,4)
	.p2align 2
L13044:
	.long L13043
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13040
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13032
	.long L13043
	.long L13043
	.long L13043
	.long L13032
	.long L13043
	.long L13043
	.long L13043
	.long L13043
	.long L13042
	.long L13043
	.p2align 2
L13040:
	movl 64(%esi),%edx
	jmp L13087
	.p2align 2
L13042:
L13043:
	movl 68(%esi),%edx
L13087:
	movl %edx,-24(%ebp)
L13032:
	movl -48(%ebp),%ecx
	subl -24(%ebp),%ecx
	leal -17(%eax),%edx
	cmpl $70,%edx
	ja L13047
	jmp *L13059(,%edx,4)
	.p2align 2
L13059:
	.long L13058
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13055
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13047
	.long L13058
	.long L13058
	.long L13058
	.long L13047
	.long L13058
	.long L13058
	.long L13058
	.long L13058
	.long L13057
	.long L13058
	.p2align 2
L13055:
	movl 64(%esi),%edx
	jmp L13088
	.p2align 2
L13057:
L13058:
	movl 68(%esi),%edx
L13088:
	movl %edx,-28(%ebp)
L13047:
	movl -52(%ebp),%edx
	subl -28(%ebp),%edx
	addl $-17,%eax
	cmpl $70,%eax
	ja L12997
	jmp *L13081(,%eax,4)
	.p2align 2
L13081:
	.long L13080
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L12997
	.long L13067
	.long L13064
	.long L13078
	.long L12997
	.long L13065
	.long L13069
	.long L13066
	.long L13063
	.long L13079
	.long L13068
	.p2align 2
L13063:
	addl $-12,%esp
	pushl %edx
	pushl %ebx
	pushl %ecx
	pushl %edi
	pushl %esi
	call _draw__to__2HRB
	jmp L13089
	.p2align 2
L13064:
	addl $-12,%esp
	pushl %edx
	pushl %ebx
	pushl %ecx
	pushl %edi
	pushl %esi
	call _draw__to__WCQ
	jmp L13089
	.p2align 2
L13065:
	addl $-12,%esp
	pushl %edx
	pushl %ebx
	pushl %ecx
	pushl %edi
	pushl %esi
	call _draw__to__NWZ
	jmp L13089
	.p2align 2
L13066:
	addl $-12,%esp
	pushl %edx
	pushl %ebx
	pushl %ecx
	pushl %edi
	pushl %esi
	call _draw__to__7EMB
	jmp L13089
	.p2align 2
L13067:
	addl $-12,%esp
	pushl %edx
	pushl %ebx
	pushl %ecx
	pushl %edi
	pushl %esi
	call _draw__to__PU6B
	jmp L13089
	.p2align 2
L13068:
	addl $-12,%esp
	pushl %edx
	pushl %ebx
	pushl %ecx
	pushl %edi
	pushl %esi
	call _draw__to__NU0B
	jmp L13089
	.p2align 2
L13069:
	movl _parent_video__C2,%eax
	addl $-12,%esp
	pushl %edx
	pushl %ebx
	pushl %ecx
	pushl %edi
	pushl %esi
	call _clipping__to__8HJB
	addl $32,%esp
	movl _parent_video__C2,%eax
	movl 84(%esi),%edx
	pushl $0
	pushl $0
	pushl %edx
	pushl %esi
	call _put_bitmap__to__8KJB
	addl $16,%esp
	jmp L12997
	.p2align 2
L13078:
	addl $-12,%esp
	pushl %edx
	pushl %ebx
	pushl %ecx
	pushl %edi
	pushl %esi
	call _draw__to__HFU
	jmp L13089
	.p2align 2
L13079:
	addl $-12,%esp
	pushl %edx
	pushl %ebx
	pushl %ecx
	pushl %edi
	pushl %esi
	call _draw__to__HEWB
	jmp L13089
	.p2align 2
L13080:
	addl $-12,%esp
	pushl %edx
	pushl %ebx
	pushl %ecx
	pushl %edi
	pushl %esi
	call _draw__to__5PJ
L13089:
	addl $32,%esp
L12997:
	movl -4(%ebp),%eax
	movl 28(%eax),%eax
	movl %eax,-4(%ebp)
	testl %eax,%eax
	jne L12978
L13084:
	leal -72(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_rectangle_fill_to__KWJ:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 8(%ebp),%edx
	movl 12(%ebp),%edi
	movl 16(%ebp),%esi
	movl 32(%eax),%eax
	movl %eax,-8(%ebp)
	movl 36(%edx),%edx
	movl %edx,-12(%ebp)
	cmpl %edi,%eax
	jle L13098
	movl %edi,-8(%ebp)
	movl %eax,%edi
L13098:
	cmpl %esi,-12(%ebp)
	jle L13100
	movl -12(%ebp),%eax
	movl %esi,-12(%ebp)
	movl %eax,%esi
L13100:
	movl 8(%ebp),%eax
	movl -8(%ebp),%edx
	cmpl 24(%eax),%edx
	jg L13112
	movl 16(%eax),%eax
	cmpl %eax,%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L13112
	movl 8(%ebp),%eax
	movl -12(%ebp),%edx
	cmpl 28(%eax),%edx
	jg L13112
	movl 20(%eax),%eax
	cmpl %eax,%esi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L13112
	movl 8(%ebp),%edx
	movl 16(%edx),%eax
	cmpl -8(%ebp),%eax
	jle L13113
	movl %eax,-8(%ebp)
L13113:
	movl 8(%ebp),%edx
	movl 20(%edx),%eax
	cmpl -12(%ebp),%eax
	jle L13115
	movl %eax,-12(%ebp)
L13115:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 24(%edx),%eax
	cmpl %edi,%eax
	setg %bl
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L13117
	movl 8(%ebp),%eax
	movl 24(%eax),%edi
L13117:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 28(%edx),%eax
	cmpl %esi,%eax
	setg %bl
	pushl %esi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L13121
	movl 8(%ebp),%eax
	movl 28(%eax),%esi
L13121:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L13125
	movl 32(%eax),%eax
	jmp L13135
	.p2align 2
L13125:
	movl 28(%eax),%eax
L13135:
	movl %eax,-4(%ebp)
	movl -12(%ebp),%ebx
	cmpl %esi,%ebx
	jg L13112
	.p2align 2
L13129:
	movl -4(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	pushl %edi
	pushl %ebx
	movl -8(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _line_h_hard__until__color__82J
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L13129
L13112:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_rectangle_to__XBL:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 32(%eax),%esi
	movl 36(%eax),%edi
	cmpl 16(%ebp),%edi
	jne L13137
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L13138
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _line_h_until__4CL
	jmp L13142
	.p2align 2
L13138:
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _line_h_until__4CL
	jmp L13181
	.p2align 2
L13137:
	cmpl 12(%ebp),%esi
	jne L13143
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L13144
	movl 16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _line_v_until__XHL
	jmp L13142
	.p2align 2
L13144:
	movl 16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _line_v_until__XHL
	jmp L13181
	.p2align 2
L13143:
	movl _parent_video__C2,%eax
	movl 12(%ebp),%eax
	pushl %eax
	pushl %edi
	pushl %esi
	movl 8(%ebp),%eax
	pushl %eax
	call _line_h__until__7RL
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl 12(%ebp),%eax
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	pushl %esi
	movl 8(%ebp),%eax
	pushl %eax
	call _line_h__until__7RL
	addl $16,%esp
	movl 16(%ebp),%eax
	cmpl 16(%ebp),%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L13151
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	movl 16(%ebp),%ebx
	addl $32,%esp
	decl %ebx
	pushl %ebx
	pushl %edx
	pushl %esi
	movl 8(%ebp),%eax
	pushl %eax
	call _line_v__until__1TL
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $32,%esp
	cmpl $16,(%eax)
	je L13182
	jmp L13178
	.p2align 2
L13151:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $32,%esp
	leal -1(%edi),%ebx
	pushl %ebx
	pushl %edx
	pushl %esi
	movl 8(%ebp),%eax
	pushl %eax
	call _line_v__until__1TL
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $32,%esp
	cmpl $16,(%eax)
	jne L13178
L13182:
	pushl %ebx
	pushl %edx
	movl 12(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _line_v__until__1TL
	jmp L13142
	.p2align 2
L13178:
	pushl %ebx
	pushl %edx
	movl 12(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _line_v__until__1TL
L13181:
L13142:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_pixel_hard__color__7NQ:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%ebx
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-8(%ebp)
	addl $32,%esp
	addl $-4,%esp
	pushl %eax
	movl -4(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _get_clip__BPQ
	addl $16,%esp
	testl %eax,%eax
	je L13186
	movl 16(%eax),%edx
	cmpl 8(%ebp),%edx
	jne L13187
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L13210
	movl 20(%ebp),%eax
	shrl $16,%eax
	movl %eax,%ebx
	movl 20(%ebp),%eax
	andl $192,%ebx
	shrl $10,%eax
	andl $56,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	pushl %ebx
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movb %al,%bl
	movl 20(%ebp),%eax
	addl $48,%esp
	shrl $5,%eax
	andl $7,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	sall $6,-8(%ebp)
	movl -8(%ebp),%edx
	movb %al,-9(%ebp)
	addl $48,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	movl -8(%ebp),%eax
	sall $2,%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	movw $2,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	addl $16,%esp
	addl $-4,%esp
	xorl %eax,%eax
	movb -9(%ebp),%al
	pushl %eax
	pushl %ebx
	xorl %eax,%eax
	movw ___desc_video,%ax
	pushl %eax
	call __farpokeb
	addl $16,%esp
	movw $1,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	jmp L13186
	.p2align 2
L13210:
	call _get_line__R6Q
	addl $-8,%esp
	pushl $___dj_stdout
	pushl $78
	call _fputc
	addl $16,%esp
	addl $-12,%esp
	pushl $1
	call _exit
	.p2align 2
L13187:
	movl (%edx),%eax
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L13215
	jmp *L13227(,%ecx,4)
	.p2align 2
L13227:
	.long L13226
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13217
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13215
	.long L13226
	.long L13226
	.long L13225
	.long L13215
	.long L13226
	.long L13226
	.long L13226
	.long L13226
	.long L13226
	.long L13226
	.p2align 2
L13217:
	movl 60(%edx),%edi
	jmp L13215
	.p2align 2
L13225:
L13226:
	movl 64(%edx),%edi
L13215:
	movl -4(%ebp),%ebx
	subl %edi,%ebx
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L13230
	jmp *L13242(,%ecx,4)
	.p2align 2
L13242:
	.long L13241
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13232
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13230
	.long L13241
	.long L13241
	.long L13240
	.long L13230
	.long L13241
	.long L13241
	.long L13241
	.long L13241
	.long L13241
	.long L13241
	.p2align 2
L13232:
	movl 64(%edx),%esi
	jmp L13230
	.p2align 2
L13240:
L13241:
	movl 68(%edx),%esi
L13230:
	movl -8(%ebp),%ecx
	subl %esi,%ecx
	addl $-17,%eax
	cmpl $70,%eax
	ja L13186
	jmp *L13257(,%eax,4)
	.p2align 2
L13257:
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13252
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.long L13186
	.p2align 2
L13252:
	movl 20(%ebp),%eax
	pushl %eax
	pushl %ecx
	pushl %ebx
	pushl %edx
	call _slave_pixel_hard__color__6P7B
L13186:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_h_hard__until__color__CER:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	cmpl $0,56(%eax)
	je L13260
	movl 64(%eax),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%ecx
	movl %eax,-8(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%ecx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,%esi
	movl 56(%edx),%eax
	addl $32,%esp
	movl 24(%eax),%eax
	addl $-8,%esp
	movl (%eax),%eax
	cmpl %eax,-8(%ebp)
	setg %bl
	pushl %eax
	movl -8(%ebp),%ecx
	pushl %ecx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L13260
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%eax
	addl $-8,%esp
	movl (%eax),%eax
	cmpl %eax,-8(%ebp)
	setg %bl
	pushl %eax
	movl -8(%ebp),%ecx
	pushl %ecx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L13260
	movl 8(%ebp),%eax
	movl 56(%eax),%edx
	movl 12(%edx),%eax
	movl (%eax),%eax
	cmpl %eax,-4(%ebp)
	jle L13271
	movl -4(%ebp),%eax
L13271:
	movl %eax,-4(%ebp)
	movl 16(%edx),%eax
	movl (%eax),%eax
	movl %esi,-20(%ebp)
	cmpl %eax,%esi
	jle L13275
	movl %eax,-20(%ebp)
L13275:
	movl -20(%ebp),%edx
	cmpl %edx,-4(%ebp)
	jg L13260
	.p2align 2
L13375:
	movl -8(%ebp),%ecx
	addl $-4,%esp
	pushl %ecx
	movl -4(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _get_clip__BPQ
	movl 8(%eax),%edx
	movl -20(%ebp),%ecx
	addl $16,%esp
	movl %ecx,-24(%ebp)
	cmpl %edx,%ecx
	jle L13285
	movl %edx,-24(%ebp)
L13285:
	movl 16(%eax),%edx
	cmpl 8(%ebp),%edx
	jne L13288
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L13323
	movl 24(%ebp),%eax
	shrl $16,%eax
	movl %eax,%ebx
	movl 24(%ebp),%eax
	andl $192,%ebx
	shrl $10,%eax
	andl $56,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	pushl %ebx
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movb %al,%bl
	movl 24(%ebp),%eax
	addl $48,%esp
	shrl $5,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	andl $7,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movl -8(%ebp),%ebx
	movb %al,-13(%ebp)
	movl -8(%ebp),%eax
	addl $48,%esp
	sall $8,%ebx
	sall $6,%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	movl -4(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	movw $2,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	movl -24(%ebp),%edx
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl -4(%ebp),%esi
	cmpl %esi,%ebx
	jg L13378
	.p2align 2
L13315:
	addl $-4,%esp
	xorl %eax,%eax
	movb -13(%ebp),%al
	pushl %eax
	pushl %ebx
	xorl %eax,%eax
	movw ___desc_video,%ax
	pushl %eax
	call __farpokeb
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L13315
L13378:
	movw $1,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	addl $16,%esp
	jmp L13327
	.p2align 2
L13323:
	call _get_line__R6Q
	addl $-8,%esp
	pushl $___dj_stdout
	pushl $78
	call _fputc
	addl $16,%esp
	addl $-12,%esp
	pushl $1
	call _exit
	.p2align 2
L13288:
	movl (%edx),%eax
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L13328
	jmp *L13340(,%ecx,4)
	.p2align 2
L13340:
	.long L13339
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13330
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13328
	.long L13339
	.long L13339
	.long L13338
	.long L13328
	.long L13339
	.long L13339
	.long L13339
	.long L13339
	.long L13339
	.long L13339
	.p2align 2
L13330:
	movl 60(%edx),%edi
	jmp L13328
	.p2align 2
L13338:
L13339:
	movl 64(%edx),%edi
L13328:
	movl -4(%ebp),%esi
	subl %edi,%esi
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L13343
	jmp *L13355(,%ecx,4)
	.p2align 2
L13355:
	.long L13354
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13345
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13343
	.long L13354
	.long L13354
	.long L13353
	.long L13343
	.long L13354
	.long L13354
	.long L13354
	.long L13354
	.long L13354
	.long L13354
	.p2align 2
L13345:
	movl 64(%edx),%ecx
	jmp L13379
	.p2align 2
L13353:
L13354:
	movl 68(%edx),%ecx
L13379:
	movl %ecx,-12(%ebp)
L13343:
	movl -8(%ebp),%ebx
	movl -24(%ebp),%ecx
	subl -12(%ebp),%ebx
	subl %edi,%ecx
	addl $-17,%eax
	cmpl $70,%eax
	ja L13327
	jmp *L13371(,%eax,4)
	.p2align 2
L13371:
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13366
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.long L13327
	.p2align 2
L13366:
	movl 24(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	pushl %ecx
	pushl %ebx
	pushl %esi
	pushl %edx
	call _slave_line_h_hard__until__color__GC8B
	addl $32,%esp
L13327:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl -20(%ebp),%ecx
	movl %eax,-4(%ebp)
	addl $32,%esp
	cmpl %ecx,%eax
	jle L13375
L13260:
	leal -56(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_font_width__size__Q8R:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edx
	movl 8(%ebp),%ecx
	movl $0,-4(%ebp)
	movl _lower__2WK,%edi
	movl 4(%ecx),%eax
	movl %eax,-8(%ebp)
	cmpl %edx,%eax
	jle L13422
	movl %edx,-8(%ebp)
	jmp L13422
	.p2align 2
L13394:
	addl $-8,%esp
	movl %edi,%eax
	subl $1,%eax
	pushl %eax
	movl 8(%ebp),%edx
	movl (%edx),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	addl $-12,%esp
	movsbl %al,%eax
	pushl %eax
	call _code__1LB
	movsbl %al,%esi
	addl $16,%esp
	cmpl $32,%esi
	setg %bl
	addl $-8,%esp
	pushl $32
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L13402
	cmpl $127,%esi
	setg %bl
	addl $-8,%esp
	pushl $127
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L13401
L13402:
	xorl %esi,%esi
	jmp L13411
	.p2align 2
L13401:
	subl $32,%esi
L13411:
	movl $___index_font,%eax
	xorl %ebx,%ebx
	addl $-8,%esp
	addl $-12,%esp
	movw (%eax,%esi,2),%bx
	movw 2(%eax,%esi,2),%ax
	andl $65535,%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%ecx
	pushl %ecx
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl %ebx,%esi
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
L13422:
	cmpl -8(%ebp),%edi
	jle L13394
	leal -40(%ebp),%esp
	movl -4(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_pixel_hard__color__HOV:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%ebx
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-8(%ebp)
	addl $32,%esp
	addl $-4,%esp
	pushl %eax
	movl -4(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _get_clip__LVU
	addl $16,%esp
	testl %eax,%eax
	je L13440
	movl 16(%eax),%edx
	cmpl 8(%ebp),%edx
	jne L13441
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L13464
	movl 20(%ebp),%eax
	shrl $16,%eax
	movl %eax,%ebx
	movl 20(%ebp),%eax
	andl $192,%ebx
	shrl $10,%eax
	andl $56,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	pushl %ebx
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movb %al,%bl
	movl 20(%ebp),%eax
	addl $48,%esp
	shrl $5,%eax
	andl $7,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	sall $6,-8(%ebp)
	movl -8(%ebp),%edx
	movb %al,-9(%ebp)
	addl $48,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	movl -8(%ebp),%eax
	sall $2,%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	movw $2,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	addl $16,%esp
	addl $-4,%esp
	xorl %eax,%eax
	movb -9(%ebp),%al
	pushl %eax
	pushl %ebx
	xorl %eax,%eax
	movw ___desc_video,%ax
	pushl %eax
	call __farpokeb
	addl $16,%esp
	movw $1,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	jmp L13440
	.p2align 2
L13464:
	call _get_line__DFV
	addl $-8,%esp
	pushl $___dj_stdout
	pushl $78
	call _fputc
	addl $16,%esp
	addl $-12,%esp
	pushl $1
	call _exit
	.p2align 2
L13441:
	movl (%edx),%eax
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L13469
	jmp *L13481(,%ecx,4)
	.p2align 2
L13481:
	.long L13480
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13471
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13469
	.long L13480
	.long L13480
	.long L13480
	.long L13469
	.long L13480
	.long L13479
	.long L13480
	.long L13480
	.long L13480
	.long L13480
	.p2align 2
L13471:
	movl 60(%edx),%edi
	jmp L13469
	.p2align 2
L13479:
L13480:
	movl 64(%edx),%edi
L13469:
	movl -4(%ebp),%ebx
	subl %edi,%ebx
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L13484
	jmp *L13496(,%ecx,4)
	.p2align 2
L13496:
	.long L13495
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13486
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13484
	.long L13495
	.long L13495
	.long L13495
	.long L13484
	.long L13495
	.long L13494
	.long L13495
	.long L13495
	.long L13495
	.long L13495
	.p2align 2
L13486:
	movl 64(%edx),%esi
	jmp L13484
	.p2align 2
L13494:
L13495:
	movl 68(%edx),%esi
L13484:
	movl -8(%ebp),%ecx
	subl %esi,%ecx
	addl $-17,%eax
	cmpl $70,%eax
	ja L13440
	jmp *L13511(,%eax,4)
	.p2align 2
L13511:
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13507
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.long L13440
	.p2align 2
L13507:
	movl 20(%ebp),%eax
	pushl %eax
	pushl %ecx
	pushl %ebx
	pushl %edx
	call _slave_pixel_hard__color__6P7B
L13440:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_h_hard__until__color__ERU:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	cmpl $0,56(%eax)
	je L13514
	movl 64(%eax),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%ecx
	movl %eax,-8(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%ecx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,%esi
	movl 56(%edx),%eax
	addl $32,%esp
	movl 24(%eax),%eax
	addl $-8,%esp
	movl (%eax),%eax
	cmpl %eax,-8(%ebp)
	setg %bl
	pushl %eax
	movl -8(%ebp),%ecx
	pushl %ecx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L13514
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%eax
	addl $-8,%esp
	movl (%eax),%eax
	cmpl %eax,-8(%ebp)
	setg %bl
	pushl %eax
	movl -8(%ebp),%ecx
	pushl %ecx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L13514
	movl 8(%ebp),%eax
	movl 56(%eax),%edx
	movl 12(%edx),%eax
	movl (%eax),%eax
	cmpl %eax,-4(%ebp)
	jle L13525
	movl -4(%ebp),%eax
L13525:
	movl %eax,-4(%ebp)
	movl 16(%edx),%eax
	movl (%eax),%eax
	movl %esi,-20(%ebp)
	cmpl %eax,%esi
	jle L13529
	movl %eax,-20(%ebp)
L13529:
	movl -20(%ebp),%edx
	cmpl %edx,-4(%ebp)
	jg L13514
	.p2align 2
L13629:
	movl -8(%ebp),%ecx
	addl $-4,%esp
	pushl %ecx
	movl -4(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _get_clip__LVU
	movl 8(%eax),%edx
	movl -20(%ebp),%ecx
	addl $16,%esp
	movl %ecx,-24(%ebp)
	cmpl %edx,%ecx
	jle L13539
	movl %edx,-24(%ebp)
L13539:
	movl 16(%eax),%edx
	cmpl 8(%ebp),%edx
	jne L13542
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L13577
	movl 24(%ebp),%eax
	shrl $16,%eax
	movl %eax,%ebx
	movl 24(%ebp),%eax
	andl $192,%ebx
	shrl $10,%eax
	andl $56,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	pushl %ebx
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movb %al,%bl
	movl 24(%ebp),%eax
	addl $48,%esp
	shrl $5,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	andl $7,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movl -8(%ebp),%ebx
	movb %al,-13(%ebp)
	movl -8(%ebp),%eax
	addl $48,%esp
	sall $8,%ebx
	sall $6,%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	movl -4(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	movw $2,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	movl -24(%ebp),%edx
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl -4(%ebp),%esi
	cmpl %esi,%ebx
	jg L13632
	.p2align 2
L13569:
	addl $-4,%esp
	xorl %eax,%eax
	movb -13(%ebp),%al
	pushl %eax
	pushl %ebx
	xorl %eax,%eax
	movw ___desc_video,%ax
	pushl %eax
	call __farpokeb
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L13569
L13632:
	movw $1,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	addl $16,%esp
	jmp L13581
	.p2align 2
L13577:
	call _get_line__DFV
	addl $-8,%esp
	pushl $___dj_stdout
	pushl $78
	call _fputc
	addl $16,%esp
	addl $-12,%esp
	pushl $1
	call _exit
	.p2align 2
L13542:
	movl (%edx),%eax
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L13582
	jmp *L13594(,%ecx,4)
	.p2align 2
L13594:
	.long L13593
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13584
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13582
	.long L13593
	.long L13593
	.long L13593
	.long L13582
	.long L13593
	.long L13592
	.long L13593
	.long L13593
	.long L13593
	.long L13593
	.p2align 2
L13584:
	movl 60(%edx),%edi
	jmp L13582
	.p2align 2
L13592:
L13593:
	movl 64(%edx),%edi
L13582:
	movl -4(%ebp),%esi
	subl %edi,%esi
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L13597
	jmp *L13609(,%ecx,4)
	.p2align 2
L13609:
	.long L13608
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13599
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13597
	.long L13608
	.long L13608
	.long L13608
	.long L13597
	.long L13608
	.long L13607
	.long L13608
	.long L13608
	.long L13608
	.long L13608
	.p2align 2
L13599:
	movl 64(%edx),%ecx
	jmp L13633
	.p2align 2
L13607:
L13608:
	movl 68(%edx),%ecx
L13633:
	movl %ecx,-12(%ebp)
L13597:
	movl -8(%ebp),%ebx
	movl -24(%ebp),%ecx
	subl -12(%ebp),%ebx
	subl %edi,%ecx
	addl $-17,%eax
	cmpl $70,%eax
	ja L13581
	jmp *L13625(,%eax,4)
	.p2align 2
L13625:
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13621
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.long L13581
	.p2align 2
L13621:
	movl 24(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	pushl %ecx
	pushl %ebx
	pushl %esi
	pushl %edx
	call _slave_line_h_hard__until__color__GC8B
	addl $32,%esp
L13581:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl -20(%ebp),%ecx
	movl %eax,-4(%ebp)
	addl $32,%esp
	cmpl %ecx,%eax
	jle L13629
L13514:
	leal -56(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_to__OFW:
	pushl %ebp
	movl %esp,%ebp
	subl $60,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 8(%ebp),%edx
	movl 16(%ebp),%edi
	movl 32(%eax),%eax
	movl %eax,-4(%ebp)
	movl 36(%edx),%edx
	movl 12(%ebp),%eax
	movl %edx,-8(%ebp)
	movl -4(%ebp),%edx
	movl %eax,-12(%ebp)
	subl %edx,-12(%ebp)
	subl -8(%ebp),%edi
	jne L13644
	movl _parent_video__C2,%eax
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _line_h_until__BNU
	jmp L13649
	.p2align 2
L13644:
	cmpl $0,-12(%ebp)
	jne L13650
	movl _parent_video__C2,%eax
	movl 16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _line_v_until__AKV
	jmp L13649
	.p2align 2
L13650:
	movl 12(%ebp),%edx
	movl 8(%ebp),%eax
	movl %edx,32(%eax)
	movl 16(%ebp),%edx
	movl %edx,36(%eax)
	cmpl $0,-12(%ebp)
	setg %bl
	addl $-8,%esp
	pushl $0
	movl -12(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L13654
	testl %edi,%edi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L13658
	cmpl %edi,-12(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %edi
	movl -12(%ebp),%edx
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L13662
	leal (%edi,%edi),%eax
	movl %eax,-24(%ebp)
	movl %eax,%esi
	movl -12(%ebp),%eax
	movl -4(%ebp),%edx
	movl -8(%ebp),%edi
	subl -12(%ebp),%esi
	movl %esi,-16(%ebp)
	subl %eax,-16(%ebp)
	movl 12(%ebp),%eax
	movl %edx,-20(%ebp)
	cmpl %eax,%edx
	jg L13649
	.p2align 2
L13672:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _pixel_to__ZNW
	addl $16,%esp
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L13677
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl -16(%ebp),%edx
	movl %eax,%edi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	jmp L13894
	.p2align 2
L13677:
	movl -24(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
L13894:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl 12(%ebp),%edx
	movl %eax,-20(%ebp)
	addl $32,%esp
	cmpl %edx,%eax
	jle L13672
	jmp L13649
	.p2align 2
L13662:
	movl -12(%ebp),%eax
	addl %eax,%eax
	movl %eax,-28(%ebp)
	movl %eax,%esi
	movl -4(%ebp),%eax
	subl %edi,%esi
	movl %esi,-16(%ebp)
	subl %edi,-16(%ebp)
	movl -8(%ebp),%edi
	movl %eax,-20(%ebp)
	cmpl 16(%ebp),%edi
	jg L13649
	.p2align 2
L13697:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _pixel_to__ZNW
	addl $16,%esp
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L13702
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl %eax,-20(%ebp)
	movl -16(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	jmp L13895
	.p2align 2
L13702:
	movl -28(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
L13895:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
	cmpl 16(%ebp),%edi
	jle L13697
	jmp L13649
	.p2align 2
L13658:
	movl %edi,%eax
	negl %eax
	cmpl %eax,-12(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -12(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L13715
	movl -12(%ebp),%edx
	leal (%edi,%edi),%eax
	movl %eax,%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%esi
	movl -12(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl -8(%ebp),%edi
	movl %eax,-16(%ebp)
	movl 12(%ebp),%eax
	addl $32,%esp
	movl %edx,-20(%ebp)
	cmpl %eax,%edx
	jg L13649
	.p2align 2
L13728:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _pixel_to__ZNW
	addl $16,%esp
	testl %esi,%esi
	jg L13733
	movl -16(%ebp),%edx
	subl $1,%edi
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	jmp L13896
	.p2align 2
L13733:
	addl $-8,%esp
	addl $-12,%esp
	pushl %ebx
L13896:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 12(%ebp),%edx
	movl %eax,-20(%ebp)
	addl $32,%esp
	cmpl %edx,%eax
	jle L13728
	jmp L13649
	.p2align 2
L13715:
	movl -12(%ebp),%eax
	addl %eax,%eax
	movl %eax,-32(%ebp)
	addl $-8,%esp
	addl $-12,%esp
	pushl %edi
	call ___prefix_sub__05B
	pushl %eax
	movl -32(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edi
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl -8(%ebp),%edi
	movl %eax,-16(%ebp)
	addl $32,%esp
	movl %edx,-20(%ebp)
	jmp L13751
	.p2align 2
L13753:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _pixel_to__ZNW
	addl $16,%esp
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L13758
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -16(%ebp),%edx
	movl %eax,-20(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	jmp L13897
	.p2align 2
L13758:
	movl -32(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
L13897:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl $1,%edi
L13751:
	movl 16(%ebp),%edx
	cmpl 16(%ebp),%edi
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L13753
	jmp L13649
	.p2align 2
L13654:
	testl %edi,%edi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L13771
	movl -12(%ebp),%eax
	negl %eax
	cmpl %edi,%eax
	setg %bl
	addl $-8,%esp
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L13775
	leal (%edi,%edi),%eax
	movl %eax,-36(%ebp)
	movl -12(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -36(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl %eax,%esi
	movl -12(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl -8(%ebp),%edi
	movl %eax,-16(%ebp)
	addl $32,%esp
	movl %edx,-20(%ebp)
	jmp L13786
	.p2align 2
L13788:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _pixel_to__ZNW
	addl $16,%esp
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L13793
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	movl -16(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	jmp L13898
	.p2align 2
L13793:
	movl -36(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
L13898:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl $1,-20(%ebp)
L13786:
	movl 12(%ebp),%eax
	cmpl %eax,-20(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -20(%ebp),%edx
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L13788
	jmp L13649
	.p2align 2
L13775:
	movl -12(%ebp),%eax
	addl %eax,%eax
	movl %eax,%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl %edi
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edi
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,-16(%ebp)
	movl -4(%ebp),%eax
	movl -8(%ebp),%edi
	addl $32,%esp
	movl %eax,-20(%ebp)
	cmpl 16(%ebp),%edi
	jg L13649
	.p2align 2
L13813:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _pixel_to__ZNW
	addl $16,%esp
	testl %esi,%esi
	jg L13818
	movl -16(%ebp),%edx
	subl $1,-20(%ebp)
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	jmp L13899
	.p2align 2
L13818:
	addl $-8,%esp
	addl $-12,%esp
	pushl %ebx
L13899:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
	cmpl 16(%ebp),%edi
	jle L13813
	jmp L13649
	.p2align 2
L13771:
	movl -12(%ebp),%eax
	negl %eax
	movl %edi,%edx
	negl %edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L13831
	leal (%edi,%edi),%eax
	movl %eax,-40(%ebp)
	movl %eax,%esi
	movl -12(%ebp),%eax
	movl -4(%ebp),%edx
	movl -8(%ebp),%edi
	subl -12(%ebp),%esi
	movl %esi,-16(%ebp)
	subl %eax,-16(%ebp)
	movl %edx,-20(%ebp)
	jmp L13845
	.p2align 2
L13847:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _pixel_to__ZNW
	addl $16,%esp
	testl %esi,%esi
	jg L13852
	movl -16(%ebp),%eax
	subl $1,%edi
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	jmp L13900
	.p2align 2
L13852:
	movl -40(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
L13900:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl $1,-20(%ebp)
L13845:
	movl 12(%ebp),%eax
	cmpl %eax,-20(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -20(%ebp),%edx
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L13847
	jmp L13649
	.p2align 2
L13831:
	movl -12(%ebp),%eax
	movl -4(%ebp),%edx
	addl %eax,%eax
	movl %eax,%esi
	subl %edi,%esi
	movl %esi,-16(%ebp)
	subl %edi,-16(%ebp)
	movl -8(%ebp),%edi
	movl %eax,-44(%ebp)
	movl %edx,-20(%ebp)
	jmp L13870
	.p2align 2
L13872:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _pixel_to__ZNW
	addl $16,%esp
	testl %esi,%esi
	jg L13877
	movl -16(%ebp),%eax
	decl -20(%ebp)
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	jmp L13901
	.p2align 2
L13877:
	movl -44(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
L13901:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl $1,%edi
L13870:
	movl 16(%ebp),%eax
	cmpl 16(%ebp),%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L13872
L13649:
	leal -72(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clipping__to__AYZ:
	pushl %ebp
	movl %esp,%ebp
	pushl %edi
	pushl %esi
	pushl %ebx
	xorl %eax,%eax
	movl 8(%ebp),%ebx
	movl 12(%ebp),%esi
	movl 20(%ebp),%edi
	movl 12(%ebx),%edx
	movl 8(%ebx),%ecx
	decl %edx
	decl %ecx
	testl %esi,%esi
	jle L13916
	movl %esi,%eax
L13916:
	cmpl %edx,%eax
	jle L13920
	movl %edx,%eax
L13920:
	movl %eax,16(%ebx)
	xorl %eax,%eax
	testl %edi,%edi
	jle L13925
	movl %edi,%eax
L13925:
	cmpl %edx,%eax
	jle L13929
	movl %edx,%eax
L13929:
	movl %eax,24(%ebx)
	xorl %eax,%eax
	cmpl $0,16(%ebp)
	jle L13934
	movl 16(%ebp),%eax
L13934:
	cmpl %ecx,%eax
	jle L13938
	movl %ecx,%eax
L13938:
	movl %eax,20(%ebx)
	xorl %eax,%eax
	cmpl $0,24(%ebp)
	jle L13943
	movl 24(%ebp),%eax
L13943:
	cmpl %ecx,%eax
	jle L13947
	movl %ecx,%eax
L13947:
	movl %eax,28(%ebx)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_to__I40:
	pushl %ebp
	movl %esp,%ebp
	subl $60,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 8(%ebp),%edx
	movl 16(%ebp),%edi
	movl 32(%eax),%eax
	movl %eax,-4(%ebp)
	movl 36(%edx),%edx
	movl 12(%ebp),%eax
	movl %edx,-8(%ebp)
	movl -4(%ebp),%edx
	movl %eax,-12(%ebp)
	subl %edx,-12(%ebp)
	subl -8(%ebp),%edi
	jne L13962
	movl _parent_video__C2,%eax
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _line_h_until__080
	jmp L13967
	.p2align 2
L13962:
	cmpl $0,-12(%ebp)
	jne L13968
	movl _parent_video__C2,%eax
	movl 16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _line_v_until__6D1
	jmp L13967
	.p2align 2
L13968:
	movl 12(%ebp),%edx
	movl 8(%ebp),%eax
	movl %edx,32(%eax)
	movl 16(%ebp),%edx
	movl %edx,36(%eax)
	cmpl $0,-12(%ebp)
	setg %bl
	addl $-8,%esp
	pushl $0
	movl -12(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L13972
	testl %edi,%edi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L13976
	cmpl %edi,-12(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %edi
	movl -12(%ebp),%edx
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L13980
	leal (%edi,%edi),%eax
	movl %eax,-24(%ebp)
	movl %eax,%esi
	movl -12(%ebp),%eax
	movl -4(%ebp),%edx
	movl -8(%ebp),%edi
	subl -12(%ebp),%esi
	movl %esi,-16(%ebp)
	subl %eax,-16(%ebp)
	movl 12(%ebp),%eax
	movl %edx,-20(%ebp)
	cmpl %eax,%edx
	jg L13967
	.p2align 2
L13990:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _pixel_to__WR1
	addl $16,%esp
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L13995
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl -16(%ebp),%edx
	movl %eax,%edi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	jmp L14212
	.p2align 2
L13995:
	movl -24(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
L14212:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl 12(%ebp),%edx
	movl %eax,-20(%ebp)
	addl $32,%esp
	cmpl %edx,%eax
	jle L13990
	jmp L13967
	.p2align 2
L13980:
	movl -12(%ebp),%eax
	addl %eax,%eax
	movl %eax,-28(%ebp)
	movl %eax,%esi
	movl -4(%ebp),%eax
	subl %edi,%esi
	movl %esi,-16(%ebp)
	subl %edi,-16(%ebp)
	movl -8(%ebp),%edi
	movl %eax,-20(%ebp)
	cmpl 16(%ebp),%edi
	jg L13967
	.p2align 2
L14015:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _pixel_to__WR1
	addl $16,%esp
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L14020
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl %eax,-20(%ebp)
	movl -16(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	jmp L14213
	.p2align 2
L14020:
	movl -28(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
L14213:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
	cmpl 16(%ebp),%edi
	jle L14015
	jmp L13967
	.p2align 2
L13976:
	movl %edi,%eax
	negl %eax
	cmpl %eax,-12(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -12(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L14033
	movl -12(%ebp),%edx
	leal (%edi,%edi),%eax
	movl %eax,%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%esi
	movl -12(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl -8(%ebp),%edi
	movl %eax,-16(%ebp)
	movl 12(%ebp),%eax
	addl $32,%esp
	movl %edx,-20(%ebp)
	cmpl %eax,%edx
	jg L13967
	.p2align 2
L14046:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _pixel_to__WR1
	addl $16,%esp
	testl %esi,%esi
	jg L14051
	movl -16(%ebp),%edx
	subl $1,%edi
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	jmp L14214
	.p2align 2
L14051:
	addl $-8,%esp
	addl $-12,%esp
	pushl %ebx
L14214:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 12(%ebp),%edx
	movl %eax,-20(%ebp)
	addl $32,%esp
	cmpl %edx,%eax
	jle L14046
	jmp L13967
	.p2align 2
L14033:
	movl -12(%ebp),%eax
	addl %eax,%eax
	movl %eax,-32(%ebp)
	addl $-8,%esp
	addl $-12,%esp
	pushl %edi
	call ___prefix_sub__05B
	pushl %eax
	movl -32(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edi
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl -8(%ebp),%edi
	movl %eax,-16(%ebp)
	addl $32,%esp
	movl %edx,-20(%ebp)
	jmp L14069
	.p2align 2
L14071:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _pixel_to__WR1
	addl $16,%esp
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L14076
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -16(%ebp),%edx
	movl %eax,-20(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	jmp L14215
	.p2align 2
L14076:
	movl -32(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
L14215:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl $1,%edi
L14069:
	movl 16(%ebp),%edx
	cmpl 16(%ebp),%edi
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L14071
	jmp L13967
	.p2align 2
L13972:
	testl %edi,%edi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L14089
	movl -12(%ebp),%eax
	negl %eax
	cmpl %edi,%eax
	setg %bl
	addl $-8,%esp
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L14093
	leal (%edi,%edi),%eax
	movl %eax,-36(%ebp)
	movl -12(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -36(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl %eax,%esi
	movl -12(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl -8(%ebp),%edi
	movl %eax,-16(%ebp)
	addl $32,%esp
	movl %edx,-20(%ebp)
	jmp L14104
	.p2align 2
L14106:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _pixel_to__WR1
	addl $16,%esp
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L14111
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	movl -16(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	jmp L14216
	.p2align 2
L14111:
	movl -36(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
L14216:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl $1,-20(%ebp)
L14104:
	movl 12(%ebp),%eax
	cmpl %eax,-20(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -20(%ebp),%edx
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L14106
	jmp L13967
	.p2align 2
L14093:
	movl -12(%ebp),%eax
	addl %eax,%eax
	movl %eax,%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl %edi
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edi
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,-16(%ebp)
	movl -4(%ebp),%eax
	movl -8(%ebp),%edi
	addl $32,%esp
	movl %eax,-20(%ebp)
	cmpl 16(%ebp),%edi
	jg L13967
	.p2align 2
L14131:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _pixel_to__WR1
	addl $16,%esp
	testl %esi,%esi
	jg L14136
	movl -16(%ebp),%edx
	subl $1,-20(%ebp)
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	jmp L14217
	.p2align 2
L14136:
	addl $-8,%esp
	addl $-12,%esp
	pushl %ebx
L14217:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
	cmpl 16(%ebp),%edi
	jle L14131
	jmp L13967
	.p2align 2
L14089:
	movl -12(%ebp),%eax
	negl %eax
	movl %edi,%edx
	negl %edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L14149
	leal (%edi,%edi),%eax
	movl %eax,-40(%ebp)
	movl %eax,%esi
	movl -12(%ebp),%eax
	movl -4(%ebp),%edx
	movl -8(%ebp),%edi
	subl -12(%ebp),%esi
	movl %esi,-16(%ebp)
	subl %eax,-16(%ebp)
	movl %edx,-20(%ebp)
	jmp L14163
	.p2align 2
L14165:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _pixel_to__WR1
	addl $16,%esp
	testl %esi,%esi
	jg L14170
	movl -16(%ebp),%eax
	subl $1,%edi
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	jmp L14218
	.p2align 2
L14170:
	movl -40(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
L14218:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl $1,-20(%ebp)
L14163:
	movl 12(%ebp),%eax
	cmpl %eax,-20(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -20(%ebp),%edx
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L14165
	jmp L13967
	.p2align 2
L14149:
	movl -12(%ebp),%eax
	movl -4(%ebp),%edx
	addl %eax,%eax
	movl %eax,%esi
	subl %edi,%esi
	movl %esi,-16(%ebp)
	subl %edi,-16(%ebp)
	movl -8(%ebp),%edi
	movl %eax,-44(%ebp)
	movl %edx,-20(%ebp)
	jmp L14188
	.p2align 2
L14190:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _pixel_to__WR1
	addl $16,%esp
	testl %esi,%esi
	jg L14195
	movl -16(%ebp),%eax
	decl -20(%ebp)
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	jmp L14219
	.p2align 2
L14195:
	movl -44(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
L14219:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl $1,%edi
L14188:
	movl 16(%ebp),%eax
	cmpl 16(%ebp),%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L14190
L13967:
	leal -72(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_poly_move_to__PJ2:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl _parent_video__C2,%eax
	movl 8(%ebp),%edi
	cmpl $16,(%eax)
	jne L14221
	movl 36(%eax),%eax
	jmp L14222
	.p2align 2
L14221:
	movl 32(%eax),%eax
L14222:
	testl %eax,%eax
	jne L14223
	call _create_with_capacity__OM2
	movl _parent_video__C2,%edx
	cmpl $16,(%edx)
	jne L14224
	movl %eax,48(%edx)
	jmp L14225
	.p2align 2
L14224:
	movl %eax,44(%edx)
L14225:
	call _create__A52
	movl _parent_video__C2,%edx
	cmpl $16,(%edx)
	jne L14226
	movl %eax,36(%edx)
	jmp L14227
	.p2align 2
L14226:
	movl %eax,32(%edx)
L14227:
	xorl %esi,%esi
	jmp L14228
	.p2align 2
L14230:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14233
	movl 36(%eax),%ebx
	jmp L14234
	.p2align 2
L14233:
	movl 32(%eax),%ebx
L14234:
	addl $-4,%esp
	pushl %esi
	call _clone__GC3
	pushl %eax
	pushl %ebx
	call _put__to__KE3
	addl $16,%esp
	incl %esi
L14228:
	addl $-8,%esp
	pushl $63
	pushl %esi
	call ___infix_greater__3W
	addl $16,%esp
	testb %al,%al
	je L14230
L14223:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14240
	movl 40(%eax),%eax
	jmp L14241
	.p2align 2
L14240:
	movl 36(%eax),%eax
L14241:
	testl %eax,%eax
	je L14242
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14243
	addl $-12,%esp
	pushl %edi
	call _connect_first__5J3
	jmp L14242
	.p2align 2
L14243:
	addl $-12,%esp
	pushl %edi
	call _connect_first__5J3
L14242:
	movl _parent_video__C2,%eax
	movl 12(%ebp),%eax
	movl 16(%ebp),%edx
	movl %eax,32(%edi)
	movl %edx,36(%edi)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14249
	movl 12(%ebp),%edx
	movl %edx,68(%eax)
	jmp L14250
	.p2align 2
L14249:
	movl 12(%ebp),%edx
	movl %edx,64(%eax)
L14250:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14251
	movl 16(%ebp),%edx
	movl %edx,72(%eax)
	jmp L14252
	.p2align 2
L14251:
	movl 16(%ebp),%edx
	movl %edx,68(%eax)
L14252:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14253
	movl $0,52(%eax)
	jmp L14254
	.p2align 2
L14253:
	movl $0,48(%eax)
L14254:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14255
	movl $0,60(%eax)
	jmp L14256
	.p2align 2
L14255:
	movl $0,56(%eax)
L14256:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14257
	movl 44(%eax),%ecx
	jmp L14258
	.p2align 2
L14257:
	movl 40(%eax),%ecx
L14258:
	movl 16(%ebp),%edx
	cmpl %edx,%ecx
	jle L14260
	movl %ecx,%edx
L14260:
	cmpl $16,(%eax)
	jne L14263
	movl %edx,44(%eax)
	jmp L14264
	.p2align 2
L14263:
	movl %edx,40(%eax)
L14264:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_poly_line_to__DL3:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edx
	movl 32(%edx),%eax
	movl %eax,-4(%ebp)
	movl 36(%edx),%eax
	movl %eax,-8(%ebp)
	movl 12(%ebp),%eax
	cmpl %eax,-4(%ebp)
	jne L14267
	movl 16(%ebp),%eax
	cmpl %eax,-8(%ebp)
	je L14266
L14267:
	movl _parent_video__C2,%eax
	movl 12(%ebp),%eax
	movl %eax,32(%edx)
	movl 16(%ebp),%eax
	movl %eax,36(%edx)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14272
	movl 40(%eax),%edx
	jmp L14273
	.p2align 2
L14272:
	movl 36(%eax),%edx
L14273:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14274
	movl 36(%eax),%eax
	jmp L14275
	.p2align 2
L14274:
	movl 32(%eax),%eax
L14275:
	movl 8(%eax),%eax
	addl $-4,%eax
	cmpl %eax,%edx
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L14276
	xorl %esi,%esi
	jmp L14281
	.p2align 2
L14283:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14286
	movl 36(%eax),%ebx
	jmp L14287
	.p2align 2
L14286:
	movl 32(%eax),%ebx
L14287:
	addl $-8,%esp
	call _clone__GC3
	pushl %eax
	pushl %ebx
	call _add_last__DQ3
	addl $16,%esp
	incl %esi
L14281:
	addl $-8,%esp
	pushl $15
	pushl %esi
	call ___infix_greater__3W
	addl $16,%esp
	testb %al,%al
	je L14283
L14276:
	movl 16(%ebp),%eax
	cmpl %eax,-8(%ebp)
	jne L14293
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14294
	movl 36(%eax),%edx
	jmp L14295
	.p2align 2
L14294:
	movl 32(%eax),%edx
L14295:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14296
	movl 40(%eax),%eax
	jmp L14297
	.p2align 2
L14296:
	movl 36(%eax),%eax
L14297:
	addl $-8,%esp
	pushl %eax
	pushl %edx
	call _item__L13
	movl %eax,%esi
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L14298
	movl 40(%eax),%ebx
	jmp L14299
	.p2align 2
L14298:
	movl 36(%eax),%ebx
L14299:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl _parent_video__C2,%edx
	addl $32,%esp
	cmpl $16,(%edx)
	jne L14302
	movl %eax,40(%edx)
	jmp L14303
	.p2align 2
L14302:
	movl %eax,36(%edx)
L14303:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14304
	movl 48(%eax),%eax
	jmp L14305
	.p2align 2
L14304:
	movl 44(%eax),%eax
L14305:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _add_last__P33
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L14306
	movl 36(%eax),%edx
	jmp L14307
	.p2align 2
L14306:
	movl 32(%eax),%edx
L14307:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14308
	movl 40(%eax),%eax
	jmp L14309
	.p2align 2
L14308:
	movl 36(%eax),%eax
L14309:
	addl $-8,%esp
	pushl %eax
	pushl %edx
	call _item__L13
	movl %eax,%edi
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L14310
	movl 40(%eax),%ebx
	jmp L14311
	.p2align 2
L14310:
	movl 36(%eax),%ebx
L14311:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl _parent_video__C2,%edx
	addl $32,%esp
	cmpl $16,(%edx)
	jne L14314
	movl %eax,40(%edx)
	jmp L14315
	.p2align 2
L14314:
	movl %eax,36(%edx)
L14315:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14316
	movl 48(%eax),%eax
	jmp L14317
	.p2align 2
L14316:
	movl 44(%eax),%eax
L14317:
	addl $-8,%esp
	pushl %edi
	pushl %eax
	call _add_last__P33
	movl 12(%ebp),%eax
	addl $16,%esp
	cmpl %eax,-4(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L14318
	pushl $1
	movl -8(%ebp),%eax
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	pushl %esi
	call _make__add__ND4
	addl $16,%esp
	pushl $-1
	jmp L14396
	.p2align 2
L14318:
	pushl $-1
	movl -8(%ebp),%eax
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	pushl %esi
	call _make__add__ND4
	addl $16,%esp
	pushl $1
L14396:
	movl 16(%ebp),%eax
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	pushl %edi
	call _make__add__ND4
	jmp L14266
	.p2align 2
L14293:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14332
	movl 36(%eax),%edx
	jmp L14333
	.p2align 2
L14332:
	movl 32(%eax),%edx
L14333:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14334
	movl 40(%eax),%eax
	jmp L14335
	.p2align 2
L14334:
	movl 36(%eax),%eax
L14335:
	addl $-8,%esp
	pushl %eax
	pushl %edx
	call _item__L13
	movl %eax,%esi
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L14336
	movl 40(%eax),%ebx
	jmp L14337
	.p2align 2
L14336:
	movl 36(%eax),%ebx
L14337:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl _parent_video__C2,%edx
	addl $32,%esp
	cmpl $16,(%edx)
	jne L14340
	movl %eax,40(%edx)
	jmp L14341
	.p2align 2
L14340:
	movl %eax,36(%edx)
L14341:
	movl 16(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	movl -8(%ebp),%eax
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	pushl %esi
	call _make__to__YF4
	movl _parent_video__C2,%eax
	addl $32,%esp
	cmpl $16,(%eax)
	jne L14342
	movl 52(%eax),%eax
	jmp L14343
	.p2align 2
L14342:
	movl 48(%eax),%eax
L14343:
	testl %eax,%eax
	jne L14344
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14345
	movl 48(%eax),%eax
	jmp L14346
	.p2align 2
L14345:
	movl 44(%eax),%eax
L14346:
	addl $-12,%esp
	pushl %eax
	call _count__YE3
	movl _parent_video__C2,%edx
	addl $16,%esp
	cmpl $16,(%edx)
	jne L14347
	movl %eax,56(%edx)
	jmp L14348
	.p2align 2
L14347:
	movl %eax,52(%edx)
L14348:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14349
	movl %esi,52(%eax)
	jmp L14344
	.p2align 2
L14349:
	movl %esi,48(%eax)
L14344:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14351
	movl 60(%eax),%edx
	jmp L14352
	.p2align 2
L14351:
	movl 56(%eax),%edx
L14352:
	testl %edx,%edx
	je L14395
	cmpl $16,(%eax)
	jne L14355
	movl 60(%eax),%edx
	jmp L14356
	.p2align 2
L14355:
	movl 56(%eax),%edx
L14356:
	movb 16(%esi),%cl
	cmpb %cl,16(%edx)
	je L14357
L14395:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14358
	movl 48(%eax),%eax
	jmp L14359
	.p2align 2
L14358:
	movl 44(%eax),%eax
L14359:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _add_last__P33
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14360
	movl 48(%eax),%eax
	jmp L14361
	.p2align 2
L14360:
	movl 44(%eax),%eax
L14361:
	movl 8(%eax),%edx
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14362
	movl %edx,64(%eax)
	jmp L14363
	.p2align 2
L14362:
	movl %edx,60(%eax)
L14363:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14364
	movl %esi,60(%eax)
	jmp L14365
	.p2align 2
L14364:
	movl %esi,56(%eax)
L14365:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14366
	movl 44(%eax),%ecx
	jmp L14367
	.p2align 2
L14366:
	movl 40(%eax),%ecx
L14367:
	movl 16(%ebp),%edx
	cmpl %edx,%ecx
	jle L14369
	movl %ecx,%edx
L14369:
	cmpl $16,(%eax)
	jne L14372
	movl %edx,44(%eax)
	jmp L14266
	.p2align 2
L14372:
	movl %edx,40(%eax)
	jmp L14266
	.p2align 2
L14357:
	testb %cl,%cl
	je L14375
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14376
	movl 60(%eax),%eax
	jmp L14377
	.p2align 2
L14376:
	movl 56(%eax),%eax
L14377:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _set_next_y__LO4
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14378
	movl 44(%eax),%eax
	jmp L14379
	.p2align 2
L14378:
	movl 40(%eax),%eax
L14379:
	movl 16(%ebp),%edx
	cmpl %edx,%eax
	jle L14381
	movl %eax,%edx
L14381:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14384
	movl %edx,44(%eax)
	jmp L14386
	.p2align 2
L14384:
	movl %edx,40(%eax)
	jmp L14386
	.p2align 2
L14375:
	cmpl $16,(%eax)
	jne L14387
	movl 48(%eax),%eax
	jmp L14388
	.p2align 2
L14387:
	movl 44(%eax),%eax
L14388:
	movl _parent_video__C2,%edx
	cmpl $16,(%edx)
	jne L14389
	movl 64(%edx),%edx
	jmp L14390
	.p2align 2
L14389:
	movl 60(%edx),%edx
L14390:
	addl $-4,%esp
	pushl %edx
	pushl %esi
	pushl %eax
	call _put__to__HP4
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L14391
	movl 60(%eax),%eax
	jmp L14392
	.p2align 2
L14391:
	movl 56(%eax),%eax
L14392:
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call _set_next_y__LO4
L14386:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14393
	movl %esi,60(%eax)
	jmp L14266
	.p2align 2
L14393:
	movl %esi,56(%eax)
L14266:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_poly_trace__024:
	pushl %ebp
	movl %esp,%ebp
	subl $60,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl $0,-4(%ebp)
	movl $0,-16(%ebp)
	movl $0,-24(%ebp)
	movl $0,-12(%ebp)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14398
	movl 44(%eax),%edx
	jmp L14399
	.p2align 2
L14398:
	movl 40(%eax),%edx
L14399:
	movl 8(%ebp),%ecx
	addl $-8,%esp
	movl 20(%ecx),%eax
	cmpl %eax,%edx
	setg %bl
	pushl %eax
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L14400
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14403
	movl 8(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	jmp L14576
	.p2align 2
L14403:
	movl 8(%ebp),%edx
	addl $-12,%esp
	pushl %edx
L14576:
	call _connect_first__5J3
	addl $16,%esp
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14405
	movl 48(%eax),%eax
	jmp L14406
	.p2align 2
L14405:
	movl 44(%eax),%eax
L14406:
	movl 8(%eax),%esi
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L14408
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14411
	movl 48(%eax),%eax
	jmp L14412
	.p2align 2
L14411:
	movl 44(%eax),%eax
L14412:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _item__L13
	movl %eax,%edi
	addl $16,%esp
	movl %esi,-40(%ebp)
	subl $1,-40(%ebp)
	jmp L14413
	.p2align 2
L14415:
	movl 20(%edi),%edi
L14413:
	testl %edi,%edi
	je L14574
	movl 8(%edi),%eax
	movl 8(%ebp),%ecx
	addl $-8,%esp
	movl 20(%ecx),%edx
	cmpl %edx,%eax
	setg %bl
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L14415
	jmp L14421
	.p2align 2
L14574:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14422
	movl 48(%eax),%eax
	jmp L14423
	.p2align 2
L14422:
	movl 44(%eax),%eax
L14423:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _remove__VU4
	jmp L14577
	.p2align 2
L14421:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14425
	movl 48(%eax),%eax
	jmp L14426
	.p2align 2
L14425:
	movl 44(%eax),%eax
L14426:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _put__to__HP4
L14577:
	addl $16,%esp
	movl -40(%ebp),%esi
	jmp L14429
	.p2align 2
L14431:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14434
	movl 48(%eax),%eax
	jmp L14435
	.p2align 2
L14434:
	movl 44(%eax),%eax
L14435:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _item__L13
	movl %eax,%edi
	addl $16,%esp
	movl %esi,-44(%ebp)
	subl $1,-44(%ebp)
	jmp L14436
	.p2align 2
L14438:
	movl 20(%edi),%edi
L14436:
	testl %edi,%edi
	je L14575
	movl 8(%edi),%eax
	movl 8(%ebp),%ecx
	addl $-8,%esp
	movl 20(%ecx),%edx
	cmpl %edx,%eax
	setg %bl
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L14438
	jmp L14444
	.p2align 2
L14575:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14445
	movl 48(%eax),%eax
	jmp L14446
	.p2align 2
L14445:
	movl 44(%eax),%eax
L14446:
	addl $-8,%esp
	pushl %esi
	pushl %eax
	call _remove__VU4
	jmp L14578
	.p2align 2
L14444:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14448
	movl 48(%eax),%eax
	jmp L14449
	.p2align 2
L14448:
	movl 44(%eax),%eax
L14449:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %eax
	call _put__to__HP4
L14578:
	addl $16,%esp
	movl -44(%ebp),%esi
L14429:
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L14431
L14408:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14453
	call _sort_list_y__BF5
	jmp L14454
	.p2align 2
L14453:
	call _sort_list_y__BF5
L14454:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14455
	movl 44(%eax),%eax
	jmp L14456
	.p2align 2
L14455:
	movl 40(%eax),%eax
L14456:
	movl 8(%ebp),%edx
	movl 28(%edx),%ecx
	movl %eax,%edx
	cmpl %ecx,%edx
	jle L14458
	movl %ecx,%edx
L14458:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14461
	movl %edx,44(%eax)
	jmp L14462
	.p2align 2
L14461:
	movl %edx,40(%eax)
L14462:
	movl $1,-28(%ebp)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14464
	movl 44(%eax),%eax
	jmp L14579
	.p2align 2
L14464:
	movl 40(%eax),%eax
L14579:
	movl %eax,-32(%ebp)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14466
	movl 48(%eax),%eax
	jmp L14467
	.p2align 2
L14466:
	movl 44(%eax),%eax
L14467:
	addl $-12,%esp
	pushl %eax
	call _first__4R5
	movl (%eax),%eax
	movl -32(%ebp),%ecx
	movl %eax,-36(%ebp)
	addl $16,%esp
	cmpl %ecx,%eax
	jg L14400
	.p2align 2
L14473:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14474
	movl 48(%eax),%edx
	jmp L14475
	.p2align 2
L14474:
	movl 44(%eax),%edx
L14475:
	movl -12(%ebp),%ecx
	cmpl 8(%edx),%ecx
	jg L14476
	cmpl $16,(%eax)
	jne L14479
	movl 48(%eax),%eax
	jmp L14480
	.p2align 2
L14479:
	movl 44(%eax),%eax
L14480:
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call _item__L13
	movl -36(%ebp),%ecx
	addl $16,%esp
	cmpl %ecx,(%eax)
	sete %al
	jmp L14481
	.p2align 2
L14476:
	movb $0,%al
L14481:
	testb %al,%al
	je L14482
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14483
	movl 48(%eax),%eax
	jmp L14484
	.p2align 2
L14483:
	movl 44(%eax),%eax
L14484:
	movl -24(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl -12(%ebp),%ecx
	addl $-8,%esp
	pushl %ecx
	pushl %eax
	call _item__L13
	addl $16,%esp
	pushl %eax
	call _add__IW5
	movl %eax,-24(%ebp)
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -12(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-12(%ebp)
	addl $32,%esp
	jmp L14473
	.p2align 2
L14482:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_longint__1J4
	pushl %edx
	pushl %eax
	addl $-12,%esp
	pushl $0
	call _to_longint__1J4
	addl $16,%esp
	pushl %edx
	pushl %eax
	call ___infix_sub__8K4
	pushl %edx
	pushl %eax
	call _maximum__XJ4
	pushl %edx
	pushl %eax
	call ___infix_sub__8K4
	pushl %edx
	pushl %eax
	call _force_conversion__IL4
	movl %eax,%edx
	sarl $31,%edx
	addl $64,%esp
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call _force_conversion__IL4
	movl -24(%ebp),%edi
	movl %eax,-8(%ebp)
	addl $16,%esp
	testl %edi,%edi
	je L14490
	.p2align 2
L14491:
	movl 28(%edi),%edx
	movl 8(%ebp),%ecx
	movl %edx,-20(%ebp)
	addl $-8,%esp
	movl 20(%ecx),%eax
	cmpl %eax,-36(%ebp)
	setg %bl
	pushl %eax
	movl -36(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L14492
	cmpl $0,-16(%ebp)
	jne L14495
	movl 4(%edi),%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl $127
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	sarl $8,%esi
	cmpl -8(%ebp),%esi
	je L14495
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -8(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	addl $32,%esp
	cmpl %eax,%esi
	je L14495
	movl 8(%ebp),%ecx
	movl -4(%ebp),%eax
	cmpl 24(%ecx),%eax
	jg L14502
	movl 16(%ecx),%eax
	cmpl %eax,-8(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -8(%ebp),%edx
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L14502
	movl 8(%ebp),%ecx
	movl 16(%ecx),%eax
	movl %eax,%ecx
	cmpl %ecx,-4(%ebp)
	jle L14508
	movl -4(%ebp),%ecx
L14508:
	movl 8(%ebp),%eax
	movl 24(%eax),%edx
	movl -8(%ebp),%eax
	cmpl %edx,%eax
	jle L14512
	movl %edx,%eax
L14512:
	movl %eax,-8(%ebp)
	movl _parent_video__C2,%edx
	cmpl $16,(%edx)
	jne L14515
	movl 32(%edx),%edx
	jmp L14516
	.p2align 2
L14515:
	movl 28(%edx),%edx
L14516:
	addl $-12,%esp
	pushl %edx
	pushl %eax
	movl -36(%ebp),%edx
	pushl %edx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call _line_h_hard__until__color__1A0
	addl $32,%esp
L14502:
	movl %esi,-4(%ebp)
L14495:
	cmpb $0,17(%edi)
	je L14517
	movl 12(%edi),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-16(%ebp)
	addl $32,%esp
	jmp L14519
	.p2align 2
L14517:
	movl -28(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	movl -16(%ebp),%ecx
	pushl %ecx
	call ___infix_sub__F6B
	movl %eax,-16(%ebp)
	addl $32,%esp
	negl -28(%ebp)
L14519:
	cmpl $0,-16(%ebp)
	jne L14492
	movl 4(%edi),%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl $128
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,-8(%ebp)
	addl $32,%esp
	sarl $8,-8(%ebp)
L14492:
	cmpl $0,8(%edi)
	je L14528
	addl $-12,%esp
	pushl %edi
	call _new_step__D85
	movl 24(%edi),%esi
	addl $16,%esp
	jmp L14529
	.p2align 2
L14531:
	movl 24(%esi),%esi
L14529:
	testl %esi,%esi
	je L14530
	movl 4(%edi),%eax
	movl 4(%esi),%edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L14531
L14530:
	movl 24(%edi),%edx
	cmpl %edx,%esi
	je L14542
	movl 28(%edi),%eax
	addl $-8,%esp
	pushl %eax
	pushl %edx
	call _set_next_x__4A6
	addl $16,%esp
	cmpl $0,28(%edi)
	je L14538
	movl 24(%edi),%eax
	addl $-8,%esp
	pushl %eax
	movl 28(%edi),%eax
	pushl %eax
	call _set_prev_x__GB6
	addl $16,%esp
L14538:
	movl %esi,24(%edi)
	testl %esi,%esi
	je L14539
	movl 28(%esi),%eax
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call _set_next_x__4A6
	addl $-8,%esp
	pushl %edi
	pushl %esi
	call _set_next_x__4A6
	addl $32,%esp
	jmp L14540
	.p2align 2
L14539:
	movl -24(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call _set_next_x__4A6
	movl %edi,-24(%ebp)
	addl $16,%esp
L14540:
	movl 28(%edi),%eax
	testl %eax,%eax
	je L14542
	addl $-8,%esp
	pushl %edi
	pushl %eax
	call _set_prev_x__GB6
	jmp L14580
	.p2align 2
L14528:
	movl -24(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %edi
	call _next_line__XB6
	movl %eax,-24(%ebp)
L14580:
	addl $16,%esp
L14542:
	movl -20(%ebp),%edi
	testl %edi,%edi
	jne L14491
L14490:
	movl 8(%ebp),%ecx
	movl -4(%ebp),%eax
	cmpl 24(%ecx),%eax
	jg L14544
	movl 16(%ecx),%eax
	cmpl %eax,-8(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -8(%ebp),%edx
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L14544
	movl 8(%ebp),%ecx
	movl 16(%ecx),%eax
	movl %eax,%ecx
	cmpl %ecx,-4(%ebp)
	jle L14550
	movl -4(%ebp),%ecx
L14550:
	movl 8(%ebp),%eax
	movl %ecx,-4(%ebp)
	movl 24(%eax),%edx
	movl -8(%ebp),%eax
	cmpl %edx,%eax
	jle L14554
	movl %edx,%eax
L14554:
	movl _parent_video__C2,%edx
	cmpl $16,(%edx)
	jne L14557
	movl 32(%edx),%edx
	jmp L14558
	.p2align 2
L14557:
	movl 28(%edx),%edx
L14558:
	addl $-12,%esp
	pushl %edx
	pushl %eax
	movl -36(%ebp),%edx
	pushl %edx
	pushl %ecx
	movl 8(%ebp),%ecx
	pushl %ecx
	call _line_h_hard__until__color__1A0
	addl $32,%esp
L14544:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -36(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -32(%ebp),%edx
	movl %eax,-36(%ebp)
	addl $32,%esp
	cmpl %edx,%eax
	jle L14473
L14400:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14562
	movl $0,40(%eax)
	jmp L14564
	.p2align 2
L14562:
	movl $0,36(%eax)
L14564:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14566
	movl 48(%eax),%eax
	jmp L14567
	.p2align 2
L14566:
	movl 44(%eax),%eax
L14567:
	addl $-12,%esp
	pushl %eax
	call _clear__PH6
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L14568
	movl $0,52(%eax)
	jmp L14569
	.p2align 2
L14568:
	movl $0,48(%eax)
L14569:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_longint__1J4
	pushl %edx
	pushl %eax
	addl $-12,%esp
	pushl $0
	call _to_longint__1J4
	addl $16,%esp
	pushl %edx
	pushl %eax
	call ___infix_sub__8K4
	pushl %edx
	pushl %eax
	call _maximum__XJ4
	pushl %edx
	pushl %eax
	call ___infix_sub__8K4
	pushl %edx
	pushl %eax
	call _force_conversion__IL4
	movl %eax,%edx
	sarl $31,%edx
	addl $64,%esp
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call _force_conversion__IL4
	movl _parent_video__C2,%edx
	cmpl $16,(%edx)
	jne L14572
	movl %eax,44(%edx)
	jmp L14573
	.p2align 2
L14572:
	movl %eax,40(%edx)
L14573:
	leal -72(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_print__to__WO6:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%eax
	movl %eax,-4(%ebp)
	movl _lower__2WK,%edx
	movl 12(%ebp),%eax
	movl %edx,-12(%ebp)
	movl 4(%eax),%eax
	movl %eax,-16(%ebp)
	cmpl %eax,%edx
	jg L14629
	.p2align 2
L14584:
	movl -12(%ebp),%eax
	addl $-8,%esp
	subl $1,%eax
	pushl %eax
	movl 12(%ebp),%edx
	movl (%edx),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	addl $-12,%esp
	movsbl %al,%eax
	pushl %eax
	call _code__1LB
	movsbl %al,%esi
	addl $16,%esp
	cmpl $32,%esi
	setg %bl
	addl $-8,%esp
	pushl $32
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L14592
	cmpl $127,%esi
	setg %bl
	addl $-8,%esp
	pushl $127
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L14591
L14592:
	xorl %esi,%esi
	jmp L14601
	.p2align 2
L14591:
	subl $32,%esi
L14601:
	movl $___index_font,%eax
	xorl %edi,%edi
	xorl %edx,%edx
	movw (%eax,%esi,2),%di
	movw 2(%eax,%esi,2),%dx
	movl %edx,-8(%ebp)
	cmpl %edx,%edi
	je L14605
	.p2align 2
L14606:
	movl 20(%ebp),%ebx
	movl $1,%esi
	leal (%edi,%edi),%eax
	movl %eax,-20(%ebp)
	.p2align 2
L14610:
	movl -20(%ebp),%eax
	movl $___graph_font,%edx
	testw %si,(%eax,%edx)
	je L14611
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %ebx
	movl -4(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _pixel_to__WR1
	addl $16,%esp
L14611:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	leal (%esi,%esi),%eax
	andl $65534,%eax
	movl %eax,%esi
	testw %ax,%ax
	jne L14610
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
	cmpl -8(%ebp),%edi
	jne L14606
L14605:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -12(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl -16(%ebp),%edx
	movl %eax,-12(%ebp)
	addl $32,%esp
	cmpl %edx,%eax
	jle L14584
L14629:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_h_hard__until__image__offset__ITWC:
	pushl %ebp
	movl %esp,%ebp
	subl $60,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 28(%ebp),%edi
	cmpl $0,56(%eax)
	je L14659
	movl 64(%eax),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%ecx
	movl %eax,-8(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%ecx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-12(%ebp)
	movl 56(%edx),%eax
	addl $32,%esp
	movl 24(%eax),%eax
	addl $-8,%esp
	movl (%eax),%eax
	cmpl %eax,-8(%ebp)
	setg %bl
	pushl %eax
	movl -8(%ebp),%ecx
	pushl %ecx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L14659
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%eax
	addl $-8,%esp
	movl (%eax),%eax
	cmpl %eax,-8(%ebp)
	setg %bl
	pushl %eax
	movl -8(%ebp),%ecx
	pushl %ecx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L14659
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 12(%eax),%eax
	addl $-8,%esp
	movl (%eax),%esi
	cmpl %esi,-4(%ebp)
	setg %bl
	pushl %esi
	movl -4(%ebp),%ecx
	pushl %ecx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L14669
	addl $-8,%esp
	addl $-12,%esp
	pushl %esi
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,-16(%ebp)
	movl -4(%ebp),%eax
	addl $32,%esp
	subl %eax,-16(%ebp)
	movl %esi,-4(%ebp)
	jmp L14675
	.p2align 2
L14669:
	movl %edi,-16(%ebp)
L14675:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 16(%eax),%eax
	movl -12(%ebp),%ecx
	movl (%eax),%eax
	movl %ecx,-36(%ebp)
	cmpl %eax,%ecx
	jle L14677
	movl %eax,-36(%ebp)
L14677:
	movl -36(%ebp),%eax
	cmpl %eax,-4(%ebp)
	jg L14659
	.p2align 2
L14783:
	movl -8(%ebp),%edx
	addl $-4,%esp
	pushl %edx
	movl -4(%ebp),%ecx
	pushl %ecx
	movl 8(%ebp),%eax
	pushl %eax
	call _get_clip__D56B
	movl 8(%eax),%edx
	movl -36(%ebp),%ecx
	addl $16,%esp
	movl %ecx,-40(%ebp)
	cmpl %edx,%ecx
	jle L14687
	movl %edx,-40(%ebp)
L14687:
	movl 16(%eax),%edx
	cmpl 8(%ebp),%edx
	jne L14690
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14727
	movl -8(%ebp),%ebx
	movl -8(%ebp),%eax
	sall $8,%ebx
	sall $6,%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	movl -4(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl -16(%ebp),%edx
	movl %eax,%ebx
	addl $32,%esp
	movl %edx,-20(%ebp)
	movw $2,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	movl -40(%ebp),%ecx
	addl $16,%esp
	movl %ebx,%edi
	addl $-8,%esp
	addl $-12,%esp
	pushl %ecx
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,-32(%ebp)
	movl -4(%ebp),%eax
	addl $32,%esp
	subl %eax,-32(%ebp)
	cmpl -32(%ebp),%edi
	jg L14786
	.p2align 2
L14701:
	movl -20(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl 24(%ebp),%ecx
	pushl %ecx
	call _get_color__ABKB
	movl %eax,%esi
	addl $16,%esp
	shrl $16,%eax
	movl %eax,%ebx
	andl $192,%ebx
	movl %esi,%eax
	shrl $10,%eax
	andl $56,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	pushl %ebx
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movb %al,%bl
	addl $48,%esp
	shrl $5,%esi
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	andl $7,%esi
	pushl %esi
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	addl $48,%esp
	addl $-4,%esp
	andl $255,%eax
	pushl %eax
	pushl %edi
	xorl %eax,%eax
	movw ___desc_video,%ax
	pushl %eax
	call __farpokeb
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-20(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
	cmpl -32(%ebp),%edi
	jle L14701
L14786:
	movw $1,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	addl $16,%esp
	jmp L14731
	.p2align 2
L14727:
	call _get_line__PM7B
	addl $-8,%esp
	pushl $___dj_stdout
	pushl $78
	call _fputc
	addl $16,%esp
	addl $-12,%esp
	pushl $1
	call _exit
	.p2align 2
L14690:
	movl (%edx),%eax
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L14732
	jmp *L14744(,%ecx,4)
	.p2align 2
L14744:
	.long L14743
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14740
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14732
	.long L14743
	.long L14743
	.long L14743
	.long L14732
	.long L14743
	.long L14743
	.long L14743
	.long L14743
	.long L14742
	.long L14743
	.p2align 2
L14740:
	movl 60(%edx),%ecx
	jmp L14787
	.p2align 2
L14742:
L14743:
	movl 64(%edx),%ecx
L14787:
	movl %ecx,-28(%ebp)
L14732:
	movl -4(%ebp),%esi
	subl -28(%ebp),%esi
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L14747
	jmp *L14759(,%ecx,4)
	.p2align 2
L14759:
	.long L14758
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14755
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14747
	.long L14758
	.long L14758
	.long L14758
	.long L14747
	.long L14758
	.long L14758
	.long L14758
	.long L14758
	.long L14757
	.long L14758
	.p2align 2
L14755:
	movl 64(%edx),%ecx
	jmp L14788
	.p2align 2
L14757:
L14758:
	movl 68(%edx),%ecx
L14788:
	movl %ecx,-24(%ebp)
L14747:
	movl -8(%ebp),%ebx
	movl -40(%ebp),%ecx
	subl -24(%ebp),%ebx
	subl -28(%ebp),%ecx
	addl $-17,%eax
	cmpl $70,%eax
	ja L14731
	jmp *L14775(,%eax,4)
	.p2align 2
L14775:
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14768
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.long L14731
	.p2align 2
L14768:
	movl -16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 24(%ebp),%eax
	pushl %eax
	pushl %ecx
	pushl %ebx
	pushl %esi
	pushl %edx
	call _slave_line_h_hard__until__image__offset__LQWC
	addl $32,%esp
L14731:
	movl -40(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	movl -16(%ebp),%ecx
	pushl %ecx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	subl -4(%ebp),%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,-16(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -40(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -36(%ebp),%edx
	movl %eax,-4(%ebp)
	addl $32,%esp
	cmpl %edx,%eax
	jle L14783
L14659:
	leal -72(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_pixel_hard__color__5PNB:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%ebx
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-8(%ebp)
	addl $32,%esp
	addl $-4,%esp
	pushl %eax
	movl -4(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _get_clip__XWMB
	addl $16,%esp
	testl %eax,%eax
	je L14808
	movl 16(%eax),%edx
	cmpl 8(%ebp),%edx
	jne L14809
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14832
	movl 20(%ebp),%eax
	shrl $16,%eax
	movl %eax,%ebx
	movl 20(%ebp),%eax
	andl $192,%ebx
	shrl $10,%eax
	andl $56,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	pushl %ebx
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movb %al,%bl
	movl 20(%ebp),%eax
	addl $48,%esp
	shrl $5,%eax
	andl $7,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	sall $6,-8(%ebp)
	movl -8(%ebp),%edx
	movb %al,-9(%ebp)
	addl $48,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	movl -8(%ebp),%eax
	sall $2,%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	movw $2,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	addl $16,%esp
	addl $-4,%esp
	xorl %eax,%eax
	movb -9(%ebp),%al
	pushl %eax
	pushl %ebx
	xorl %eax,%eax
	movw ___desc_video,%ax
	pushl %eax
	call __farpokeb
	addl $16,%esp
	movw $1,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	jmp L14808
	.p2align 2
L14832:
	call _get_line__PGNB
	addl $-8,%esp
	pushl $___dj_stdout
	pushl $78
	call _fputc
	addl $16,%esp
	addl $-12,%esp
	pushl $1
	call _exit
	.p2align 2
L14809:
	movl (%edx),%eax
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L14837
	jmp *L14849(,%ecx,4)
	.p2align 2
L14849:
	.long L14848
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14842
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14837
	.long L14848
	.long L14848
	.long L14848
	.long L14837
	.long L14848
	.long L14848
	.long L14848
	.long L14848
	.long L14848
	.long L14847
	.p2align 2
L14842:
	movl 60(%edx),%edi
	jmp L14837
	.p2align 2
L14847:
L14848:
	movl 64(%edx),%edi
L14837:
	movl -4(%ebp),%ebx
	subl %edi,%ebx
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L14852
	jmp *L14864(,%ecx,4)
	.p2align 2
L14864:
	.long L14863
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14857
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14852
	.long L14863
	.long L14863
	.long L14863
	.long L14852
	.long L14863
	.long L14863
	.long L14863
	.long L14863
	.long L14863
	.long L14862
	.p2align 2
L14857:
	movl 64(%edx),%esi
	jmp L14852
	.p2align 2
L14862:
L14863:
	movl 68(%edx),%esi
L14852:
	movl -8(%ebp),%ecx
	subl %esi,%ecx
	addl $-17,%eax
	cmpl $70,%eax
	ja L14808
	jmp *L14879(,%eax,4)
	.p2align 2
L14879:
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14876
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.long L14808
	.p2align 2
L14876:
	movl 20(%ebp),%eax
	pushl %eax
	pushl %ecx
	pushl %ebx
	pushl %edx
	call _slave_pixel_hard__color__6P7B
L14808:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_clip__XWMB:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%edi
	movl 8(%ebp),%eax
	movb $0,-4(%ebp)
	movb $0,-2(%ebp)
	movb $0,-5(%ebp)
	movb $0,-3(%ebp)
	movb $0,-1(%ebp)
	movl 60(%eax),%esi
	testl %esi,%esi
	je L14882
	movl (%esi),%ebx
	movl 8(%esi),%edx
	movl %edx,-12(%ebp)
	movl $0,-16(%ebp)
	addl $-8,%esp
	pushl %ebx
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,12(%ebp)
	sete %al
	orb %dl,%al
	je L14885
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-16(%ebp)
L14885:
	cmpb $0,-16(%ebp)
	je L14883
	movl 4(%esi),%ebx
	movl 12(%esi),%eax
	movl %eax,-20(%ebp)
	movl $0,-24(%ebp)
	addl $-8,%esp
	pushl %ebx
	pushl %edi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%edi
	sete %al
	orb %dl,%al
	je L14888
	movl -20(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %edi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-24(%ebp)
L14888:
	cmpb $0,-24(%ebp)
	jne L14882
L14883:
	movl 4(%esi),%eax
	cmpl %eax,%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L14890
	movl (%esi),%eax
	cmpl %eax,12(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L14890
	jmp L14897
	.p2align 2
L14899:
	movl 28(%esi),%esi
L14897:
	testl %esi,%esi
	je L14916
	movl 4(%esi),%eax
	cmpl %eax,%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L14899
	jmp L14915
	.p2align 2
L14890:
	movl 12(%esi),%eax
	cmpl %eax,%edi
	jle L14915
	movl 12(%ebp),%edx
	cmpl 8(%esi),%edx
	jle L14915
	testl %esi,%esi
	je L14916
	cmpl %eax,%edi
	jle L14915
	.p2align 2
L14911:
	movl 32(%esi),%esi
	testl %esi,%esi
	je L14916
	cmpl 12(%esi),%edi
	jg L14911
L14915:
	testl %esi,%esi
	je L14916
	cmpl %edi,4(%esi)
	setg -1(%ebp)
	movl 8(%esi),%eax
	movl 12(%ebp),%edx
	cmpl 12(%ebp),%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	sete -3(%ebp)
	movb -1(%ebp),%al
	orb -3(%ebp),%al
	jmp L14921
	.p2align 2
L14916:
	movb $0,%al
L14921:
	testb %al,%al
	je L14935
	cmpb $0,-5(%ebp)
	je L14923
	cmpb $0,-1(%ebp)
	jne L14960
	cmpb $0,-3(%ebp)
	je L14929
L14961:
	movl 24(%esi),%esi
	jmp L14929
	.p2align 2
L14923:
	cmpb $0,-3(%ebp)
	jne L14961
	cmpb $0,-1(%ebp)
	je L14929
L14960:
	movl 28(%esi),%esi
L14929:
	xorb $1,-5(%ebp)
	jmp L14915
	.p2align 2
L14935:
	testl %esi,%esi
	je L14936
	movl 12(%esi),%eax
	cmpl %edi,%eax
	setg %bl
	addl $-8,%esp
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	movl 12(%ebp),%eax
	addl $16,%esp
	testb %bl,%bl
	sete -2(%ebp)
	cmpl %eax,(%esi)
	setg -4(%ebp)
	movb -2(%ebp),%al
	orb -4(%ebp),%al
	jmp L14941
	.p2align 2
L14936:
	movb $0,%al
L14941:
	testb %al,%al
	je L14942
	cmpb $0,-5(%ebp)
	je L14943
	cmpb $0,-2(%ebp)
	jne L14962
	cmpb $0,-4(%ebp)
	je L14949
L14963:
	movl 20(%esi),%esi
	jmp L14949
	.p2align 2
L14943:
	cmpb $0,-4(%ebp)
	jne L14963
	cmpb $0,-2(%ebp)
	je L14949
L14962:
	movl 32(%esi),%esi
L14949:
	xorb $1,-5(%ebp)
	jmp L14935
	.p2align 2
L14942:
	testl %esi,%esi
	je L14882
	movl 8(%ebp),%edx
	movl %esi,60(%edx)
L14882:
	leal -56(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_slave_line_h_hard__until__color__GC8B:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl 16(%ebp),%esi
	cmpl $16,%esi
	setg %bl
	addl $-8,%esp
	pushl $16
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L14968
	movl 80(%edi),%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %esi
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	cmpl %eax,20(%ebp)
	jle L14968
	movl 80(%edi),%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl $2
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %esi
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	cmpl %eax,12(%ebp)
	jle L14981
	movl 12(%ebp),%eax
L14981:
	movl 24(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	movl 20(%ebp),%edx
	pushl %edx
	pushl %esi
	pushl %eax
	pushl %edi
	call _line_h_hard__until__color__K07B
	movb $1,%al
	addl $32,%esp
	jmp L14984
	.p2align 2
L14968:
	movb $0,%al
L14984:
	testb %al,%al
	jne L14986
	movb $0,-1(%ebp)
	movl 8(%edi),%ecx
	addl $-5,%ecx
	xorl %ebx,%ebx
	cmpl $20,%esi
	setg %al
	sete %dl
	orb %dl,%al
	je L14997
	cmpl %ecx,%esi
	setle %al
	movb %al,%bl
L14997:
	testb %bl,%bl
	je L14987
	movl 12(%edi),%eax
	addl $-4,%eax
	cmpl %eax,12(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L14987
	cmpl $3,20(%ebp)
	jle L14987
	movb $1,-1(%ebp)
L14987:
	cmpb $0,-1(%ebp)
	je L14986
	movl $4,%ecx
	cmpl $4,12(%ebp)
	jle L15015
	movl 12(%ebp),%ecx
L15015:
	movl 12(%edi),%edx
	movl 20(%ebp),%eax
	addl $-5,%edx
	cmpl %edx,%eax
	jle L15024
	movl %edx,%eax
L15024:
	movl 24(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	pushl %eax
	pushl %esi
	pushl %ecx
	pushl %edi
	call _line_h_hard__until__color__K07B
L14986:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_font_width__size__0NRB:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edx
	movl 8(%ebp),%ecx
	movl $0,-4(%ebp)
	movl _lower__2WK,%edi
	movl 4(%ecx),%eax
	movl %eax,-8(%ebp)
	cmpl %edx,%eax
	jle L15069
	movl %edx,-8(%ebp)
	jmp L15069
	.p2align 2
L15041:
	addl $-8,%esp
	movl %edi,%eax
	subl $1,%eax
	pushl %eax
	movl 8(%ebp),%edx
	movl (%edx),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	addl $-12,%esp
	movsbl %al,%eax
	pushl %eax
	call _code__1LB
	movsbl %al,%esi
	addl $16,%esp
	cmpl $32,%esi
	setg %bl
	addl $-8,%esp
	pushl $32
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L15049
	cmpl $127,%esi
	setg %bl
	addl $-8,%esp
	pushl $127
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L15048
L15049:
	xorl %esi,%esi
	jmp L15058
	.p2align 2
L15048:
	subl $32,%esi
L15058:
	movl $___index_font,%eax
	xorl %ebx,%ebx
	addl $-8,%esp
	addl $-12,%esp
	movw (%eax,%esi,2),%bx
	movw 2(%eax,%esi,2),%ax
	andl $65535,%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%ecx
	pushl %ecx
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl %ebx,%esi
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
L15069:
	cmpl -8(%ebp),%edi
	jle L15041
	leal -40(%ebp),%esp
	movl -4(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_rectangle_fill_to__9TRB:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 8(%ebp),%edx
	movl 12(%ebp),%edi
	movl 16(%ebp),%esi
	movl 32(%eax),%eax
	movl %eax,-8(%ebp)
	movl 36(%edx),%edx
	movl %edx,-12(%ebp)
	cmpl %edi,%eax
	jle L15071
	movl %edi,-8(%ebp)
	movl %eax,%edi
L15071:
	cmpl %esi,-12(%ebp)
	jle L15073
	movl -12(%ebp),%eax
	movl %esi,-12(%ebp)
	movl %eax,%esi
L15073:
	movl 8(%ebp),%eax
	movl -8(%ebp),%edx
	cmpl 24(%eax),%edx
	jg L15085
	movl 16(%eax),%eax
	cmpl %eax,%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L15085
	movl 8(%ebp),%eax
	movl -12(%ebp),%edx
	cmpl 28(%eax),%edx
	jg L15085
	movl 20(%eax),%eax
	cmpl %eax,%esi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L15085
	movl 8(%ebp),%edx
	movl 16(%edx),%eax
	cmpl -8(%ebp),%eax
	jle L15086
	movl %eax,-8(%ebp)
L15086:
	movl 8(%ebp),%edx
	movl 20(%edx),%eax
	cmpl -12(%ebp),%eax
	jle L15088
	movl %eax,-12(%ebp)
L15088:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 24(%edx),%eax
	cmpl %edi,%eax
	setg %bl
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L15090
	movl 8(%ebp),%eax
	movl 24(%eax),%edi
L15090:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 28(%edx),%eax
	cmpl %esi,%eax
	setg %bl
	pushl %esi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L15094
	movl 8(%ebp),%eax
	movl 28(%eax),%esi
L15094:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L15098
	movl 32(%eax),%eax
	jmp L15108
	.p2align 2
L15098:
	movl 28(%eax),%eax
L15108:
	movl %eax,-4(%ebp)
	movl -12(%ebp),%ebx
	cmpl %esi,%ebx
	jg L15085
	.p2align 2
L15102:
	movl -4(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	pushl %edi
	pushl %ebx
	movl -8(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _line_h_hard__until__color__D1RB
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L15102
L15085:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_pixel_hard__color__X2SB:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%ebx
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-8(%ebp)
	addl $32,%esp
	addl $-4,%esp
	pushl %eax
	movl -4(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _get_clip__K5RB
	addl $16,%esp
	testl %eax,%eax
	je L15119
	movl 16(%eax),%edx
	cmpl 8(%ebp),%edx
	jne L15120
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L15143
	movl 20(%ebp),%eax
	shrl $16,%eax
	movl %eax,%ebx
	movl 20(%ebp),%eax
	andl $192,%ebx
	shrl $10,%eax
	andl $56,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	pushl %ebx
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movb %al,%bl
	movl 20(%ebp),%eax
	addl $48,%esp
	shrl $5,%eax
	andl $7,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	sall $6,-8(%ebp)
	movl -8(%ebp),%edx
	movb %al,-9(%ebp)
	addl $48,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	movl -8(%ebp),%eax
	sall $2,%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	movw $2,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	addl $16,%esp
	addl $-4,%esp
	xorl %eax,%eax
	movb -9(%ebp),%al
	pushl %eax
	pushl %ebx
	xorl %eax,%eax
	movw ___desc_video,%ax
	pushl %eax
	call __farpokeb
	addl $16,%esp
	movw $1,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	jmp L15119
	.p2align 2
L15143:
	call _get_line__CPSB
	addl $-8,%esp
	pushl $___dj_stdout
	pushl $78
	call _fputc
	addl $16,%esp
	addl $-12,%esp
	pushl $1
	call _exit
	.p2align 2
L15120:
	movl (%edx),%eax
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L15148
	jmp *L15160(,%ecx,4)
	.p2align 2
L15160:
	.long L15159
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15154
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15148
	.long L15159
	.long L15159
	.long L15159
	.long L15148
	.long L15159
	.long L15159
	.long L15159
	.long L15159
	.long L15159
	.long L15158
	.p2align 2
L15154:
	movl 60(%edx),%edi
	jmp L15148
	.p2align 2
L15158:
L15159:
	movl 64(%edx),%edi
L15148:
	movl -4(%ebp),%ebx
	subl %edi,%ebx
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L15163
	jmp *L15175(,%ecx,4)
	.p2align 2
L15175:
	.long L15174
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15169
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15163
	.long L15174
	.long L15174
	.long L15174
	.long L15163
	.long L15174
	.long L15174
	.long L15174
	.long L15174
	.long L15174
	.long L15173
	.p2align 2
L15169:
	movl 64(%edx),%esi
	jmp L15163
	.p2align 2
L15173:
L15174:
	movl 68(%edx),%esi
L15163:
	movl -8(%ebp),%ecx
	subl %esi,%ecx
	addl $-17,%eax
	cmpl $70,%eax
	ja L15119
	jmp *L15190(,%eax,4)
	.p2align 2
L15190:
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15187
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.long L15119
	.p2align 2
L15187:
	movl 20(%ebp),%eax
	pushl %eax
	pushl %ecx
	pushl %ebx
	pushl %edx
	call _slave_pixel_hard__color__6P7B
L15119:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_h_hard__until__color__D1RB:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	cmpl $0,56(%eax)
	je L15193
	movl 64(%eax),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%ecx
	movl %eax,-8(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%ecx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,%esi
	movl 56(%edx),%eax
	addl $32,%esp
	movl 24(%eax),%eax
	addl $-8,%esp
	movl (%eax),%eax
	cmpl %eax,-8(%ebp)
	setg %bl
	pushl %eax
	movl -8(%ebp),%ecx
	pushl %ecx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L15193
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%eax
	addl $-8,%esp
	movl (%eax),%eax
	cmpl %eax,-8(%ebp)
	setg %bl
	pushl %eax
	movl -8(%ebp),%ecx
	pushl %ecx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L15193
	movl 8(%ebp),%eax
	movl 56(%eax),%edx
	movl 12(%edx),%eax
	movl (%eax),%eax
	cmpl %eax,-4(%ebp)
	jle L15204
	movl -4(%ebp),%eax
L15204:
	movl %eax,-4(%ebp)
	movl 16(%edx),%eax
	movl (%eax),%eax
	movl %esi,-20(%ebp)
	cmpl %eax,%esi
	jle L15208
	movl %eax,-20(%ebp)
L15208:
	movl -20(%ebp),%edx
	cmpl %edx,-4(%ebp)
	jg L15193
	.p2align 2
L15308:
	movl -8(%ebp),%ecx
	addl $-4,%esp
	pushl %ecx
	movl -4(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _get_clip__K5RB
	movl 8(%eax),%edx
	movl -20(%ebp),%ecx
	addl $16,%esp
	movl %ecx,-24(%ebp)
	cmpl %edx,%ecx
	jle L15218
	movl %edx,-24(%ebp)
L15218:
	movl 16(%eax),%edx
	cmpl 8(%ebp),%edx
	jne L15221
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L15256
	movl 24(%ebp),%eax
	shrl $16,%eax
	movl %eax,%ebx
	movl 24(%ebp),%eax
	andl $192,%ebx
	shrl $10,%eax
	andl $56,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	pushl %ebx
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movb %al,%bl
	movl 24(%ebp),%eax
	addl $48,%esp
	shrl $5,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	andl $7,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movl -8(%ebp),%ebx
	movb %al,-13(%ebp)
	movl -8(%ebp),%eax
	addl $48,%esp
	sall $8,%ebx
	sall $6,%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	movl -4(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	movw $2,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	movl -24(%ebp),%edx
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl -4(%ebp),%esi
	cmpl %esi,%ebx
	jg L15311
	.p2align 2
L15248:
	addl $-4,%esp
	xorl %eax,%eax
	movb -13(%ebp),%al
	pushl %eax
	pushl %ebx
	xorl %eax,%eax
	movw ___desc_video,%ax
	pushl %eax
	call __farpokeb
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L15248
L15311:
	movw $1,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	addl $16,%esp
	jmp L15260
	.p2align 2
L15256:
	call _get_line__CPSB
	addl $-8,%esp
	pushl $___dj_stdout
	pushl $78
	call _fputc
	addl $16,%esp
	addl $-12,%esp
	pushl $1
	call _exit
	.p2align 2
L15221:
	movl (%edx),%eax
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L15261
	jmp *L15273(,%ecx,4)
	.p2align 2
L15273:
	.long L15272
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15267
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15261
	.long L15272
	.long L15272
	.long L15272
	.long L15261
	.long L15272
	.long L15272
	.long L15272
	.long L15272
	.long L15272
	.long L15271
	.p2align 2
L15267:
	movl 60(%edx),%edi
	jmp L15261
	.p2align 2
L15271:
L15272:
	movl 64(%edx),%edi
L15261:
	movl -4(%ebp),%esi
	subl %edi,%esi
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L15276
	jmp *L15288(,%ecx,4)
	.p2align 2
L15288:
	.long L15287
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15282
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15276
	.long L15287
	.long L15287
	.long L15287
	.long L15276
	.long L15287
	.long L15287
	.long L15287
	.long L15287
	.long L15287
	.long L15286
	.p2align 2
L15282:
	movl 64(%edx),%ecx
	jmp L15312
	.p2align 2
L15286:
L15287:
	movl 68(%edx),%ecx
L15312:
	movl %ecx,-12(%ebp)
L15276:
	movl -8(%ebp),%ebx
	movl -24(%ebp),%ecx
	subl -12(%ebp),%ebx
	subl %edi,%ecx
	addl $-17,%eax
	cmpl $70,%eax
	ja L15260
	jmp *L15304(,%eax,4)
	.p2align 2
L15304:
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15301
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.long L15260
	.p2align 2
L15301:
	movl 24(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	pushl %ecx
	pushl %ebx
	pushl %esi
	pushl %edx
	call _slave_line_h_hard__until__color__GC8B
	addl $32,%esp
L15260:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl -20(%ebp),%ecx
	movl %eax,-4(%ebp)
	addl $32,%esp
	cmpl %ecx,%eax
	jle L15308
L15193:
	leal -56(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_font_width__size__OXTB:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edx
	movl 8(%ebp),%ecx
	movl $0,-4(%ebp)
	movl _lower__2WK,%edi
	movl 4(%ecx),%eax
	movl %eax,-8(%ebp)
	cmpl %edx,%eax
	jle L15349
	movl %edx,-8(%ebp)
	jmp L15349
	.p2align 2
L15320:
	movl 8(%ebp),%edx
	movl (%edx),%eax
	addl $-12,%esp
	movsbl -1(%eax,%edi),%eax
	pushl %eax
	call _code__1LB
	movsbl %al,%esi
	addl $16,%esp
	cmpl $32,%esi
	setg %bl
	addl $-8,%esp
	pushl $32
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L15329
	cmpl $127,%esi
	setg %bl
	addl $-8,%esp
	pushl $127
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L15328
L15329:
	xorl %esi,%esi
	jmp L15338
	.p2align 2
L15328:
	subl $32,%esi
L15338:
	movl $___index_font,%eax
	xorl %ebx,%ebx
	addl $-8,%esp
	addl $-12,%esp
	movw (%eax,%esi,2),%bx
	movw 2(%eax,%esi,2),%ax
	andl $65535,%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%ecx
	pushl %ecx
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl %ebx,%esi
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
L15349:
	cmpl -8(%ebp),%edi
	jle L15320
	leal -40(%ebp),%esp
	movl -4(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_font_width__size__AKWB:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edx
	movl 8(%ebp),%ecx
	movl $0,-4(%ebp)
	movl _lower__2WK,%edi
	movl 4(%ecx),%eax
	movl %eax,-8(%ebp)
	cmpl %edx,%eax
	jle L15385
	movl %edx,-8(%ebp)
	jmp L15385
	.p2align 2
L15357:
	addl $-8,%esp
	movl %edi,%eax
	subl $1,%eax
	pushl %eax
	movl 8(%ebp),%edx
	movl (%edx),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	addl $-12,%esp
	movsbl %al,%eax
	pushl %eax
	call _code__1LB
	movsbl %al,%esi
	addl $16,%esp
	cmpl $32,%esi
	setg %bl
	addl $-8,%esp
	pushl $32
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L15365
	cmpl $127,%esi
	setg %bl
	addl $-8,%esp
	pushl $127
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L15364
L15365:
	xorl %esi,%esi
	jmp L15374
	.p2align 2
L15364:
	subl $32,%esi
L15374:
	movl $___index_font,%eax
	xorl %ebx,%ebx
	addl $-8,%esp
	addl $-12,%esp
	movw (%eax,%esi,2),%bx
	movw 2(%eax,%esi,2),%ax
	andl $65535,%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%ecx
	pushl %ecx
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl %ebx,%esi
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
L15385:
	cmpl -8(%ebp),%edi
	jle L15357
	leal -40(%ebp),%esp
	movl -4(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_rectangle_fill_to__JQWB:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 8(%ebp),%edx
	movl 12(%ebp),%edi
	movl 16(%ebp),%esi
	movl 32(%eax),%eax
	movl %eax,-8(%ebp)
	movl 36(%edx),%edx
	movl %edx,-12(%ebp)
	cmpl %edi,%eax
	jle L15387
	movl %edi,-8(%ebp)
	movl %eax,%edi
L15387:
	cmpl %esi,-12(%ebp)
	jle L15389
	movl -12(%ebp),%eax
	movl %esi,-12(%ebp)
	movl %eax,%esi
L15389:
	movl 8(%ebp),%eax
	movl -8(%ebp),%edx
	cmpl 24(%eax),%edx
	jg L15401
	movl 16(%eax),%eax
	cmpl %eax,%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L15401
	movl 8(%ebp),%eax
	movl -12(%ebp),%edx
	cmpl 28(%eax),%edx
	jg L15401
	movl 20(%eax),%eax
	cmpl %eax,%esi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L15401
	movl 8(%ebp),%edx
	movl 16(%edx),%eax
	cmpl -8(%ebp),%eax
	jle L15402
	movl %eax,-8(%ebp)
L15402:
	movl 8(%ebp),%edx
	movl 20(%edx),%eax
	cmpl -12(%ebp),%eax
	jle L15404
	movl %eax,-12(%ebp)
L15404:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 24(%edx),%eax
	cmpl %edi,%eax
	setg %bl
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L15406
	movl 8(%ebp),%eax
	movl 24(%eax),%edi
L15406:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 28(%edx),%eax
	cmpl %esi,%eax
	setg %bl
	pushl %esi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L15410
	movl 8(%ebp),%eax
	movl 28(%eax),%esi
L15410:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L15414
	movl 32(%eax),%eax
	jmp L15424
	.p2align 2
L15414:
	movl 28(%eax),%eax
L15424:
	movl %eax,-4(%ebp)
	movl -12(%ebp),%ebx
	cmpl %esi,%ebx
	jg L15401
	.p2align 2
L15418:
	movl -4(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	pushl %edi
	pushl %ebx
	movl -8(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _line_h_hard__until__color__NXWB
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L15418
L15401:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_pixel_hard__color__DZXB:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%ebx
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-8(%ebp)
	addl $32,%esp
	addl $-4,%esp
	pushl %eax
	movl -4(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _get_clip__U1WB
	addl $16,%esp
	testl %eax,%eax
	je L15435
	movl 16(%eax),%edx
	cmpl 8(%ebp),%edx
	jne L15436
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L15459
	movl 20(%ebp),%eax
	shrl $16,%eax
	movl %eax,%ebx
	movl 20(%ebp),%eax
	andl $192,%ebx
	shrl $10,%eax
	andl $56,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	pushl %ebx
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movb %al,%bl
	movl 20(%ebp),%eax
	addl $48,%esp
	shrl $5,%eax
	andl $7,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	sall $6,-8(%ebp)
	movl -8(%ebp),%edx
	movb %al,-9(%ebp)
	addl $48,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	movl -8(%ebp),%eax
	sall $2,%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	movw $2,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	addl $16,%esp
	addl $-4,%esp
	xorl %eax,%eax
	movb -9(%ebp),%al
	pushl %eax
	pushl %ebx
	xorl %eax,%eax
	movw ___desc_video,%ax
	pushl %eax
	call __farpokeb
	addl $16,%esp
	movw $1,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	jmp L15435
	.p2align 2
L15459:
	call _get_line__MLXB
	addl $-8,%esp
	pushl $___dj_stdout
	pushl $78
	call _fputc
	addl $16,%esp
	addl $-12,%esp
	pushl $1
	call _exit
	.p2align 2
L15436:
	movl (%edx),%eax
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L15464
	jmp *L15476(,%ecx,4)
	.p2align 2
L15476:
	.long L15475
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15470
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15464
	.long L15474
	.long L15475
	.long L15475
	.long L15464
	.long L15475
	.long L15475
	.long L15475
	.long L15475
	.long L15475
	.long L15475
	.p2align 2
L15470:
	movl 60(%edx),%edi
	jmp L15464
	.p2align 2
L15474:
L15475:
	movl 64(%edx),%edi
L15464:
	movl -4(%ebp),%ebx
	subl %edi,%ebx
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L15479
	jmp *L15491(,%ecx,4)
	.p2align 2
L15491:
	.long L15490
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15485
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15479
	.long L15489
	.long L15490
	.long L15490
	.long L15479
	.long L15490
	.long L15490
	.long L15490
	.long L15490
	.long L15490
	.long L15490
	.p2align 2
L15485:
	movl 64(%edx),%esi
	jmp L15479
	.p2align 2
L15489:
L15490:
	movl 68(%edx),%esi
L15479:
	movl -8(%ebp),%ecx
	subl %esi,%ecx
	addl $-17,%eax
	cmpl $70,%eax
	ja L15435
	jmp *L15506(,%eax,4)
	.p2align 2
L15506:
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15504
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.long L15435
	.p2align 2
L15504:
	movl 20(%ebp),%eax
	pushl %eax
	pushl %ecx
	pushl %ebx
	pushl %edx
	call _slave_pixel_hard__color__6P7B
L15435:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_h_hard__until__color__NXWB:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	cmpl $0,56(%eax)
	je L15509
	movl 64(%eax),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%ecx
	movl %eax,-8(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%ecx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,%esi
	movl 56(%edx),%eax
	addl $32,%esp
	movl 24(%eax),%eax
	addl $-8,%esp
	movl (%eax),%eax
	cmpl %eax,-8(%ebp)
	setg %bl
	pushl %eax
	movl -8(%ebp),%ecx
	pushl %ecx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L15509
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%eax
	addl $-8,%esp
	movl (%eax),%eax
	cmpl %eax,-8(%ebp)
	setg %bl
	pushl %eax
	movl -8(%ebp),%ecx
	pushl %ecx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L15509
	movl 8(%ebp),%eax
	movl 56(%eax),%edx
	movl 12(%edx),%eax
	movl (%eax),%eax
	cmpl %eax,-4(%ebp)
	jle L15520
	movl -4(%ebp),%eax
L15520:
	movl %eax,-4(%ebp)
	movl 16(%edx),%eax
	movl (%eax),%eax
	movl %esi,-20(%ebp)
	cmpl %eax,%esi
	jle L15524
	movl %eax,-20(%ebp)
L15524:
	movl -20(%ebp),%edx
	cmpl %edx,-4(%ebp)
	jg L15509
	.p2align 2
L15624:
	movl -8(%ebp),%ecx
	addl $-4,%esp
	pushl %ecx
	movl -4(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _get_clip__U1WB
	movl 8(%eax),%edx
	movl -20(%ebp),%ecx
	addl $16,%esp
	movl %ecx,-24(%ebp)
	cmpl %edx,%ecx
	jle L15534
	movl %edx,-24(%ebp)
L15534:
	movl 16(%eax),%edx
	cmpl 8(%ebp),%edx
	jne L15537
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L15572
	movl 24(%ebp),%eax
	shrl $16,%eax
	movl %eax,%ebx
	movl 24(%ebp),%eax
	andl $192,%ebx
	shrl $10,%eax
	andl $56,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	pushl %ebx
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movb %al,%bl
	movl 24(%ebp),%eax
	addl $48,%esp
	shrl $5,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	andl $7,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movl -8(%ebp),%ebx
	movb %al,-13(%ebp)
	movl -8(%ebp),%eax
	addl $48,%esp
	sall $8,%ebx
	sall $6,%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	movl -4(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	movw $2,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	movl -24(%ebp),%edx
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl -4(%ebp),%esi
	cmpl %esi,%ebx
	jg L15627
	.p2align 2
L15564:
	addl $-4,%esp
	xorl %eax,%eax
	movb -13(%ebp),%al
	pushl %eax
	pushl %ebx
	xorl %eax,%eax
	movw ___desc_video,%ax
	pushl %eax
	call __farpokeb
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L15564
L15627:
	movw $1,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	addl $16,%esp
	jmp L15576
	.p2align 2
L15572:
	call _get_line__MLXB
	addl $-8,%esp
	pushl $___dj_stdout
	pushl $78
	call _fputc
	addl $16,%esp
	addl $-12,%esp
	pushl $1
	call _exit
	.p2align 2
L15537:
	movl (%edx),%eax
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L15577
	jmp *L15589(,%ecx,4)
	.p2align 2
L15589:
	.long L15588
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15583
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15577
	.long L15587
	.long L15588
	.long L15588
	.long L15577
	.long L15588
	.long L15588
	.long L15588
	.long L15588
	.long L15588
	.long L15588
	.p2align 2
L15583:
	movl 60(%edx),%edi
	jmp L15577
	.p2align 2
L15587:
L15588:
	movl 64(%edx),%edi
L15577:
	movl -4(%ebp),%esi
	subl %edi,%esi
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L15592
	jmp *L15604(,%ecx,4)
	.p2align 2
L15604:
	.long L15603
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15598
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15592
	.long L15602
	.long L15603
	.long L15603
	.long L15592
	.long L15603
	.long L15603
	.long L15603
	.long L15603
	.long L15603
	.long L15603
	.p2align 2
L15598:
	movl 64(%edx),%ecx
	jmp L15628
	.p2align 2
L15602:
L15603:
	movl 68(%edx),%ecx
L15628:
	movl %ecx,-12(%ebp)
L15592:
	movl -8(%ebp),%ebx
	movl -24(%ebp),%ecx
	subl -12(%ebp),%ebx
	subl %edi,%ecx
	addl $-17,%eax
	cmpl $70,%eax
	ja L15576
	jmp *L15620(,%eax,4)
	.p2align 2
L15620:
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15618
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.long L15576
	.p2align 2
L15618:
	movl 24(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	pushl %ecx
	pushl %ebx
	pushl %esi
	pushl %edx
	call _slave_line_h_hard__until__color__GC8B
	addl $32,%esp
L15576:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl -20(%ebp),%ecx
	movl %eax,-4(%ebp)
	addl $32,%esp
	cmpl %ecx,%eax
	jle L15624
L15509:
	leal -56(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_v_until__920B:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	addl $-8,%esp
	movl 36(%eax),%edi
	movl %edx,-4(%ebp)
	movl 32(%eax),%esi
	movl 16(%eax),%ebx
	movl 24(%eax),%ecx
	movl %edx,36(%eax)
	movl %ecx,-28(%ebp)
	movl $0,-32(%ebp)
	pushl %ebx
	pushl %esi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%esi
	sete %al
	orb %dl,%al
	je L15633
	movl -28(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-32(%ebp)
L15633:
	cmpb $0,-32(%ebp)
	je L15631
	cmpl -4(%ebp),%edi
	jle L15635
	movl %edi,%eax
	movl -4(%ebp),%edi
	movl %eax,-4(%ebp)
L15635:
	movl 8(%ebp),%ecx
	movl -4(%ebp),%edx
	addl $-8,%esp
	movl 28(%ecx),%eax
	cmpl -4(%ebp),%eax
	setg %bl
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L15637
	movl 8(%ebp),%ecx
	movl 28(%ecx),%ecx
	movl %ecx,-4(%ebp)
L15637:
	movl 8(%ebp),%edx
	movl 20(%edx),%eax
	cmpl %edi,%eax
	jle L15641
	movl %eax,%edi
L15641:
	cmpl -4(%ebp),%edi
	jg L15631
	movl -4(%ebp),%ecx
	movl %edi,-24(%ebp)
	cmpl %ecx,%edi
	jg L15631
	.p2align 2
L15648:
	movl 8(%ebp),%eax
	movl 32(%eax),%ebx
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L15651
	movl 32(%eax),%edi
	jmp L15652
	.p2align 2
L15651:
	movl 28(%eax),%edi
L15652:
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%ecx
	movl %eax,-20(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%ecx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	addl $-4,%esp
	pushl %esi
	movl -20(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%ecx
	pushl %ecx
	call _get_clip__K80B
	addl $16,%esp
	testl %eax,%eax
	je L15655
	movl 16(%eax),%edx
	cmpl 8(%ebp),%edx
	jne L15656
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L15679
	movl %edi,%eax
	shrl $16,%eax
	movl %eax,%ebx
	andl $192,%ebx
	movl %edi,%eax
	shrl $10,%eax
	andl $56,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	pushl %ebx
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movb %al,%bl
	addl $48,%esp
	movl %edi,%eax
	shrl $5,%eax
	andl $7,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movb %al,-13(%ebp)
	addl $48,%esp
	sall $6,%esi
	addl $-8,%esp
	addl $-12,%esp
	pushl %esi
	call ___prefix_sub__05B
	pushl %eax
	sall $2,%esi
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%ebx
	movl -20(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	movw $2,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	addl $16,%esp
	addl $-4,%esp
	xorl %eax,%eax
	movb -13(%ebp),%al
	pushl %eax
	pushl %ebx
	xorl %eax,%eax
	movw ___desc_video,%ax
	pushl %eax
	call __farpokeb
	addl $16,%esp
	movw $1,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	jmp L15731
	.p2align 2
L15679:
	call _get_line__0P1B
	addl $-8,%esp
	pushl $___dj_stdout
	pushl $78
	call _fputc
	addl $16,%esp
	addl $-12,%esp
	pushl $1
	call _exit
	.p2align 2
L15656:
	movl (%edx),%eax
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L15684
	jmp *L15696(,%ecx,4)
	.p2align 2
L15696:
	.long L15694
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15691
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15684
	.long L15695
	.long L15695
	.long L15695
	.long L15684
	.long L15695
	.long L15695
	.long L15695
	.long L15695
	.long L15695
	.long L15695
	.p2align 2
L15691:
	movl 60(%edx),%ecx
	jmp L15732
	.p2align 2
L15694:
L15695:
	movl 64(%edx),%ecx
L15732:
	movl %ecx,-8(%ebp)
L15684:
	movl -20(%ebp),%ebx
	subl -8(%ebp),%ebx
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L15699
	jmp *L15711(,%ecx,4)
	.p2align 2
L15711:
	.long L15709
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15706
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15699
	.long L15710
	.long L15710
	.long L15710
	.long L15699
	.long L15710
	.long L15710
	.long L15710
	.long L15710
	.long L15710
	.long L15710
	.p2align 2
L15706:
	movl 64(%edx),%ecx
	jmp L15733
	.p2align 2
L15709:
L15710:
	movl 68(%edx),%ecx
L15733:
	movl %ecx,-12(%ebp)
L15699:
	movl %esi,%ecx
	subl -12(%ebp),%ecx
	addl $-17,%eax
	cmpl $70,%eax
	ja L15655
	jmp *L15726(,%eax,4)
	.p2align 2
L15726:
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15725
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.long L15655
	.p2align 2
L15725:
	pushl %edi
	pushl %ecx
	pushl %ebx
	pushl %edx
	call _slave_pixel_hard__color__6P7B
L15731:
	addl $16,%esp
L15655:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl %eax,-24(%ebp)
	addl $32,%esp
	cmpl %edx,%eax
	jle L15648
L15631:
	leal -56(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_h_until__OU1B:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%edi
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 32(%eax),%eax
	movl %eax,-4(%ebp)
	movl 36(%edx),%esi
	movl 20(%edx),%ebx
	movl 28(%edx),%eax
	movl %edi,32(%edx)
	movl %eax,-8(%ebp)
	movl $0,-12(%ebp)
	pushl %ebx
	pushl %esi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%esi
	sete %al
	orb %dl,%al
	je L15737
	movl -8(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-12(%ebp)
L15737:
	cmpb $0,-12(%ebp)
	je L15735
	cmpl %edi,-4(%ebp)
	jle L15739
	movl -4(%ebp),%eax
	movl %edi,-4(%ebp)
	movl %eax,%edi
L15739:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 24(%edx),%eax
	cmpl %edi,%eax
	setg %bl
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L15741
	movl 8(%ebp),%eax
	movl 24(%eax),%edi
L15741:
	movl 8(%ebp),%edx
	movl 16(%edx),%eax
	cmpl -4(%ebp),%eax
	jle L15745
	movl %eax,-4(%ebp)
L15745:
	cmpl %edi,-4(%ebp)
	jg L15735
	movl 8(%ebp),%eax
	movl 36(%eax),%edx
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L15750
	movl 32(%eax),%eax
	jmp L15751
	.p2align 2
L15750:
	movl 28(%eax),%eax
L15751:
	addl $-12,%esp
	pushl %eax
	pushl %edi
	pushl %edx
	movl -4(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _line_h_hard__until__color__RY1B
L15735:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_create_with_capacity__OM2:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	call _clone__NN2
	movl %eax,%esi
	addl $-8,%esp
	movl 4(%esi),%eax
	cmpl $16,%eax
	setg %bl
	pushl $16
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L15760
	addl $-12,%esp
	pushl $16
	call _calloc__VS2
	movl %eax,(%esi)
	movl $16,4(%esi)
	jmp L15769
	.p2align 2
L15760:
	cmpl $16,4(%esi)
	jle L15769
	movl 8(%esi),%eax
	addl $-4,%esp
	pushl %eax
	pushl $0
	movl (%esi),%eax
	pushl %eax
	call _clear__to__Y02
L15769:
	movl $-1,8(%esi)
	leal -24(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_create__A52:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	call _clone__NN2
	movl %eax,%esi
	movl 4(%esi),%eax
	cmpl $63,%eax
	jg L15779
	addl $-12,%esp
	pushl $64
	call _calloc__VS2
	movl %eax,(%esi)
	movl $64,4(%esi)
	jmp L15786
	.p2align 2
L15779:
	movb $0,%dl
	testl %eax,%eax
	jle L15787
	movl 8(%esi),%eax
	testl %eax,%eax
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	setne %dl
L15787:
	testb %dl,%dl
	je L15786
	movl 8(%esi),%eax
	addl $-4,%esp
	pushl %eax
	pushl $0
	movl (%esi),%eax
	pushl %eax
	call _clear__to__Y02
L15786:
	movl $63,8(%esi)
	leal -24(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_connect_first__882B:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl _parent_video__C2,%eax
	movl 8(%ebp),%ebx
	cmpl $16,(%eax)
	jne L15803
	movl 68(%eax),%ecx
	jmp L15804
	.p2align 2
L15803:
	movl 64(%eax),%ecx
L15804:
	cmpl $16,(%eax)
	jne L15805
	movl 72(%eax),%edx
	jmp L15806
	.p2align 2
L15805:
	movl 68(%eax),%edx
L15806:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edx
	pushl %ecx
	pushl %ebx
	call _poly_line_to__GA3B
	addl $16,%esp
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L15809
	movl 52(%eax),%edx
	jmp L15810
	.p2align 2
L15809:
	movl 48(%eax),%edx
L15810:
	testl %edx,%edx
	je L15811
	cmpl $16,(%eax)
	jne L15812
	movl 52(%eax),%edx
	jmp L15813
	.p2align 2
L15812:
	movl 48(%eax),%edx
L15813:
	movb 16(%edx),%cl
	cmpl $16,(%eax)
	jne L15814
	movl 60(%eax),%edx
	jmp L15815
	.p2align 2
L15814:
	movl 56(%eax),%edx
L15815:
	cmpb 16(%edx),%cl
	sete %dl
	jmp L15816
	.p2align 2
L15811:
	movb $0,%dl
L15816:
	testb %dl,%dl
	je L15817
	cmpl $16,(%eax)
	jne L15818
	movl 52(%eax),%edx
	jmp L15819
	.p2align 2
L15818:
	movl 48(%eax),%edx
L15819:
	cmpb $0,16(%edx)
	je L15820
	cmpl $16,(%eax)
	jne L15821
	movl 60(%eax),%eax
	jmp L15822
	.p2align 2
L15821:
	movl 56(%eax),%eax
L15822:
	movl _parent_video__C2,%edx
	cmpl $16,(%edx)
	jne L15823
	movl 52(%edx),%edx
	jmp L15824
	.p2align 2
L15823:
	movl 48(%edx),%edx
L15824:
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call _set_next_y__LO4
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L15825
	movl 48(%eax),%ebx
	jmp L15826
	.p2align 2
L15825:
	movl 44(%eax),%ebx
L15826:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L15827
	movl 56(%eax),%ecx
	jmp L15828
	.p2align 2
L15827:
	movl 52(%eax),%ecx
L15828:
	cmpl $16,(%eax)
	jne L15829
	movl 48(%eax),%eax
	jmp L15830
	.p2align 2
L15829:
	movl 44(%eax),%eax
L15830:
	movl _parent_video__C2,%edx
	cmpl $16,(%edx)
	jne L15831
	movl 64(%edx),%edx
	jmp L15832
	.p2align 2
L15831:
	movl 60(%edx),%edx
L15832:
	addl $-4,%esp
	pushl %ecx
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call _item__L13
	addl $16,%esp
	pushl %eax
	pushl %ebx
	call _put__to__HP4
	jmp L15842
	.p2align 2
L15820:
	cmpl $16,(%eax)
	jne L15834
	movl 52(%eax),%eax
	jmp L15835
	.p2align 2
L15834:
	movl 48(%eax),%eax
L15835:
	movl _parent_video__C2,%edx
	cmpl $16,(%edx)
	jne L15836
	movl 60(%edx),%edx
	jmp L15837
	.p2align 2
L15836:
	movl 56(%edx),%edx
L15837:
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call _set_next_y__LO4
L15842:
	addl $16,%esp
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L15838
	movl 48(%eax),%edx
	jmp L15839
	.p2align 2
L15838:
	movl 44(%eax),%edx
L15839:
	cmpl $16,(%eax)
	jne L15840
	movl 64(%eax),%eax
	jmp L15841
	.p2align 2
L15840:
	movl 60(%eax),%eax
L15841:
	addl $-8,%esp
	pushl %eax
	pushl %edx
	call _remove__VU4
L15817:
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_add_last__DQ3:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	addl $-12,%esp
	pushl %esi
	call _count__YE3
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 8(%esi),%ebx
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 4(%esi),%edx
	movl %eax,%ecx
	addl $32,%esp
	movl %edx,%eax
	subl $1,%eax
	cmpl %eax,%ecx
	jg L15844
	movl 8(%esi),%ebx
	jmp L15867
	.p2align 2
L15844:
	testl %edx,%edx
	jne L15856
	addl $-12,%esp
	pushl $2
	call _calloc__VS2
	movl %eax,(%esi)
	addl $16,%esp
	movl $2,4(%esi)
	movl $0,8(%esi)
	jmp L15855
	.p2align 2
L15856:
	leal (%edx,%edx),%ebx
	addl $-4,%esp
	pushl %ebx
	pushl %edx
	movl (%esi),%eax
	pushl %eax
	call _realloc__with__OU3
	movl %ebx,4(%esi)
	movl 8(%esi),%ebx
	movl %eax,(%esi)
	addl $16,%esp
L15867:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	movl %eax,8(%esi)
L15855:
	movl 8(%esi),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	movl (%esi),%eax
	pushl %eax
	call _put__to__NG3
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_add_last__P33:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	addl $-12,%esp
	pushl %esi
	call _count__YE3
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 8(%esi),%ebx
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 4(%esi),%edx
	movl %eax,%ecx
	addl $32,%esp
	movl %edx,%eax
	subl $1,%eax
	cmpl %eax,%ecx
	jg L15870
	movl 8(%esi),%ebx
	jmp L15893
	.p2align 2
L15870:
	testl %edx,%edx
	jne L15882
	addl $-12,%esp
	pushl $2
	call _calloc__VS2
	movl %eax,(%esi)
	addl $16,%esp
	movl $2,4(%esi)
	movl $0,8(%esi)
	jmp L15881
	.p2align 2
L15882:
	leal (%edx,%edx),%ebx
	addl $-4,%esp
	pushl %ebx
	pushl %edx
	movl (%esi),%eax
	pushl %eax
	call _realloc__with__OU3
	movl %ebx,4(%esi)
	movl 8(%esi),%ebx
	movl %eax,(%esi)
	addl $16,%esp
L15893:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	movl %eax,8(%esi)
L15881:
	movl 8(%esi),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	movl (%esi),%eax
	pushl %eax
	call _put__to__C83
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_remove__VU4:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	movl 8(%eax),%ebx
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%eax
	movl 12(%ebp),%ebx
	addl $32,%esp
	movl (%eax),%esi
	movl 8(%eax),%edi
	cmpl %edi,%ebx
	je L15915
	.p2align 2
L15916:
	addl $-4,%esp
	pushl %ebx
	addl $-8,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	pushl %esi
	call _item__F23
	addl $16,%esp
	pushl %eax
	pushl %esi
	call _put__to__C83
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %edi,%ebx
	jne L15916
L15915:
	movl 8(%ebp),%eax
	leal -24(%ebp),%esp
	decl 8(%eax)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_sort_list_y__E63B:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L15925
	movl 48(%eax),%eax
	jmp L15926
	.p2align 2
L15925:
	movl 44(%eax),%eax
L15926:
	movl 8(%eax),%eax
	decl %eax
	movl %eax,-12(%ebp)
	movl $0,-4(%ebp)
	movl %eax,-8(%ebp)
	.p2align 2
L15974:
	movl -4(%ebp),%edi
	movl -8(%ebp),%eax
	movb $0,-17(%ebp)
	movl %eax,-24(%ebp)
	subl $1,-24(%ebp)
	cmpl %eax,%edi
	jg L15975
	.p2align 2
L15935:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L15938
	movl 48(%eax),%eax
	jmp L15939
	.p2align 2
L15938:
	movl 44(%eax),%eax
L15939:
	addl $-8,%esp
	pushl %edi
	movl (%eax),%eax
	pushl %eax
	call _item__F23
	movl (%eax),%esi
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L15941
	movl 48(%eax),%ebx
	jmp L15942
	.p2align 2
L15941:
	movl 44(%eax),%ebx
L15942:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	movl (%ebx),%eax
	pushl %eax
	call _item__F23
	addl $16,%esp
	cmpl (%eax),%esi
	jle L15943
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L15948
	movl 48(%eax),%ebx
	jmp L15949
	.p2align 2
L15948:
	movl 44(%eax),%ebx
L15949:
	addl $-4,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	pushl %edi
	pushl %ebx
	call _swap__with__JK5
	movb $1,-17(%ebp)
	addl $16,%esp
L15943:
	movl -12(%ebp),%esi
	movl _parent_video__C2,%eax
	subl %edi,%esi
	cmpl $16,(%eax)
	jne L15953
	movl 48(%eax),%eax
	jmp L15954
	.p2align 2
L15953:
	movl 44(%eax),%eax
L15954:
	addl $-8,%esp
	pushl %esi
	movl (%eax),%eax
	pushl %eax
	call _item__F23
	movl (%eax),%eax
	movl %eax,-16(%ebp)
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L15956
	movl 48(%eax),%ebx
	jmp L15957
	.p2align 2
L15956:
	movl 44(%eax),%ebx
L15957:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	movl (%ebx),%eax
	pushl %eax
	call _item__F23
	movl -16(%ebp),%edx
	addl $16,%esp
	cmpl (%eax),%edx
	jle L15958
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L15963
	movl 48(%eax),%ebx
	jmp L15964
	.p2align 2
L15963:
	movl 44(%eax),%ebx
L15964:
	addl $-4,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	pushl %esi
	pushl %ebx
	call _swap__with__JK5
	movb $1,-17(%ebp)
	addl $16,%esp
L15958:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
	cmpl -8(%ebp),%edi
	jle L15935
L15975:
	movl -24(%ebp),%eax
	movl %eax,-8(%ebp)
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	cmpb $0,-17(%ebp)
	jne L15974
	leal -56(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_add__IW5:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl $0,-4(%ebp)
	addl $-12,%esp
	pushl %edi
	call _to_run__CX5
	movl 12(%ebp),%esi
	addl $16,%esp
	jmp L15978
	.p2align 2
L15988:
	movl 12(%esi),%eax
	movl 12(%edi),%edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L15979
L15980:
	movl %esi,-4(%ebp)
	movl 28(%esi),%esi
L15978:
	testl %esi,%esi
	je L15979
	movl 4(%esi),%eax
	movl 4(%edi),%edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L15980
	movl 4(%edi),%eax
	cmpl %eax,4(%esi)
	je L15988
L15979:
	movl %esi,28(%edi)
	movl -4(%ebp),%eax
	movl %eax,24(%edi)
	testl %esi,%esi
	je L15989
	movl %edi,24(%esi)
L15989:
	movl 24(%edi),%eax
	testl %eax,%eax
	je L15990
	movl %edi,28(%eax)
	movl 12(%ebp),%eax
	jmp L15991
	.p2align 2
L15990:
	movl %edi,%eax
L15991:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_h_hard__until__color__RY1B:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	cmpl $0,56(%eax)
	je L15993
	movl 64(%eax),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%ecx
	movl %eax,-8(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%ecx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,%esi
	movl 56(%edx),%eax
	addl $32,%esp
	movl 24(%eax),%eax
	addl $-8,%esp
	movl (%eax),%eax
	cmpl %eax,-8(%ebp)
	setg %bl
	pushl %eax
	movl -8(%ebp),%ecx
	pushl %ecx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L15993
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%eax
	addl $-8,%esp
	movl (%eax),%eax
	cmpl %eax,-8(%ebp)
	setg %bl
	pushl %eax
	movl -8(%ebp),%ecx
	pushl %ecx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L15993
	movl 8(%ebp),%eax
	movl 56(%eax),%edx
	movl 12(%edx),%eax
	movl (%eax),%eax
	cmpl %eax,-4(%ebp)
	jle L16004
	movl -4(%ebp),%eax
L16004:
	movl %eax,-4(%ebp)
	movl 16(%edx),%eax
	movl (%eax),%eax
	movl %esi,-20(%ebp)
	cmpl %eax,%esi
	jle L16008
	movl %eax,-20(%ebp)
L16008:
	movl -20(%ebp),%edx
	cmpl %edx,-4(%ebp)
	jg L15993
	.p2align 2
L16108:
	movl -8(%ebp),%ecx
	addl $-4,%esp
	pushl %ecx
	movl -4(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _get_clip__K80B
	movl 8(%eax),%edx
	movl -20(%ebp),%ecx
	addl $16,%esp
	movl %ecx,-24(%ebp)
	cmpl %edx,%ecx
	jle L16018
	movl %edx,-24(%ebp)
L16018:
	movl 16(%eax),%edx
	cmpl 8(%ebp),%edx
	jne L16021
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L16056
	movl 24(%ebp),%eax
	shrl $16,%eax
	movl %eax,%ebx
	movl 24(%ebp),%eax
	andl $192,%ebx
	shrl $10,%eax
	andl $56,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	pushl %ebx
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movb %al,%bl
	movl 24(%ebp),%eax
	addl $48,%esp
	shrl $5,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	andl $7,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movl -8(%ebp),%ebx
	movb %al,-13(%ebp)
	movl -8(%ebp),%eax
	addl $48,%esp
	sall $8,%ebx
	sall $6,%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	movl -4(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	movw $2,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	movl -24(%ebp),%edx
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl -4(%ebp),%esi
	cmpl %esi,%ebx
	jg L16111
	.p2align 2
L16048:
	addl $-4,%esp
	xorl %eax,%eax
	movb -13(%ebp),%al
	pushl %eax
	pushl %ebx
	xorl %eax,%eax
	movw ___desc_video,%ax
	pushl %eax
	call __farpokeb
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L16048
L16111:
	movw $1,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	addl $16,%esp
	jmp L16060
	.p2align 2
L16056:
	call _get_line__0P1B
	addl $-8,%esp
	pushl $___dj_stdout
	pushl $78
	call _fputc
	addl $16,%esp
	addl $-12,%esp
	pushl $1
	call _exit
	.p2align 2
L16021:
	movl (%edx),%eax
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L16061
	jmp *L16073(,%ecx,4)
	.p2align 2
L16073:
	.long L16071
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16068
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16061
	.long L16072
	.long L16072
	.long L16072
	.long L16061
	.long L16072
	.long L16072
	.long L16072
	.long L16072
	.long L16072
	.long L16072
	.p2align 2
L16068:
	movl 60(%edx),%edi
	jmp L16061
	.p2align 2
L16071:
L16072:
	movl 64(%edx),%edi
L16061:
	movl -4(%ebp),%esi
	subl %edi,%esi
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L16076
	jmp *L16088(,%ecx,4)
	.p2align 2
L16088:
	.long L16086
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16083
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16076
	.long L16087
	.long L16087
	.long L16087
	.long L16076
	.long L16087
	.long L16087
	.long L16087
	.long L16087
	.long L16087
	.long L16087
	.p2align 2
L16083:
	movl 64(%edx),%ecx
	jmp L16112
	.p2align 2
L16086:
L16087:
	movl 68(%edx),%ecx
L16112:
	movl %ecx,-12(%ebp)
L16076:
	movl -8(%ebp),%ebx
	movl -24(%ebp),%ecx
	subl -12(%ebp),%ebx
	subl %edi,%ecx
	addl $-17,%eax
	cmpl $70,%eax
	ja L16060
	jmp *L16104(,%eax,4)
	.p2align 2
L16104:
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16103
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.long L16060
	.p2align 2
L16103:
	movl 24(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	pushl %ecx
	pushl %ebx
	pushl %esi
	pushl %edx
	call _slave_line_h_hard__until__color__GC8B
	addl $32,%esp
L16060:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl -20(%ebp),%ecx
	movl %eax,-4(%ebp)
	addl $32,%esp
	cmpl %ecx,%eax
	jle L16108
L15993:
	leal -56(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_v_until__H06B:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	movb $0,-5(%ebp)
	addl $-8,%esp
	movl 36(%eax),%edi
	movl %edx,-4(%ebp)
	movl 32(%eax),%esi
	movl 16(%eax),%ebx
	movl %edx,36(%eax)
	movl 24(%eax),%eax
	movl %eax,-12(%ebp)
	movl $0,-16(%ebp)
	pushl %ebx
	pushl %esi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%esi
	sete %al
	orb %dl,%al
	je L16142
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-16(%ebp)
L16142:
	cmpb $0,-16(%ebp)
	je L16140
	movb $1,-5(%ebp)
	cmpl -4(%ebp),%edi
	jle L16144
	movl %edi,%eax
	movl -4(%ebp),%edi
	movl %eax,-4(%ebp)
L16144:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 28(%edx),%eax
	movl -4(%ebp),%edx
	cmpl -4(%ebp),%eax
	setg %bl
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L16146
	movl 8(%ebp),%eax
	movl 28(%eax),%eax
	movl %eax,-4(%ebp)
	movb $0,-5(%ebp)
L16146:
	movl 8(%ebp),%edx
	movl 20(%edx),%eax
	cmpl %edi,%eax
	jle L16150
	movl %eax,%edi
	movb $0,-5(%ebp)
L16150:
	cmpl -4(%ebp),%edi
	jg L16140
	movl %edi,%ebx
	cmpl -4(%ebp),%ebx
	jg L16140
	.p2align 2
L16157:
	movl 8(%ebp),%eax
	movl 32(%eax),%edx
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L16160
	movl 32(%eax),%eax
	jmp L16161
	.p2align 2
L16160:
	movl 28(%eax),%eax
L16161:
	pushl %eax
	pushl %ebx
	pushl %edx
	movl 8(%ebp),%edx
	pushl %edx
	call _pixel_hard__color__C46B
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl -4(%ebp),%ebx
	jle L16157
L16140:
	leal -40(%ebp),%esp
	movsbl -5(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_h_hard__until__color__K07B:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	cmpl $0,56(%eax)
	je L16166
	movl 64(%eax),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%ecx
	movl %eax,-8(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%ecx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,%esi
	movl 56(%edx),%eax
	addl $32,%esp
	movl 24(%eax),%eax
	addl $-8,%esp
	movl (%eax),%eax
	cmpl %eax,-8(%ebp)
	setg %bl
	pushl %eax
	movl -8(%ebp),%ecx
	pushl %ecx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L16166
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%eax
	addl $-8,%esp
	movl (%eax),%eax
	cmpl %eax,-8(%ebp)
	setg %bl
	pushl %eax
	movl -8(%ebp),%ecx
	pushl %ecx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L16166
	movl 8(%ebp),%eax
	movl 56(%eax),%edx
	movl 12(%edx),%eax
	movl (%eax),%eax
	cmpl %eax,-4(%ebp)
	jle L16177
	movl -4(%ebp),%eax
L16177:
	movl %eax,-4(%ebp)
	movl 16(%edx),%eax
	movl (%eax),%eax
	movl %esi,-20(%ebp)
	cmpl %eax,%esi
	jle L16181
	movl %eax,-20(%ebp)
L16181:
	movl -20(%ebp),%edx
	cmpl %edx,-4(%ebp)
	jg L16166
	.p2align 2
L16281:
	movl -8(%ebp),%ecx
	addl $-4,%esp
	pushl %ecx
	movl -4(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _get_clip__D56B
	movl 8(%eax),%edx
	movl -20(%ebp),%ecx
	addl $16,%esp
	movl %ecx,-24(%ebp)
	cmpl %edx,%ecx
	jle L16191
	movl %edx,-24(%ebp)
L16191:
	movl 16(%eax),%edx
	cmpl 8(%ebp),%edx
	jne L16194
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L16229
	movl 24(%ebp),%eax
	shrl $16,%eax
	movl %eax,%ebx
	movl 24(%ebp),%eax
	andl $192,%ebx
	shrl $10,%eax
	andl $56,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	pushl %ebx
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movb %al,%bl
	movl 24(%ebp),%eax
	addl $48,%esp
	shrl $5,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	andl $7,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movl -8(%ebp),%ebx
	movb %al,-13(%ebp)
	movl -8(%ebp),%eax
	addl $48,%esp
	sall $8,%ebx
	sall $6,%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	movl -4(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	movw $2,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	movl -24(%ebp),%edx
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl -4(%ebp),%esi
	cmpl %esi,%ebx
	jg L16284
	.p2align 2
L16221:
	addl $-4,%esp
	xorl %eax,%eax
	movb -13(%ebp),%al
	pushl %eax
	pushl %ebx
	xorl %eax,%eax
	movw ___desc_video,%ax
	pushl %eax
	call __farpokeb
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L16221
L16284:
	movw $1,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	addl $16,%esp
	jmp L16233
	.p2align 2
L16229:
	call _get_line__PM7B
	addl $-8,%esp
	pushl $___dj_stdout
	pushl $78
	call _fputc
	addl $16,%esp
	addl $-12,%esp
	pushl $1
	call _exit
	.p2align 2
L16194:
	movl (%edx),%eax
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L16234
	jmp *L16246(,%ecx,4)
	.p2align 2
L16246:
	.long L16245
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16242
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16234
	.long L16245
	.long L16245
	.long L16245
	.long L16234
	.long L16245
	.long L16245
	.long L16245
	.long L16245
	.long L16244
	.long L16245
	.p2align 2
L16242:
	movl 60(%edx),%edi
	jmp L16234
	.p2align 2
L16244:
L16245:
	movl 64(%edx),%edi
L16234:
	movl -4(%ebp),%esi
	subl %edi,%esi
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L16249
	jmp *L16261(,%ecx,4)
	.p2align 2
L16261:
	.long L16260
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16257
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16249
	.long L16260
	.long L16260
	.long L16260
	.long L16249
	.long L16260
	.long L16260
	.long L16260
	.long L16260
	.long L16259
	.long L16260
	.p2align 2
L16257:
	movl 64(%edx),%ecx
	jmp L16285
	.p2align 2
L16259:
L16260:
	movl 68(%edx),%ecx
L16285:
	movl %ecx,-12(%ebp)
L16249:
	movl -8(%ebp),%ebx
	movl -24(%ebp),%ecx
	subl -12(%ebp),%ebx
	subl %edi,%ecx
	addl $-17,%eax
	cmpl $70,%eax
	ja L16233
	jmp *L16277(,%eax,4)
	.p2align 2
L16277:
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16270
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.long L16233
	.p2align 2
L16270:
	movl 24(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	pushl %ecx
	pushl %ebx
	pushl %esi
	pushl %edx
	call _slave_line_h_hard__until__color__GC8B
	addl $32,%esp
L16233:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl -20(%ebp),%ecx
	movl %eax,-4(%ebp)
	addl $32,%esp
	cmpl %ecx,%eax
	jle L16281
L16166:
	leal -56(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_rectangle_to__AJ9B:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 32(%esi),%edi
	movl 36(%esi),%eax
	movl %eax,-4(%ebp)
	movl 16(%ebp),%eax
	cmpl %eax,-4(%ebp)
	jne L16294
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L16295
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call _line_h_until__TW7B
	jmp L16299
	.p2align 2
L16295:
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call _line_h_until__TW7B
	jmp L16378
	.p2align 2
L16294:
	cmpl 12(%ebp),%edi
	jne L16300
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L16301
	movl 16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	jmp L16379
	.p2align 2
L16301:
	movl 16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	jmp L16380
	.p2align 2
L16300:
	movl _parent_video__C2,%eax
	movl 12(%ebp),%eax
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	pushl %edi
	pushl %esi
	call _line_h__until__SL9B
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl 12(%ebp),%eax
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	pushl %edi
	pushl %esi
	call _line_h__until__SL9B
	addl $16,%esp
	movl 16(%ebp),%eax
	cmpl %eax,-4(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L16308
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	movl 16(%ebp),%ebx
	addl $32,%esp
	decl %ebx
	addl $-4,%esp
	pushl %edx
	pushl %edi
	pushl %esi
	call _move_to__4Z6B
	movl _parent_video__C2,%eax
	addl $16,%esp
	addl $-8,%esp
	pushl %ebx
	pushl %esi
	call _line_v_until__H06B
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $32,%esp
	cmpl $16,(%eax)
	jne L16332
	addl $-4,%esp
	pushl %edx
	movl 12(%ebp),%eax
	pushl %eax
	pushl %esi
	call _move_to__4Z6B
	movl _parent_video__C2,%eax
	addl $16,%esp
	jmp L16381
	.p2align 2
L16332:
	addl $-4,%esp
	pushl %edx
	movl 12(%ebp),%eax
	pushl %eax
	pushl %esi
	call _move_to__4Z6B
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	je L16381
	jmp L16374
	.p2align 2
L16308:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	movl -4(%ebp),%ebx
	addl $32,%esp
	decl %ebx
	addl $-4,%esp
	pushl %edx
	pushl %edi
	pushl %esi
	call _move_to__4Z6B
	movl _parent_video__C2,%eax
	addl $16,%esp
	addl $-8,%esp
	pushl %ebx
	pushl %esi
	call _line_v_until__H06B
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $32,%esp
	cmpl $16,(%eax)
	je L16332
	addl $-4,%esp
	pushl %edx
	movl 12(%ebp),%eax
	pushl %eax
	pushl %esi
	call _move_to__4Z6B
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L16374
L16381:
	addl $-8,%esp
	pushl %ebx
L16379:
	pushl %esi
	call _line_v_until__H06B
	jmp L16299
	.p2align 2
L16374:
	addl $-8,%esp
	pushl %ebx
L16380:
	pushl %esi
	call _line_v_until__H06B
L16378:
L16299:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_connect_first__SY9B:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl _parent_video__C2,%eax
	movl 8(%ebp),%ebx
	cmpl $16,(%eax)
	jne L16384
	movl 68(%eax),%ecx
	jmp L16385
	.p2align 2
L16384:
	movl 64(%eax),%ecx
L16385:
	cmpl $16,(%eax)
	jne L16386
	movl 72(%eax),%edx
	jmp L16387
	.p2align 2
L16386:
	movl 68(%eax),%edx
L16387:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edx
	pushl %ecx
	pushl %ebx
	call _poly_line_to__XZ9B
	addl $16,%esp
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L16390
	movl 52(%eax),%edx
	jmp L16391
	.p2align 2
L16390:
	movl 48(%eax),%edx
L16391:
	testl %edx,%edx
	je L16392
	cmpl $16,(%eax)
	jne L16393
	movl 52(%eax),%edx
	jmp L16394
	.p2align 2
L16393:
	movl 48(%eax),%edx
L16394:
	movb 16(%edx),%cl
	cmpl $16,(%eax)
	jne L16395
	movl 60(%eax),%edx
	jmp L16396
	.p2align 2
L16395:
	movl 56(%eax),%edx
L16396:
	cmpb 16(%edx),%cl
	sete %dl
	jmp L16397
	.p2align 2
L16392:
	movb $0,%dl
L16397:
	testb %dl,%dl
	je L16398
	cmpl $16,(%eax)
	jne L16399
	movl 52(%eax),%edx
	jmp L16400
	.p2align 2
L16399:
	movl 48(%eax),%edx
L16400:
	cmpb $0,16(%edx)
	je L16401
	cmpl $16,(%eax)
	jne L16402
	movl 60(%eax),%eax
	jmp L16403
	.p2align 2
L16402:
	movl 56(%eax),%eax
L16403:
	movl _parent_video__C2,%edx
	cmpl $16,(%edx)
	jne L16404
	movl 52(%edx),%edx
	jmp L16405
	.p2align 2
L16404:
	movl 48(%edx),%edx
L16405:
	movl %edx,20(%eax)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L16407
	movl 48(%eax),%esi
	jmp L16408
	.p2align 2
L16407:
	movl 44(%eax),%esi
L16408:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L16409
	movl 56(%eax),%edx
	jmp L16430
	.p2align 2
L16409:
	movl 52(%eax),%edx
L16430:
	movl %edx,-4(%ebp)
	cmpl $16,(%eax)
	jne L16411
	movl 48(%eax),%eax
	jmp L16412
	.p2align 2
L16411:
	movl 44(%eax),%eax
L16412:
	movl _parent_video__C2,%edx
	cmpl $16,(%edx)
	jne L16413
	movl 64(%edx),%edx
	jmp L16414
	.p2align 2
L16413:
	movl 60(%edx),%edx
L16414:
	addl $-8,%esp
	pushl %edx
	movl (%eax),%eax
	pushl %eax
	call _item__F23
	movl 8(%esi),%ebx
	movl %eax,%edi
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl -4(%ebp),%eax
	addl $32,%esp
	addl $-4,%esp
	pushl %eax
	pushl %edi
	movl (%esi),%eax
	pushl %eax
	call _put__to__C83
	addl $16,%esp
	jmp L16420
	.p2align 2
L16401:
	cmpl $16,(%eax)
	jne L16421
	movl 52(%eax),%eax
	jmp L16422
	.p2align 2
L16421:
	movl 48(%eax),%eax
L16422:
	movl _parent_video__C2,%edx
	cmpl $16,(%edx)
	jne L16423
	movl 60(%edx),%edx
	jmp L16424
	.p2align 2
L16423:
	movl 56(%edx),%edx
L16424:
	movl %edx,20(%eax)
L16420:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L16426
	movl 48(%eax),%edx
	jmp L16427
	.p2align 2
L16426:
	movl 44(%eax),%edx
L16427:
	cmpl $16,(%eax)
	jne L16428
	movl 64(%eax),%eax
	jmp L16429
	.p2align 2
L16428:
	movl 60(%eax),%eax
L16429:
	addl $-8,%esp
	pushl %eax
	pushl %edx
	call _remove__VU4
L16398:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_sort_list_y__GTAC:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L16432
	movl 48(%eax),%eax
	jmp L16433
	.p2align 2
L16432:
	movl 44(%eax),%eax
L16433:
	movl 8(%eax),%eax
	decl %eax
	movl %eax,-12(%ebp)
	movl $0,-4(%ebp)
	movl %eax,-8(%ebp)
	.p2align 2
L16481:
	movl -4(%ebp),%edi
	movl -8(%ebp),%eax
	movb $0,-17(%ebp)
	movl %eax,-24(%ebp)
	subl $1,-24(%ebp)
	cmpl %eax,%edi
	jg L16482
	.p2align 2
L16442:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L16445
	movl 48(%eax),%eax
	jmp L16446
	.p2align 2
L16445:
	movl 44(%eax),%eax
L16446:
	addl $-8,%esp
	pushl %edi
	movl (%eax),%eax
	pushl %eax
	call _item__F23
	movl (%eax),%esi
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L16448
	movl 48(%eax),%ebx
	jmp L16449
	.p2align 2
L16448:
	movl 44(%eax),%ebx
L16449:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	movl (%ebx),%eax
	pushl %eax
	call _item__F23
	addl $16,%esp
	cmpl (%eax),%esi
	jle L16450
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L16455
	movl 48(%eax),%ebx
	jmp L16456
	.p2align 2
L16455:
	movl 44(%eax),%ebx
L16456:
	addl $-4,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	pushl %edi
	pushl %ebx
	call _swap__with__JK5
	movb $1,-17(%ebp)
	addl $16,%esp
L16450:
	movl -12(%ebp),%esi
	movl _parent_video__C2,%eax
	subl %edi,%esi
	cmpl $16,(%eax)
	jne L16460
	movl 48(%eax),%eax
	jmp L16461
	.p2align 2
L16460:
	movl 44(%eax),%eax
L16461:
	addl $-8,%esp
	pushl %esi
	movl (%eax),%eax
	pushl %eax
	call _item__F23
	movl (%eax),%eax
	movl %eax,-16(%ebp)
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L16463
	movl 48(%eax),%ebx
	jmp L16464
	.p2align 2
L16463:
	movl 44(%eax),%ebx
L16464:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	movl (%ebx),%eax
	pushl %eax
	call _item__F23
	movl -16(%ebp),%edx
	addl $16,%esp
	cmpl (%eax),%edx
	jle L16465
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L16470
	movl 48(%eax),%ebx
	jmp L16471
	.p2align 2
L16470:
	movl 44(%eax),%ebx
L16471:
	addl $-4,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	pushl %esi
	pushl %ebx
	call _swap__with__JK5
	movb $1,-17(%ebp)
	addl $16,%esp
L16465:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
	cmpl -8(%ebp),%edi
	jle L16442
L16482:
	movl -24(%ebp),%eax
	movl %eax,-8(%ebp)
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	cmpb $0,-17(%ebp)
	jne L16481
	leal -56(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_clip__K5RB:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%edi
	movl 8(%ebp),%eax
	movb $0,-4(%ebp)
	movb $0,-2(%ebp)
	movb $0,-5(%ebp)
	movb $0,-3(%ebp)
	movb $0,-1(%ebp)
	movl 60(%eax),%esi
	testl %esi,%esi
	je L16484
	movl (%esi),%ebx
	movl 8(%esi),%edx
	movl %edx,-12(%ebp)
	movl $0,-16(%ebp)
	addl $-8,%esp
	pushl %ebx
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,12(%ebp)
	sete %al
	orb %dl,%al
	je L16487
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-16(%ebp)
L16487:
	cmpb $0,-16(%ebp)
	je L16485
	movl 4(%esi),%ebx
	movl 12(%esi),%eax
	movl %eax,-20(%ebp)
	movl $0,-24(%ebp)
	addl $-8,%esp
	pushl %ebx
	pushl %edi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%edi
	sete %al
	orb %dl,%al
	je L16490
	movl -20(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %edi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-24(%ebp)
L16490:
	cmpb $0,-24(%ebp)
	jne L16484
L16485:
	movl 4(%esi),%eax
	cmpl %eax,%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L16492
	movl (%esi),%eax
	cmpl %eax,12(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L16492
	jmp L16499
	.p2align 2
L16501:
	movl 28(%esi),%esi
L16499:
	testl %esi,%esi
	je L16518
	movl 4(%esi),%eax
	cmpl %eax,%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L16501
	jmp L16517
	.p2align 2
L16492:
	movl 12(%esi),%eax
	cmpl %eax,%edi
	jle L16517
	movl 12(%ebp),%edx
	cmpl 8(%esi),%edx
	jle L16517
	testl %esi,%esi
	je L16518
	cmpl %eax,%edi
	jle L16517
	.p2align 2
L16513:
	movl 32(%esi),%esi
	testl %esi,%esi
	je L16518
	cmpl 12(%esi),%edi
	jg L16513
L16517:
	testl %esi,%esi
	je L16518
	cmpl %edi,4(%esi)
	setg -1(%ebp)
	movl 8(%esi),%eax
	movl 12(%ebp),%edx
	cmpl 12(%ebp),%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	sete -3(%ebp)
	movb -1(%ebp),%al
	orb -3(%ebp),%al
	jmp L16523
	.p2align 2
L16518:
	movb $0,%al
L16523:
	testb %al,%al
	je L16537
	cmpb $0,-5(%ebp)
	je L16525
	cmpb $0,-1(%ebp)
	jne L16562
	cmpb $0,-3(%ebp)
	je L16531
L16563:
	movl 24(%esi),%esi
	jmp L16531
	.p2align 2
L16525:
	cmpb $0,-3(%ebp)
	jne L16563
	cmpb $0,-1(%ebp)
	je L16531
L16562:
	movl 28(%esi),%esi
L16531:
	xorb $1,-5(%ebp)
	jmp L16517
	.p2align 2
L16537:
	testl %esi,%esi
	je L16538
	movl 12(%esi),%eax
	cmpl %edi,%eax
	setg %bl
	addl $-8,%esp
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	movl 12(%ebp),%eax
	addl $16,%esp
	testb %bl,%bl
	sete -2(%ebp)
	cmpl %eax,(%esi)
	setg -4(%ebp)
	movb -2(%ebp),%al
	orb -4(%ebp),%al
	jmp L16543
	.p2align 2
L16538:
	movb $0,%al
L16543:
	testb %al,%al
	je L16544
	cmpb $0,-5(%ebp)
	je L16545
	cmpb $0,-2(%ebp)
	jne L16564
	cmpb $0,-4(%ebp)
	je L16551
L16565:
	movl 20(%esi),%esi
	jmp L16551
	.p2align 2
L16545:
	cmpb $0,-4(%ebp)
	jne L16565
	cmpb $0,-2(%ebp)
	je L16551
L16564:
	movl 32(%esi),%esi
L16551:
	xorb $1,-5(%ebp)
	jmp L16537
	.p2align 2
L16544:
	testl %esi,%esi
	je L16484
	movl 8(%ebp),%edx
	movl %esi,60(%edx)
L16484:
	leal -56(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_clip__BPQ:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%edi
	movl 8(%ebp),%eax
	movb $0,-4(%ebp)
	movb $0,-2(%ebp)
	movb $0,-5(%ebp)
	movb $0,-3(%ebp)
	movb $0,-1(%ebp)
	movl 60(%eax),%esi
	testl %esi,%esi
	je L16567
	movl (%esi),%ebx
	movl 8(%esi),%edx
	movl %edx,-12(%ebp)
	movl $0,-16(%ebp)
	addl $-8,%esp
	pushl %ebx
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,12(%ebp)
	sete %al
	orb %dl,%al
	je L16570
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-16(%ebp)
L16570:
	cmpb $0,-16(%ebp)
	je L16568
	movl 4(%esi),%ebx
	movl 12(%esi),%eax
	movl %eax,-20(%ebp)
	movl $0,-24(%ebp)
	addl $-8,%esp
	pushl %ebx
	pushl %edi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%edi
	sete %al
	orb %dl,%al
	je L16573
	movl -20(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %edi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-24(%ebp)
L16573:
	cmpb $0,-24(%ebp)
	jne L16567
L16568:
	movl 4(%esi),%eax
	cmpl %eax,%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L16575
	movl (%esi),%eax
	cmpl %eax,12(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L16575
	jmp L16582
	.p2align 2
L16584:
	movl 28(%esi),%esi
L16582:
	testl %esi,%esi
	je L16601
	movl 4(%esi),%eax
	cmpl %eax,%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L16584
	jmp L16600
	.p2align 2
L16575:
	movl 12(%esi),%eax
	cmpl %eax,%edi
	jle L16600
	movl 12(%ebp),%edx
	cmpl 8(%esi),%edx
	jle L16600
	testl %esi,%esi
	je L16601
	cmpl %eax,%edi
	jle L16600
	.p2align 2
L16596:
	movl 32(%esi),%esi
	testl %esi,%esi
	je L16601
	cmpl 12(%esi),%edi
	jg L16596
L16600:
	testl %esi,%esi
	je L16601
	cmpl %edi,4(%esi)
	setg -1(%ebp)
	movl 8(%esi),%eax
	movl 12(%ebp),%edx
	cmpl 12(%ebp),%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	sete -3(%ebp)
	movb -1(%ebp),%al
	orb -3(%ebp),%al
	jmp L16606
	.p2align 2
L16601:
	movb $0,%al
L16606:
	testb %al,%al
	je L16620
	cmpb $0,-5(%ebp)
	je L16608
	cmpb $0,-1(%ebp)
	jne L16645
	cmpb $0,-3(%ebp)
	je L16614
L16646:
	movl 24(%esi),%esi
	jmp L16614
	.p2align 2
L16608:
	cmpb $0,-3(%ebp)
	jne L16646
	cmpb $0,-1(%ebp)
	je L16614
L16645:
	movl 28(%esi),%esi
L16614:
	xorb $1,-5(%ebp)
	jmp L16600
	.p2align 2
L16620:
	testl %esi,%esi
	je L16621
	movl 12(%esi),%eax
	cmpl %edi,%eax
	setg %bl
	addl $-8,%esp
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	movl 12(%ebp),%eax
	addl $16,%esp
	testb %bl,%bl
	sete -2(%ebp)
	cmpl %eax,(%esi)
	setg -4(%ebp)
	movb -2(%ebp),%al
	orb -4(%ebp),%al
	jmp L16626
	.p2align 2
L16621:
	movb $0,%al
L16626:
	testb %al,%al
	je L16627
	cmpb $0,-5(%ebp)
	je L16628
	cmpb $0,-2(%ebp)
	jne L16647
	cmpb $0,-4(%ebp)
	je L16634
L16648:
	movl 20(%esi),%esi
	jmp L16634
	.p2align 2
L16628:
	cmpb $0,-4(%ebp)
	jne L16648
	cmpb $0,-2(%ebp)
	je L16634
L16647:
	movl 32(%esi),%esi
L16634:
	xorb $1,-5(%ebp)
	jmp L16620
	.p2align 2
L16627:
	testl %esi,%esi
	je L16567
	movl 8(%ebp),%edx
	movl %esi,60(%edx)
L16567:
	leal -56(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_clip__8E0:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%edi
	movl 8(%ebp),%eax
	movb $0,-4(%ebp)
	movb $0,-2(%ebp)
	movb $0,-5(%ebp)
	movb $0,-3(%ebp)
	movb $0,-1(%ebp)
	movl 60(%eax),%esi
	testl %esi,%esi
	je L16650
	movl (%esi),%ebx
	movl 8(%esi),%edx
	movl %edx,-12(%ebp)
	movl $0,-16(%ebp)
	addl $-8,%esp
	pushl %ebx
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,12(%ebp)
	sete %al
	orb %dl,%al
	je L16653
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-16(%ebp)
L16653:
	cmpb $0,-16(%ebp)
	je L16651
	movl 4(%esi),%ebx
	movl 12(%esi),%eax
	movl %eax,-20(%ebp)
	movl $0,-24(%ebp)
	addl $-8,%esp
	pushl %ebx
	pushl %edi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%edi
	sete %al
	orb %dl,%al
	je L16656
	movl -20(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %edi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-24(%ebp)
L16656:
	cmpb $0,-24(%ebp)
	jne L16650
L16651:
	movl 4(%esi),%eax
	cmpl %eax,%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L16658
	movl (%esi),%eax
	cmpl %eax,12(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L16658
	jmp L16665
	.p2align 2
L16667:
	movl 28(%esi),%esi
L16665:
	testl %esi,%esi
	je L16684
	movl 4(%esi),%eax
	cmpl %eax,%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L16667
	jmp L16683
	.p2align 2
L16658:
	movl 12(%esi),%eax
	cmpl %eax,%edi
	jle L16683
	movl 12(%ebp),%edx
	cmpl 8(%esi),%edx
	jle L16683
	testl %esi,%esi
	je L16684
	cmpl %eax,%edi
	jle L16683
	.p2align 2
L16679:
	movl 32(%esi),%esi
	testl %esi,%esi
	je L16684
	cmpl 12(%esi),%edi
	jg L16679
L16683:
	testl %esi,%esi
	je L16684
	cmpl %edi,4(%esi)
	setg -1(%ebp)
	movl 8(%esi),%eax
	movl 12(%ebp),%edx
	cmpl 12(%ebp),%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	sete -3(%ebp)
	movb -1(%ebp),%al
	orb -3(%ebp),%al
	jmp L16689
	.p2align 2
L16684:
	movb $0,%al
L16689:
	testb %al,%al
	je L16703
	cmpb $0,-5(%ebp)
	je L16691
	cmpb $0,-1(%ebp)
	jne L16728
	cmpb $0,-3(%ebp)
	je L16697
L16729:
	movl 24(%esi),%esi
	jmp L16697
	.p2align 2
L16691:
	cmpb $0,-3(%ebp)
	jne L16729
	cmpb $0,-1(%ebp)
	je L16697
L16728:
	movl 28(%esi),%esi
L16697:
	xorb $1,-5(%ebp)
	jmp L16683
	.p2align 2
L16703:
	testl %esi,%esi
	je L16704
	movl 12(%esi),%eax
	cmpl %edi,%eax
	setg %bl
	addl $-8,%esp
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	movl 12(%ebp),%eax
	addl $16,%esp
	testb %bl,%bl
	sete -2(%ebp)
	cmpl %eax,(%esi)
	setg -4(%ebp)
	movb -2(%ebp),%al
	orb -4(%ebp),%al
	jmp L16709
	.p2align 2
L16704:
	movb $0,%al
L16709:
	testb %al,%al
	je L16710
	cmpb $0,-5(%ebp)
	je L16711
	cmpb $0,-2(%ebp)
	jne L16730
	cmpb $0,-4(%ebp)
	je L16717
L16731:
	movl 20(%esi),%esi
	jmp L16717
	.p2align 2
L16711:
	cmpb $0,-4(%ebp)
	jne L16731
	cmpb $0,-2(%ebp)
	je L16717
L16730:
	movl 32(%esi),%esi
L16717:
	xorb $1,-5(%ebp)
	jmp L16703
	.p2align 2
L16710:
	testl %esi,%esi
	je L16650
	movl 8(%ebp),%edx
	movl %esi,60(%edx)
L16650:
	leal -56(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_clip__D56B:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%edi
	movl 8(%ebp),%eax
	movb $0,-4(%ebp)
	movb $0,-2(%ebp)
	movb $0,-5(%ebp)
	movb $0,-3(%ebp)
	movb $0,-1(%ebp)
	movl 60(%eax),%esi
	testl %esi,%esi
	je L16733
	movl (%esi),%ebx
	movl 8(%esi),%edx
	movl %edx,-12(%ebp)
	movl $0,-16(%ebp)
	addl $-8,%esp
	pushl %ebx
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,12(%ebp)
	sete %al
	orb %dl,%al
	je L16736
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-16(%ebp)
L16736:
	cmpb $0,-16(%ebp)
	je L16734
	movl 4(%esi),%ebx
	movl 12(%esi),%eax
	movl %eax,-20(%ebp)
	movl $0,-24(%ebp)
	addl $-8,%esp
	pushl %ebx
	pushl %edi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%edi
	sete %al
	orb %dl,%al
	je L16739
	movl -20(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %edi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-24(%ebp)
L16739:
	cmpb $0,-24(%ebp)
	jne L16733
L16734:
	movl 4(%esi),%eax
	cmpl %eax,%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L16741
	movl (%esi),%eax
	cmpl %eax,12(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L16741
	jmp L16748
	.p2align 2
L16750:
	movl 28(%esi),%esi
L16748:
	testl %esi,%esi
	je L16767
	movl 4(%esi),%eax
	cmpl %eax,%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L16750
	jmp L16766
	.p2align 2
L16741:
	movl 12(%esi),%eax
	cmpl %eax,%edi
	jle L16766
	movl 12(%ebp),%edx
	cmpl 8(%esi),%edx
	jle L16766
	testl %esi,%esi
	je L16767
	cmpl %eax,%edi
	jle L16766
	.p2align 2
L16762:
	movl 32(%esi),%esi
	testl %esi,%esi
	je L16767
	cmpl 12(%esi),%edi
	jg L16762
L16766:
	testl %esi,%esi
	je L16767
	cmpl %edi,4(%esi)
	setg -1(%ebp)
	movl 8(%esi),%eax
	movl 12(%ebp),%edx
	cmpl 12(%ebp),%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	sete -3(%ebp)
	movb -1(%ebp),%al
	orb -3(%ebp),%al
	jmp L16772
	.p2align 2
L16767:
	movb $0,%al
L16772:
	testb %al,%al
	je L16786
	cmpb $0,-5(%ebp)
	je L16774
	cmpb $0,-1(%ebp)
	jne L16811
	cmpb $0,-3(%ebp)
	je L16780
L16812:
	movl 24(%esi),%esi
	jmp L16780
	.p2align 2
L16774:
	cmpb $0,-3(%ebp)
	jne L16812
	cmpb $0,-1(%ebp)
	je L16780
L16811:
	movl 28(%esi),%esi
L16780:
	xorb $1,-5(%ebp)
	jmp L16766
	.p2align 2
L16786:
	testl %esi,%esi
	je L16787
	movl 12(%esi),%eax
	cmpl %edi,%eax
	setg %bl
	addl $-8,%esp
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	movl 12(%ebp),%eax
	addl $16,%esp
	testb %bl,%bl
	sete -2(%ebp)
	cmpl %eax,(%esi)
	setg -4(%ebp)
	movb -2(%ebp),%al
	orb -4(%ebp),%al
	jmp L16792
	.p2align 2
L16787:
	movb $0,%al
L16792:
	testb %al,%al
	je L16793
	cmpb $0,-5(%ebp)
	je L16794
	cmpb $0,-2(%ebp)
	jne L16813
	cmpb $0,-4(%ebp)
	je L16800
L16814:
	movl 20(%esi),%esi
	jmp L16800
	.p2align 2
L16794:
	cmpb $0,-4(%ebp)
	jne L16814
	cmpb $0,-2(%ebp)
	je L16800
L16813:
	movl 32(%esi),%esi
L16800:
	xorb $1,-5(%ebp)
	jmp L16786
	.p2align 2
L16793:
	testl %esi,%esi
	je L16733
	movl 8(%ebp),%edx
	movl %esi,60(%edx)
L16733:
	leal -56(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_clip__K80B:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%edi
	movl 8(%ebp),%eax
	movb $0,-4(%ebp)
	movb $0,-2(%ebp)
	movb $0,-5(%ebp)
	movb $0,-3(%ebp)
	movb $0,-1(%ebp)
	movl 60(%eax),%esi
	testl %esi,%esi
	je L16816
	movl (%esi),%ebx
	movl 8(%esi),%edx
	movl %edx,-12(%ebp)
	movl $0,-16(%ebp)
	addl $-8,%esp
	pushl %ebx
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,12(%ebp)
	sete %al
	orb %dl,%al
	je L16819
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-16(%ebp)
L16819:
	cmpb $0,-16(%ebp)
	je L16817
	movl 4(%esi),%ebx
	movl 12(%esi),%eax
	movl %eax,-20(%ebp)
	movl $0,-24(%ebp)
	addl $-8,%esp
	pushl %ebx
	pushl %edi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%edi
	sete %al
	orb %dl,%al
	je L16822
	movl -20(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %edi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-24(%ebp)
L16822:
	cmpb $0,-24(%ebp)
	jne L16816
L16817:
	movl 4(%esi),%eax
	cmpl %eax,%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L16824
	movl (%esi),%eax
	cmpl %eax,12(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L16824
	jmp L16831
	.p2align 2
L16833:
	movl 28(%esi),%esi
L16831:
	testl %esi,%esi
	je L16850
	movl 4(%esi),%eax
	cmpl %eax,%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L16833
	jmp L16849
	.p2align 2
L16824:
	movl 12(%esi),%eax
	cmpl %eax,%edi
	jle L16849
	movl 12(%ebp),%edx
	cmpl 8(%esi),%edx
	jle L16849
	testl %esi,%esi
	je L16850
	cmpl %eax,%edi
	jle L16849
	.p2align 2
L16845:
	movl 32(%esi),%esi
	testl %esi,%esi
	je L16850
	cmpl 12(%esi),%edi
	jg L16845
L16849:
	testl %esi,%esi
	je L16850
	cmpl %edi,4(%esi)
	setg -1(%ebp)
	movl 8(%esi),%eax
	movl 12(%ebp),%edx
	cmpl 12(%ebp),%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	sete -3(%ebp)
	movb -1(%ebp),%al
	orb -3(%ebp),%al
	jmp L16855
	.p2align 2
L16850:
	movb $0,%al
L16855:
	testb %al,%al
	je L16869
	cmpb $0,-5(%ebp)
	je L16857
	cmpb $0,-1(%ebp)
	jne L16894
	cmpb $0,-3(%ebp)
	je L16863
L16895:
	movl 24(%esi),%esi
	jmp L16863
	.p2align 2
L16857:
	cmpb $0,-3(%ebp)
	jne L16895
	cmpb $0,-1(%ebp)
	je L16863
L16894:
	movl 28(%esi),%esi
L16863:
	xorb $1,-5(%ebp)
	jmp L16849
	.p2align 2
L16869:
	testl %esi,%esi
	je L16870
	movl 12(%esi),%eax
	cmpl %edi,%eax
	setg %bl
	addl $-8,%esp
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	movl 12(%ebp),%eax
	addl $16,%esp
	testb %bl,%bl
	sete -2(%ebp)
	cmpl %eax,(%esi)
	setg -4(%ebp)
	movb -2(%ebp),%al
	orb -4(%ebp),%al
	jmp L16875
	.p2align 2
L16870:
	movb $0,%al
L16875:
	testb %al,%al
	je L16876
	cmpb $0,-5(%ebp)
	je L16877
	cmpb $0,-2(%ebp)
	jne L16896
	cmpb $0,-4(%ebp)
	je L16883
L16897:
	movl 20(%esi),%esi
	jmp L16883
	.p2align 2
L16877:
	cmpb $0,-4(%ebp)
	jne L16897
	cmpb $0,-2(%ebp)
	je L16883
L16896:
	movl 32(%esi),%esi
L16883:
	xorb $1,-5(%ebp)
	jmp L16869
	.p2align 2
L16876:
	testl %esi,%esi
	je L16816
	movl 8(%ebp),%edx
	movl %esi,60(%edx)
L16816:
	leal -56(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_clip__LVU:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%edi
	movl 8(%ebp),%eax
	movb $0,-4(%ebp)
	movb $0,-2(%ebp)
	movb $0,-5(%ebp)
	movb $0,-3(%ebp)
	movb $0,-1(%ebp)
	movl 60(%eax),%esi
	testl %esi,%esi
	je L16899
	movl (%esi),%ebx
	movl 8(%esi),%edx
	movl %edx,-12(%ebp)
	movl $0,-16(%ebp)
	addl $-8,%esp
	pushl %ebx
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,12(%ebp)
	sete %al
	orb %dl,%al
	je L16902
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-16(%ebp)
L16902:
	cmpb $0,-16(%ebp)
	je L16900
	movl 4(%esi),%ebx
	movl 12(%esi),%eax
	movl %eax,-20(%ebp)
	movl $0,-24(%ebp)
	addl $-8,%esp
	pushl %ebx
	pushl %edi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%edi
	sete %al
	orb %dl,%al
	je L16905
	movl -20(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %edi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-24(%ebp)
L16905:
	cmpb $0,-24(%ebp)
	jne L16899
L16900:
	movl 4(%esi),%eax
	cmpl %eax,%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L16907
	movl (%esi),%eax
	cmpl %eax,12(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L16907
	jmp L16914
	.p2align 2
L16916:
	movl 28(%esi),%esi
L16914:
	testl %esi,%esi
	je L16933
	movl 4(%esi),%eax
	cmpl %eax,%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L16916
	jmp L16932
	.p2align 2
L16907:
	movl 12(%esi),%eax
	cmpl %eax,%edi
	jle L16932
	movl 12(%ebp),%edx
	cmpl 8(%esi),%edx
	jle L16932
	testl %esi,%esi
	je L16933
	cmpl %eax,%edi
	jle L16932
	.p2align 2
L16928:
	movl 32(%esi),%esi
	testl %esi,%esi
	je L16933
	cmpl 12(%esi),%edi
	jg L16928
L16932:
	testl %esi,%esi
	je L16933
	cmpl %edi,4(%esi)
	setg -1(%ebp)
	movl 8(%esi),%eax
	movl 12(%ebp),%edx
	cmpl 12(%ebp),%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	sete -3(%ebp)
	movb -1(%ebp),%al
	orb -3(%ebp),%al
	jmp L16938
	.p2align 2
L16933:
	movb $0,%al
L16938:
	testb %al,%al
	je L16952
	cmpb $0,-5(%ebp)
	je L16940
	cmpb $0,-1(%ebp)
	jne L16977
	cmpb $0,-3(%ebp)
	je L16946
L16978:
	movl 24(%esi),%esi
	jmp L16946
	.p2align 2
L16940:
	cmpb $0,-3(%ebp)
	jne L16978
	cmpb $0,-1(%ebp)
	je L16946
L16977:
	movl 28(%esi),%esi
L16946:
	xorb $1,-5(%ebp)
	jmp L16932
	.p2align 2
L16952:
	testl %esi,%esi
	je L16953
	movl 12(%esi),%eax
	cmpl %edi,%eax
	setg %bl
	addl $-8,%esp
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	movl 12(%ebp),%eax
	addl $16,%esp
	testb %bl,%bl
	sete -2(%ebp)
	cmpl %eax,(%esi)
	setg -4(%ebp)
	movb -2(%ebp),%al
	orb -4(%ebp),%al
	jmp L16958
	.p2align 2
L16953:
	movb $0,%al
L16958:
	testb %al,%al
	je L16959
	cmpb $0,-5(%ebp)
	je L16960
	cmpb $0,-2(%ebp)
	jne L16979
	cmpb $0,-4(%ebp)
	je L16966
L16980:
	movl 20(%esi),%esi
	jmp L16966
	.p2align 2
L16960:
	cmpb $0,-4(%ebp)
	jne L16980
	cmpb $0,-2(%ebp)
	je L16966
L16979:
	movl 32(%esi),%esi
L16966:
	xorb $1,-5(%ebp)
	jmp L16952
	.p2align 2
L16959:
	testl %esi,%esi
	je L16899
	movl 8(%ebp),%edx
	movl %esi,60(%edx)
L16899:
	leal -56(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_clip__U1WB:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%edi
	movl 8(%ebp),%eax
	movb $0,-4(%ebp)
	movb $0,-2(%ebp)
	movb $0,-5(%ebp)
	movb $0,-3(%ebp)
	movb $0,-1(%ebp)
	movl 60(%eax),%esi
	testl %esi,%esi
	je L16982
	movl (%esi),%ebx
	movl 8(%esi),%edx
	movl %edx,-12(%ebp)
	movl $0,-16(%ebp)
	addl $-8,%esp
	pushl %ebx
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,12(%ebp)
	sete %al
	orb %dl,%al
	je L16985
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-16(%ebp)
L16985:
	cmpb $0,-16(%ebp)
	je L16983
	movl 4(%esi),%ebx
	movl 12(%esi),%eax
	movl %eax,-20(%ebp)
	movl $0,-24(%ebp)
	addl $-8,%esp
	pushl %ebx
	pushl %edi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%edi
	sete %al
	orb %dl,%al
	je L16988
	movl -20(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %edi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-24(%ebp)
L16988:
	cmpb $0,-24(%ebp)
	jne L16982
L16983:
	movl 4(%esi),%eax
	cmpl %eax,%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L16990
	movl (%esi),%eax
	cmpl %eax,12(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L16990
	jmp L16997
	.p2align 2
L16999:
	movl 28(%esi),%esi
L16997:
	testl %esi,%esi
	je L17016
	movl 4(%esi),%eax
	cmpl %eax,%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L16999
	jmp L17015
	.p2align 2
L16990:
	movl 12(%esi),%eax
	cmpl %eax,%edi
	jle L17015
	movl 12(%ebp),%edx
	cmpl 8(%esi),%edx
	jle L17015
	testl %esi,%esi
	je L17016
	cmpl %eax,%edi
	jle L17015
	.p2align 2
L17011:
	movl 32(%esi),%esi
	testl %esi,%esi
	je L17016
	cmpl 12(%esi),%edi
	jg L17011
L17015:
	testl %esi,%esi
	je L17016
	cmpl %edi,4(%esi)
	setg -1(%ebp)
	movl 8(%esi),%eax
	movl 12(%ebp),%edx
	cmpl 12(%ebp),%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	sete -3(%ebp)
	movb -1(%ebp),%al
	orb -3(%ebp),%al
	jmp L17021
	.p2align 2
L17016:
	movb $0,%al
L17021:
	testb %al,%al
	je L17035
	cmpb $0,-5(%ebp)
	je L17023
	cmpb $0,-1(%ebp)
	jne L17060
	cmpb $0,-3(%ebp)
	je L17029
L17061:
	movl 24(%esi),%esi
	jmp L17029
	.p2align 2
L17023:
	cmpb $0,-3(%ebp)
	jne L17061
	cmpb $0,-1(%ebp)
	je L17029
L17060:
	movl 28(%esi),%esi
L17029:
	xorb $1,-5(%ebp)
	jmp L17015
	.p2align 2
L17035:
	testl %esi,%esi
	je L17036
	movl 12(%esi),%eax
	cmpl %edi,%eax
	setg %bl
	addl $-8,%esp
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	movl 12(%ebp),%eax
	addl $16,%esp
	testb %bl,%bl
	sete -2(%ebp)
	cmpl %eax,(%esi)
	setg -4(%ebp)
	movb -2(%ebp),%al
	orb -4(%ebp),%al
	jmp L17041
	.p2align 2
L17036:
	movb $0,%al
L17041:
	testb %al,%al
	je L17042
	cmpb $0,-5(%ebp)
	je L17043
	cmpb $0,-2(%ebp)
	jne L17062
	cmpb $0,-4(%ebp)
	je L17049
L17063:
	movl 20(%esi),%esi
	jmp L17049
	.p2align 2
L17043:
	cmpb $0,-4(%ebp)
	jne L17063
	cmpb $0,-2(%ebp)
	je L17049
L17062:
	movl 32(%esi),%esi
L17049:
	xorb $1,-5(%ebp)
	jmp L17035
	.p2align 2
L17042:
	testl %esi,%esi
	je L16982
	movl 8(%ebp),%edx
	movl %esi,60(%edx)
L16982:
	leal -56(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_sub_move__KILC:
	pushl %ebp
	movl %esp,%ebp
	subl $76,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%eax),%ebx
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,64(%edx)
	movl 16(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%edx),%ebx
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	addl $32,%esp
	movl %eax,68(%edx)
	movl $0,-12(%ebp)
	movl $0,-4(%ebp)
	movl $0,-8(%ebp)
	xorl %edi,%edi
	movb $0,%cl
	cmpl $0,56(%edx)
	jne L17079
	addl $-12,%esp
	pushl %edx
	call _append_plan__Y3PB
	addl $16,%esp
	jmp L17080
	.p2align 2
L17079:
	movl 8(%ebp),%eax
	movl 40(%eax),%edx
	testl %edx,%edx
	je L17081
	movl (%edx),%eax
	cmpl $28,%eax
	je L17084
	ja L17088
	cmpl $17,%eax
	je L17085
	jmp L17082
	.p2align 2
L17088:
	cmpl $78,%eax
	jne L17082
	jmp L17085
	.p2align 2
L17084:
	movl 52(%edx),%esi
	jmp L17082
	.p2align 2
L17085:
	movl 56(%edx),%esi
L17082:
	testl %esi,%esi
	jne L17089
	movl 8(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _remove_plan__XNLC
	movb $1,%cl
	addl $16,%esp
	jmp L17093
	.p2align 2
L17089:
	movl 12(%esi),%eax
	movl (%eax),%edi
	movl 16(%esi),%eax
	movl (%eax),%eax
	movl %eax,-8(%ebp)
	movl 20(%esi),%eax
	movl (%eax),%eax
	movl %eax,-4(%ebp)
	movl 24(%esi),%eax
	movl (%eax),%eax
	decl %eax
	jmp L17251
	.p2align 2
L17081:
	movl $0,-4(%ebp)
	movl _parent_video__C2,%eax
	xorl %edi,%edi
	cmpl $16,(%eax)
	jne L17095
	movl 12(%eax),%edx
	jmp L17096
	.p2align 2
L17095:
	movl 8(%eax),%edx
L17096:
	subl $1,%edx
	movl %edx,-8(%ebp)
	cmpl $16,(%eax)
	jne L17099
	movl 8(%eax),%eax
	jmp L17100
	.p2align 2
L17099:
	movl 4(%eax),%eax
L17100:
	subl $1,%eax
L17251:
	movl %eax,-12(%ebp)
L17093:
	testb %cl,%cl
	jne L17080
	movl 8(%ebp),%eax
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%eax),%eax
	movl %eax,-16(%ebp)
	movl 12(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,%esi
	addl $32,%esp
	subl $1,%esi
	addl $-8,%esp
	movl 68(%edx),%edx
	movl %edx,-20(%ebp)
	movl 8(%ebp),%edx
	addl $-12,%esp
	movl 8(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-24(%ebp)
	addl $32,%esp
	subl $1,-24(%ebp)
	cmpl %edi,%esi
	setg %bl
	addl $-8,%esp
	pushl %edi
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L17111
	movl -8(%ebp),%edx
	cmpl %edx,-16(%ebp)
	jg L17111
	movl -4(%ebp),%eax
	cmpl %eax,-24(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -24(%ebp),%edx
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L17111
	movl -12(%ebp),%eax
	cmpl %eax,-20(%ebp)
	jle L17110
L17111:
	movl 8(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _remove_plan__XNLC
	addl $16,%esp
	jmp L17080
	.p2align 2
L17110:
	cmpl %edi,-16(%ebp)
	jle L17122
	movl -16(%ebp),%edi
L17122:
	movl %esi,%ebx
	cmpl -8(%ebp),%ebx
	jle L17126
	movl -8(%ebp),%ebx
L17126:
	movl -4(%ebp),%eax
	movl %eax,-32(%ebp)
	cmpl %eax,-20(%ebp)
	jle L17130
	movl -20(%ebp),%edx
	movl %edx,-32(%ebp)
L17130:
	movl -24(%ebp),%eax
	cmpl -12(%ebp),%eax
	jle L17134
	movl -12(%ebp),%eax
L17134:
	movl %eax,-24(%ebp)
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-24(%ebp)
	movl 56(%edx),%eax
	movl 16(%eax),%eax
	movl %ebx,(%eax)
	movl 56(%edx),%eax
	movl 16(%eax),%edx
	addl $32,%esp
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L17141
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
L17141:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L17143
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L17143:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 12(%eax),%eax
	cmpl (%eax),%edi
	je L17144
	movl %edi,(%eax)
	movl 56(%edx),%eax
	movl 12(%eax),%edx
	movl _list_x__K3,%ebx
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	jne L17146
	movl 8(%edx),%edi
	jmp L17147
	.p2align 2
L17146:
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
	movl %ebx,%edi
L17147:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L17148
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L17148:
	movl %edi,_list_x__K3
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl %edi,%ecx
	movl 12(%eax),%ebx
	movl $0,-36(%ebp)
	testl %ecx,%ecx
	je L17156
	movl 12(%ecx),%eax
	movl %eax,-36(%ebp)
	movl (%ecx),%edx
	movl (%ebx),%eax
	movl %eax,%esi
	cmpl %esi,%edx
	jg L17156
	movl %esi,-40(%ebp)
	.p2align 2
L17152:
	cmpl -40(%ebp),%edx
	jne L17153
	movl 4(%ebx),%edx
	movl 4(%ecx),%eax
	movl 4(%edx),%edx
	cmpl %edx,4(%eax)
	jle L17156
L17153:
	movl %ecx,-36(%ebp)
	movl 8(%ecx),%ecx
	testl %ecx,%ecx
	je L17156
	movl (%ecx),%edx
	cmpl %esi,%edx
	jle L17152
L17156:
	movl %ecx,8(%ebx)
	movl -36(%ebp),%edx
	movl %edx,12(%ebx)
	movl %ebx,%eax
	testl %edx,%edx
	je L17160
	movl %edi,%eax
	movl %ebx,8(%edx)
L17160:
	testl %ecx,%ecx
	je L17162
	movl %ebx,12(%ecx)
L17162:
	movl %eax,_list_x__K3
L17144:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	xorl %edi,%edi
	movl 16(%eax),%ebx
	movl 12(%eax),%ecx
	testl %ecx,%ecx
	je L17171
	movl 12(%ecx),%edi
	movl (%ecx),%edx
	movl (%ebx),%eax
	movl %eax,%esi
	cmpl %esi,%edx
	jg L17171
	movl %esi,-44(%ebp)
	.p2align 2
L17167:
	cmpl -44(%ebp),%edx
	jne L17168
	movl 4(%ebx),%edx
	movl 4(%ecx),%eax
	movl 4(%edx),%edx
	cmpl %edx,4(%eax)
	jle L17171
L17168:
	movl %ecx,%edi
	movl 8(%ecx),%ecx
	testl %ecx,%ecx
	je L17171
	movl (%ecx),%edx
	cmpl %esi,%edx
	jle L17167
L17171:
	movl %ecx,8(%ebx)
	movl %edi,12(%ebx)
	testl %edi,%edi
	je L17175
	movl %ebx,8(%edi)
L17175:
	testl %ecx,%ecx
	je L17179
	movl %ebx,12(%ecx)
L17179:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl -24(%ebp),%edx
	movl 24(%eax),%eax
	movl %edx,(%eax)
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 24(%eax),%edx
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	je L17182
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L17182:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L17184
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L17184:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%eax
	movl -32(%ebp),%edx
	cmpl (%eax),%edx
	je L17185
	movl %edx,(%eax)
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%edx
	movl _list_y__L3,%ebx
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	jne L17187
	movl 12(%edx),%eax
	movl %eax,-48(%ebp)
	jmp L17188
	.p2align 2
L17187:
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
	movl %ebx,-48(%ebp)
L17188:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L17189
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L17189:
	movl -48(%ebp),%edx
	movl %edx,_list_y__L3
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl -48(%ebp),%esi
	movl 20(%eax),%edi
	movl $0,-52(%ebp)
	jmp L17191
	.p2align 2
L17193:
	movl %esi,-52(%ebp)
	movl 12(%esi),%esi
L17191:
	testl %esi,%esi
	je L17198
	movl (%esi),%eax
	movl (%edi),%edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L17193
L17198:
	movl %esi,12(%edi)
	movl -52(%ebp),%eax
	movl %eax,16(%edi)
	movl %edi,%eax
	cmpl $0,-52(%ebp)
	je L17200
	movl -48(%ebp),%eax
	movl -52(%ebp),%edx
	movl %edi,12(%edx)
L17200:
	testl %esi,%esi
	je L17202
	movl %edi,16(%esi)
L17202:
	movl %eax,_list_y__L3
L17185:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 24(%eax),%edi
	movl $0,-56(%ebp)
	movl 20(%eax),%esi
	jmp L17205
	.p2align 2
L17207:
	movl %esi,-56(%ebp)
	movl 12(%esi),%esi
L17205:
	testl %esi,%esi
	je L17212
	movl (%esi),%eax
	movl (%edi),%edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L17207
L17212:
	movl %esi,12(%edi)
	movl -56(%ebp),%eax
	movl %eax,16(%edi)
	testl %eax,%eax
	je L17214
	movl %edi,12(%eax)
L17214:
	testl %esi,%esi
	je L17080
	movl %edi,16(%esi)
L17080:
	movl 8(%ebp),%edx
	movl 44(%edx),%ebx
	testl %ebx,%ebx
	je L17220
	.p2align 2
L17221:
	movl (%ebx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L17222
	jmp *L17234(,%eax,4)
	.p2align 2
L17234:
	.long L17232
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17233
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17222
	.long L17227
	.long L17224
	.long L17230
	.long L17222
	.long L17225
	.long L17229
	.long L17226
	.long L17223
	.long L17231
	.long L17228
	.p2align 2
L17223:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KILC
	jmp L17252
	.p2align 2
L17224:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__FYLC
	jmp L17252
	.p2align 2
L17225:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__DEMC
	jmp L17252
	.p2align 2
L17226:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__EUMC
	jmp L17252
	.p2align 2
L17227:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__7YKC
	jmp L17252
	.p2align 2
L17228:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KANC
	jmp L17252
	.p2align 2
L17229:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__TQNC
	jmp L17252
	.p2align 2
L17230:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__56NC
	jmp L17252
	.p2align 2
L17231:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KNOC
	jmp L17252
	.p2align 2
L17232:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__13OC
	jmp L17252
	.p2align 2
L17233:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__25XC
L17252:
	addl $16,%esp
L17222:
	movl (%ebx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L17236
	jmp *L17248(,%eax,4)
	.p2align 2
L17248:
	.long L17246
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17247
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17236
	.long L17241
	.long L17238
	.long L17244
	.long L17236
	.long L17239
	.long L17243
	.long L17240
	.long L17237
	.long L17245
	.long L17242
	.p2align 2
L17237:
	movl 52(%ebx),%ebx
	jmp L17253
	.p2align 2
L17238:
	movl 52(%ebx),%ebx
	jmp L17253
	.p2align 2
L17239:
	movl 52(%ebx),%ebx
	jmp L17253
	.p2align 2
L17240:
	movl 52(%ebx),%ebx
	jmp L17253
	.p2align 2
L17241:
	movl 52(%ebx),%ebx
	jmp L17253
	.p2align 2
L17242:
	movl 52(%ebx),%ebx
	jmp L17253
	.p2align 2
L17243:
	movl 52(%ebx),%ebx
	jmp L17253
	.p2align 2
L17244:
	movl 52(%ebx),%ebx
	jmp L17253
	.p2align 2
L17245:
	movl 52(%ebx),%ebx
	jmp L17253
	.p2align 2
L17246:
	movl 52(%ebx),%ebx
	jmp L17253
	.p2align 2
L17247:
	movl 48(%ebx),%ebx
L17253:
	movl %ebx,-28(%ebp)
L17236:
	movl -28(%ebp),%ebx
	testl %ebx,%ebx
	jne L17221
L17220:
	leal -88(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_sub_move__FYLC:
	pushl %ebp
	movl %esp,%ebp
	subl $76,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%eax),%ebx
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,64(%edx)
	movl 16(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%edx),%ebx
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	addl $32,%esp
	movl %eax,68(%edx)
	movl $0,-12(%ebp)
	movl $0,-4(%ebp)
	movl $0,-8(%ebp)
	xorl %edi,%edi
	movb $0,%cl
	cmpl $0,56(%edx)
	jne L17257
	addl $-12,%esp
	pushl %edx
	call _append_plan__QCO
	addl $16,%esp
	jmp L17258
	.p2align 2
L17257:
	movl 8(%ebp),%eax
	movl 40(%eax),%edx
	testl %edx,%edx
	je L17259
	movl (%edx),%eax
	cmpl $28,%eax
	je L17262
	ja L17266
	cmpl $17,%eax
	je L17263
	jmp L17260
	.p2align 2
L17266:
	cmpl $78,%eax
	jne L17260
	jmp L17263
	.p2align 2
L17262:
	movl 52(%edx),%esi
	jmp L17260
	.p2align 2
L17263:
	movl 56(%edx),%esi
L17260:
	testl %esi,%esi
	jne L17267
	movl 8(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _remove_plan__S3LC
	movb $1,%cl
	addl $16,%esp
	jmp L17271
	.p2align 2
L17267:
	movl 12(%esi),%eax
	movl (%eax),%edi
	movl 16(%esi),%eax
	movl (%eax),%eax
	movl %eax,-8(%ebp)
	movl 20(%esi),%eax
	movl (%eax),%eax
	movl %eax,-4(%ebp)
	movl 24(%esi),%eax
	movl (%eax),%eax
	decl %eax
	jmp L17429
	.p2align 2
L17259:
	movl $0,-4(%ebp)
	movl _parent_video__C2,%eax
	xorl %edi,%edi
	cmpl $16,(%eax)
	jne L17273
	movl 12(%eax),%edx
	jmp L17274
	.p2align 2
L17273:
	movl 8(%eax),%edx
L17274:
	subl $1,%edx
	movl %edx,-8(%ebp)
	cmpl $16,(%eax)
	jne L17277
	movl 8(%eax),%eax
	jmp L17278
	.p2align 2
L17277:
	movl 4(%eax),%eax
L17278:
	subl $1,%eax
L17429:
	movl %eax,-12(%ebp)
L17271:
	testb %cl,%cl
	jne L17258
	movl 8(%ebp),%eax
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%eax),%eax
	movl %eax,-16(%ebp)
	movl 12(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,%esi
	addl $32,%esp
	subl $1,%esi
	addl $-8,%esp
	movl 68(%edx),%edx
	movl %edx,-20(%ebp)
	movl 8(%ebp),%edx
	addl $-12,%esp
	movl 8(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-24(%ebp)
	addl $32,%esp
	subl $1,-24(%ebp)
	cmpl %edi,%esi
	setg %bl
	addl $-8,%esp
	pushl %edi
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L17289
	movl -8(%ebp),%edx
	cmpl %edx,-16(%ebp)
	jg L17289
	movl -4(%ebp),%eax
	cmpl %eax,-24(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -24(%ebp),%edx
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L17289
	movl -12(%ebp),%eax
	cmpl %eax,-20(%ebp)
	jle L17288
L17289:
	movl 8(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _remove_plan__S3LC
	addl $16,%esp
	jmp L17258
	.p2align 2
L17288:
	cmpl %edi,-16(%ebp)
	jle L17300
	movl -16(%ebp),%edi
L17300:
	movl %esi,%ebx
	cmpl -8(%ebp),%ebx
	jle L17304
	movl -8(%ebp),%ebx
L17304:
	movl -4(%ebp),%eax
	movl %eax,-32(%ebp)
	cmpl %eax,-20(%ebp)
	jle L17308
	movl -20(%ebp),%edx
	movl %edx,-32(%ebp)
L17308:
	movl -24(%ebp),%eax
	cmpl -12(%ebp),%eax
	jle L17312
	movl -12(%ebp),%eax
L17312:
	movl %eax,-24(%ebp)
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-24(%ebp)
	movl 56(%edx),%eax
	movl 16(%eax),%eax
	movl %ebx,(%eax)
	movl 56(%edx),%eax
	movl 16(%eax),%edx
	addl $32,%esp
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L17319
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
L17319:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L17321
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L17321:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 12(%eax),%eax
	cmpl (%eax),%edi
	je L17322
	movl %edi,(%eax)
	movl 56(%edx),%eax
	movl 12(%eax),%edx
	movl _list_x__K3,%ebx
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	jne L17324
	movl 8(%edx),%edi
	jmp L17325
	.p2align 2
L17324:
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
	movl %ebx,%edi
L17325:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L17326
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L17326:
	movl %edi,_list_x__K3
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl %edi,%ecx
	movl 12(%eax),%ebx
	movl $0,-36(%ebp)
	testl %ecx,%ecx
	je L17334
	movl 12(%ecx),%eax
	movl %eax,-36(%ebp)
	movl (%ecx),%edx
	movl (%ebx),%eax
	movl %eax,%esi
	cmpl %esi,%edx
	jg L17334
	movl %esi,-40(%ebp)
	.p2align 2
L17330:
	cmpl -40(%ebp),%edx
	jne L17331
	movl 4(%ebx),%edx
	movl 4(%ecx),%eax
	movl 4(%edx),%edx
	cmpl %edx,4(%eax)
	jle L17334
L17331:
	movl %ecx,-36(%ebp)
	movl 8(%ecx),%ecx
	testl %ecx,%ecx
	je L17334
	movl (%ecx),%edx
	cmpl %esi,%edx
	jle L17330
L17334:
	movl %ecx,8(%ebx)
	movl -36(%ebp),%edx
	movl %edx,12(%ebx)
	movl %ebx,%eax
	testl %edx,%edx
	je L17338
	movl %edi,%eax
	movl %ebx,8(%edx)
L17338:
	testl %ecx,%ecx
	je L17340
	movl %ebx,12(%ecx)
L17340:
	movl %eax,_list_x__K3
L17322:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	xorl %edi,%edi
	movl 16(%eax),%ebx
	movl 12(%eax),%ecx
	testl %ecx,%ecx
	je L17349
	movl 12(%ecx),%edi
	movl (%ecx),%edx
	movl (%ebx),%eax
	movl %eax,%esi
	cmpl %esi,%edx
	jg L17349
	movl %esi,-44(%ebp)
	.p2align 2
L17345:
	cmpl -44(%ebp),%edx
	jne L17346
	movl 4(%ebx),%edx
	movl 4(%ecx),%eax
	movl 4(%edx),%edx
	cmpl %edx,4(%eax)
	jle L17349
L17346:
	movl %ecx,%edi
	movl 8(%ecx),%ecx
	testl %ecx,%ecx
	je L17349
	movl (%ecx),%edx
	cmpl %esi,%edx
	jle L17345
L17349:
	movl %ecx,8(%ebx)
	movl %edi,12(%ebx)
	testl %edi,%edi
	je L17353
	movl %ebx,8(%edi)
L17353:
	testl %ecx,%ecx
	je L17357
	movl %ebx,12(%ecx)
L17357:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl -24(%ebp),%edx
	movl 24(%eax),%eax
	movl %edx,(%eax)
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 24(%eax),%edx
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	je L17360
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L17360:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L17362
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L17362:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%eax
	movl -32(%ebp),%edx
	cmpl (%eax),%edx
	je L17363
	movl %edx,(%eax)
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%edx
	movl _list_y__L3,%ebx
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	jne L17365
	movl 12(%edx),%eax
	movl %eax,-48(%ebp)
	jmp L17366
	.p2align 2
L17365:
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
	movl %ebx,-48(%ebp)
L17366:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L17367
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L17367:
	movl -48(%ebp),%edx
	movl %edx,_list_y__L3
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl -48(%ebp),%esi
	movl 20(%eax),%edi
	movl $0,-52(%ebp)
	jmp L17369
	.p2align 2
L17371:
	movl %esi,-52(%ebp)
	movl 12(%esi),%esi
L17369:
	testl %esi,%esi
	je L17376
	movl (%esi),%eax
	movl (%edi),%edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L17371
L17376:
	movl %esi,12(%edi)
	movl -52(%ebp),%eax
	movl %eax,16(%edi)
	movl %edi,%eax
	cmpl $0,-52(%ebp)
	je L17378
	movl -48(%ebp),%eax
	movl -52(%ebp),%edx
	movl %edi,12(%edx)
L17378:
	testl %esi,%esi
	je L17380
	movl %edi,16(%esi)
L17380:
	movl %eax,_list_y__L3
L17363:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 24(%eax),%edi
	movl $0,-56(%ebp)
	movl 20(%eax),%esi
	jmp L17383
	.p2align 2
L17385:
	movl %esi,-56(%ebp)
	movl 12(%esi),%esi
L17383:
	testl %esi,%esi
	je L17390
	movl (%esi),%eax
	movl (%edi),%edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L17385
L17390:
	movl %esi,12(%edi)
	movl -56(%ebp),%eax
	movl %eax,16(%edi)
	testl %eax,%eax
	je L17392
	movl %edi,12(%eax)
L17392:
	testl %esi,%esi
	je L17258
	movl %edi,16(%esi)
L17258:
	movl 8(%ebp),%edx
	movl 44(%edx),%ebx
	testl %ebx,%ebx
	je L17398
	.p2align 2
L17399:
	movl (%ebx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L17400
	jmp *L17412(,%eax,4)
	.p2align 2
L17412:
	.long L17410
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17411
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17400
	.long L17405
	.long L17402
	.long L17408
	.long L17400
	.long L17403
	.long L17407
	.long L17404
	.long L17401
	.long L17409
	.long L17406
	.p2align 2
L17401:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KILC
	jmp L17430
	.p2align 2
L17402:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__FYLC
	jmp L17430
	.p2align 2
L17403:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__DEMC
	jmp L17430
	.p2align 2
L17404:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__EUMC
	jmp L17430
	.p2align 2
L17405:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__7YKC
	jmp L17430
	.p2align 2
L17406:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KANC
	jmp L17430
	.p2align 2
L17407:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__TQNC
	jmp L17430
	.p2align 2
L17408:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__56NC
	jmp L17430
	.p2align 2
L17409:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KNOC
	jmp L17430
	.p2align 2
L17410:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__13OC
	jmp L17430
	.p2align 2
L17411:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__25XC
L17430:
	addl $16,%esp
L17400:
	movl (%ebx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L17414
	jmp *L17426(,%eax,4)
	.p2align 2
L17426:
	.long L17424
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17425
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17414
	.long L17419
	.long L17416
	.long L17422
	.long L17414
	.long L17417
	.long L17421
	.long L17418
	.long L17415
	.long L17423
	.long L17420
	.p2align 2
L17415:
	movl 52(%ebx),%ebx
	jmp L17431
	.p2align 2
L17416:
	movl 52(%ebx),%ebx
	jmp L17431
	.p2align 2
L17417:
	movl 52(%ebx),%ebx
	jmp L17431
	.p2align 2
L17418:
	movl 52(%ebx),%ebx
	jmp L17431
	.p2align 2
L17419:
	movl 52(%ebx),%ebx
	jmp L17431
	.p2align 2
L17420:
	movl 52(%ebx),%ebx
	jmp L17431
	.p2align 2
L17421:
	movl 52(%ebx),%ebx
	jmp L17431
	.p2align 2
L17422:
	movl 52(%ebx),%ebx
	jmp L17431
	.p2align 2
L17423:
	movl 52(%ebx),%ebx
	jmp L17431
	.p2align 2
L17424:
	movl 52(%ebx),%ebx
	jmp L17431
	.p2align 2
L17425:
	movl 48(%ebx),%ebx
L17431:
	movl %ebx,-28(%ebp)
L17414:
	movl -28(%ebp),%ebx
	testl %ebx,%ebx
	jne L17399
L17398:
	leal -88(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_sub_move__DEMC:
	pushl %ebp
	movl %esp,%ebp
	subl $76,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%eax),%ebx
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,64(%edx)
	movl 16(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%edx),%ebx
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	addl $32,%esp
	movl %eax,68(%edx)
	movl $0,-12(%ebp)
	movl $0,-4(%ebp)
	movl $0,-8(%ebp)
	xorl %edi,%edi
	movb $0,%cl
	cmpl $0,56(%edx)
	jne L17435
	addl $-12,%esp
	pushl %edx
	call _append_plan__JKY
	addl $16,%esp
	jmp L17436
	.p2align 2
L17435:
	movl 8(%ebp),%eax
	movl 40(%eax),%edx
	testl %edx,%edx
	je L17437
	movl (%edx),%eax
	cmpl $28,%eax
	je L17440
	ja L17444
	cmpl $17,%eax
	je L17441
	jmp L17438
	.p2align 2
L17444:
	cmpl $78,%eax
	jne L17438
	jmp L17441
	.p2align 2
L17440:
	movl 52(%edx),%esi
	jmp L17438
	.p2align 2
L17441:
	movl 56(%edx),%esi
L17438:
	testl %esi,%esi
	jne L17445
	movl 8(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _remove_plan__QJMC
	movb $1,%cl
	addl $16,%esp
	jmp L17449
	.p2align 2
L17445:
	movl 12(%esi),%eax
	movl (%eax),%edi
	movl 16(%esi),%eax
	movl (%eax),%eax
	movl %eax,-8(%ebp)
	movl 20(%esi),%eax
	movl (%eax),%eax
	movl %eax,-4(%ebp)
	movl 24(%esi),%eax
	movl (%eax),%eax
	decl %eax
	jmp L17607
	.p2align 2
L17437:
	movl $0,-4(%ebp)
	movl _parent_video__C2,%eax
	xorl %edi,%edi
	cmpl $16,(%eax)
	jne L17451
	movl 12(%eax),%edx
	jmp L17452
	.p2align 2
L17451:
	movl 8(%eax),%edx
L17452:
	subl $1,%edx
	movl %edx,-8(%ebp)
	cmpl $16,(%eax)
	jne L17455
	movl 8(%eax),%eax
	jmp L17456
	.p2align 2
L17455:
	movl 4(%eax),%eax
L17456:
	subl $1,%eax
L17607:
	movl %eax,-12(%ebp)
L17449:
	testb %cl,%cl
	jne L17436
	movl 8(%ebp),%eax
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%eax),%eax
	movl %eax,-16(%ebp)
	movl 12(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,%esi
	addl $32,%esp
	subl $1,%esi
	addl $-8,%esp
	movl 68(%edx),%edx
	movl %edx,-20(%ebp)
	movl 8(%ebp),%edx
	addl $-12,%esp
	movl 8(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-24(%ebp)
	addl $32,%esp
	subl $1,-24(%ebp)
	cmpl %edi,%esi
	setg %bl
	addl $-8,%esp
	pushl %edi
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L17467
	movl -8(%ebp),%edx
	cmpl %edx,-16(%ebp)
	jg L17467
	movl -4(%ebp),%eax
	cmpl %eax,-24(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -24(%ebp),%edx
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L17467
	movl -12(%ebp),%eax
	cmpl %eax,-20(%ebp)
	jle L17466
L17467:
	movl 8(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _remove_plan__QJMC
	addl $16,%esp
	jmp L17436
	.p2align 2
L17466:
	cmpl %edi,-16(%ebp)
	jle L17478
	movl -16(%ebp),%edi
L17478:
	movl %esi,%ebx
	cmpl -8(%ebp),%ebx
	jle L17482
	movl -8(%ebp),%ebx
L17482:
	movl -4(%ebp),%eax
	movl %eax,-32(%ebp)
	cmpl %eax,-20(%ebp)
	jle L17486
	movl -20(%ebp),%edx
	movl %edx,-32(%ebp)
L17486:
	movl -24(%ebp),%eax
	cmpl -12(%ebp),%eax
	jle L17490
	movl -12(%ebp),%eax
L17490:
	movl %eax,-24(%ebp)
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-24(%ebp)
	movl 56(%edx),%eax
	movl 16(%eax),%eax
	movl %ebx,(%eax)
	movl 56(%edx),%eax
	movl 16(%eax),%edx
	addl $32,%esp
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L17497
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
L17497:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L17499
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L17499:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 12(%eax),%eax
	cmpl (%eax),%edi
	je L17500
	movl %edi,(%eax)
	movl 56(%edx),%eax
	movl 12(%eax),%edx
	movl _list_x__K3,%ebx
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	jne L17502
	movl 8(%edx),%edi
	jmp L17503
	.p2align 2
L17502:
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
	movl %ebx,%edi
L17503:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L17504
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L17504:
	movl %edi,_list_x__K3
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl %edi,%ecx
	movl 12(%eax),%ebx
	movl $0,-36(%ebp)
	testl %ecx,%ecx
	je L17512
	movl 12(%ecx),%eax
	movl %eax,-36(%ebp)
	movl (%ecx),%edx
	movl (%ebx),%eax
	movl %eax,%esi
	cmpl %esi,%edx
	jg L17512
	movl %esi,-40(%ebp)
	.p2align 2
L17508:
	cmpl -40(%ebp),%edx
	jne L17509
	movl 4(%ebx),%edx
	movl 4(%ecx),%eax
	movl 4(%edx),%edx
	cmpl %edx,4(%eax)
	jle L17512
L17509:
	movl %ecx,-36(%ebp)
	movl 8(%ecx),%ecx
	testl %ecx,%ecx
	je L17512
	movl (%ecx),%edx
	cmpl %esi,%edx
	jle L17508
L17512:
	movl %ecx,8(%ebx)
	movl -36(%ebp),%edx
	movl %edx,12(%ebx)
	movl %ebx,%eax
	testl %edx,%edx
	je L17516
	movl %edi,%eax
	movl %ebx,8(%edx)
L17516:
	testl %ecx,%ecx
	je L17518
	movl %ebx,12(%ecx)
L17518:
	movl %eax,_list_x__K3
L17500:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	xorl %edi,%edi
	movl 16(%eax),%ebx
	movl 12(%eax),%ecx
	testl %ecx,%ecx
	je L17527
	movl 12(%ecx),%edi
	movl (%ecx),%edx
	movl (%ebx),%eax
	movl %eax,%esi
	cmpl %esi,%edx
	jg L17527
	movl %esi,-44(%ebp)
	.p2align 2
L17523:
	cmpl -44(%ebp),%edx
	jne L17524
	movl 4(%ebx),%edx
	movl 4(%ecx),%eax
	movl 4(%edx),%edx
	cmpl %edx,4(%eax)
	jle L17527
L17524:
	movl %ecx,%edi
	movl 8(%ecx),%ecx
	testl %ecx,%ecx
	je L17527
	movl (%ecx),%edx
	cmpl %esi,%edx
	jle L17523
L17527:
	movl %ecx,8(%ebx)
	movl %edi,12(%ebx)
	testl %edi,%edi
	je L17531
	movl %ebx,8(%edi)
L17531:
	testl %ecx,%ecx
	je L17535
	movl %ebx,12(%ecx)
L17535:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl -24(%ebp),%edx
	movl 24(%eax),%eax
	movl %edx,(%eax)
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 24(%eax),%edx
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	je L17538
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L17538:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L17540
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L17540:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%eax
	movl -32(%ebp),%edx
	cmpl (%eax),%edx
	je L17541
	movl %edx,(%eax)
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%edx
	movl _list_y__L3,%ebx
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	jne L17543
	movl 12(%edx),%eax
	movl %eax,-48(%ebp)
	jmp L17544
	.p2align 2
L17543:
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
	movl %ebx,-48(%ebp)
L17544:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L17545
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L17545:
	movl -48(%ebp),%edx
	movl %edx,_list_y__L3
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl -48(%ebp),%esi
	movl 20(%eax),%edi
	movl $0,-52(%ebp)
	jmp L17547
	.p2align 2
L17549:
	movl %esi,-52(%ebp)
	movl 12(%esi),%esi
L17547:
	testl %esi,%esi
	je L17554
	movl (%esi),%eax
	movl (%edi),%edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L17549
L17554:
	movl %esi,12(%edi)
	movl -52(%ebp),%eax
	movl %eax,16(%edi)
	movl %edi,%eax
	cmpl $0,-52(%ebp)
	je L17556
	movl -48(%ebp),%eax
	movl -52(%ebp),%edx
	movl %edi,12(%edx)
L17556:
	testl %esi,%esi
	je L17558
	movl %edi,16(%esi)
L17558:
	movl %eax,_list_y__L3
L17541:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 24(%eax),%edi
	movl $0,-56(%ebp)
	movl 20(%eax),%esi
	jmp L17561
	.p2align 2
L17563:
	movl %esi,-56(%ebp)
	movl 12(%esi),%esi
L17561:
	testl %esi,%esi
	je L17568
	movl (%esi),%eax
	movl (%edi),%edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L17563
L17568:
	movl %esi,12(%edi)
	movl -56(%ebp),%eax
	movl %eax,16(%edi)
	testl %eax,%eax
	je L17570
	movl %edi,12(%eax)
L17570:
	testl %esi,%esi
	je L17436
	movl %edi,16(%esi)
L17436:
	movl 8(%ebp),%edx
	movl 44(%edx),%ebx
	testl %ebx,%ebx
	je L17576
	.p2align 2
L17577:
	movl (%ebx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L17578
	jmp *L17590(,%eax,4)
	.p2align 2
L17590:
	.long L17588
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17589
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17578
	.long L17583
	.long L17580
	.long L17586
	.long L17578
	.long L17581
	.long L17585
	.long L17582
	.long L17579
	.long L17587
	.long L17584
	.p2align 2
L17579:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KILC
	jmp L17608
	.p2align 2
L17580:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__FYLC
	jmp L17608
	.p2align 2
L17581:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__DEMC
	jmp L17608
	.p2align 2
L17582:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__EUMC
	jmp L17608
	.p2align 2
L17583:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__7YKC
	jmp L17608
	.p2align 2
L17584:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KANC
	jmp L17608
	.p2align 2
L17585:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__TQNC
	jmp L17608
	.p2align 2
L17586:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__56NC
	jmp L17608
	.p2align 2
L17587:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KNOC
	jmp L17608
	.p2align 2
L17588:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__13OC
	jmp L17608
	.p2align 2
L17589:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__25XC
L17608:
	addl $16,%esp
L17578:
	movl (%ebx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L17592
	jmp *L17604(,%eax,4)
	.p2align 2
L17604:
	.long L17602
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17603
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17592
	.long L17597
	.long L17594
	.long L17600
	.long L17592
	.long L17595
	.long L17599
	.long L17596
	.long L17593
	.long L17601
	.long L17598
	.p2align 2
L17593:
	movl 52(%ebx),%ebx
	jmp L17609
	.p2align 2
L17594:
	movl 52(%ebx),%ebx
	jmp L17609
	.p2align 2
L17595:
	movl 52(%ebx),%ebx
	jmp L17609
	.p2align 2
L17596:
	movl 52(%ebx),%ebx
	jmp L17609
	.p2align 2
L17597:
	movl 52(%ebx),%ebx
	jmp L17609
	.p2align 2
L17598:
	movl 52(%ebx),%ebx
	jmp L17609
	.p2align 2
L17599:
	movl 52(%ebx),%ebx
	jmp L17609
	.p2align 2
L17600:
	movl 52(%ebx),%ebx
	jmp L17609
	.p2align 2
L17601:
	movl 52(%ebx),%ebx
	jmp L17609
	.p2align 2
L17602:
	movl 52(%ebx),%ebx
	jmp L17609
	.p2align 2
L17603:
	movl 48(%ebx),%ebx
L17609:
	movl %ebx,-28(%ebp)
L17592:
	movl -28(%ebp),%ebx
	testl %ebx,%ebx
	jne L17577
L17576:
	leal -88(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_sub_move__EUMC:
	pushl %ebp
	movl %esp,%ebp
	subl $76,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%eax),%ebx
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,64(%edx)
	movl 16(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%edx),%ebx
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	addl $32,%esp
	movl %eax,68(%edx)
	movl $0,-12(%ebp)
	movl $0,-4(%ebp)
	movl $0,-8(%ebp)
	xorl %edi,%edi
	movb $0,%cl
	cmpl $0,56(%edx)
	jne L17613
	addl $-12,%esp
	pushl %edx
	call _append_plan__R1KB
	addl $16,%esp
	jmp L17614
	.p2align 2
L17613:
	movl 8(%ebp),%eax
	movl 40(%eax),%edx
	testl %edx,%edx
	je L17615
	movl (%edx),%eax
	cmpl $28,%eax
	je L17618
	ja L17622
	cmpl $17,%eax
	je L17619
	jmp L17616
	.p2align 2
L17622:
	cmpl $78,%eax
	jne L17616
	jmp L17619
	.p2align 2
L17618:
	movl 52(%edx),%esi
	jmp L17616
	.p2align 2
L17619:
	movl 56(%edx),%esi
L17616:
	testl %esi,%esi
	jne L17623
	movl 8(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _remove_plan__RZMC
	movb $1,%cl
	addl $16,%esp
	jmp L17627
	.p2align 2
L17623:
	movl 12(%esi),%eax
	movl (%eax),%edi
	movl 16(%esi),%eax
	movl (%eax),%eax
	movl %eax,-8(%ebp)
	movl 20(%esi),%eax
	movl (%eax),%eax
	movl %eax,-4(%ebp)
	movl 24(%esi),%eax
	movl (%eax),%eax
	decl %eax
	jmp L17785
	.p2align 2
L17615:
	movl $0,-4(%ebp)
	movl _parent_video__C2,%eax
	xorl %edi,%edi
	cmpl $16,(%eax)
	jne L17629
	movl 12(%eax),%edx
	jmp L17630
	.p2align 2
L17629:
	movl 8(%eax),%edx
L17630:
	subl $1,%edx
	movl %edx,-8(%ebp)
	cmpl $16,(%eax)
	jne L17633
	movl 8(%eax),%eax
	jmp L17634
	.p2align 2
L17633:
	movl 4(%eax),%eax
L17634:
	subl $1,%eax
L17785:
	movl %eax,-12(%ebp)
L17627:
	testb %cl,%cl
	jne L17614
	movl 8(%ebp),%eax
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%eax),%eax
	movl %eax,-16(%ebp)
	movl 12(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,%esi
	addl $32,%esp
	subl $1,%esi
	addl $-8,%esp
	movl 68(%edx),%edx
	movl %edx,-20(%ebp)
	movl 8(%ebp),%edx
	addl $-12,%esp
	movl 8(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-24(%ebp)
	addl $32,%esp
	subl $1,-24(%ebp)
	cmpl %edi,%esi
	setg %bl
	addl $-8,%esp
	pushl %edi
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L17645
	movl -8(%ebp),%edx
	cmpl %edx,-16(%ebp)
	jg L17645
	movl -4(%ebp),%eax
	cmpl %eax,-24(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -24(%ebp),%edx
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L17645
	movl -12(%ebp),%eax
	cmpl %eax,-20(%ebp)
	jle L17644
L17645:
	movl 8(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _remove_plan__RZMC
	addl $16,%esp
	jmp L17614
	.p2align 2
L17644:
	cmpl %edi,-16(%ebp)
	jle L17656
	movl -16(%ebp),%edi
L17656:
	movl %esi,%ebx
	cmpl -8(%ebp),%ebx
	jle L17660
	movl -8(%ebp),%ebx
L17660:
	movl -4(%ebp),%eax
	movl %eax,-32(%ebp)
	cmpl %eax,-20(%ebp)
	jle L17664
	movl -20(%ebp),%edx
	movl %edx,-32(%ebp)
L17664:
	movl -24(%ebp),%eax
	cmpl -12(%ebp),%eax
	jle L17668
	movl -12(%ebp),%eax
L17668:
	movl %eax,-24(%ebp)
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-24(%ebp)
	movl 56(%edx),%eax
	movl 16(%eax),%eax
	movl %ebx,(%eax)
	movl 56(%edx),%eax
	movl 16(%eax),%edx
	addl $32,%esp
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L17675
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
L17675:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L17677
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L17677:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 12(%eax),%eax
	cmpl (%eax),%edi
	je L17678
	movl %edi,(%eax)
	movl 56(%edx),%eax
	movl 12(%eax),%edx
	movl _list_x__K3,%ebx
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	jne L17680
	movl 8(%edx),%edi
	jmp L17681
	.p2align 2
L17680:
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
	movl %ebx,%edi
L17681:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L17682
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L17682:
	movl %edi,_list_x__K3
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl %edi,%ecx
	movl 12(%eax),%ebx
	movl $0,-36(%ebp)
	testl %ecx,%ecx
	je L17690
	movl 12(%ecx),%eax
	movl %eax,-36(%ebp)
	movl (%ecx),%edx
	movl (%ebx),%eax
	movl %eax,%esi
	cmpl %esi,%edx
	jg L17690
	movl %esi,-40(%ebp)
	.p2align 2
L17686:
	cmpl -40(%ebp),%edx
	jne L17687
	movl 4(%ebx),%edx
	movl 4(%ecx),%eax
	movl 4(%edx),%edx
	cmpl %edx,4(%eax)
	jle L17690
L17687:
	movl %ecx,-36(%ebp)
	movl 8(%ecx),%ecx
	testl %ecx,%ecx
	je L17690
	movl (%ecx),%edx
	cmpl %esi,%edx
	jle L17686
L17690:
	movl %ecx,8(%ebx)
	movl -36(%ebp),%edx
	movl %edx,12(%ebx)
	movl %ebx,%eax
	testl %edx,%edx
	je L17694
	movl %edi,%eax
	movl %ebx,8(%edx)
L17694:
	testl %ecx,%ecx
	je L17696
	movl %ebx,12(%ecx)
L17696:
	movl %eax,_list_x__K3
L17678:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	xorl %edi,%edi
	movl 16(%eax),%ebx
	movl 12(%eax),%ecx
	testl %ecx,%ecx
	je L17705
	movl 12(%ecx),%edi
	movl (%ecx),%edx
	movl (%ebx),%eax
	movl %eax,%esi
	cmpl %esi,%edx
	jg L17705
	movl %esi,-44(%ebp)
	.p2align 2
L17701:
	cmpl -44(%ebp),%edx
	jne L17702
	movl 4(%ebx),%edx
	movl 4(%ecx),%eax
	movl 4(%edx),%edx
	cmpl %edx,4(%eax)
	jle L17705
L17702:
	movl %ecx,%edi
	movl 8(%ecx),%ecx
	testl %ecx,%ecx
	je L17705
	movl (%ecx),%edx
	cmpl %esi,%edx
	jle L17701
L17705:
	movl %ecx,8(%ebx)
	movl %edi,12(%ebx)
	testl %edi,%edi
	je L17709
	movl %ebx,8(%edi)
L17709:
	testl %ecx,%ecx
	je L17713
	movl %ebx,12(%ecx)
L17713:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl -24(%ebp),%edx
	movl 24(%eax),%eax
	movl %edx,(%eax)
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 24(%eax),%edx
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	je L17716
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L17716:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L17718
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L17718:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%eax
	movl -32(%ebp),%edx
	cmpl (%eax),%edx
	je L17719
	movl %edx,(%eax)
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%edx
	movl _list_y__L3,%ebx
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	jne L17721
	movl 12(%edx),%eax
	movl %eax,-48(%ebp)
	jmp L17722
	.p2align 2
L17721:
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
	movl %ebx,-48(%ebp)
L17722:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L17723
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L17723:
	movl -48(%ebp),%edx
	movl %edx,_list_y__L3
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl -48(%ebp),%esi
	movl 20(%eax),%edi
	movl $0,-52(%ebp)
	jmp L17725
	.p2align 2
L17727:
	movl %esi,-52(%ebp)
	movl 12(%esi),%esi
L17725:
	testl %esi,%esi
	je L17732
	movl (%esi),%eax
	movl (%edi),%edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L17727
L17732:
	movl %esi,12(%edi)
	movl -52(%ebp),%eax
	movl %eax,16(%edi)
	movl %edi,%eax
	cmpl $0,-52(%ebp)
	je L17734
	movl -48(%ebp),%eax
	movl -52(%ebp),%edx
	movl %edi,12(%edx)
L17734:
	testl %esi,%esi
	je L17736
	movl %edi,16(%esi)
L17736:
	movl %eax,_list_y__L3
L17719:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 24(%eax),%edi
	movl $0,-56(%ebp)
	movl 20(%eax),%esi
	jmp L17739
	.p2align 2
L17741:
	movl %esi,-56(%ebp)
	movl 12(%esi),%esi
L17739:
	testl %esi,%esi
	je L17746
	movl (%esi),%eax
	movl (%edi),%edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L17741
L17746:
	movl %esi,12(%edi)
	movl -56(%ebp),%eax
	movl %eax,16(%edi)
	testl %eax,%eax
	je L17748
	movl %edi,12(%eax)
L17748:
	testl %esi,%esi
	je L17614
	movl %edi,16(%esi)
L17614:
	movl 8(%ebp),%edx
	movl 44(%edx),%ebx
	testl %ebx,%ebx
	je L17754
	.p2align 2
L17755:
	movl (%ebx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L17756
	jmp *L17768(,%eax,4)
	.p2align 2
L17768:
	.long L17766
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17767
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17756
	.long L17761
	.long L17758
	.long L17764
	.long L17756
	.long L17759
	.long L17763
	.long L17760
	.long L17757
	.long L17765
	.long L17762
	.p2align 2
L17757:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KILC
	jmp L17786
	.p2align 2
L17758:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__FYLC
	jmp L17786
	.p2align 2
L17759:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__DEMC
	jmp L17786
	.p2align 2
L17760:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__EUMC
	jmp L17786
	.p2align 2
L17761:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__7YKC
	jmp L17786
	.p2align 2
L17762:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KANC
	jmp L17786
	.p2align 2
L17763:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__TQNC
	jmp L17786
	.p2align 2
L17764:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__56NC
	jmp L17786
	.p2align 2
L17765:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KNOC
	jmp L17786
	.p2align 2
L17766:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__13OC
	jmp L17786
	.p2align 2
L17767:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__25XC
L17786:
	addl $16,%esp
L17756:
	movl (%ebx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L17770
	jmp *L17782(,%eax,4)
	.p2align 2
L17782:
	.long L17780
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17781
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17770
	.long L17775
	.long L17772
	.long L17778
	.long L17770
	.long L17773
	.long L17777
	.long L17774
	.long L17771
	.long L17779
	.long L17776
	.p2align 2
L17771:
	movl 52(%ebx),%ebx
	jmp L17787
	.p2align 2
L17772:
	movl 52(%ebx),%ebx
	jmp L17787
	.p2align 2
L17773:
	movl 52(%ebx),%ebx
	jmp L17787
	.p2align 2
L17774:
	movl 52(%ebx),%ebx
	jmp L17787
	.p2align 2
L17775:
	movl 52(%ebx),%ebx
	jmp L17787
	.p2align 2
L17776:
	movl 52(%ebx),%ebx
	jmp L17787
	.p2align 2
L17777:
	movl 52(%ebx),%ebx
	jmp L17787
	.p2align 2
L17778:
	movl 52(%ebx),%ebx
	jmp L17787
	.p2align 2
L17779:
	movl 52(%ebx),%ebx
	jmp L17787
	.p2align 2
L17780:
	movl 52(%ebx),%ebx
	jmp L17787
	.p2align 2
L17781:
	movl 48(%ebx),%ebx
L17787:
	movl %ebx,-28(%ebp)
L17770:
	movl -28(%ebp),%ebx
	testl %ebx,%ebx
	jne L17755
L17754:
	leal -88(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_sub_move__KANC:
	pushl %ebp
	movl %esp,%ebp
	subl $76,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%eax),%ebx
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,64(%edx)
	movl 16(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%edx),%ebx
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	addl $32,%esp
	movl %eax,68(%edx)
	movl $0,-12(%ebp)
	movl $0,-4(%ebp)
	movl $0,-8(%ebp)
	xorl %edi,%edi
	movb $0,%cl
	cmpl $0,56(%edx)
	jne L17791
	addl $-12,%esp
	pushl %edx
	call _append_plan__7EZB
	addl $16,%esp
	jmp L17792
	.p2align 2
L17791:
	movl 8(%ebp),%eax
	movl 40(%eax),%edx
	testl %edx,%edx
	je L17793
	movl (%edx),%eax
	cmpl $28,%eax
	je L17796
	ja L17800
	cmpl $17,%eax
	je L17797
	jmp L17794
	.p2align 2
L17800:
	cmpl $78,%eax
	jne L17794
	jmp L17797
	.p2align 2
L17796:
	movl 52(%edx),%esi
	jmp L17794
	.p2align 2
L17797:
	movl 56(%edx),%esi
L17794:
	testl %esi,%esi
	jne L17801
	movl 8(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _remove_plan__XFNC
	movb $1,%cl
	addl $16,%esp
	jmp L17805
	.p2align 2
L17801:
	movl 12(%esi),%eax
	movl (%eax),%edi
	movl 16(%esi),%eax
	movl (%eax),%eax
	movl %eax,-8(%ebp)
	movl 20(%esi),%eax
	movl (%eax),%eax
	movl %eax,-4(%ebp)
	movl 24(%esi),%eax
	movl (%eax),%eax
	decl %eax
	jmp L17963
	.p2align 2
L17793:
	movl $0,-4(%ebp)
	movl _parent_video__C2,%eax
	xorl %edi,%edi
	cmpl $16,(%eax)
	jne L17807
	movl 12(%eax),%edx
	jmp L17808
	.p2align 2
L17807:
	movl 8(%eax),%edx
L17808:
	subl $1,%edx
	movl %edx,-8(%ebp)
	cmpl $16,(%eax)
	jne L17811
	movl 8(%eax),%eax
	jmp L17812
	.p2align 2
L17811:
	movl 4(%eax),%eax
L17812:
	subl $1,%eax
L17963:
	movl %eax,-12(%ebp)
L17805:
	testb %cl,%cl
	jne L17792
	movl 8(%ebp),%eax
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%eax),%eax
	movl %eax,-16(%ebp)
	movl 12(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,%esi
	addl $32,%esp
	subl $1,%esi
	addl $-8,%esp
	movl 68(%edx),%edx
	movl %edx,-20(%ebp)
	movl 8(%ebp),%edx
	addl $-12,%esp
	movl 8(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-24(%ebp)
	addl $32,%esp
	subl $1,-24(%ebp)
	cmpl %edi,%esi
	setg %bl
	addl $-8,%esp
	pushl %edi
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L17823
	movl -8(%ebp),%edx
	cmpl %edx,-16(%ebp)
	jg L17823
	movl -4(%ebp),%eax
	cmpl %eax,-24(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -24(%ebp),%edx
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L17823
	movl -12(%ebp),%eax
	cmpl %eax,-20(%ebp)
	jle L17822
L17823:
	movl 8(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _remove_plan__XFNC
	addl $16,%esp
	jmp L17792
	.p2align 2
L17822:
	cmpl %edi,-16(%ebp)
	jle L17834
	movl -16(%ebp),%edi
L17834:
	movl %esi,%ebx
	cmpl -8(%ebp),%ebx
	jle L17838
	movl -8(%ebp),%ebx
L17838:
	movl -4(%ebp),%eax
	movl %eax,-32(%ebp)
	cmpl %eax,-20(%ebp)
	jle L17842
	movl -20(%ebp),%edx
	movl %edx,-32(%ebp)
L17842:
	movl -24(%ebp),%eax
	cmpl -12(%ebp),%eax
	jle L17846
	movl -12(%ebp),%eax
L17846:
	movl %eax,-24(%ebp)
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-24(%ebp)
	movl 56(%edx),%eax
	movl 16(%eax),%eax
	movl %ebx,(%eax)
	movl 56(%edx),%eax
	movl 16(%eax),%edx
	addl $32,%esp
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L17853
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
L17853:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L17855
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L17855:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 12(%eax),%eax
	cmpl (%eax),%edi
	je L17856
	movl %edi,(%eax)
	movl 56(%edx),%eax
	movl 12(%eax),%edx
	movl _list_x__K3,%ebx
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	jne L17858
	movl 8(%edx),%edi
	jmp L17859
	.p2align 2
L17858:
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
	movl %ebx,%edi
L17859:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L17860
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L17860:
	movl %edi,_list_x__K3
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl %edi,%ecx
	movl 12(%eax),%ebx
	movl $0,-36(%ebp)
	testl %ecx,%ecx
	je L17868
	movl 12(%ecx),%eax
	movl %eax,-36(%ebp)
	movl (%ecx),%edx
	movl (%ebx),%eax
	movl %eax,%esi
	cmpl %esi,%edx
	jg L17868
	movl %esi,-40(%ebp)
	.p2align 2
L17864:
	cmpl -40(%ebp),%edx
	jne L17865
	movl 4(%ebx),%edx
	movl 4(%ecx),%eax
	movl 4(%edx),%edx
	cmpl %edx,4(%eax)
	jle L17868
L17865:
	movl %ecx,-36(%ebp)
	movl 8(%ecx),%ecx
	testl %ecx,%ecx
	je L17868
	movl (%ecx),%edx
	cmpl %esi,%edx
	jle L17864
L17868:
	movl %ecx,8(%ebx)
	movl -36(%ebp),%edx
	movl %edx,12(%ebx)
	movl %ebx,%eax
	testl %edx,%edx
	je L17872
	movl %edi,%eax
	movl %ebx,8(%edx)
L17872:
	testl %ecx,%ecx
	je L17874
	movl %ebx,12(%ecx)
L17874:
	movl %eax,_list_x__K3
L17856:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	xorl %edi,%edi
	movl 16(%eax),%ebx
	movl 12(%eax),%ecx
	testl %ecx,%ecx
	je L17883
	movl 12(%ecx),%edi
	movl (%ecx),%edx
	movl (%ebx),%eax
	movl %eax,%esi
	cmpl %esi,%edx
	jg L17883
	movl %esi,-44(%ebp)
	.p2align 2
L17879:
	cmpl -44(%ebp),%edx
	jne L17880
	movl 4(%ebx),%edx
	movl 4(%ecx),%eax
	movl 4(%edx),%edx
	cmpl %edx,4(%eax)
	jle L17883
L17880:
	movl %ecx,%edi
	movl 8(%ecx),%ecx
	testl %ecx,%ecx
	je L17883
	movl (%ecx),%edx
	cmpl %esi,%edx
	jle L17879
L17883:
	movl %ecx,8(%ebx)
	movl %edi,12(%ebx)
	testl %edi,%edi
	je L17887
	movl %ebx,8(%edi)
L17887:
	testl %ecx,%ecx
	je L17891
	movl %ebx,12(%ecx)
L17891:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl -24(%ebp),%edx
	movl 24(%eax),%eax
	movl %edx,(%eax)
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 24(%eax),%edx
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	je L17894
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L17894:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L17896
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L17896:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%eax
	movl -32(%ebp),%edx
	cmpl (%eax),%edx
	je L17897
	movl %edx,(%eax)
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%edx
	movl _list_y__L3,%ebx
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	jne L17899
	movl 12(%edx),%eax
	movl %eax,-48(%ebp)
	jmp L17900
	.p2align 2
L17899:
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
	movl %ebx,-48(%ebp)
L17900:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L17901
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L17901:
	movl -48(%ebp),%edx
	movl %edx,_list_y__L3
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl -48(%ebp),%esi
	movl 20(%eax),%edi
	movl $0,-52(%ebp)
	jmp L17903
	.p2align 2
L17905:
	movl %esi,-52(%ebp)
	movl 12(%esi),%esi
L17903:
	testl %esi,%esi
	je L17910
	movl (%esi),%eax
	movl (%edi),%edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L17905
L17910:
	movl %esi,12(%edi)
	movl -52(%ebp),%eax
	movl %eax,16(%edi)
	movl %edi,%eax
	cmpl $0,-52(%ebp)
	je L17912
	movl -48(%ebp),%eax
	movl -52(%ebp),%edx
	movl %edi,12(%edx)
L17912:
	testl %esi,%esi
	je L17914
	movl %edi,16(%esi)
L17914:
	movl %eax,_list_y__L3
L17897:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 24(%eax),%edi
	movl $0,-56(%ebp)
	movl 20(%eax),%esi
	jmp L17917
	.p2align 2
L17919:
	movl %esi,-56(%ebp)
	movl 12(%esi),%esi
L17917:
	testl %esi,%esi
	je L17924
	movl (%esi),%eax
	movl (%edi),%edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L17919
L17924:
	movl %esi,12(%edi)
	movl -56(%ebp),%eax
	movl %eax,16(%edi)
	testl %eax,%eax
	je L17926
	movl %edi,12(%eax)
L17926:
	testl %esi,%esi
	je L17792
	movl %edi,16(%esi)
L17792:
	movl 8(%ebp),%edx
	movl 44(%edx),%ebx
	testl %ebx,%ebx
	je L17932
	.p2align 2
L17933:
	movl (%ebx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L17934
	jmp *L17946(,%eax,4)
	.p2align 2
L17946:
	.long L17944
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17945
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17934
	.long L17939
	.long L17936
	.long L17942
	.long L17934
	.long L17937
	.long L17941
	.long L17938
	.long L17935
	.long L17943
	.long L17940
	.p2align 2
L17935:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KILC
	jmp L17964
	.p2align 2
L17936:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__FYLC
	jmp L17964
	.p2align 2
L17937:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__DEMC
	jmp L17964
	.p2align 2
L17938:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__EUMC
	jmp L17964
	.p2align 2
L17939:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__7YKC
	jmp L17964
	.p2align 2
L17940:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KANC
	jmp L17964
	.p2align 2
L17941:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__TQNC
	jmp L17964
	.p2align 2
L17942:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__56NC
	jmp L17964
	.p2align 2
L17943:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KNOC
	jmp L17964
	.p2align 2
L17944:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__13OC
	jmp L17964
	.p2align 2
L17945:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__25XC
L17964:
	addl $16,%esp
L17934:
	movl (%ebx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L17948
	jmp *L17960(,%eax,4)
	.p2align 2
L17960:
	.long L17958
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17959
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17948
	.long L17953
	.long L17950
	.long L17956
	.long L17948
	.long L17951
	.long L17955
	.long L17952
	.long L17949
	.long L17957
	.long L17954
	.p2align 2
L17949:
	movl 52(%ebx),%ebx
	jmp L17965
	.p2align 2
L17950:
	movl 52(%ebx),%ebx
	jmp L17965
	.p2align 2
L17951:
	movl 52(%ebx),%ebx
	jmp L17965
	.p2align 2
L17952:
	movl 52(%ebx),%ebx
	jmp L17965
	.p2align 2
L17953:
	movl 52(%ebx),%ebx
	jmp L17965
	.p2align 2
L17954:
	movl 52(%ebx),%ebx
	jmp L17965
	.p2align 2
L17955:
	movl 52(%ebx),%ebx
	jmp L17965
	.p2align 2
L17956:
	movl 52(%ebx),%ebx
	jmp L17965
	.p2align 2
L17957:
	movl 52(%ebx),%ebx
	jmp L17965
	.p2align 2
L17958:
	movl 52(%ebx),%ebx
	jmp L17965
	.p2align 2
L17959:
	movl 48(%ebx),%ebx
L17965:
	movl %ebx,-28(%ebp)
L17948:
	movl -28(%ebp),%ebx
	testl %ebx,%ebx
	jne L17933
L17932:
	leal -88(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_sub_move__TQNC:
	pushl %ebp
	movl %esp,%ebp
	subl $76,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%eax),%ebx
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,64(%edx)
	movl 16(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%edx),%ebx
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	addl $32,%esp
	movl %eax,68(%edx)
	movl $0,-12(%ebp)
	movl $0,-4(%ebp)
	movl $0,-8(%ebp)
	xorl %edi,%edi
	movb $0,%cl
	cmpl $0,56(%edx)
	jne L17969
	addl $-12,%esp
	pushl %edx
	call _append_plan__Z4HB
	addl $16,%esp
	jmp L17970
	.p2align 2
L17969:
	movl 8(%ebp),%eax
	movl 40(%eax),%edx
	testl %edx,%edx
	je L17971
	movl (%edx),%eax
	cmpl $28,%eax
	je L17974
	ja L17978
	cmpl $17,%eax
	je L17975
	jmp L17972
	.p2align 2
L17978:
	cmpl $78,%eax
	jne L17972
	jmp L17975
	.p2align 2
L17974:
	movl 52(%edx),%esi
	jmp L17972
	.p2align 2
L17975:
	movl 56(%edx),%esi
L17972:
	testl %esi,%esi
	jne L17979
	movl 8(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _remove_plan__6VNC
	movb $1,%cl
	addl $16,%esp
	jmp L17983
	.p2align 2
L17979:
	movl 12(%esi),%eax
	movl (%eax),%edi
	movl 16(%esi),%eax
	movl (%eax),%eax
	movl %eax,-8(%ebp)
	movl 20(%esi),%eax
	movl (%eax),%eax
	movl %eax,-4(%ebp)
	movl 24(%esi),%eax
	movl (%eax),%eax
	decl %eax
	jmp L18141
	.p2align 2
L17971:
	movl $0,-4(%ebp)
	movl _parent_video__C2,%eax
	xorl %edi,%edi
	cmpl $16,(%eax)
	jne L17985
	movl 12(%eax),%edx
	jmp L17986
	.p2align 2
L17985:
	movl 8(%eax),%edx
L17986:
	subl $1,%edx
	movl %edx,-8(%ebp)
	cmpl $16,(%eax)
	jne L17989
	movl 8(%eax),%eax
	jmp L17990
	.p2align 2
L17989:
	movl 4(%eax),%eax
L17990:
	subl $1,%eax
L18141:
	movl %eax,-12(%ebp)
L17983:
	testb %cl,%cl
	jne L17970
	movl 8(%ebp),%eax
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%eax),%eax
	movl %eax,-16(%ebp)
	movl 12(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,%esi
	addl $32,%esp
	subl $1,%esi
	addl $-8,%esp
	movl 68(%edx),%edx
	movl %edx,-20(%ebp)
	movl 8(%ebp),%edx
	addl $-12,%esp
	movl 8(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-24(%ebp)
	addl $32,%esp
	subl $1,-24(%ebp)
	cmpl %edi,%esi
	setg %bl
	addl $-8,%esp
	pushl %edi
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L18001
	movl -8(%ebp),%edx
	cmpl %edx,-16(%ebp)
	jg L18001
	movl -4(%ebp),%eax
	cmpl %eax,-24(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -24(%ebp),%edx
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L18001
	movl -12(%ebp),%eax
	cmpl %eax,-20(%ebp)
	jle L18000
L18001:
	movl 8(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _remove_plan__6VNC
	addl $16,%esp
	jmp L17970
	.p2align 2
L18000:
	cmpl %edi,-16(%ebp)
	jle L18012
	movl -16(%ebp),%edi
L18012:
	movl %esi,%ebx
	cmpl -8(%ebp),%ebx
	jle L18016
	movl -8(%ebp),%ebx
L18016:
	movl -4(%ebp),%eax
	movl %eax,-32(%ebp)
	cmpl %eax,-20(%ebp)
	jle L18020
	movl -20(%ebp),%edx
	movl %edx,-32(%ebp)
L18020:
	movl -24(%ebp),%eax
	cmpl -12(%ebp),%eax
	jle L18024
	movl -12(%ebp),%eax
L18024:
	movl %eax,-24(%ebp)
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-24(%ebp)
	movl 56(%edx),%eax
	movl 16(%eax),%eax
	movl %ebx,(%eax)
	movl 56(%edx),%eax
	movl 16(%eax),%edx
	addl $32,%esp
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L18031
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
L18031:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L18033
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L18033:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 12(%eax),%eax
	cmpl (%eax),%edi
	je L18034
	movl %edi,(%eax)
	movl 56(%edx),%eax
	movl 12(%eax),%edx
	movl _list_x__K3,%ebx
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	jne L18036
	movl 8(%edx),%edi
	jmp L18037
	.p2align 2
L18036:
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
	movl %ebx,%edi
L18037:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L18038
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L18038:
	movl %edi,_list_x__K3
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl %edi,%ecx
	movl 12(%eax),%ebx
	movl $0,-36(%ebp)
	testl %ecx,%ecx
	je L18046
	movl 12(%ecx),%eax
	movl %eax,-36(%ebp)
	movl (%ecx),%edx
	movl (%ebx),%eax
	movl %eax,%esi
	cmpl %esi,%edx
	jg L18046
	movl %esi,-40(%ebp)
	.p2align 2
L18042:
	cmpl -40(%ebp),%edx
	jne L18043
	movl 4(%ebx),%edx
	movl 4(%ecx),%eax
	movl 4(%edx),%edx
	cmpl %edx,4(%eax)
	jle L18046
L18043:
	movl %ecx,-36(%ebp)
	movl 8(%ecx),%ecx
	testl %ecx,%ecx
	je L18046
	movl (%ecx),%edx
	cmpl %esi,%edx
	jle L18042
L18046:
	movl %ecx,8(%ebx)
	movl -36(%ebp),%edx
	movl %edx,12(%ebx)
	movl %ebx,%eax
	testl %edx,%edx
	je L18050
	movl %edi,%eax
	movl %ebx,8(%edx)
L18050:
	testl %ecx,%ecx
	je L18052
	movl %ebx,12(%ecx)
L18052:
	movl %eax,_list_x__K3
L18034:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	xorl %edi,%edi
	movl 16(%eax),%ebx
	movl 12(%eax),%ecx
	testl %ecx,%ecx
	je L18061
	movl 12(%ecx),%edi
	movl (%ecx),%edx
	movl (%ebx),%eax
	movl %eax,%esi
	cmpl %esi,%edx
	jg L18061
	movl %esi,-44(%ebp)
	.p2align 2
L18057:
	cmpl -44(%ebp),%edx
	jne L18058
	movl 4(%ebx),%edx
	movl 4(%ecx),%eax
	movl 4(%edx),%edx
	cmpl %edx,4(%eax)
	jle L18061
L18058:
	movl %ecx,%edi
	movl 8(%ecx),%ecx
	testl %ecx,%ecx
	je L18061
	movl (%ecx),%edx
	cmpl %esi,%edx
	jle L18057
L18061:
	movl %ecx,8(%ebx)
	movl %edi,12(%ebx)
	testl %edi,%edi
	je L18065
	movl %ebx,8(%edi)
L18065:
	testl %ecx,%ecx
	je L18069
	movl %ebx,12(%ecx)
L18069:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl -24(%ebp),%edx
	movl 24(%eax),%eax
	movl %edx,(%eax)
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 24(%eax),%edx
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	je L18072
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L18072:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L18074
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L18074:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%eax
	movl -32(%ebp),%edx
	cmpl (%eax),%edx
	je L18075
	movl %edx,(%eax)
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%edx
	movl _list_y__L3,%ebx
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	jne L18077
	movl 12(%edx),%eax
	movl %eax,-48(%ebp)
	jmp L18078
	.p2align 2
L18077:
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
	movl %ebx,-48(%ebp)
L18078:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L18079
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L18079:
	movl -48(%ebp),%edx
	movl %edx,_list_y__L3
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl -48(%ebp),%esi
	movl 20(%eax),%edi
	movl $0,-52(%ebp)
	jmp L18081
	.p2align 2
L18083:
	movl %esi,-52(%ebp)
	movl 12(%esi),%esi
L18081:
	testl %esi,%esi
	je L18088
	movl (%esi),%eax
	movl (%edi),%edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L18083
L18088:
	movl %esi,12(%edi)
	movl -52(%ebp),%eax
	movl %eax,16(%edi)
	movl %edi,%eax
	cmpl $0,-52(%ebp)
	je L18090
	movl -48(%ebp),%eax
	movl -52(%ebp),%edx
	movl %edi,12(%edx)
L18090:
	testl %esi,%esi
	je L18092
	movl %edi,16(%esi)
L18092:
	movl %eax,_list_y__L3
L18075:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 24(%eax),%edi
	movl $0,-56(%ebp)
	movl 20(%eax),%esi
	jmp L18095
	.p2align 2
L18097:
	movl %esi,-56(%ebp)
	movl 12(%esi),%esi
L18095:
	testl %esi,%esi
	je L18102
	movl (%esi),%eax
	movl (%edi),%edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L18097
L18102:
	movl %esi,12(%edi)
	movl -56(%ebp),%eax
	movl %eax,16(%edi)
	testl %eax,%eax
	je L18104
	movl %edi,12(%eax)
L18104:
	testl %esi,%esi
	je L17970
	movl %edi,16(%esi)
L17970:
	movl 8(%ebp),%edx
	movl 44(%edx),%ebx
	testl %ebx,%ebx
	je L18110
	.p2align 2
L18111:
	movl (%ebx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L18112
	jmp *L18124(,%eax,4)
	.p2align 2
L18124:
	.long L18122
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18123
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18112
	.long L18117
	.long L18114
	.long L18120
	.long L18112
	.long L18115
	.long L18119
	.long L18116
	.long L18113
	.long L18121
	.long L18118
	.p2align 2
L18113:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KILC
	jmp L18142
	.p2align 2
L18114:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__FYLC
	jmp L18142
	.p2align 2
L18115:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__DEMC
	jmp L18142
	.p2align 2
L18116:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__EUMC
	jmp L18142
	.p2align 2
L18117:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__7YKC
	jmp L18142
	.p2align 2
L18118:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KANC
	jmp L18142
	.p2align 2
L18119:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__TQNC
	jmp L18142
	.p2align 2
L18120:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__56NC
	jmp L18142
	.p2align 2
L18121:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KNOC
	jmp L18142
	.p2align 2
L18122:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__13OC
	jmp L18142
	.p2align 2
L18123:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__25XC
L18142:
	addl $16,%esp
L18112:
	movl (%ebx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L18126
	jmp *L18138(,%eax,4)
	.p2align 2
L18138:
	.long L18136
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18137
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18126
	.long L18131
	.long L18128
	.long L18134
	.long L18126
	.long L18129
	.long L18133
	.long L18130
	.long L18127
	.long L18135
	.long L18132
	.p2align 2
L18127:
	movl 52(%ebx),%ebx
	jmp L18143
	.p2align 2
L18128:
	movl 52(%ebx),%ebx
	jmp L18143
	.p2align 2
L18129:
	movl 52(%ebx),%ebx
	jmp L18143
	.p2align 2
L18130:
	movl 52(%ebx),%ebx
	jmp L18143
	.p2align 2
L18131:
	movl 52(%ebx),%ebx
	jmp L18143
	.p2align 2
L18132:
	movl 52(%ebx),%ebx
	jmp L18143
	.p2align 2
L18133:
	movl 52(%ebx),%ebx
	jmp L18143
	.p2align 2
L18134:
	movl 52(%ebx),%ebx
	jmp L18143
	.p2align 2
L18135:
	movl 52(%ebx),%ebx
	jmp L18143
	.p2align 2
L18136:
	movl 52(%ebx),%ebx
	jmp L18143
	.p2align 2
L18137:
	movl 48(%ebx),%ebx
L18143:
	movl %ebx,-28(%ebp)
L18126:
	movl -28(%ebp),%ebx
	testl %ebx,%ebx
	jne L18111
L18110:
	leal -88(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_sub_move__56NC:
	pushl %ebp
	movl %esp,%ebp
	subl $76,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%eax),%ebx
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,64(%edx)
	movl 16(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%edx),%ebx
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	addl $32,%esp
	movl %eax,68(%edx)
	movl $0,-12(%ebp)
	movl $0,-4(%ebp)
	movl $0,-8(%ebp)
	xorl %edi,%edi
	movb $0,%cl
	cmpl $0,56(%edx)
	jne L18147
	addl $-12,%esp
	pushl %edx
	call _append_plan__13S
	addl $16,%esp
	jmp L18148
	.p2align 2
L18147:
	movl 8(%ebp),%eax
	movl 40(%eax),%edx
	testl %edx,%edx
	je L18149
	movl (%edx),%eax
	cmpl $28,%eax
	je L18152
	ja L18156
	cmpl $17,%eax
	je L18153
	jmp L18150
	.p2align 2
L18156:
	cmpl $78,%eax
	jne L18150
	jmp L18153
	.p2align 2
L18152:
	movl 52(%edx),%esi
	jmp L18150
	.p2align 2
L18153:
	movl 56(%edx),%esi
L18150:
	testl %esi,%esi
	jne L18157
	movl 8(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _remove_plan__ICOC
	movb $1,%cl
	addl $16,%esp
	jmp L18161
	.p2align 2
L18157:
	movl 12(%esi),%eax
	movl (%eax),%edi
	movl 16(%esi),%eax
	movl (%eax),%eax
	movl %eax,-8(%ebp)
	movl 20(%esi),%eax
	movl (%eax),%eax
	movl %eax,-4(%ebp)
	movl 24(%esi),%eax
	movl (%eax),%eax
	decl %eax
	jmp L18319
	.p2align 2
L18149:
	movl $0,-4(%ebp)
	movl _parent_video__C2,%eax
	xorl %edi,%edi
	cmpl $16,(%eax)
	jne L18163
	movl 12(%eax),%edx
	jmp L18164
	.p2align 2
L18163:
	movl 8(%eax),%edx
L18164:
	subl $1,%edx
	movl %edx,-8(%ebp)
	cmpl $16,(%eax)
	jne L18167
	movl 8(%eax),%eax
	jmp L18168
	.p2align 2
L18167:
	movl 4(%eax),%eax
L18168:
	subl $1,%eax
L18319:
	movl %eax,-12(%ebp)
L18161:
	testb %cl,%cl
	jne L18148
	movl 8(%ebp),%eax
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%eax),%eax
	movl %eax,-16(%ebp)
	movl 12(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,%esi
	addl $32,%esp
	subl $1,%esi
	addl $-8,%esp
	movl 68(%edx),%edx
	movl %edx,-20(%ebp)
	movl 8(%ebp),%edx
	addl $-12,%esp
	movl 8(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-24(%ebp)
	addl $32,%esp
	subl $1,-24(%ebp)
	cmpl %edi,%esi
	setg %bl
	addl $-8,%esp
	pushl %edi
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L18179
	movl -8(%ebp),%edx
	cmpl %edx,-16(%ebp)
	jg L18179
	movl -4(%ebp),%eax
	cmpl %eax,-24(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -24(%ebp),%edx
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L18179
	movl -12(%ebp),%eax
	cmpl %eax,-20(%ebp)
	jle L18178
L18179:
	movl 8(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _remove_plan__ICOC
	addl $16,%esp
	jmp L18148
	.p2align 2
L18178:
	cmpl %edi,-16(%ebp)
	jle L18190
	movl -16(%ebp),%edi
L18190:
	movl %esi,%ebx
	cmpl -8(%ebp),%ebx
	jle L18194
	movl -8(%ebp),%ebx
L18194:
	movl -4(%ebp),%eax
	movl %eax,-32(%ebp)
	cmpl %eax,-20(%ebp)
	jle L18198
	movl -20(%ebp),%edx
	movl %edx,-32(%ebp)
L18198:
	movl -24(%ebp),%eax
	cmpl -12(%ebp),%eax
	jle L18202
	movl -12(%ebp),%eax
L18202:
	movl %eax,-24(%ebp)
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-24(%ebp)
	movl 56(%edx),%eax
	movl 16(%eax),%eax
	movl %ebx,(%eax)
	movl 56(%edx),%eax
	movl 16(%eax),%edx
	addl $32,%esp
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L18209
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
L18209:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L18211
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L18211:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 12(%eax),%eax
	cmpl (%eax),%edi
	je L18212
	movl %edi,(%eax)
	movl 56(%edx),%eax
	movl 12(%eax),%edx
	movl _list_x__K3,%ebx
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	jne L18214
	movl 8(%edx),%edi
	jmp L18215
	.p2align 2
L18214:
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
	movl %ebx,%edi
L18215:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L18216
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L18216:
	movl %edi,_list_x__K3
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl %edi,%ecx
	movl 12(%eax),%ebx
	movl $0,-36(%ebp)
	testl %ecx,%ecx
	je L18224
	movl 12(%ecx),%eax
	movl %eax,-36(%ebp)
	movl (%ecx),%edx
	movl (%ebx),%eax
	movl %eax,%esi
	cmpl %esi,%edx
	jg L18224
	movl %esi,-40(%ebp)
	.p2align 2
L18220:
	cmpl -40(%ebp),%edx
	jne L18221
	movl 4(%ebx),%edx
	movl 4(%ecx),%eax
	movl 4(%edx),%edx
	cmpl %edx,4(%eax)
	jle L18224
L18221:
	movl %ecx,-36(%ebp)
	movl 8(%ecx),%ecx
	testl %ecx,%ecx
	je L18224
	movl (%ecx),%edx
	cmpl %esi,%edx
	jle L18220
L18224:
	movl %ecx,8(%ebx)
	movl -36(%ebp),%edx
	movl %edx,12(%ebx)
	movl %ebx,%eax
	testl %edx,%edx
	je L18228
	movl %edi,%eax
	movl %ebx,8(%edx)
L18228:
	testl %ecx,%ecx
	je L18230
	movl %ebx,12(%ecx)
L18230:
	movl %eax,_list_x__K3
L18212:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	xorl %edi,%edi
	movl 16(%eax),%ebx
	movl 12(%eax),%ecx
	testl %ecx,%ecx
	je L18239
	movl 12(%ecx),%edi
	movl (%ecx),%edx
	movl (%ebx),%eax
	movl %eax,%esi
	cmpl %esi,%edx
	jg L18239
	movl %esi,-44(%ebp)
	.p2align 2
L18235:
	cmpl -44(%ebp),%edx
	jne L18236
	movl 4(%ebx),%edx
	movl 4(%ecx),%eax
	movl 4(%edx),%edx
	cmpl %edx,4(%eax)
	jle L18239
L18236:
	movl %ecx,%edi
	movl 8(%ecx),%ecx
	testl %ecx,%ecx
	je L18239
	movl (%ecx),%edx
	cmpl %esi,%edx
	jle L18235
L18239:
	movl %ecx,8(%ebx)
	movl %edi,12(%ebx)
	testl %edi,%edi
	je L18243
	movl %ebx,8(%edi)
L18243:
	testl %ecx,%ecx
	je L18247
	movl %ebx,12(%ecx)
L18247:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl -24(%ebp),%edx
	movl 24(%eax),%eax
	movl %edx,(%eax)
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 24(%eax),%edx
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	je L18250
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L18250:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L18252
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L18252:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%eax
	movl -32(%ebp),%edx
	cmpl (%eax),%edx
	je L18253
	movl %edx,(%eax)
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%edx
	movl _list_y__L3,%ebx
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	jne L18255
	movl 12(%edx),%eax
	movl %eax,-48(%ebp)
	jmp L18256
	.p2align 2
L18255:
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
	movl %ebx,-48(%ebp)
L18256:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L18257
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L18257:
	movl -48(%ebp),%edx
	movl %edx,_list_y__L3
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl -48(%ebp),%esi
	movl 20(%eax),%edi
	movl $0,-52(%ebp)
	jmp L18259
	.p2align 2
L18261:
	movl %esi,-52(%ebp)
	movl 12(%esi),%esi
L18259:
	testl %esi,%esi
	je L18266
	movl (%esi),%eax
	movl (%edi),%edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L18261
L18266:
	movl %esi,12(%edi)
	movl -52(%ebp),%eax
	movl %eax,16(%edi)
	movl %edi,%eax
	cmpl $0,-52(%ebp)
	je L18268
	movl -48(%ebp),%eax
	movl -52(%ebp),%edx
	movl %edi,12(%edx)
L18268:
	testl %esi,%esi
	je L18270
	movl %edi,16(%esi)
L18270:
	movl %eax,_list_y__L3
L18253:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 24(%eax),%edi
	movl $0,-56(%ebp)
	movl 20(%eax),%esi
	jmp L18273
	.p2align 2
L18275:
	movl %esi,-56(%ebp)
	movl 12(%esi),%esi
L18273:
	testl %esi,%esi
	je L18280
	movl (%esi),%eax
	movl (%edi),%edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L18275
L18280:
	movl %esi,12(%edi)
	movl -56(%ebp),%eax
	movl %eax,16(%edi)
	testl %eax,%eax
	je L18282
	movl %edi,12(%eax)
L18282:
	testl %esi,%esi
	je L18148
	movl %edi,16(%esi)
L18148:
	movl 8(%ebp),%edx
	movl 44(%edx),%ebx
	testl %ebx,%ebx
	je L18288
	.p2align 2
L18289:
	movl (%ebx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L18290
	jmp *L18302(,%eax,4)
	.p2align 2
L18302:
	.long L18300
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18301
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18290
	.long L18295
	.long L18292
	.long L18298
	.long L18290
	.long L18293
	.long L18297
	.long L18294
	.long L18291
	.long L18299
	.long L18296
	.p2align 2
L18291:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KILC
	jmp L18320
	.p2align 2
L18292:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__FYLC
	jmp L18320
	.p2align 2
L18293:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__DEMC
	jmp L18320
	.p2align 2
L18294:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__EUMC
	jmp L18320
	.p2align 2
L18295:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__7YKC
	jmp L18320
	.p2align 2
L18296:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KANC
	jmp L18320
	.p2align 2
L18297:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__TQNC
	jmp L18320
	.p2align 2
L18298:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__56NC
	jmp L18320
	.p2align 2
L18299:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KNOC
	jmp L18320
	.p2align 2
L18300:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__13OC
	jmp L18320
	.p2align 2
L18301:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__25XC
L18320:
	addl $16,%esp
L18290:
	movl (%ebx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L18304
	jmp *L18316(,%eax,4)
	.p2align 2
L18316:
	.long L18314
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18315
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18304
	.long L18309
	.long L18306
	.long L18312
	.long L18304
	.long L18307
	.long L18311
	.long L18308
	.long L18305
	.long L18313
	.long L18310
	.p2align 2
L18305:
	movl 52(%ebx),%ebx
	jmp L18321
	.p2align 2
L18306:
	movl 52(%ebx),%ebx
	jmp L18321
	.p2align 2
L18307:
	movl 52(%ebx),%ebx
	jmp L18321
	.p2align 2
L18308:
	movl 52(%ebx),%ebx
	jmp L18321
	.p2align 2
L18309:
	movl 52(%ebx),%ebx
	jmp L18321
	.p2align 2
L18310:
	movl 52(%ebx),%ebx
	jmp L18321
	.p2align 2
L18311:
	movl 52(%ebx),%ebx
	jmp L18321
	.p2align 2
L18312:
	movl 52(%ebx),%ebx
	jmp L18321
	.p2align 2
L18313:
	movl 52(%ebx),%ebx
	jmp L18321
	.p2align 2
L18314:
	movl 52(%ebx),%ebx
	jmp L18321
	.p2align 2
L18315:
	movl 48(%ebx),%ebx
L18321:
	movl %ebx,-28(%ebp)
L18304:
	movl -28(%ebp),%ebx
	testl %ebx,%ebx
	jne L18289
L18288:
	leal -88(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_sub_move__KNOC:
	pushl %ebp
	movl %esp,%ebp
	subl $76,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%eax),%ebx
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,64(%edx)
	movl 16(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%edx),%ebx
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	addl $32,%esp
	movl %eax,68(%edx)
	movl $0,-12(%ebp)
	movl $0,-4(%ebp)
	movl $0,-8(%ebp)
	xorl %edi,%edi
	movb $0,%cl
	cmpl $0,56(%edx)
	jne L18325
	addl $-12,%esp
	pushl %edx
	call _append_plan__PZUB
	addl $16,%esp
	jmp L18326
	.p2align 2
L18325:
	movl 8(%ebp),%eax
	movl 40(%eax),%edx
	testl %edx,%edx
	je L18327
	movl (%edx),%eax
	cmpl $28,%eax
	je L18330
	ja L18334
	cmpl $17,%eax
	je L18331
	jmp L18328
	.p2align 2
L18334:
	cmpl $78,%eax
	jne L18328
	jmp L18331
	.p2align 2
L18330:
	movl 52(%edx),%esi
	jmp L18328
	.p2align 2
L18331:
	movl 56(%edx),%esi
L18328:
	testl %esi,%esi
	jne L18335
	movl 8(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _remove_plan__XSOC
	movb $1,%cl
	addl $16,%esp
	jmp L18339
	.p2align 2
L18335:
	movl 12(%esi),%eax
	movl (%eax),%edi
	movl 16(%esi),%eax
	movl (%eax),%eax
	movl %eax,-8(%ebp)
	movl 20(%esi),%eax
	movl (%eax),%eax
	movl %eax,-4(%ebp)
	movl 24(%esi),%eax
	movl (%eax),%eax
	decl %eax
	jmp L18497
	.p2align 2
L18327:
	movl $0,-4(%ebp)
	movl _parent_video__C2,%eax
	xorl %edi,%edi
	cmpl $16,(%eax)
	jne L18341
	movl 12(%eax),%edx
	jmp L18342
	.p2align 2
L18341:
	movl 8(%eax),%edx
L18342:
	subl $1,%edx
	movl %edx,-8(%ebp)
	cmpl $16,(%eax)
	jne L18345
	movl 8(%eax),%eax
	jmp L18346
	.p2align 2
L18345:
	movl 4(%eax),%eax
L18346:
	subl $1,%eax
L18497:
	movl %eax,-12(%ebp)
L18339:
	testb %cl,%cl
	jne L18326
	movl 8(%ebp),%eax
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%eax),%eax
	movl %eax,-16(%ebp)
	movl 12(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,%esi
	addl $32,%esp
	subl $1,%esi
	addl $-8,%esp
	movl 68(%edx),%edx
	movl %edx,-20(%ebp)
	movl 8(%ebp),%edx
	addl $-12,%esp
	movl 8(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-24(%ebp)
	addl $32,%esp
	subl $1,-24(%ebp)
	cmpl %edi,%esi
	setg %bl
	addl $-8,%esp
	pushl %edi
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L18357
	movl -8(%ebp),%edx
	cmpl %edx,-16(%ebp)
	jg L18357
	movl -4(%ebp),%eax
	cmpl %eax,-24(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -24(%ebp),%edx
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L18357
	movl -12(%ebp),%eax
	cmpl %eax,-20(%ebp)
	jle L18356
L18357:
	movl 8(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _remove_plan__XSOC
	addl $16,%esp
	jmp L18326
	.p2align 2
L18356:
	cmpl %edi,-16(%ebp)
	jle L18368
	movl -16(%ebp),%edi
L18368:
	movl %esi,%ebx
	cmpl -8(%ebp),%ebx
	jle L18372
	movl -8(%ebp),%ebx
L18372:
	movl -4(%ebp),%eax
	movl %eax,-32(%ebp)
	cmpl %eax,-20(%ebp)
	jle L18376
	movl -20(%ebp),%edx
	movl %edx,-32(%ebp)
L18376:
	movl -24(%ebp),%eax
	cmpl -12(%ebp),%eax
	jle L18380
	movl -12(%ebp),%eax
L18380:
	movl %eax,-24(%ebp)
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-24(%ebp)
	movl 56(%edx),%eax
	movl 16(%eax),%eax
	movl %ebx,(%eax)
	movl 56(%edx),%eax
	movl 16(%eax),%edx
	addl $32,%esp
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L18387
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
L18387:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L18389
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L18389:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 12(%eax),%eax
	cmpl (%eax),%edi
	je L18390
	movl %edi,(%eax)
	movl 56(%edx),%eax
	movl 12(%eax),%edx
	movl _list_x__K3,%ebx
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	jne L18392
	movl 8(%edx),%edi
	jmp L18393
	.p2align 2
L18392:
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
	movl %ebx,%edi
L18393:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L18394
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L18394:
	movl %edi,_list_x__K3
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl %edi,%ecx
	movl 12(%eax),%ebx
	movl $0,-36(%ebp)
	testl %ecx,%ecx
	je L18402
	movl 12(%ecx),%eax
	movl %eax,-36(%ebp)
	movl (%ecx),%edx
	movl (%ebx),%eax
	movl %eax,%esi
	cmpl %esi,%edx
	jg L18402
	movl %esi,-40(%ebp)
	.p2align 2
L18398:
	cmpl -40(%ebp),%edx
	jne L18399
	movl 4(%ebx),%edx
	movl 4(%ecx),%eax
	movl 4(%edx),%edx
	cmpl %edx,4(%eax)
	jle L18402
L18399:
	movl %ecx,-36(%ebp)
	movl 8(%ecx),%ecx
	testl %ecx,%ecx
	je L18402
	movl (%ecx),%edx
	cmpl %esi,%edx
	jle L18398
L18402:
	movl %ecx,8(%ebx)
	movl -36(%ebp),%edx
	movl %edx,12(%ebx)
	movl %ebx,%eax
	testl %edx,%edx
	je L18406
	movl %edi,%eax
	movl %ebx,8(%edx)
L18406:
	testl %ecx,%ecx
	je L18408
	movl %ebx,12(%ecx)
L18408:
	movl %eax,_list_x__K3
L18390:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	xorl %edi,%edi
	movl 16(%eax),%ebx
	movl 12(%eax),%ecx
	testl %ecx,%ecx
	je L18417
	movl 12(%ecx),%edi
	movl (%ecx),%edx
	movl (%ebx),%eax
	movl %eax,%esi
	cmpl %esi,%edx
	jg L18417
	movl %esi,-44(%ebp)
	.p2align 2
L18413:
	cmpl -44(%ebp),%edx
	jne L18414
	movl 4(%ebx),%edx
	movl 4(%ecx),%eax
	movl 4(%edx),%edx
	cmpl %edx,4(%eax)
	jle L18417
L18414:
	movl %ecx,%edi
	movl 8(%ecx),%ecx
	testl %ecx,%ecx
	je L18417
	movl (%ecx),%edx
	cmpl %esi,%edx
	jle L18413
L18417:
	movl %ecx,8(%ebx)
	movl %edi,12(%ebx)
	testl %edi,%edi
	je L18421
	movl %ebx,8(%edi)
L18421:
	testl %ecx,%ecx
	je L18425
	movl %ebx,12(%ecx)
L18425:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl -24(%ebp),%edx
	movl 24(%eax),%eax
	movl %edx,(%eax)
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 24(%eax),%edx
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	je L18428
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L18428:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L18430
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L18430:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%eax
	movl -32(%ebp),%edx
	cmpl (%eax),%edx
	je L18431
	movl %edx,(%eax)
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%edx
	movl _list_y__L3,%ebx
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	jne L18433
	movl 12(%edx),%eax
	movl %eax,-48(%ebp)
	jmp L18434
	.p2align 2
L18433:
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
	movl %ebx,-48(%ebp)
L18434:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L18435
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L18435:
	movl -48(%ebp),%edx
	movl %edx,_list_y__L3
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl -48(%ebp),%esi
	movl 20(%eax),%edi
	movl $0,-52(%ebp)
	jmp L18437
	.p2align 2
L18439:
	movl %esi,-52(%ebp)
	movl 12(%esi),%esi
L18437:
	testl %esi,%esi
	je L18444
	movl (%esi),%eax
	movl (%edi),%edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L18439
L18444:
	movl %esi,12(%edi)
	movl -52(%ebp),%eax
	movl %eax,16(%edi)
	movl %edi,%eax
	cmpl $0,-52(%ebp)
	je L18446
	movl -48(%ebp),%eax
	movl -52(%ebp),%edx
	movl %edi,12(%edx)
L18446:
	testl %esi,%esi
	je L18448
	movl %edi,16(%esi)
L18448:
	movl %eax,_list_y__L3
L18431:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 24(%eax),%edi
	movl $0,-56(%ebp)
	movl 20(%eax),%esi
	jmp L18451
	.p2align 2
L18453:
	movl %esi,-56(%ebp)
	movl 12(%esi),%esi
L18451:
	testl %esi,%esi
	je L18458
	movl (%esi),%eax
	movl (%edi),%edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L18453
L18458:
	movl %esi,12(%edi)
	movl -56(%ebp),%eax
	movl %eax,16(%edi)
	testl %eax,%eax
	je L18460
	movl %edi,12(%eax)
L18460:
	testl %esi,%esi
	je L18326
	movl %edi,16(%esi)
L18326:
	movl 8(%ebp),%edx
	movl 44(%edx),%ebx
	testl %ebx,%ebx
	je L18466
	.p2align 2
L18467:
	movl (%ebx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L18468
	jmp *L18480(,%eax,4)
	.p2align 2
L18480:
	.long L18478
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18479
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18468
	.long L18473
	.long L18470
	.long L18476
	.long L18468
	.long L18471
	.long L18475
	.long L18472
	.long L18469
	.long L18477
	.long L18474
	.p2align 2
L18469:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KILC
	jmp L18498
	.p2align 2
L18470:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__FYLC
	jmp L18498
	.p2align 2
L18471:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__DEMC
	jmp L18498
	.p2align 2
L18472:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__EUMC
	jmp L18498
	.p2align 2
L18473:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__7YKC
	jmp L18498
	.p2align 2
L18474:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KANC
	jmp L18498
	.p2align 2
L18475:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__TQNC
	jmp L18498
	.p2align 2
L18476:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__56NC
	jmp L18498
	.p2align 2
L18477:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KNOC
	jmp L18498
	.p2align 2
L18478:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__13OC
	jmp L18498
	.p2align 2
L18479:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__25XC
L18498:
	addl $16,%esp
L18468:
	movl (%ebx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L18482
	jmp *L18494(,%eax,4)
	.p2align 2
L18494:
	.long L18492
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18493
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18482
	.long L18487
	.long L18484
	.long L18490
	.long L18482
	.long L18485
	.long L18489
	.long L18486
	.long L18483
	.long L18491
	.long L18488
	.p2align 2
L18483:
	movl 52(%ebx),%ebx
	jmp L18499
	.p2align 2
L18484:
	movl 52(%ebx),%ebx
	jmp L18499
	.p2align 2
L18485:
	movl 52(%ebx),%ebx
	jmp L18499
	.p2align 2
L18486:
	movl 52(%ebx),%ebx
	jmp L18499
	.p2align 2
L18487:
	movl 52(%ebx),%ebx
	jmp L18499
	.p2align 2
L18488:
	movl 52(%ebx),%ebx
	jmp L18499
	.p2align 2
L18489:
	movl 52(%ebx),%ebx
	jmp L18499
	.p2align 2
L18490:
	movl 52(%ebx),%ebx
	jmp L18499
	.p2align 2
L18491:
	movl 52(%ebx),%ebx
	jmp L18499
	.p2align 2
L18492:
	movl 52(%ebx),%ebx
	jmp L18499
	.p2align 2
L18493:
	movl 48(%ebx),%ebx
L18499:
	movl %ebx,-28(%ebp)
L18482:
	movl -28(%ebp),%ebx
	testl %ebx,%ebx
	jne L18467
L18466:
	leal -88(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_sub_move__13OC:
	pushl %ebp
	movl %esp,%ebp
	subl $76,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%eax),%ebx
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,64(%edx)
	movl 16(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%edx),%ebx
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	addl $32,%esp
	movl %eax,68(%edx)
	movl $0,-12(%ebp)
	movl $0,-4(%ebp)
	movl $0,-8(%ebp)
	xorl %edi,%edi
	movb $0,%cl
	cmpl $0,56(%edx)
	jne L18503
	addl $-12,%esp
	pushl %edx
	call _append_plan__YLI
	addl $16,%esp
	jmp L18504
	.p2align 2
L18503:
	movl 8(%ebp),%eax
	movl 40(%eax),%edx
	testl %edx,%edx
	je L18505
	movl (%edx),%eax
	cmpl $28,%eax
	je L18508
	ja L18512
	cmpl $17,%eax
	je L18509
	jmp L18506
	.p2align 2
L18512:
	cmpl $78,%eax
	jne L18506
	jmp L18509
	.p2align 2
L18508:
	movl 52(%edx),%esi
	jmp L18506
	.p2align 2
L18509:
	movl 56(%edx),%esi
L18506:
	testl %esi,%esi
	jne L18513
	movl 8(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _remove_plan__48OC
	movb $1,%cl
	addl $16,%esp
	jmp L18517
	.p2align 2
L18513:
	movl 12(%esi),%eax
	movl (%eax),%edi
	movl 16(%esi),%eax
	movl (%eax),%eax
	movl %eax,-8(%ebp)
	movl 20(%esi),%eax
	movl (%eax),%eax
	movl %eax,-4(%ebp)
	movl 24(%esi),%eax
	movl (%eax),%eax
	decl %eax
	jmp L18675
	.p2align 2
L18505:
	movl $0,-4(%ebp)
	movl _parent_video__C2,%eax
	xorl %edi,%edi
	cmpl $16,(%eax)
	jne L18519
	movl 12(%eax),%edx
	jmp L18520
	.p2align 2
L18519:
	movl 8(%eax),%edx
L18520:
	subl $1,%edx
	movl %edx,-8(%ebp)
	cmpl $16,(%eax)
	jne L18523
	movl 8(%eax),%eax
	jmp L18524
	.p2align 2
L18523:
	movl 4(%eax),%eax
L18524:
	subl $1,%eax
L18675:
	movl %eax,-12(%ebp)
L18517:
	testb %cl,%cl
	jne L18504
	movl 8(%ebp),%eax
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%eax),%eax
	movl %eax,-16(%ebp)
	movl 12(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,%esi
	addl $32,%esp
	subl $1,%esi
	addl $-8,%esp
	movl 68(%edx),%edx
	movl %edx,-20(%ebp)
	movl 8(%ebp),%edx
	addl $-12,%esp
	movl 8(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-24(%ebp)
	addl $32,%esp
	subl $1,-24(%ebp)
	cmpl %edi,%esi
	setg %bl
	addl $-8,%esp
	pushl %edi
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L18535
	movl -8(%ebp),%edx
	cmpl %edx,-16(%ebp)
	jg L18535
	movl -4(%ebp),%eax
	cmpl %eax,-24(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -24(%ebp),%edx
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L18535
	movl -12(%ebp),%eax
	cmpl %eax,-20(%ebp)
	jle L18534
L18535:
	movl 8(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _remove_plan__48OC
	addl $16,%esp
	jmp L18504
	.p2align 2
L18534:
	cmpl %edi,-16(%ebp)
	jle L18546
	movl -16(%ebp),%edi
L18546:
	movl %esi,%ebx
	cmpl -8(%ebp),%ebx
	jle L18550
	movl -8(%ebp),%ebx
L18550:
	movl -4(%ebp),%eax
	movl %eax,-32(%ebp)
	cmpl %eax,-20(%ebp)
	jle L18554
	movl -20(%ebp),%edx
	movl %edx,-32(%ebp)
L18554:
	movl -24(%ebp),%eax
	cmpl -12(%ebp),%eax
	jle L18558
	movl -12(%ebp),%eax
L18558:
	movl %eax,-24(%ebp)
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-24(%ebp)
	movl 56(%edx),%eax
	movl 16(%eax),%eax
	movl %ebx,(%eax)
	movl 56(%edx),%eax
	movl 16(%eax),%edx
	addl $32,%esp
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L18565
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
L18565:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L18567
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L18567:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 12(%eax),%eax
	cmpl (%eax),%edi
	je L18568
	movl %edi,(%eax)
	movl 56(%edx),%eax
	movl 12(%eax),%edx
	movl _list_x__K3,%ebx
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	jne L18570
	movl 8(%edx),%edi
	jmp L18571
	.p2align 2
L18570:
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
	movl %ebx,%edi
L18571:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L18572
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L18572:
	movl %edi,_list_x__K3
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl %edi,%ecx
	movl 12(%eax),%ebx
	movl $0,-36(%ebp)
	testl %ecx,%ecx
	je L18580
	movl 12(%ecx),%eax
	movl %eax,-36(%ebp)
	movl (%ecx),%edx
	movl (%ebx),%eax
	movl %eax,%esi
	cmpl %esi,%edx
	jg L18580
	movl %esi,-40(%ebp)
	.p2align 2
L18576:
	cmpl -40(%ebp),%edx
	jne L18577
	movl 4(%ebx),%edx
	movl 4(%ecx),%eax
	movl 4(%edx),%edx
	cmpl %edx,4(%eax)
	jle L18580
L18577:
	movl %ecx,-36(%ebp)
	movl 8(%ecx),%ecx
	testl %ecx,%ecx
	je L18580
	movl (%ecx),%edx
	cmpl %esi,%edx
	jle L18576
L18580:
	movl %ecx,8(%ebx)
	movl -36(%ebp),%edx
	movl %edx,12(%ebx)
	movl %ebx,%eax
	testl %edx,%edx
	je L18584
	movl %edi,%eax
	movl %ebx,8(%edx)
L18584:
	testl %ecx,%ecx
	je L18586
	movl %ebx,12(%ecx)
L18586:
	movl %eax,_list_x__K3
L18568:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	xorl %edi,%edi
	movl 16(%eax),%ebx
	movl 12(%eax),%ecx
	testl %ecx,%ecx
	je L18595
	movl 12(%ecx),%edi
	movl (%ecx),%edx
	movl (%ebx),%eax
	movl %eax,%esi
	cmpl %esi,%edx
	jg L18595
	movl %esi,-44(%ebp)
	.p2align 2
L18591:
	cmpl -44(%ebp),%edx
	jne L18592
	movl 4(%ebx),%edx
	movl 4(%ecx),%eax
	movl 4(%edx),%edx
	cmpl %edx,4(%eax)
	jle L18595
L18592:
	movl %ecx,%edi
	movl 8(%ecx),%ecx
	testl %ecx,%ecx
	je L18595
	movl (%ecx),%edx
	cmpl %esi,%edx
	jle L18591
L18595:
	movl %ecx,8(%ebx)
	movl %edi,12(%ebx)
	testl %edi,%edi
	je L18599
	movl %ebx,8(%edi)
L18599:
	testl %ecx,%ecx
	je L18603
	movl %ebx,12(%ecx)
L18603:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl -24(%ebp),%edx
	movl 24(%eax),%eax
	movl %edx,(%eax)
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 24(%eax),%edx
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	je L18606
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L18606:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L18608
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L18608:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%eax
	movl -32(%ebp),%edx
	cmpl (%eax),%edx
	je L18609
	movl %edx,(%eax)
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%edx
	movl _list_y__L3,%ebx
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	jne L18611
	movl 12(%edx),%eax
	movl %eax,-48(%ebp)
	jmp L18612
	.p2align 2
L18611:
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
	movl %ebx,-48(%ebp)
L18612:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L18613
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L18613:
	movl -48(%ebp),%edx
	movl %edx,_list_y__L3
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl -48(%ebp),%esi
	movl 20(%eax),%edi
	movl $0,-52(%ebp)
	jmp L18615
	.p2align 2
L18617:
	movl %esi,-52(%ebp)
	movl 12(%esi),%esi
L18615:
	testl %esi,%esi
	je L18622
	movl (%esi),%eax
	movl (%edi),%edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L18617
L18622:
	movl %esi,12(%edi)
	movl -52(%ebp),%eax
	movl %eax,16(%edi)
	movl %edi,%eax
	cmpl $0,-52(%ebp)
	je L18624
	movl -48(%ebp),%eax
	movl -52(%ebp),%edx
	movl %edi,12(%edx)
L18624:
	testl %esi,%esi
	je L18626
	movl %edi,16(%esi)
L18626:
	movl %eax,_list_y__L3
L18609:
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 24(%eax),%edi
	movl $0,-56(%ebp)
	movl 20(%eax),%esi
	jmp L18629
	.p2align 2
L18631:
	movl %esi,-56(%ebp)
	movl 12(%esi),%esi
L18629:
	testl %esi,%esi
	je L18636
	movl (%esi),%eax
	movl (%edi),%edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L18631
L18636:
	movl %esi,12(%edi)
	movl -56(%ebp),%eax
	movl %eax,16(%edi)
	testl %eax,%eax
	je L18638
	movl %edi,12(%eax)
L18638:
	testl %esi,%esi
	je L18504
	movl %edi,16(%esi)
L18504:
	movl 8(%ebp),%edx
	movl 44(%edx),%ebx
	testl %ebx,%ebx
	je L18644
	.p2align 2
L18645:
	movl (%ebx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L18646
	jmp *L18658(,%eax,4)
	.p2align 2
L18658:
	.long L18656
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18657
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18646
	.long L18651
	.long L18648
	.long L18654
	.long L18646
	.long L18649
	.long L18653
	.long L18650
	.long L18647
	.long L18655
	.long L18652
	.p2align 2
L18647:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KILC
	jmp L18676
	.p2align 2
L18648:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__FYLC
	jmp L18676
	.p2align 2
L18649:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__DEMC
	jmp L18676
	.p2align 2
L18650:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__EUMC
	jmp L18676
	.p2align 2
L18651:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__7YKC
	jmp L18676
	.p2align 2
L18652:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KANC
	jmp L18676
	.p2align 2
L18653:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__TQNC
	jmp L18676
	.p2align 2
L18654:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__56NC
	jmp L18676
	.p2align 2
L18655:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KNOC
	jmp L18676
	.p2align 2
L18656:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__13OC
	jmp L18676
	.p2align 2
L18657:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__25XC
L18676:
	addl $16,%esp
L18646:
	movl (%ebx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L18660
	jmp *L18672(,%eax,4)
	.p2align 2
L18672:
	.long L18670
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18671
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18660
	.long L18665
	.long L18662
	.long L18668
	.long L18660
	.long L18663
	.long L18667
	.long L18664
	.long L18661
	.long L18669
	.long L18666
	.p2align 2
L18661:
	movl 52(%ebx),%ebx
	jmp L18677
	.p2align 2
L18662:
	movl 52(%ebx),%ebx
	jmp L18677
	.p2align 2
L18663:
	movl 52(%ebx),%ebx
	jmp L18677
	.p2align 2
L18664:
	movl 52(%ebx),%ebx
	jmp L18677
	.p2align 2
L18665:
	movl 52(%ebx),%ebx
	jmp L18677
	.p2align 2
L18666:
	movl 52(%ebx),%ebx
	jmp L18677
	.p2align 2
L18667:
	movl 52(%ebx),%ebx
	jmp L18677
	.p2align 2
L18668:
	movl 52(%ebx),%ebx
	jmp L18677
	.p2align 2
L18669:
	movl 52(%ebx),%ebx
	jmp L18677
	.p2align 2
L18670:
	movl 52(%ebx),%ebx
	jmp L18677
	.p2align 2
L18671:
	movl 48(%ebx),%ebx
L18677:
	movl %ebx,-28(%ebp)
L18660:
	movl -28(%ebp),%ebx
	testl %ebx,%ebx
	jne L18645
L18644:
	leal -88(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_sub_move__25XC:
	pushl %ebp
	movl %esp,%ebp
	subl $76,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 60(%eax),%ebx
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,60(%edx)
	movl 16(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%edx),%ebx
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	addl $32,%esp
	movl %eax,64(%edx)
	movl $0,-12(%ebp)
	movl $0,-4(%ebp)
	movl $0,-8(%ebp)
	xorl %edi,%edi
	movb $0,%cl
	cmpl $0,52(%edx)
	jne L18681
	addl $-12,%esp
	pushl %edx
	call _append_plan__GEE
	addl $16,%esp
	jmp L18682
	.p2align 2
L18681:
	movl 8(%ebp),%eax
	movl 36(%eax),%edx
	testl %edx,%edx
	je L18683
	movl (%edx),%eax
	cmpl $28,%eax
	je L18686
	ja L18690
	cmpl $17,%eax
	je L18687
	jmp L18684
	.p2align 2
L18690:
	cmpl $78,%eax
	jne L18684
	jmp L18687
	.p2align 2
L18686:
	movl 52(%edx),%esi
	jmp L18684
	.p2align 2
L18687:
	movl 56(%edx),%esi
L18684:
	testl %esi,%esi
	jne L18691
	movl 8(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _remove_plan__VAYC
	movb $1,%cl
	addl $16,%esp
	jmp L18695
	.p2align 2
L18691:
	movl 12(%esi),%eax
	movl (%eax),%edi
	movl 16(%esi),%eax
	movl (%eax),%eax
	movl %eax,-8(%ebp)
	movl 20(%esi),%eax
	movl (%eax),%eax
	movl %eax,-4(%ebp)
	movl 24(%esi),%eax
	movl (%eax),%eax
	decl %eax
	jmp L18853
	.p2align 2
L18683:
	movl $0,-4(%ebp)
	movl _parent_video__C2,%eax
	xorl %edi,%edi
	cmpl $16,(%eax)
	jne L18697
	movl 12(%eax),%edx
	jmp L18698
	.p2align 2
L18697:
	movl 8(%eax),%edx
L18698:
	subl $1,%edx
	movl %edx,-8(%ebp)
	cmpl $16,(%eax)
	jne L18701
	movl 8(%eax),%eax
	jmp L18702
	.p2align 2
L18701:
	movl 4(%eax),%eax
L18702:
	subl $1,%eax
L18853:
	movl %eax,-12(%ebp)
L18695:
	testb %cl,%cl
	jne L18682
	movl 8(%ebp),%eax
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 60(%eax),%eax
	movl %eax,-16(%ebp)
	movl 8(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,%esi
	addl $32,%esp
	subl $1,%esi
	addl $-8,%esp
	movl 64(%edx),%edx
	movl %edx,-20(%ebp)
	movl 8(%ebp),%edx
	addl $-12,%esp
	movl 4(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-24(%ebp)
	addl $32,%esp
	subl $1,-24(%ebp)
	cmpl %edi,%esi
	setg %bl
	addl $-8,%esp
	pushl %edi
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L18713
	movl -8(%ebp),%edx
	cmpl %edx,-16(%ebp)
	jg L18713
	movl -4(%ebp),%eax
	cmpl %eax,-24(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -24(%ebp),%edx
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L18713
	movl -12(%ebp),%eax
	cmpl %eax,-20(%ebp)
	jle L18712
L18713:
	movl 8(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _remove_plan__VAYC
	addl $16,%esp
	jmp L18682
	.p2align 2
L18712:
	cmpl %edi,-16(%ebp)
	jle L18724
	movl -16(%ebp),%edi
L18724:
	movl %esi,%ebx
	cmpl -8(%ebp),%ebx
	jle L18728
	movl -8(%ebp),%ebx
L18728:
	movl -4(%ebp),%eax
	movl %eax,-32(%ebp)
	cmpl %eax,-20(%ebp)
	jle L18732
	movl -20(%ebp),%edx
	movl %edx,-32(%ebp)
L18732:
	movl -24(%ebp),%eax
	cmpl -12(%ebp),%eax
	jle L18736
	movl -12(%ebp),%eax
L18736:
	movl %eax,-24(%ebp)
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-24(%ebp)
	movl 52(%edx),%eax
	movl 16(%eax),%eax
	movl %ebx,(%eax)
	movl 52(%edx),%eax
	movl 16(%eax),%edx
	addl $32,%esp
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L18743
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
L18743:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L18745
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L18745:
	movl 8(%ebp),%edx
	movl 52(%edx),%eax
	movl 12(%eax),%eax
	cmpl (%eax),%edi
	je L18746
	movl %edi,(%eax)
	movl 52(%edx),%eax
	movl 12(%eax),%edx
	movl _list_x__K3,%ebx
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	jne L18748
	movl 8(%edx),%edi
	jmp L18749
	.p2align 2
L18748:
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
	movl %ebx,%edi
L18749:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L18750
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L18750:
	movl %edi,_list_x__K3
	movl 8(%ebp),%edx
	movl 52(%edx),%eax
	movl %edi,%ecx
	movl 12(%eax),%ebx
	movl $0,-36(%ebp)
	testl %ecx,%ecx
	je L18758
	movl 12(%ecx),%eax
	movl %eax,-36(%ebp)
	movl (%ecx),%edx
	movl (%ebx),%eax
	movl %eax,%esi
	cmpl %esi,%edx
	jg L18758
	movl %esi,-40(%ebp)
	.p2align 2
L18754:
	cmpl -40(%ebp),%edx
	jne L18755
	movl 4(%ebx),%edx
	movl 4(%ecx),%eax
	movl 4(%edx),%edx
	cmpl %edx,4(%eax)
	jle L18758
L18755:
	movl %ecx,-36(%ebp)
	movl 8(%ecx),%ecx
	testl %ecx,%ecx
	je L18758
	movl (%ecx),%edx
	cmpl %esi,%edx
	jle L18754
L18758:
	movl %ecx,8(%ebx)
	movl -36(%ebp),%edx
	movl %edx,12(%ebx)
	movl %ebx,%eax
	testl %edx,%edx
	je L18762
	movl %edi,%eax
	movl %ebx,8(%edx)
L18762:
	testl %ecx,%ecx
	je L18764
	movl %ebx,12(%ecx)
L18764:
	movl %eax,_list_x__K3
L18746:
	movl 8(%ebp),%edx
	movl 52(%edx),%eax
	xorl %edi,%edi
	movl 16(%eax),%ebx
	movl 12(%eax),%ecx
	testl %ecx,%ecx
	je L18773
	movl 12(%ecx),%edi
	movl (%ecx),%edx
	movl (%ebx),%eax
	movl %eax,%esi
	cmpl %esi,%edx
	jg L18773
	movl %esi,-44(%ebp)
	.p2align 2
L18769:
	cmpl -44(%ebp),%edx
	jne L18770
	movl 4(%ebx),%edx
	movl 4(%ecx),%eax
	movl 4(%edx),%edx
	cmpl %edx,4(%eax)
	jle L18773
L18770:
	movl %ecx,%edi
	movl 8(%ecx),%ecx
	testl %ecx,%ecx
	je L18773
	movl (%ecx),%edx
	cmpl %esi,%edx
	jle L18769
L18773:
	movl %ecx,8(%ebx)
	movl %edi,12(%ebx)
	testl %edi,%edi
	je L18777
	movl %ebx,8(%edi)
L18777:
	testl %ecx,%ecx
	je L18781
	movl %ebx,12(%ecx)
L18781:
	movl 8(%ebp),%edx
	movl 52(%edx),%eax
	movl -24(%ebp),%edx
	movl 24(%eax),%eax
	movl %edx,(%eax)
	movl 8(%ebp),%edx
	movl 52(%edx),%eax
	movl 24(%eax),%edx
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	je L18784
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L18784:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L18786
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L18786:
	movl 8(%ebp),%edx
	movl 52(%edx),%eax
	movl 20(%eax),%eax
	movl -32(%ebp),%edx
	cmpl (%eax),%edx
	je L18787
	movl %edx,(%eax)
	movl 8(%ebp),%edx
	movl 52(%edx),%eax
	movl 20(%eax),%edx
	movl _list_y__L3,%ebx
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	jne L18789
	movl 12(%edx),%eax
	movl %eax,-48(%ebp)
	jmp L18790
	.p2align 2
L18789:
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
	movl %ebx,-48(%ebp)
L18790:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L18791
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L18791:
	movl -48(%ebp),%edx
	movl %edx,_list_y__L3
	movl 8(%ebp),%edx
	movl 52(%edx),%eax
	movl -48(%ebp),%esi
	movl 20(%eax),%edi
	movl $0,-52(%ebp)
	jmp L18793
	.p2align 2
L18795:
	movl %esi,-52(%ebp)
	movl 12(%esi),%esi
L18793:
	testl %esi,%esi
	je L18800
	movl (%esi),%eax
	movl (%edi),%edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L18795
L18800:
	movl %esi,12(%edi)
	movl -52(%ebp),%eax
	movl %eax,16(%edi)
	movl %edi,%eax
	cmpl $0,-52(%ebp)
	je L18802
	movl -48(%ebp),%eax
	movl -52(%ebp),%edx
	movl %edi,12(%edx)
L18802:
	testl %esi,%esi
	je L18804
	movl %edi,16(%esi)
L18804:
	movl %eax,_list_y__L3
L18787:
	movl 8(%ebp),%edx
	movl 52(%edx),%eax
	movl 24(%eax),%edi
	movl $0,-56(%ebp)
	movl 20(%eax),%esi
	jmp L18807
	.p2align 2
L18809:
	movl %esi,-56(%ebp)
	movl 12(%esi),%esi
L18807:
	testl %esi,%esi
	je L18814
	movl (%esi),%eax
	movl (%edi),%edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L18809
L18814:
	movl %esi,12(%edi)
	movl -56(%ebp),%eax
	movl %eax,16(%edi)
	testl %eax,%eax
	je L18816
	movl %edi,12(%eax)
L18816:
	testl %esi,%esi
	je L18682
	movl %edi,16(%esi)
L18682:
	movl 8(%ebp),%edx
	movl 40(%edx),%ebx
	testl %ebx,%ebx
	je L18822
	.p2align 2
L18823:
	movl (%ebx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L18824
	jmp *L18836(,%eax,4)
	.p2align 2
L18836:
	.long L18835
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18832
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18824
	.long L18829
	.long L18826
	.long L18833
	.long L18824
	.long L18827
	.long L18831
	.long L18828
	.long L18825
	.long L18834
	.long L18830
	.p2align 2
L18825:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KILC
	jmp L18854
	.p2align 2
L18826:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__FYLC
	jmp L18854
	.p2align 2
L18827:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__DEMC
	jmp L18854
	.p2align 2
L18828:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__EUMC
	jmp L18854
	.p2align 2
L18829:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__7YKC
	jmp L18854
	.p2align 2
L18830:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KANC
	jmp L18854
	.p2align 2
L18831:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__TQNC
	jmp L18854
	.p2align 2
L18832:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__25XC
	jmp L18854
	.p2align 2
L18833:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__56NC
	jmp L18854
	.p2align 2
L18834:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__KNOC
	jmp L18854
	.p2align 2
L18835:
	movl 16(%ebp),%eax
	addl $-4,%esp
	pushl %eax
	movl 12(%ebp),%edx
	pushl %edx
	pushl %ebx
	call _sub_move__13OC
L18854:
	addl $16,%esp
L18824:
	movl (%ebx),%eax
	addl $-17,%eax
	cmpl $70,%eax
	ja L18838
	jmp *L18850(,%eax,4)
	.p2align 2
L18850:
	.long L18849
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18846
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18838
	.long L18849
	.long L18849
	.long L18849
	.long L18838
	.long L18849
	.long L18849
	.long L18849
	.long L18849
	.long L18848
	.long L18849
	.p2align 2
L18846:
	movl 48(%ebx),%ebx
	jmp L18855
	.p2align 2
L18848:
L18849:
	movl 52(%ebx),%ebx
L18855:
	movl %ebx,-28(%ebp)
L18838:
	movl -28(%ebp),%ebx
	testl %ebx,%ebx
	jne L18823
L18822:
	leal -88(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_h_hard__until__color__82J:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	cmpl $0,56(%eax)
	je L18858
	movl 64(%eax),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%ecx
	movl %eax,-8(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%ecx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,%esi
	movl 56(%edx),%eax
	addl $32,%esp
	movl 24(%eax),%eax
	addl $-8,%esp
	movl (%eax),%eax
	cmpl %eax,-8(%ebp)
	setg %bl
	pushl %eax
	movl -8(%ebp),%ecx
	pushl %ecx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L18858
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%eax
	addl $-8,%esp
	movl (%eax),%eax
	cmpl %eax,-8(%ebp)
	setg %bl
	pushl %eax
	movl -8(%ebp),%ecx
	pushl %ecx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L18858
	movl 8(%ebp),%eax
	movl 56(%eax),%edx
	movl 12(%edx),%eax
	movl (%eax),%eax
	cmpl %eax,-4(%ebp)
	jle L18869
	movl -4(%ebp),%eax
L18869:
	movl %eax,-4(%ebp)
	movl 16(%edx),%eax
	movl (%eax),%eax
	movl %esi,-20(%ebp)
	cmpl %eax,%esi
	jle L18873
	movl %eax,-20(%ebp)
L18873:
	movl -20(%ebp),%edx
	cmpl %edx,-4(%ebp)
	jg L18858
	.p2align 2
L18973:
	movl -8(%ebp),%ecx
	addl $-4,%esp
	pushl %ecx
	movl -4(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _get_clip__66J
	movl 8(%eax),%edx
	movl -20(%ebp),%ecx
	addl $16,%esp
	movl %ecx,-24(%ebp)
	cmpl %edx,%ecx
	jle L18883
	movl %edx,-24(%ebp)
L18883:
	movl 16(%eax),%edx
	cmpl 8(%ebp),%edx
	jne L18886
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L18921
	movl 24(%ebp),%eax
	shrl $16,%eax
	movl %eax,%ebx
	movl 24(%ebp),%eax
	andl $192,%ebx
	shrl $10,%eax
	andl $56,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	pushl %ebx
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movb %al,%bl
	movl 24(%ebp),%eax
	addl $48,%esp
	shrl $5,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	andl $7,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movl -8(%ebp),%ebx
	movb %al,-13(%ebp)
	movl -8(%ebp),%eax
	addl $48,%esp
	sall $8,%ebx
	sall $6,%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	movl -4(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	movw $2,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	movl -24(%ebp),%edx
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl -4(%ebp),%esi
	cmpl %esi,%ebx
	jg L18976
	.p2align 2
L18913:
	addl $-4,%esp
	xorl %eax,%eax
	movb -13(%ebp),%al
	pushl %eax
	pushl %ebx
	xorl %eax,%eax
	movw ___desc_video,%ax
	pushl %eax
	call __farpokeb
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L18913
L18976:
	movw $1,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	addl $16,%esp
	jmp L18925
	.p2align 2
L18921:
	call _get_line__9VK
	addl $-8,%esp
	pushl $___dj_stdout
	pushl $78
	call _fputc
	addl $16,%esp
	addl $-12,%esp
	pushl $1
	call _exit
	.p2align 2
L18886:
	movl (%edx),%eax
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L18926
	jmp *L18938(,%ecx,4)
	.p2align 2
L18938:
	.long L18937
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18927
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18926
	.long L18937
	.long L18937
	.long L18936
	.long L18926
	.long L18937
	.long L18937
	.long L18937
	.long L18937
	.long L18937
	.long L18937
	.p2align 2
L18927:
	movl 60(%edx),%edi
	jmp L18926
	.p2align 2
L18936:
L18937:
	movl 64(%edx),%edi
L18926:
	movl -4(%ebp),%esi
	subl %edi,%esi
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L18941
	jmp *L18953(,%ecx,4)
	.p2align 2
L18953:
	.long L18952
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18942
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18941
	.long L18952
	.long L18952
	.long L18951
	.long L18941
	.long L18952
	.long L18952
	.long L18952
	.long L18952
	.long L18952
	.long L18952
	.p2align 2
L18942:
	movl 64(%edx),%ecx
	jmp L18977
	.p2align 2
L18951:
L18952:
	movl 68(%edx),%ecx
L18977:
	movl %ecx,-12(%ebp)
L18941:
	movl -8(%ebp),%ebx
	movl -24(%ebp),%ecx
	subl -12(%ebp),%ebx
	subl %edi,%ecx
	addl $-17,%eax
	cmpl $70,%eax
	ja L18925
	jmp *L18969(,%eax,4)
	.p2align 2
L18969:
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18964
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.long L18925
	.p2align 2
L18964:
	movl 24(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	pushl %ecx
	pushl %ebx
	pushl %esi
	pushl %edx
	call _slave_line_h_hard__until__color__GC8B
	addl $32,%esp
L18925:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl -20(%ebp),%ecx
	movl %eax,-4(%ebp)
	addl $32,%esp
	cmpl %ecx,%eax
	jle L18973
L18858:
	leal -56(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_h_until__4CL:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%edi
	movl 8(%ebp),%edx
	movb $0,-5(%ebp)
	addl $-8,%esp
	movl 32(%eax),%eax
	movl %eax,-4(%ebp)
	movl 36(%edx),%esi
	movl 20(%edx),%ebx
	movl 28(%edx),%eax
	movl %edi,32(%edx)
	movl %eax,-12(%ebp)
	movl $0,-16(%ebp)
	pushl %ebx
	pushl %esi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%esi
	sete %al
	orb %dl,%al
	je L18981
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-16(%ebp)
L18981:
	cmpb $0,-16(%ebp)
	je L18979
	movb $1,-5(%ebp)
	cmpl %edi,-4(%ebp)
	jle L18983
	movl -4(%ebp),%eax
	movl %edi,-4(%ebp)
	movl %eax,%edi
L18983:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 24(%edx),%eax
	cmpl %edi,%eax
	setg %bl
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L18985
	movl 8(%ebp),%eax
	movl 24(%eax),%edi
	movb $0,-5(%ebp)
L18985:
	movl 8(%ebp),%edx
	movl 16(%edx),%eax
	cmpl -4(%ebp),%eax
	jle L18989
	movl %eax,-4(%ebp)
	movb $0,-5(%ebp)
L18989:
	cmpl %edi,-4(%ebp)
	jg L18979
	movl 8(%ebp),%eax
	movl 36(%eax),%edx
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L18994
	movl 32(%eax),%eax
	jmp L18995
	.p2align 2
L18994:
	movl 28(%eax),%eax
L18995:
	addl $-12,%esp
	pushl %eax
	pushl %edi
	pushl %edx
	movl -4(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _line_h_hard__until__color__82J
L18979:
	leal -40(%ebp),%esp
	movsbl -5(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_v_until__XHL:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	movb $0,-25(%ebp)
	addl $-8,%esp
	movl 36(%eax),%edi
	movl %edx,-4(%ebp)
	movl 32(%eax),%esi
	movl 16(%eax),%ebx
	movl 24(%eax),%ecx
	movl %edx,36(%eax)
	movl %ecx,-32(%ebp)
	movl $0,-36(%ebp)
	pushl %ebx
	pushl %esi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%esi
	sete %al
	orb %dl,%al
	je L18999
	movl -32(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-36(%ebp)
L18999:
	cmpb $0,-36(%ebp)
	je L18997
	movb $1,-25(%ebp)
	cmpl -4(%ebp),%edi
	jle L19001
	movl %edi,%eax
	movl -4(%ebp),%edi
	movl %eax,-4(%ebp)
L19001:
	movl 8(%ebp),%ecx
	movl -4(%ebp),%edx
	addl $-8,%esp
	movl 28(%ecx),%eax
	cmpl -4(%ebp),%eax
	setg %bl
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L19003
	movl 8(%ebp),%ecx
	movl 28(%ecx),%ecx
	movl %ecx,-4(%ebp)
	movb $0,-25(%ebp)
L19003:
	movl 8(%ebp),%edx
	movl 20(%edx),%eax
	cmpl %edi,%eax
	jle L19007
	movl %eax,%edi
	movb $0,-25(%ebp)
L19007:
	cmpl -4(%ebp),%edi
	jg L18997
	movl -4(%ebp),%ecx
	movl %edi,-24(%ebp)
	cmpl %ecx,%edi
	jg L18997
	.p2align 2
L19014:
	movl 8(%ebp),%eax
	movl 32(%eax),%ebx
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L19017
	movl 32(%eax),%edi
	jmp L19018
	.p2align 2
L19017:
	movl 28(%eax),%edi
L19018:
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%ecx
	movl %eax,-16(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%ecx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	addl $-4,%esp
	pushl %esi
	movl -16(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%ecx
	pushl %ecx
	call _get_clip__66J
	addl $16,%esp
	testl %eax,%eax
	je L19021
	movl 16(%eax),%edx
	cmpl 8(%ebp),%edx
	jne L19022
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L19045
	movl %edi,%eax
	shrl $16,%eax
	movl %eax,%ebx
	andl $192,%ebx
	movl %edi,%eax
	shrl $10,%eax
	andl $56,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	pushl %ebx
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movb %al,%bl
	addl $48,%esp
	movl %edi,%eax
	shrl $5,%eax
	andl $7,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movb %al,-17(%ebp)
	addl $48,%esp
	sall $6,%esi
	addl $-8,%esp
	addl $-12,%esp
	pushl %esi
	call ___prefix_sub__05B
	pushl %eax
	sall $2,%esi
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%ebx
	movl -16(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	movw $2,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	addl $16,%esp
	addl $-4,%esp
	xorl %eax,%eax
	movb -17(%ebp),%al
	pushl %eax
	pushl %ebx
	xorl %eax,%eax
	movw ___desc_video,%ax
	pushl %eax
	call __farpokeb
	addl $16,%esp
	movw $1,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	jmp L19097
	.p2align 2
L19045:
	call _get_line__9VK
	addl $-8,%esp
	pushl $___dj_stdout
	pushl $78
	call _fputc
	addl $16,%esp
	addl $-12,%esp
	pushl $1
	call _exit
	.p2align 2
L19022:
	movl (%edx),%eax
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L19050
	jmp *L19062(,%ecx,4)
	.p2align 2
L19062:
	.long L19061
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19051
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19050
	.long L19061
	.long L19061
	.long L19060
	.long L19050
	.long L19061
	.long L19061
	.long L19061
	.long L19061
	.long L19061
	.long L19061
	.p2align 2
L19051:
	movl 60(%edx),%ecx
	jmp L19098
	.p2align 2
L19060:
L19061:
	movl 64(%edx),%ecx
L19098:
	movl %ecx,-8(%ebp)
L19050:
	movl -16(%ebp),%ebx
	subl -8(%ebp),%ebx
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L19065
	jmp *L19077(,%ecx,4)
	.p2align 2
L19077:
	.long L19076
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19066
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19065
	.long L19076
	.long L19076
	.long L19075
	.long L19065
	.long L19076
	.long L19076
	.long L19076
	.long L19076
	.long L19076
	.long L19076
	.p2align 2
L19066:
	movl 64(%edx),%ecx
	jmp L19099
	.p2align 2
L19075:
L19076:
	movl 68(%edx),%ecx
L19099:
	movl %ecx,-12(%ebp)
L19065:
	movl %esi,%ecx
	subl -12(%ebp),%ecx
	addl $-17,%eax
	cmpl $70,%eax
	ja L19021
	jmp *L19092(,%eax,4)
	.p2align 2
L19092:
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19087
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.long L19021
	.p2align 2
L19087:
	pushl %edi
	pushl %ecx
	pushl %ebx
	pushl %edx
	call _slave_pixel_hard__color__6P7B
L19097:
	addl $16,%esp
L19021:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl %eax,-24(%ebp)
	addl $32,%esp
	cmpl %edx,%eax
	jle L19014
L18997:
	leal -56(%ebp),%esp
	movsbl -25(%ebp),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_slave_pixel_hard__color__6P7B:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	movl 16(%ebp),%esi
	cmpl $16,%esi
	setg %bl
	addl $-8,%esp
	pushl $16
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L19120
	movl 8(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	movl 80(%eax),%ebx
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %esi
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	cmpl %eax,%edi
	jg L19119
L19120:
	movl 8(%ebp),%eax
	xorl %ebx,%ebx
	cmpl $20,%esi
	sete %dl
	movl 8(%eax),%ecx
	addl $-5,%ecx
	cmpl $20,%esi
	setg %al
	orb %dl,%al
	je L19138
	cmpl %ecx,%esi
	setle %al
	movb %al,%bl
L19138:
	testb %bl,%bl
	je L19118
	movl 8(%ebp),%eax
	xorl %ebx,%ebx
	cmpl $4,%edi
	sete %dl
	movl 12(%eax),%ecx
	addl $-5,%ecx
	cmpl $4,%edi
	setg %al
	orb %dl,%al
	je L19152
	cmpl %ecx,%edi
	setle %al
	movb %al,%bl
L19152:
	testb %bl,%bl
	je L19118
L19119:
	movl 20(%ebp),%eax
	pushl %eax
	pushl %esi
	pushl %edi
	movl 8(%ebp),%eax
	pushl %eax
	call _pixel_hard__color__C46B
L19118:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_rectangle_fill_to__YWR:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 8(%ebp),%edx
	movl 12(%ebp),%edi
	movl 16(%ebp),%esi
	movl 32(%eax),%eax
	movl %eax,-8(%ebp)
	movl 36(%edx),%edx
	movl %edx,-12(%ebp)
	cmpl %edi,%eax
	jle L19158
	movl %edi,-8(%ebp)
	movl %eax,%edi
L19158:
	cmpl %esi,-12(%ebp)
	jle L19160
	movl -12(%ebp),%eax
	movl %esi,-12(%ebp)
	movl %eax,%esi
L19160:
	movl 8(%ebp),%eax
	movl -8(%ebp),%edx
	cmpl 24(%eax),%edx
	jg L19172
	movl 16(%eax),%eax
	cmpl %eax,%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L19172
	movl 8(%ebp),%eax
	movl -12(%ebp),%edx
	cmpl 28(%eax),%edx
	jg L19172
	movl 20(%eax),%eax
	cmpl %eax,%esi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L19172
	movl 8(%ebp),%edx
	movl 16(%edx),%eax
	cmpl -8(%ebp),%eax
	jle L19173
	movl %eax,-8(%ebp)
L19173:
	movl 8(%ebp),%edx
	movl 20(%edx),%eax
	cmpl -12(%ebp),%eax
	jle L19175
	movl %eax,-12(%ebp)
L19175:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 24(%edx),%eax
	cmpl %edi,%eax
	setg %bl
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L19177
	movl 8(%ebp),%eax
	movl 24(%eax),%edi
L19177:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 28(%edx),%eax
	cmpl %esi,%eax
	setg %bl
	pushl %esi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L19181
	movl 8(%ebp),%eax
	movl 28(%eax),%esi
L19181:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L19185
	movl 32(%eax),%eax
	jmp L19195
	.p2align 2
L19185:
	movl 28(%eax),%eax
L19195:
	movl %eax,-4(%ebp)
	movl -12(%ebp),%ebx
	cmpl %esi,%ebx
	jg L19172
	.p2align 2
L19189:
	movl -4(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	pushl %edi
	pushl %ebx
	movl -8(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _line_h_hard__until__color__CER
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L19189
L19172:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_pixel__IKS:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	addl $-8,%esp
	movl 32(%edi),%esi
	movl 16(%edi),%ebx
	movl 24(%edi),%eax
	movl %eax,-4(%ebp)
	movl $0,-8(%ebp)
	pushl %ebx
	pushl %esi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%esi
	sete %al
	orb %dl,%al
	je L19199
	movl -4(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-8(%ebp)
L19199:
	cmpb $0,-8(%ebp)
	je L19197
	movl 36(%edi),%esi
	movl 20(%edi),%ebx
	movl 28(%edi),%eax
	movl %eax,-12(%ebp)
	movl $0,-16(%ebp)
	addl $-8,%esp
	pushl %ebx
	pushl %esi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%esi
	sete %al
	orb %dl,%al
	je L19202
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-16(%ebp)
L19202:
	cmpb $0,-16(%ebp)
	je L19197
	movl 32(%edi),%ecx
	movl _parent_video__C2,%eax
	movl 36(%edi),%edx
	cmpl $16,(%eax)
	jne L19204
	movl 32(%eax),%eax
	jmp L19205
	.p2align 2
L19204:
	movl 28(%eax),%eax
L19205:
	pushl %eax
	pushl %edx
	pushl %ecx
	pushl %edi
	call _pixel_hard__color__7NQ
L19197:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_rectangle_to__1LU:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 32(%eax),%esi
	movl 36(%eax),%edi
	cmpl 16(%ebp),%edi
	jne L19207
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L19208
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _line_h_until__BNU
	jmp L19212
	.p2align 2
L19208:
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _line_h_until__BNU
	jmp L19251
	.p2align 2
L19207:
	cmpl 12(%ebp),%esi
	jne L19213
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L19214
	movl 16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _line_v_until__AKV
	jmp L19212
	.p2align 2
L19214:
	movl 16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _line_v_until__AKV
	jmp L19251
	.p2align 2
L19213:
	movl _parent_video__C2,%eax
	movl 12(%ebp),%eax
	pushl %eax
	pushl %edi
	pushl %esi
	movl 8(%ebp),%eax
	pushl %eax
	call _line_h__until__EVV
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl 12(%ebp),%eax
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	pushl %esi
	movl 8(%ebp),%eax
	pushl %eax
	call _line_h__until__EVV
	addl $16,%esp
	movl 16(%ebp),%eax
	cmpl 16(%ebp),%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L19221
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	movl 16(%ebp),%ebx
	addl $32,%esp
	decl %ebx
	pushl %ebx
	pushl %edx
	pushl %esi
	movl 8(%ebp),%eax
	pushl %eax
	call _line_v__until__CXV
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $32,%esp
	cmpl $16,(%eax)
	je L19252
	jmp L19248
	.p2align 2
L19221:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $32,%esp
	leal -1(%edi),%ebx
	pushl %ebx
	pushl %edx
	pushl %esi
	movl 8(%ebp),%eax
	pushl %eax
	call _line_v__until__CXV
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $32,%esp
	cmpl $16,(%eax)
	jne L19248
L19252:
	pushl %ebx
	pushl %edx
	movl 12(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _line_v__until__CXV
	jmp L19212
	.p2align 2
L19248:
	pushl %ebx
	pushl %edx
	movl 12(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _line_v__until__CXV
L19251:
L19212:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_rectangle_fill_to__S4V:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 8(%ebp),%edx
	movl 12(%ebp),%edi
	movl 16(%ebp),%esi
	movl 32(%eax),%eax
	movl %eax,-8(%ebp)
	movl 36(%edx),%edx
	movl %edx,-12(%ebp)
	cmpl %edi,%eax
	jle L19257
	movl %edi,-8(%ebp)
	movl %eax,%edi
L19257:
	cmpl %esi,-12(%ebp)
	jle L19259
	movl -12(%ebp),%eax
	movl %esi,-12(%ebp)
	movl %eax,%esi
L19259:
	movl 8(%ebp),%eax
	movl -8(%ebp),%edx
	cmpl 24(%eax),%edx
	jg L19271
	movl 16(%eax),%eax
	cmpl %eax,%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L19271
	movl 8(%ebp),%eax
	movl -12(%ebp),%edx
	cmpl 28(%eax),%edx
	jg L19271
	movl 20(%eax),%eax
	cmpl %eax,%esi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L19271
	movl 8(%ebp),%edx
	movl 16(%edx),%eax
	cmpl -8(%ebp),%eax
	jle L19272
	movl %eax,-8(%ebp)
L19272:
	movl 8(%ebp),%edx
	movl 20(%edx),%eax
	cmpl -12(%ebp),%eax
	jle L19274
	movl %eax,-12(%ebp)
L19274:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 24(%edx),%eax
	cmpl %edi,%eax
	setg %bl
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L19276
	movl 8(%ebp),%eax
	movl 24(%eax),%edi
L19276:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 28(%edx),%eax
	cmpl %esi,%eax
	setg %bl
	pushl %esi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L19280
	movl 8(%ebp),%eax
	movl 28(%eax),%esi
L19280:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L19284
	movl 32(%eax),%eax
	jmp L19294
	.p2align 2
L19284:
	movl 28(%eax),%eax
L19294:
	movl %eax,-4(%ebp)
	movl -12(%ebp),%ebx
	cmpl %esi,%ebx
	jg L19271
	.p2align 2
L19288:
	movl -4(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	pushl %edi
	pushl %ebx
	movl -8(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _line_h_hard__until__color__ERU
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L19288
L19271:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_pixel__HOW:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	addl $-8,%esp
	movl 32(%edi),%esi
	movl 16(%edi),%ebx
	movl 24(%edi),%eax
	movl %eax,-4(%ebp)
	movl $0,-8(%ebp)
	pushl %ebx
	pushl %esi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%esi
	sete %al
	orb %dl,%al
	je L19298
	movl -4(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-8(%ebp)
L19298:
	cmpb $0,-8(%ebp)
	je L19296
	movl 36(%edi),%esi
	movl 20(%edi),%ebx
	movl 28(%edi),%eax
	movl %eax,-12(%ebp)
	movl $0,-16(%ebp)
	addl $-8,%esp
	pushl %ebx
	pushl %esi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%esi
	sete %al
	orb %dl,%al
	je L19301
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-16(%ebp)
L19301:
	cmpb $0,-16(%ebp)
	je L19296
	movl 32(%edi),%ecx
	movl _parent_video__C2,%eax
	movl 36(%edi),%edx
	cmpl $16,(%eax)
	jne L19303
	movl 32(%eax),%eax
	jmp L19304
	.p2align 2
L19303:
	movl 28(%eax),%eax
L19304:
	pushl %eax
	pushl %edx
	pushl %ecx
	pushl %edi
	call _pixel_hard__color__HOV
L19296:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_h_until__080:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%edi
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 32(%eax),%eax
	movl %eax,-4(%ebp)
	movl 36(%edx),%esi
	movl 20(%edx),%ebx
	movl 28(%edx),%eax
	movl %edi,32(%edx)
	movl %eax,-8(%ebp)
	movl $0,-12(%ebp)
	pushl %ebx
	pushl %esi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%esi
	sete %al
	orb %dl,%al
	je L19315
	movl -8(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-12(%ebp)
L19315:
	cmpb $0,-12(%ebp)
	je L19313
	cmpl %edi,-4(%ebp)
	jle L19317
	movl -4(%ebp),%eax
	movl %edi,-4(%ebp)
	movl %eax,%edi
L19317:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 24(%edx),%eax
	cmpl %edi,%eax
	setg %bl
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L19319
	movl 8(%ebp),%eax
	movl 24(%eax),%edi
L19319:
	movl 8(%ebp),%edx
	movl 16(%edx),%eax
	cmpl -4(%ebp),%eax
	jle L19323
	movl %eax,-4(%ebp)
L19323:
	cmpl %edi,-4(%ebp)
	jg L19313
	movl 8(%ebp),%eax
	movl 36(%eax),%edx
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L19328
	movl 32(%eax),%eax
	jmp L19329
	.p2align 2
L19328:
	movl 28(%eax),%eax
L19329:
	addl $-12,%esp
	pushl %eax
	pushl %edi
	pushl %edx
	movl -4(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _line_h_hard__until__color__1A0
L19313:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_v_until__6D1:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	addl $-8,%esp
	movl 36(%eax),%edi
	movl %edx,-4(%ebp)
	movl 32(%eax),%esi
	movl 16(%eax),%ebx
	movl %edx,36(%eax)
	movl 24(%eax),%eax
	movl %eax,-8(%ebp)
	movl $0,-12(%ebp)
	pushl %ebx
	pushl %esi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%esi
	sete %al
	orb %dl,%al
	je L19333
	movl -8(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-12(%ebp)
L19333:
	cmpb $0,-12(%ebp)
	je L19331
	cmpl -4(%ebp),%edi
	jle L19335
	movl %edi,%eax
	movl -4(%ebp),%edi
	movl %eax,-4(%ebp)
L19335:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 28(%edx),%eax
	movl -4(%ebp),%edx
	cmpl -4(%ebp),%eax
	setg %bl
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L19337
	movl 8(%ebp),%eax
	movl 28(%eax),%eax
	movl %eax,-4(%ebp)
L19337:
	movl 8(%ebp),%edx
	movl 20(%edx),%eax
	cmpl %edi,%eax
	jle L19341
	movl %eax,%edi
L19341:
	cmpl -4(%ebp),%edi
	jg L19331
	movl %edi,%ebx
	cmpl -4(%ebp),%ebx
	jg L19331
	.p2align 2
L19348:
	movl 8(%ebp),%eax
	movl 32(%eax),%edx
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L19351
	movl 32(%eax),%eax
	jmp L19352
	.p2align 2
L19351:
	movl 28(%eax),%eax
L19352:
	pushl %eax
	pushl %ebx
	pushl %edx
	movl 8(%ebp),%edx
	pushl %edx
	call _pixel_hard__color__DI1
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl -4(%ebp),%ebx
	jle L19348
L19331:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_connect_first__5J3:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl _parent_video__C2,%eax
	movl 8(%ebp),%ebx
	cmpl $16,(%eax)
	jne L19364
	movl 68(%eax),%ecx
	jmp L19365
	.p2align 2
L19364:
	movl 64(%eax),%ecx
L19365:
	cmpl $16,(%eax)
	jne L19366
	movl 72(%eax),%edx
	jmp L19367
	.p2align 2
L19366:
	movl 68(%eax),%edx
L19367:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edx
	pushl %ecx
	pushl %ebx
	call _poly_line_to__DL3
	addl $16,%esp
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L19370
	movl 52(%eax),%edx
	jmp L19371
	.p2align 2
L19370:
	movl 48(%eax),%edx
L19371:
	testl %edx,%edx
	je L19372
	cmpl $16,(%eax)
	jne L19373
	movl 52(%eax),%edx
	jmp L19374
	.p2align 2
L19373:
	movl 48(%eax),%edx
L19374:
	movb 16(%edx),%cl
	cmpl $16,(%eax)
	jne L19375
	movl 60(%eax),%edx
	jmp L19376
	.p2align 2
L19375:
	movl 56(%eax),%edx
L19376:
	cmpb 16(%edx),%cl
	sete %dl
	jmp L19377
	.p2align 2
L19372:
	movb $0,%dl
L19377:
	testb %dl,%dl
	je L19378
	cmpl $16,(%eax)
	jne L19379
	movl 52(%eax),%edx
	jmp L19380
	.p2align 2
L19379:
	movl 48(%eax),%edx
L19380:
	cmpb $0,16(%edx)
	je L19381
	cmpl $16,(%eax)
	jne L19382
	movl 60(%eax),%eax
	jmp L19383
	.p2align 2
L19382:
	movl 56(%eax),%eax
L19383:
	movl _parent_video__C2,%edx
	cmpl $16,(%edx)
	jne L19384
	movl 52(%edx),%edx
	jmp L19385
	.p2align 2
L19384:
	movl 48(%edx),%edx
L19385:
	movl %edx,20(%eax)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L19387
	movl 48(%eax),%esi
	jmp L19388
	.p2align 2
L19387:
	movl 44(%eax),%esi
L19388:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L19389
	movl 56(%eax),%edx
	jmp L19410
	.p2align 2
L19389:
	movl 52(%eax),%edx
L19410:
	movl %edx,-4(%ebp)
	cmpl $16,(%eax)
	jne L19391
	movl 48(%eax),%eax
	jmp L19392
	.p2align 2
L19391:
	movl 44(%eax),%eax
L19392:
	movl _parent_video__C2,%edx
	cmpl $16,(%edx)
	jne L19393
	movl 64(%edx),%edx
	jmp L19394
	.p2align 2
L19393:
	movl 60(%edx),%edx
L19394:
	addl $-8,%esp
	pushl %edx
	movl (%eax),%eax
	pushl %eax
	call _item__F23
	movl 8(%esi),%ebx
	movl %eax,%edi
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl -4(%ebp),%eax
	addl $32,%esp
	addl $-4,%esp
	pushl %eax
	pushl %edi
	movl (%esi),%eax
	pushl %eax
	call _put__to__C83
	addl $16,%esp
	jmp L19400
	.p2align 2
L19381:
	cmpl $16,(%eax)
	jne L19401
	movl 52(%eax),%eax
	jmp L19402
	.p2align 2
L19401:
	movl 48(%eax),%eax
L19402:
	movl _parent_video__C2,%edx
	cmpl $16,(%edx)
	jne L19403
	movl 60(%edx),%edx
	jmp L19404
	.p2align 2
L19403:
	movl 56(%edx),%edx
L19404:
	movl %edx,20(%eax)
L19400:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L19406
	movl 48(%eax),%edx
	jmp L19407
	.p2align 2
L19406:
	movl 44(%eax),%edx
L19407:
	cmpl $16,(%eax)
	jne L19408
	movl 64(%eax),%eax
	jmp L19409
	.p2align 2
L19408:
	movl 60(%eax),%eax
L19409:
	addl $-8,%esp
	pushl %eax
	pushl %edx
	call _remove__VU4
L19378:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_sort_list_y__BF5:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L19412
	movl 48(%eax),%eax
	jmp L19413
	.p2align 2
L19412:
	movl 44(%eax),%eax
L19413:
	movl 8(%eax),%eax
	decl %eax
	movl %eax,-12(%ebp)
	movl $0,-4(%ebp)
	movl %eax,-8(%ebp)
	.p2align 2
L19461:
	movl -4(%ebp),%edi
	movl -8(%ebp),%eax
	movb $0,-17(%ebp)
	movl %eax,-24(%ebp)
	subl $1,-24(%ebp)
	cmpl %eax,%edi
	jg L19462
	.p2align 2
L19422:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L19425
	movl 48(%eax),%eax
	jmp L19426
	.p2align 2
L19425:
	movl 44(%eax),%eax
L19426:
	addl $-8,%esp
	pushl %edi
	movl (%eax),%eax
	pushl %eax
	call _item__F23
	movl (%eax),%esi
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L19428
	movl 48(%eax),%ebx
	jmp L19429
	.p2align 2
L19428:
	movl 44(%eax),%ebx
L19429:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	movl (%ebx),%eax
	pushl %eax
	call _item__F23
	addl $16,%esp
	cmpl (%eax),%esi
	jle L19430
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L19435
	movl 48(%eax),%ebx
	jmp L19436
	.p2align 2
L19435:
	movl 44(%eax),%ebx
L19436:
	addl $-4,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	pushl %edi
	pushl %ebx
	call _swap__with__JK5
	movb $1,-17(%ebp)
	addl $16,%esp
L19430:
	movl -12(%ebp),%esi
	movl _parent_video__C2,%eax
	subl %edi,%esi
	cmpl $16,(%eax)
	jne L19440
	movl 48(%eax),%eax
	jmp L19441
	.p2align 2
L19440:
	movl 44(%eax),%eax
L19441:
	addl $-8,%esp
	pushl %esi
	movl (%eax),%eax
	pushl %eax
	call _item__F23
	movl (%eax),%eax
	movl %eax,-16(%ebp)
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L19443
	movl 48(%eax),%ebx
	jmp L19444
	.p2align 2
L19443:
	movl 44(%eax),%ebx
L19444:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	movl (%ebx),%eax
	pushl %eax
	call _item__F23
	movl -16(%ebp),%edx
	addl $16,%esp
	cmpl (%eax),%edx
	jle L19445
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L19450
	movl 48(%eax),%ebx
	jmp L19451
	.p2align 2
L19450:
	movl 44(%eax),%ebx
L19451:
	addl $-4,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	pushl %esi
	pushl %ebx
	call _swap__with__JK5
	movb $1,-17(%ebp)
	addl $16,%esp
L19445:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
	cmpl -8(%ebp),%edi
	jle L19422
L19462:
	movl -24(%ebp),%eax
	movl %eax,-8(%ebp)
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -4(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl %eax,-4(%ebp)
	addl $32,%esp
	cmpb $0,-17(%ebp)
	jne L19461
	leal -56(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_h_hard__until__color__1A0:
	pushl %ebp
	movl %esp,%ebp
	subl $44,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	cmpl $0,56(%eax)
	je L19464
	movl 64(%eax),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 12(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%ecx
	movl %eax,-8(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%ecx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,%esi
	movl 56(%edx),%eax
	addl $32,%esp
	movl 24(%eax),%eax
	addl $-8,%esp
	movl (%eax),%eax
	cmpl %eax,-8(%ebp)
	setg %bl
	pushl %eax
	movl -8(%ebp),%ecx
	pushl %ecx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L19464
	movl 8(%ebp),%edx
	movl 56(%edx),%eax
	movl 20(%eax),%eax
	addl $-8,%esp
	movl (%eax),%eax
	cmpl %eax,-8(%ebp)
	setg %bl
	pushl %eax
	movl -8(%ebp),%ecx
	pushl %ecx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L19464
	movl 8(%ebp),%eax
	movl 56(%eax),%edx
	movl 12(%edx),%eax
	movl (%eax),%eax
	cmpl %eax,-4(%ebp)
	jle L19475
	movl -4(%ebp),%eax
L19475:
	movl %eax,-4(%ebp)
	movl 16(%edx),%eax
	movl (%eax),%eax
	movl %esi,-20(%ebp)
	cmpl %eax,%esi
	jle L19479
	movl %eax,-20(%ebp)
L19479:
	movl -20(%ebp),%edx
	cmpl %edx,-4(%ebp)
	jg L19464
	.p2align 2
L19579:
	movl -8(%ebp),%ecx
	addl $-4,%esp
	pushl %ecx
	movl -4(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _get_clip__8E0
	movl 8(%eax),%edx
	movl -20(%ebp),%ecx
	addl $16,%esp
	movl %ecx,-24(%ebp)
	cmpl %edx,%ecx
	jle L19489
	movl %edx,-24(%ebp)
L19489:
	movl 16(%eax),%edx
	cmpl 8(%ebp),%edx
	jne L19492
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L19527
	movl 24(%ebp),%eax
	shrl $16,%eax
	movl %eax,%ebx
	movl 24(%ebp),%eax
	andl $192,%ebx
	shrl $10,%eax
	andl $56,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	pushl %ebx
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movb %al,%bl
	movl 24(%ebp),%eax
	addl $48,%esp
	shrl $5,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	andl $7,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movl -8(%ebp),%ebx
	movb %al,-13(%ebp)
	movl -8(%ebp),%eax
	addl $48,%esp
	sall $8,%ebx
	sall $6,%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	movl -4(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	movw $2,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	movl -24(%ebp),%edx
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl -4(%ebp),%esi
	cmpl %esi,%ebx
	jg L19582
	.p2align 2
L19519:
	addl $-4,%esp
	xorl %eax,%eax
	movb -13(%ebp),%al
	pushl %eax
	pushl %ebx
	xorl %eax,%eax
	movw ___desc_video,%ax
	pushl %eax
	call __farpokeb
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L19519
L19582:
	movw $1,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	addl $16,%esp
	jmp L19531
	.p2align 2
L19527:
	call _get_line__0Y0
	addl $-8,%esp
	pushl $___dj_stdout
	pushl $78
	call _fputc
	addl $16,%esp
	addl $-12,%esp
	pushl $1
	call _exit
	.p2align 2
L19492:
	movl (%edx),%eax
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L19532
	jmp *L19544(,%ecx,4)
	.p2align 2
L19544:
	.long L19543
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19535
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19532
	.long L19543
	.long L19543
	.long L19543
	.long L19532
	.long L19543
	.long L19542
	.long L19543
	.long L19543
	.long L19543
	.long L19543
	.p2align 2
L19535:
	movl 60(%edx),%edi
	jmp L19532
	.p2align 2
L19542:
L19543:
	movl 64(%edx),%edi
L19532:
	movl -4(%ebp),%esi
	subl %edi,%esi
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L19547
	jmp *L19559(,%ecx,4)
	.p2align 2
L19559:
	.long L19558
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19550
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19547
	.long L19558
	.long L19558
	.long L19558
	.long L19547
	.long L19558
	.long L19557
	.long L19558
	.long L19558
	.long L19558
	.long L19558
	.p2align 2
L19550:
	movl 64(%edx),%ecx
	jmp L19583
	.p2align 2
L19557:
L19558:
	movl 68(%edx),%ecx
L19583:
	movl %ecx,-12(%ebp)
L19547:
	movl -8(%ebp),%ebx
	movl -24(%ebp),%ecx
	subl -12(%ebp),%ebx
	subl %edi,%ecx
	addl $-17,%eax
	cmpl $70,%eax
	ja L19531
	jmp *L19575(,%eax,4)
	.p2align 2
L19575:
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19571
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.long L19531
	.p2align 2
L19571:
	movl 24(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	pushl %ecx
	pushl %ebx
	pushl %esi
	pushl %edx
	call _slave_line_h_hard__until__color__GC8B
	addl $32,%esp
L19531:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -24(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl -20(%ebp),%ecx
	movl %eax,-4(%ebp)
	addl $32,%esp
	cmpl %ecx,%eax
	jle L19579
L19464:
	leal -56(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_crash_with_message__LGKB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl _lower__2WK,%ebx
	movl 4(%edi),%esi
	cmpl %esi,%ebx
	jg L19603
	.p2align 2
L19587:
	addl $-12,%esp
	addl $-8,%esp
	movl %ebx,%eax
	subl $1,%eax
	pushl %eax
	movl (%edi),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	movsbl %al,%eax
	pushl %eax
	call _put_character__WOB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L19587
L19603:
	movl _parent_video__C2,%eax
	movl _exit_failure_code__QN,%edx
	cmpl $16,(%eax)
	jne L19599
	addl $-12,%esp
	pushl %edx
	call _exit__2QB
	jmp L19601
	.p2align 2
L19599:
	addl $-12,%esp
	pushl %edx
	call _exit__2QB
L19601:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_rectangle_to__DNMB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 32(%eax),%esi
	movl 36(%eax),%edi
	cmpl 16(%ebp),%edi
	jne L19608
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L19609
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _line_h_until__NOMB
	jmp L19613
	.p2align 2
L19609:
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _line_h_until__NOMB
	jmp L19652
	.p2align 2
L19608:
	cmpl 12(%ebp),%esi
	jne L19614
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L19615
	movl 16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _line_v_until__YLNB
	jmp L19613
	.p2align 2
L19615:
	movl 16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _line_v_until__YLNB
	jmp L19652
	.p2align 2
L19614:
	movl _parent_video__C2,%eax
	movl 12(%ebp),%eax
	pushl %eax
	pushl %edi
	pushl %esi
	movl 8(%ebp),%eax
	pushl %eax
	call _line_h__until__KXNB
	addl $16,%esp
	movl _parent_video__C2,%eax
	movl 12(%ebp),%eax
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	pushl %esi
	movl 8(%ebp),%eax
	pushl %eax
	call _line_h__until__KXNB
	addl $16,%esp
	movl 16(%ebp),%eax
	cmpl 16(%ebp),%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L19622
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	movl 16(%ebp),%ebx
	addl $32,%esp
	decl %ebx
	pushl %ebx
	pushl %edx
	pushl %esi
	movl 8(%ebp),%eax
	pushl %eax
	call _line_v__until__IZNB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $32,%esp
	cmpl $16,(%eax)
	je L19653
	jmp L19649
	.p2align 2
L19622:
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $32,%esp
	leal -1(%edi),%ebx
	pushl %ebx
	pushl %edx
	pushl %esi
	movl 8(%ebp),%eax
	pushl %eax
	call _line_v__until__IZNB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,%edx
	movl _parent_video__C2,%eax
	addl $32,%esp
	cmpl $16,(%eax)
	jne L19649
L19653:
	pushl %ebx
	pushl %edx
	movl 12(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _line_v__until__IZNB
	jmp L19613
	.p2align 2
L19649:
	pushl %ebx
	pushl %edx
	movl 12(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _line_v__until__IZNB
L19652:
L19613:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_to__3SOB:
	pushl %ebp
	movl %esp,%ebp
	subl $60,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 8(%ebp),%edx
	movl 16(%ebp),%edi
	movl 32(%eax),%eax
	movl %eax,-4(%ebp)
	movl 36(%edx),%edx
	movl 12(%ebp),%eax
	movl %edx,-8(%ebp)
	movl -4(%ebp),%edx
	movl %eax,-12(%ebp)
	subl %edx,-12(%ebp)
	subl -8(%ebp),%edi
	jne L19661
	movl _parent_video__C2,%eax
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _line_h_until__NOMB
	jmp L19666
	.p2align 2
L19661:
	cmpl $0,-12(%ebp)
	jne L19667
	movl _parent_video__C2,%eax
	movl 16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _line_v_until__YLNB
	jmp L19666
	.p2align 2
L19667:
	movl 12(%ebp),%edx
	movl 8(%ebp),%eax
	movl %edx,32(%eax)
	movl 16(%ebp),%edx
	movl %edx,36(%eax)
	cmpl $0,-12(%ebp)
	setg %bl
	addl $-8,%esp
	pushl $0
	movl -12(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L19671
	testl %edi,%edi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L19675
	cmpl %edi,-12(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %edi
	movl -12(%ebp),%edx
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L19679
	leal (%edi,%edi),%eax
	movl %eax,-24(%ebp)
	movl %eax,%esi
	movl -12(%ebp),%eax
	movl -4(%ebp),%edx
	movl -8(%ebp),%edi
	subl -12(%ebp),%esi
	movl %esi,-16(%ebp)
	subl %eax,-16(%ebp)
	movl 12(%ebp),%eax
	movl %edx,-20(%ebp)
	cmpl %eax,%edx
	jg L19666
	.p2align 2
L19689:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _pixel_to__E1OB
	addl $16,%esp
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L19694
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl -16(%ebp),%edx
	movl %eax,%edi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	jmp L19911
	.p2align 2
L19694:
	movl -24(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
L19911:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl 12(%ebp),%edx
	movl %eax,-20(%ebp)
	addl $32,%esp
	cmpl %edx,%eax
	jle L19689
	jmp L19666
	.p2align 2
L19679:
	movl -12(%ebp),%eax
	addl %eax,%eax
	movl %eax,-28(%ebp)
	movl %eax,%esi
	movl -4(%ebp),%eax
	subl %edi,%esi
	movl %esi,-16(%ebp)
	subl %edi,-16(%ebp)
	movl -8(%ebp),%edi
	movl %eax,-20(%ebp)
	cmpl 16(%ebp),%edi
	jg L19666
	.p2align 2
L19714:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _pixel_to__E1OB
	addl $16,%esp
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L19719
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl %eax,-20(%ebp)
	movl -16(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	jmp L19912
	.p2align 2
L19719:
	movl -28(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
L19912:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
	cmpl 16(%ebp),%edi
	jle L19714
	jmp L19666
	.p2align 2
L19675:
	movl %edi,%eax
	negl %eax
	cmpl %eax,-12(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -12(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L19732
	movl -12(%ebp),%edx
	leal (%edi,%edi),%eax
	movl %eax,%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%esi
	movl -12(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl -8(%ebp),%edi
	movl %eax,-16(%ebp)
	movl 12(%ebp),%eax
	addl $32,%esp
	movl %edx,-20(%ebp)
	cmpl %eax,%edx
	jg L19666
	.p2align 2
L19745:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _pixel_to__E1OB
	addl $16,%esp
	testl %esi,%esi
	jg L19750
	movl -16(%ebp),%edx
	subl $1,%edi
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	jmp L19913
	.p2align 2
L19750:
	addl $-8,%esp
	addl $-12,%esp
	pushl %ebx
L19913:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl 12(%ebp),%edx
	movl %eax,-20(%ebp)
	addl $32,%esp
	cmpl %edx,%eax
	jle L19745
	jmp L19666
	.p2align 2
L19732:
	movl -12(%ebp),%eax
	addl %eax,%eax
	movl %eax,-32(%ebp)
	addl $-8,%esp
	addl $-12,%esp
	pushl %edi
	call ___prefix_sub__05B
	pushl %eax
	movl -32(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edi
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl -8(%ebp),%edi
	movl %eax,-16(%ebp)
	addl $32,%esp
	movl %edx,-20(%ebp)
	jmp L19768
	.p2align 2
L19770:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _pixel_to__E1OB
	addl $16,%esp
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L19775
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	movl -20(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -16(%ebp),%edx
	movl %eax,-20(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	jmp L19914
	.p2align 2
L19775:
	movl -32(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
L19914:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl $1,%edi
L19768:
	movl 16(%ebp),%edx
	cmpl 16(%ebp),%edi
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L19770
	jmp L19666
	.p2align 2
L19671:
	testl %edi,%edi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L19788
	movl -12(%ebp),%eax
	negl %eax
	cmpl %edi,%eax
	setg %bl
	addl $-8,%esp
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L19792
	leal (%edi,%edi),%eax
	movl %eax,-36(%ebp)
	movl -12(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl -36(%ebp),%edx
	pushl %edx
	call ___infix_sub__F6B
	movl %eax,%esi
	movl -12(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl -8(%ebp),%edi
	movl %eax,-16(%ebp)
	addl $32,%esp
	movl %edx,-20(%ebp)
	jmp L19803
	.p2align 2
L19805:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _pixel_to__E1OB
	addl $16,%esp
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L19810
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	movl -16(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	jmp L19915
	.p2align 2
L19810:
	movl -36(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
L19915:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl $1,-20(%ebp)
L19803:
	movl 12(%ebp),%eax
	cmpl %eax,-20(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -20(%ebp),%edx
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L19805
	jmp L19666
	.p2align 2
L19792:
	movl -12(%ebp),%eax
	addl %eax,%eax
	movl %eax,%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl %edi
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edi
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,-16(%ebp)
	movl -4(%ebp),%eax
	movl -8(%ebp),%edi
	addl $32,%esp
	movl %eax,-20(%ebp)
	cmpl 16(%ebp),%edi
	jg L19666
	.p2align 2
L19830:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _pixel_to__E1OB
	addl $16,%esp
	testl %esi,%esi
	jg L19835
	movl -16(%ebp),%edx
	subl $1,-20(%ebp)
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	jmp L19916
	.p2align 2
L19835:
	addl $-8,%esp
	addl $-12,%esp
	pushl %ebx
L19916:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	movl %eax,%edi
	addl $32,%esp
	cmpl 16(%ebp),%edi
	jle L19830
	jmp L19666
	.p2align 2
L19788:
	movl -12(%ebp),%eax
	negl %eax
	movl %edi,%edx
	negl %edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L19848
	leal (%edi,%edi),%eax
	movl %eax,-40(%ebp)
	movl %eax,%esi
	movl -12(%ebp),%eax
	movl -4(%ebp),%edx
	movl -8(%ebp),%edi
	subl -12(%ebp),%esi
	movl %esi,-16(%ebp)
	subl %eax,-16(%ebp)
	movl %edx,-20(%ebp)
	jmp L19862
	.p2align 2
L19864:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _pixel_to__E1OB
	addl $16,%esp
	testl %esi,%esi
	jg L19869
	movl -16(%ebp),%eax
	subl $1,%edi
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	jmp L19917
	.p2align 2
L19869:
	movl -40(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
L19917:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl $1,-20(%ebp)
L19862:
	movl 12(%ebp),%eax
	cmpl %eax,-20(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %eax
	movl -20(%ebp),%edx
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L19864
	jmp L19666
	.p2align 2
L19848:
	movl -12(%ebp),%eax
	movl -4(%ebp),%edx
	addl %eax,%eax
	movl %eax,%esi
	subl %edi,%esi
	movl %esi,-16(%ebp)
	subl %edi,-16(%ebp)
	movl -8(%ebp),%edi
	movl %eax,-44(%ebp)
	movl %edx,-20(%ebp)
	jmp L19887
	.p2align 2
L19889:
	movl _parent_video__C2,%eax
	addl $-4,%esp
	pushl %edi
	movl -20(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _pixel_to__E1OB
	addl $16,%esp
	testl %esi,%esi
	jg L19894
	movl -16(%ebp),%eax
	decl -20(%ebp)
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	jmp L19918
	.p2align 2
L19894:
	movl -44(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
L19918:
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	subl $1,%edi
L19887:
	movl 16(%ebp),%eax
	cmpl 16(%ebp),%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L19889
L19666:
	leal -72(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_pixel__00SB:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	addl $-8,%esp
	movl 32(%edi),%esi
	movl 16(%edi),%ebx
	movl 24(%edi),%eax
	movl %eax,-4(%ebp)
	movl $0,-8(%ebp)
	pushl %ebx
	pushl %esi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%esi
	sete %al
	orb %dl,%al
	je L19922
	movl -4(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-8(%ebp)
L19922:
	cmpb $0,-8(%ebp)
	je L19920
	movl 36(%edi),%esi
	movl 20(%edi),%ebx
	movl 28(%edi),%eax
	movl %eax,-12(%ebp)
	movl $0,-16(%ebp)
	addl $-8,%esp
	pushl %ebx
	pushl %esi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%esi
	sete %al
	orb %dl,%al
	je L19925
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-16(%ebp)
L19925:
	cmpb $0,-16(%ebp)
	je L19920
	movl 32(%edi),%ecx
	movl _parent_video__C2,%eax
	movl 36(%edi),%edx
	cmpl $16,(%eax)
	jne L19927
	movl 32(%eax),%eax
	jmp L19928
	.p2align 2
L19927:
	movl 28(%eax),%eax
L19928:
	pushl %eax
	pushl %edx
	pushl %ecx
	pushl %edi
	call _pixel_hard__color__X2SB
L19920:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_pixel__GXXB:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	addl $-8,%esp
	movl 32(%edi),%esi
	movl 16(%edi),%ebx
	movl 24(%edi),%eax
	movl %eax,-4(%ebp)
	movl $0,-8(%ebp)
	pushl %ebx
	pushl %esi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%esi
	sete %al
	orb %dl,%al
	je L19935
	movl -4(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-8(%ebp)
L19935:
	cmpb $0,-8(%ebp)
	je L19933
	movl 36(%edi),%esi
	movl 20(%edi),%ebx
	movl 28(%edi),%eax
	movl %eax,-12(%ebp)
	movl $0,-16(%ebp)
	addl $-8,%esp
	pushl %ebx
	pushl %esi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%esi
	sete %al
	orb %dl,%al
	je L19938
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-16(%ebp)
L19938:
	cmpb $0,-16(%ebp)
	je L19933
	movl 32(%edi),%ecx
	movl _parent_video__C2,%eax
	movl 36(%edi),%edx
	cmpl $16,(%eax)
	jne L19940
	movl 32(%eax),%eax
	jmp L19941
	.p2align 2
L19940:
	movl 28(%eax),%eax
L19941:
	pushl %eax
	pushl %edx
	pushl %ecx
	pushl %edi
	call _pixel_hard__color__DZXB
L19933:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_rectangle_fill_to__OO2B:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 8(%ebp),%edx
	movl 12(%ebp),%edi
	movl 16(%ebp),%esi
	movl 32(%eax),%eax
	movl %eax,-8(%ebp)
	movl 36(%edx),%edx
	movl %edx,-12(%ebp)
	cmpl %edi,%eax
	jle L19949
	movl %edi,-8(%ebp)
	movl %eax,%edi
L19949:
	cmpl %esi,-12(%ebp)
	jle L19951
	movl -12(%ebp),%eax
	movl %esi,-12(%ebp)
	movl %eax,%esi
L19951:
	movl 8(%ebp),%eax
	movl -8(%ebp),%edx
	cmpl 24(%eax),%edx
	jg L19963
	movl 16(%eax),%eax
	cmpl %eax,%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L19963
	movl 8(%ebp),%eax
	movl -12(%ebp),%edx
	cmpl 28(%eax),%edx
	jg L19963
	movl 20(%eax),%eax
	cmpl %eax,%esi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L19963
	movl 8(%ebp),%edx
	movl 16(%edx),%eax
	cmpl -8(%ebp),%eax
	jle L19964
	movl %eax,-8(%ebp)
L19964:
	movl 8(%ebp),%edx
	movl 20(%edx),%eax
	cmpl -12(%ebp),%eax
	jle L19966
	movl %eax,-12(%ebp)
L19966:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 24(%edx),%eax
	cmpl %edi,%eax
	setg %bl
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L19968
	movl 8(%ebp),%eax
	movl 24(%eax),%edi
L19968:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 28(%edx),%eax
	cmpl %esi,%eax
	setg %bl
	pushl %esi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L19972
	movl 8(%ebp),%eax
	movl 28(%eax),%esi
L19972:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L19976
	movl 32(%eax),%eax
	jmp L19986
	.p2align 2
L19976:
	movl 28(%eax),%eax
L19986:
	movl %eax,-4(%ebp)
	movl -12(%ebp),%ebx
	cmpl %esi,%ebx
	jg L19963
	.p2align 2
L19980:
	movl -4(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	pushl %edi
	pushl %ebx
	movl -8(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _line_h_hard__until__color__RY1B
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L19980
L19963:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_calloc__VS2:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	call _element_sizeof__MU2
	imull %ebx,%eax
	addl $-12,%esp
	pushl %eax
	call _allocation__C7
	movl %eax,%edi
	addl $16,%esp
	movl %ebx,%esi
L20008:
	subl $1,%esi
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L19995
	addl $-8,%esp
	pushl %esi
	pushl %edi
	call _put__to__HW2
	addl $16,%esp
	jmp L20008
	.p2align 2
L19995:
	leal -24(%ebp),%esp
	movl %edi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_swap__with__JK5:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl (%ebx),%eax
	pushl %eax
	call _item__F23
	movl 16(%ebp),%eax
	addl $16,%esp
	addl $-8,%esp
	pushl %eax
	movl (%ebx),%eax
	pushl %eax
	call _item__F23
	movl 8(%ebx),%esi
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl 12(%ebp),%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	movl (%ebx),%eax
	pushl %eax
	call _item__F23
	movl %eax,-4(%ebp)
	movl 16(%ebp),%eax
	addl $16,%esp
	addl $-8,%esp
	pushl %eax
	movl (%ebx),%eax
	pushl %eax
	call _item__F23
	movl 8(%ebx),%esi
	movl %eax,%edi
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl 12(%ebp),%eax
	addl $32,%esp
	addl $-4,%esp
	pushl %eax
	pushl %edi
	movl (%ebx),%eax
	pushl %eax
	call _put__to__C83
	movl 8(%ebx),%esi
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl 16(%ebp),%eax
	addl $32,%esp
	addl $-4,%esp
	pushl %eax
	movl -4(%ebp),%eax
	pushl %eax
	movl (%ebx),%eax
	pushl %eax
	call _put__to__C83
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_pixel_hard__color__C46B:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%ebx
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-8(%ebp)
	addl $32,%esp
	addl $-4,%esp
	pushl %eax
	movl -4(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _get_clip__D56B
	addl $16,%esp
	testl %eax,%eax
	je L20067
	movl 16(%eax),%edx
	cmpl 8(%ebp),%edx
	jne L20068
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L20096
	movl 20(%ebp),%eax
	shrl $16,%eax
	movl %eax,%ebx
	movl 20(%ebp),%eax
	andl $192,%ebx
	shrl $10,%eax
	andl $56,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	pushl %ebx
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movb %al,%bl
	movl 20(%ebp),%eax
	addl $48,%esp
	shrl $5,%eax
	andl $7,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	sall $6,-8(%ebp)
	movl -8(%ebp),%edx
	movb %al,-9(%ebp)
	addl $48,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	movl -8(%ebp),%eax
	sall $2,%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	movw $2,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	addl $16,%esp
	addl $-4,%esp
	xorl %eax,%eax
	movb -9(%ebp),%al
	pushl %eax
	pushl %ebx
	xorl %eax,%eax
	movw ___desc_video,%ax
	pushl %eax
	call __farpokeb
	addl $16,%esp
	movw $1,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	jmp L20067
	.p2align 2
L20096:
	call _deferred__XM7B
	addl $-8,%esp
	pushl $___dj_stdout
	pushl $78
	call _fputc
	addl $16,%esp
	addl $-12,%esp
	pushl $1
	call _exit
	.p2align 2
L20068:
	movl (%edx),%eax
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L20102
	jmp *L20114(,%ecx,4)
	.p2align 2
L20114:
	.long L20113
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20110
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20102
	.long L20113
	.long L20113
	.long L20113
	.long L20102
	.long L20113
	.long L20113
	.long L20113
	.long L20113
	.long L20112
	.long L20113
	.p2align 2
L20110:
	movl 60(%edx),%edi
	jmp L20102
	.p2align 2
L20112:
L20113:
	movl 64(%edx),%edi
L20102:
	movl -4(%ebp),%ebx
	subl %edi,%ebx
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L20117
	jmp *L20129(,%ecx,4)
	.p2align 2
L20129:
	.long L20128
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20125
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20117
	.long L20128
	.long L20128
	.long L20128
	.long L20117
	.long L20128
	.long L20128
	.long L20128
	.long L20128
	.long L20127
	.long L20128
	.p2align 2
L20125:
	movl 64(%edx),%esi
	jmp L20117
	.p2align 2
L20127:
L20128:
	movl 68(%edx),%esi
L20117:
	movl -8(%ebp),%ecx
	subl %esi,%ecx
	addl $-17,%eax
	cmpl $70,%eax
	ja L20067
	jmp *L20144(,%eax,4)
	.p2align 2
L20144:
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20137
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.long L20067
	.p2align 2
L20137:
	movl 20(%ebp),%eax
	pushl %eax
	pushl %ecx
	pushl %ebx
	pushl %edx
	call _slave_pixel_hard__color__6P7B
L20067:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_pixel__NS8B:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	addl $-8,%esp
	movl 32(%edi),%esi
	movl 16(%edi),%ebx
	movl 24(%edi),%eax
	movl %eax,-4(%ebp)
	movl $0,-8(%ebp)
	pushl %ebx
	pushl %esi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%esi
	sete %al
	orb %dl,%al
	je L20149
	movl -4(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-8(%ebp)
L20149:
	cmpb $0,-8(%ebp)
	je L20147
	movl 36(%edi),%esi
	movl 20(%edi),%ebx
	movl 28(%edi),%eax
	movl %eax,-12(%ebp)
	movl $0,-16(%ebp)
	addl $-8,%esp
	pushl %ebx
	pushl %esi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%esi
	sete %al
	orb %dl,%al
	je L20152
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-16(%ebp)
L20152:
	cmpb $0,-16(%ebp)
	je L20147
	movl 32(%edi),%ecx
	movl _parent_video__C2,%eax
	movl 36(%edi),%edx
	cmpl $16,(%eax)
	jne L20154
	movl 32(%eax),%eax
	jmp L20155
	.p2align 2
L20154:
	movl 28(%eax),%eax
L20155:
	pushl %eax
	pushl %edx
	pushl %ecx
	pushl %edi
	call _pixel_hard__color__C46B
L20147:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_remove_plan__XNLC:
	pushl %ebp
	movl %esp,%ebp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 56(%esi),%eax
	testl %eax,%eax
	je L20175
	movl 16(%eax),%edx
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L20177
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
L20177:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L20179
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20179:
	movl 56(%esi),%eax
	movl 12(%eax),%edx
	movl _list_x__K3,%ebx
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	jne L20180
	movl 8(%edx),%ebx
	jmp L20181
	.p2align 2
L20180:
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
L20181:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L20182
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20182:
	movl 56(%esi),%eax
	movl 24(%eax),%edx
	movl %ebx,_list_x__K3
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	je L20185
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20185:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L20187
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L20187:
	movl 56(%esi),%eax
	movl 20(%eax),%edx
	movl _list_y__L3,%ebx
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	jne L20188
	movl 12(%edx),%ebx
	jmp L20189
	.p2align 2
L20188:
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20189:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L20190
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L20190:
	movl 56(%esi),%edx
	movl %ebx,_list_y__L3
	movl _list_plan__J3,%ebx
	movl 32(%edx),%ecx
	testl %ecx,%ecx
	jne L20192
	movl 28(%edx),%ebx
	jmp L20193
	.p2align 2
L20192:
	movl 28(%edx),%eax
	movl %eax,28(%ecx)
L20193:
	movl 28(%edx),%ecx
	testl %ecx,%ecx
	je L20197
	movl 32(%edx),%eax
	movl %eax,32(%ecx)
	movl 28(%edx),%eax
	testl %eax,%eax
	je L20197
L20198:
	decl 4(%eax)
	movl 28(%eax),%eax
	testl %eax,%eax
	jne L20198
L20197:
	movl %ebx,_list_plan__J3
	movl $0,56(%esi)
L20175:
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_remove_plan__S3LC:
	pushl %ebp
	movl %esp,%ebp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 56(%esi),%eax
	testl %eax,%eax
	je L20204
	movl 16(%eax),%edx
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L20206
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
L20206:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L20208
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20208:
	movl 56(%esi),%eax
	movl 12(%eax),%edx
	movl _list_x__K3,%ebx
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	jne L20209
	movl 8(%edx),%ebx
	jmp L20210
	.p2align 2
L20209:
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
L20210:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L20211
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20211:
	movl 56(%esi),%eax
	movl 24(%eax),%edx
	movl %ebx,_list_x__K3
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	je L20214
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20214:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L20216
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L20216:
	movl 56(%esi),%eax
	movl 20(%eax),%edx
	movl _list_y__L3,%ebx
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	jne L20217
	movl 12(%edx),%ebx
	jmp L20218
	.p2align 2
L20217:
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20218:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L20219
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L20219:
	movl 56(%esi),%edx
	movl %ebx,_list_y__L3
	movl _list_plan__J3,%ebx
	movl 32(%edx),%ecx
	testl %ecx,%ecx
	jne L20221
	movl 28(%edx),%ebx
	jmp L20222
	.p2align 2
L20221:
	movl 28(%edx),%eax
	movl %eax,28(%ecx)
L20222:
	movl 28(%edx),%ecx
	testl %ecx,%ecx
	je L20226
	movl 32(%edx),%eax
	movl %eax,32(%ecx)
	movl 28(%edx),%eax
	testl %eax,%eax
	je L20226
L20227:
	decl 4(%eax)
	movl 28(%eax),%eax
	testl %eax,%eax
	jne L20227
L20226:
	movl %ebx,_list_plan__J3
	movl $0,56(%esi)
L20204:
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_remove_plan__QJMC:
	pushl %ebp
	movl %esp,%ebp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 56(%esi),%eax
	testl %eax,%eax
	je L20233
	movl 16(%eax),%edx
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L20235
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
L20235:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L20237
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20237:
	movl 56(%esi),%eax
	movl 12(%eax),%edx
	movl _list_x__K3,%ebx
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	jne L20238
	movl 8(%edx),%ebx
	jmp L20239
	.p2align 2
L20238:
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
L20239:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L20240
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20240:
	movl 56(%esi),%eax
	movl 24(%eax),%edx
	movl %ebx,_list_x__K3
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	je L20243
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20243:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L20245
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L20245:
	movl 56(%esi),%eax
	movl 20(%eax),%edx
	movl _list_y__L3,%ebx
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	jne L20246
	movl 12(%edx),%ebx
	jmp L20247
	.p2align 2
L20246:
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20247:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L20248
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L20248:
	movl 56(%esi),%edx
	movl %ebx,_list_y__L3
	movl _list_plan__J3,%ebx
	movl 32(%edx),%ecx
	testl %ecx,%ecx
	jne L20250
	movl 28(%edx),%ebx
	jmp L20251
	.p2align 2
L20250:
	movl 28(%edx),%eax
	movl %eax,28(%ecx)
L20251:
	movl 28(%edx),%ecx
	testl %ecx,%ecx
	je L20255
	movl 32(%edx),%eax
	movl %eax,32(%ecx)
	movl 28(%edx),%eax
	testl %eax,%eax
	je L20255
L20256:
	decl 4(%eax)
	movl 28(%eax),%eax
	testl %eax,%eax
	jne L20256
L20255:
	movl %ebx,_list_plan__J3
	movl $0,56(%esi)
L20233:
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_remove_plan__RZMC:
	pushl %ebp
	movl %esp,%ebp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 56(%esi),%eax
	testl %eax,%eax
	je L20262
	movl 16(%eax),%edx
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L20264
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
L20264:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L20266
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20266:
	movl 56(%esi),%eax
	movl 12(%eax),%edx
	movl _list_x__K3,%ebx
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	jne L20267
	movl 8(%edx),%ebx
	jmp L20268
	.p2align 2
L20267:
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
L20268:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L20269
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20269:
	movl 56(%esi),%eax
	movl 24(%eax),%edx
	movl %ebx,_list_x__K3
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	je L20272
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20272:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L20274
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L20274:
	movl 56(%esi),%eax
	movl 20(%eax),%edx
	movl _list_y__L3,%ebx
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	jne L20275
	movl 12(%edx),%ebx
	jmp L20276
	.p2align 2
L20275:
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20276:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L20277
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L20277:
	movl 56(%esi),%edx
	movl %ebx,_list_y__L3
	movl _list_plan__J3,%ebx
	movl 32(%edx),%ecx
	testl %ecx,%ecx
	jne L20279
	movl 28(%edx),%ebx
	jmp L20280
	.p2align 2
L20279:
	movl 28(%edx),%eax
	movl %eax,28(%ecx)
L20280:
	movl 28(%edx),%ecx
	testl %ecx,%ecx
	je L20284
	movl 32(%edx),%eax
	movl %eax,32(%ecx)
	movl 28(%edx),%eax
	testl %eax,%eax
	je L20284
L20285:
	decl 4(%eax)
	movl 28(%eax),%eax
	testl %eax,%eax
	jne L20285
L20284:
	movl %ebx,_list_plan__J3
	movl $0,56(%esi)
L20262:
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_remove_plan__XFNC:
	pushl %ebp
	movl %esp,%ebp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 56(%esi),%eax
	testl %eax,%eax
	je L20291
	movl 16(%eax),%edx
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L20293
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
L20293:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L20295
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20295:
	movl 56(%esi),%eax
	movl 12(%eax),%edx
	movl _list_x__K3,%ebx
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	jne L20296
	movl 8(%edx),%ebx
	jmp L20297
	.p2align 2
L20296:
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
L20297:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L20298
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20298:
	movl 56(%esi),%eax
	movl 24(%eax),%edx
	movl %ebx,_list_x__K3
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	je L20301
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20301:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L20303
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L20303:
	movl 56(%esi),%eax
	movl 20(%eax),%edx
	movl _list_y__L3,%ebx
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	jne L20304
	movl 12(%edx),%ebx
	jmp L20305
	.p2align 2
L20304:
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20305:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L20306
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L20306:
	movl 56(%esi),%edx
	movl %ebx,_list_y__L3
	movl _list_plan__J3,%ebx
	movl 32(%edx),%ecx
	testl %ecx,%ecx
	jne L20308
	movl 28(%edx),%ebx
	jmp L20309
	.p2align 2
L20308:
	movl 28(%edx),%eax
	movl %eax,28(%ecx)
L20309:
	movl 28(%edx),%ecx
	testl %ecx,%ecx
	je L20313
	movl 32(%edx),%eax
	movl %eax,32(%ecx)
	movl 28(%edx),%eax
	testl %eax,%eax
	je L20313
L20314:
	decl 4(%eax)
	movl 28(%eax),%eax
	testl %eax,%eax
	jne L20314
L20313:
	movl %ebx,_list_plan__J3
	movl $0,56(%esi)
L20291:
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_remove_plan__6VNC:
	pushl %ebp
	movl %esp,%ebp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 56(%esi),%eax
	testl %eax,%eax
	je L20320
	movl 16(%eax),%edx
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L20322
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
L20322:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L20324
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20324:
	movl 56(%esi),%eax
	movl 12(%eax),%edx
	movl _list_x__K3,%ebx
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	jne L20325
	movl 8(%edx),%ebx
	jmp L20326
	.p2align 2
L20325:
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
L20326:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L20327
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20327:
	movl 56(%esi),%eax
	movl 24(%eax),%edx
	movl %ebx,_list_x__K3
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	je L20330
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20330:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L20332
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L20332:
	movl 56(%esi),%eax
	movl 20(%eax),%edx
	movl _list_y__L3,%ebx
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	jne L20333
	movl 12(%edx),%ebx
	jmp L20334
	.p2align 2
L20333:
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20334:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L20335
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L20335:
	movl 56(%esi),%edx
	movl %ebx,_list_y__L3
	movl _list_plan__J3,%ebx
	movl 32(%edx),%ecx
	testl %ecx,%ecx
	jne L20337
	movl 28(%edx),%ebx
	jmp L20338
	.p2align 2
L20337:
	movl 28(%edx),%eax
	movl %eax,28(%ecx)
L20338:
	movl 28(%edx),%ecx
	testl %ecx,%ecx
	je L20342
	movl 32(%edx),%eax
	movl %eax,32(%ecx)
	movl 28(%edx),%eax
	testl %eax,%eax
	je L20342
L20343:
	decl 4(%eax)
	movl 28(%eax),%eax
	testl %eax,%eax
	jne L20343
L20342:
	movl %ebx,_list_plan__J3
	movl $0,56(%esi)
L20320:
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_remove_plan__ICOC:
	pushl %ebp
	movl %esp,%ebp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 56(%esi),%eax
	testl %eax,%eax
	je L20349
	movl 16(%eax),%edx
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L20351
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
L20351:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L20353
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20353:
	movl 56(%esi),%eax
	movl 12(%eax),%edx
	movl _list_x__K3,%ebx
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	jne L20354
	movl 8(%edx),%ebx
	jmp L20355
	.p2align 2
L20354:
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
L20355:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L20356
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20356:
	movl 56(%esi),%eax
	movl 24(%eax),%edx
	movl %ebx,_list_x__K3
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	je L20359
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20359:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L20361
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L20361:
	movl 56(%esi),%eax
	movl 20(%eax),%edx
	movl _list_y__L3,%ebx
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	jne L20362
	movl 12(%edx),%ebx
	jmp L20363
	.p2align 2
L20362:
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20363:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L20364
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L20364:
	movl 56(%esi),%edx
	movl %ebx,_list_y__L3
	movl _list_plan__J3,%ebx
	movl 32(%edx),%ecx
	testl %ecx,%ecx
	jne L20366
	movl 28(%edx),%ebx
	jmp L20367
	.p2align 2
L20366:
	movl 28(%edx),%eax
	movl %eax,28(%ecx)
L20367:
	movl 28(%edx),%ecx
	testl %ecx,%ecx
	je L20371
	movl 32(%edx),%eax
	movl %eax,32(%ecx)
	movl 28(%edx),%eax
	testl %eax,%eax
	je L20371
L20372:
	decl 4(%eax)
	movl 28(%eax),%eax
	testl %eax,%eax
	jne L20372
L20371:
	movl %ebx,_list_plan__J3
	movl $0,56(%esi)
L20349:
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_remove_plan__XSOC:
	pushl %ebp
	movl %esp,%ebp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 56(%esi),%eax
	testl %eax,%eax
	je L20378
	movl 16(%eax),%edx
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L20380
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
L20380:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L20382
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20382:
	movl 56(%esi),%eax
	movl 12(%eax),%edx
	movl _list_x__K3,%ebx
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	jne L20383
	movl 8(%edx),%ebx
	jmp L20384
	.p2align 2
L20383:
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
L20384:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L20385
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20385:
	movl 56(%esi),%eax
	movl 24(%eax),%edx
	movl %ebx,_list_x__K3
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	je L20388
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20388:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L20390
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L20390:
	movl 56(%esi),%eax
	movl 20(%eax),%edx
	movl _list_y__L3,%ebx
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	jne L20391
	movl 12(%edx),%ebx
	jmp L20392
	.p2align 2
L20391:
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20392:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L20393
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L20393:
	movl 56(%esi),%edx
	movl %ebx,_list_y__L3
	movl _list_plan__J3,%ebx
	movl 32(%edx),%ecx
	testl %ecx,%ecx
	jne L20395
	movl 28(%edx),%ebx
	jmp L20396
	.p2align 2
L20395:
	movl 28(%edx),%eax
	movl %eax,28(%ecx)
L20396:
	movl 28(%edx),%ecx
	testl %ecx,%ecx
	je L20400
	movl 32(%edx),%eax
	movl %eax,32(%ecx)
	movl 28(%edx),%eax
	testl %eax,%eax
	je L20400
L20401:
	decl 4(%eax)
	movl 28(%eax),%eax
	testl %eax,%eax
	jne L20401
L20400:
	movl %ebx,_list_plan__J3
	movl $0,56(%esi)
L20378:
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_remove_plan__48OC:
	pushl %ebp
	movl %esp,%ebp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 56(%esi),%eax
	testl %eax,%eax
	je L20407
	movl 16(%eax),%edx
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L20409
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
L20409:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L20411
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20411:
	movl 56(%esi),%eax
	movl 12(%eax),%edx
	movl _list_x__K3,%ebx
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	jne L20412
	movl 8(%edx),%ebx
	jmp L20413
	.p2align 2
L20412:
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
L20413:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L20414
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20414:
	movl 56(%esi),%eax
	movl 24(%eax),%edx
	movl %ebx,_list_x__K3
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	je L20417
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20417:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L20419
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L20419:
	movl 56(%esi),%eax
	movl 20(%eax),%edx
	movl _list_y__L3,%ebx
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	jne L20420
	movl 12(%edx),%ebx
	jmp L20421
	.p2align 2
L20420:
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20421:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L20422
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L20422:
	movl 56(%esi),%edx
	movl %ebx,_list_y__L3
	movl _list_plan__J3,%ebx
	movl 32(%edx),%ecx
	testl %ecx,%ecx
	jne L20424
	movl 28(%edx),%ebx
	jmp L20425
	.p2align 2
L20424:
	movl 28(%edx),%eax
	movl %eax,28(%ecx)
L20425:
	movl 28(%edx),%ecx
	testl %ecx,%ecx
	je L20429
	movl 32(%edx),%eax
	movl %eax,32(%ecx)
	movl 28(%edx),%eax
	testl %eax,%eax
	je L20429
L20430:
	decl 4(%eax)
	movl 28(%eax),%eax
	testl %eax,%eax
	jne L20430
L20429:
	movl %ebx,_list_plan__J3
	movl $0,56(%esi)
L20407:
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_remove_plan__VAYC:
	pushl %ebp
	movl %esp,%ebp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 52(%esi),%eax
	testl %eax,%eax
	je L20436
	movl 16(%eax),%edx
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L20438
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
L20438:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L20440
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20440:
	movl 52(%esi),%eax
	movl 12(%eax),%edx
	movl _list_x__K3,%ebx
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	jne L20441
	movl 8(%edx),%ebx
	jmp L20442
	.p2align 2
L20441:
	movl 8(%edx),%eax
	movl %eax,8(%ecx)
L20442:
	movl 8(%edx),%ecx
	testl %ecx,%ecx
	je L20443
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20443:
	movl 52(%esi),%eax
	movl 24(%eax),%edx
	movl %ebx,_list_x__K3
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	je L20446
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20446:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L20448
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L20448:
	movl 52(%esi),%eax
	movl 20(%eax),%edx
	movl _list_y__L3,%ebx
	movl 16(%edx),%ecx
	testl %ecx,%ecx
	jne L20449
	movl 12(%edx),%ebx
	jmp L20450
	.p2align 2
L20449:
	movl 12(%edx),%eax
	movl %eax,12(%ecx)
L20450:
	movl 12(%edx),%ecx
	testl %ecx,%ecx
	je L20451
	movl 16(%edx),%eax
	movl %eax,16(%ecx)
L20451:
	movl 52(%esi),%edx
	movl %ebx,_list_y__L3
	movl _list_plan__J3,%ebx
	movl 32(%edx),%ecx
	testl %ecx,%ecx
	jne L20453
	movl 28(%edx),%ebx
	jmp L20454
	.p2align 2
L20453:
	movl 28(%edx),%eax
	movl %eax,28(%ecx)
L20454:
	movl 28(%edx),%ecx
	testl %ecx,%ecx
	je L20458
	movl 32(%edx),%eax
	movl %eax,32(%ecx)
	movl 28(%edx),%eax
	testl %eax,%eax
	je L20458
L20459:
	decl 4(%eax)
	movl 28(%eax),%eax
	testl %eax,%eax
	jne L20459
L20458:
	movl %ebx,_list_plan__J3
	movl $0,52(%esi)
L20436:
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_rectangle_fill_to__X3Z:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 8(%ebp),%edx
	movl 12(%ebp),%edi
	movl 16(%ebp),%esi
	movl 32(%eax),%eax
	movl %eax,-8(%ebp)
	movl 36(%edx),%edx
	movl %edx,-12(%ebp)
	cmpl %edi,%eax
	jle L20490
	movl %edi,-8(%ebp)
	movl %eax,%edi
L20490:
	cmpl %esi,-12(%ebp)
	jle L20492
	movl -12(%ebp),%eax
	movl %esi,-12(%ebp)
	movl %eax,%esi
L20492:
	movl 8(%ebp),%eax
	movl -8(%ebp),%edx
	cmpl 24(%eax),%edx
	jg L20504
	movl 16(%eax),%eax
	cmpl %eax,%edi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L20504
	movl 8(%ebp),%eax
	movl -12(%ebp),%edx
	cmpl 28(%eax),%edx
	jg L20504
	movl 20(%eax),%eax
	cmpl %eax,%esi
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L20504
	movl 8(%ebp),%edx
	movl 16(%edx),%eax
	cmpl -8(%ebp),%eax
	jle L20505
	movl %eax,-8(%ebp)
L20505:
	movl 8(%ebp),%edx
	movl 20(%edx),%eax
	cmpl -12(%ebp),%eax
	jle L20507
	movl %eax,-12(%ebp)
L20507:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 24(%edx),%eax
	cmpl %edi,%eax
	setg %bl
	pushl %edi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L20509
	movl 8(%ebp),%eax
	movl 24(%eax),%edi
L20509:
	movl 8(%ebp),%edx
	addl $-8,%esp
	movl 28(%edx),%eax
	cmpl %esi,%eax
	setg %bl
	pushl %esi
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L20513
	movl 8(%ebp),%eax
	movl 28(%eax),%esi
L20513:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L20517
	movl 32(%eax),%eax
	jmp L20527
	.p2align 2
L20517:
	movl 28(%eax),%eax
L20527:
	movl %eax,-4(%ebp)
	movl -12(%ebp),%ebx
	cmpl %esi,%ebx
	jg L20504
	.p2align 2
L20521:
	movl -4(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	pushl %edi
	pushl %ebx
	movl -8(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%edx
	pushl %edx
	call _line_h_hard__until__color__1A0
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L20521
L20504:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_pixel_hard__color__DI1:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%ebx
	movl 8(%ebp),%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 64(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	movl %eax,-4(%ebp)
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	movl 68(%edx),%eax
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	movl 16(%ebp),%eax
	pushl %eax
	call ___infix_sub__F6B
	movl %eax,-8(%ebp)
	addl $32,%esp
	addl $-4,%esp
	pushl %eax
	movl -4(%ebp),%edx
	pushl %edx
	movl 8(%ebp),%eax
	pushl %eax
	call _get_clip__8E0
	addl $16,%esp
	testl %eax,%eax
	je L20531
	movl 16(%eax),%edx
	cmpl 8(%ebp),%edx
	jne L20532
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L20555
	movl 20(%ebp),%eax
	shrl $16,%eax
	movl %eax,%ebx
	movl 20(%ebp),%eax
	andl $192,%ebx
	shrl $10,%eax
	andl $56,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	pushl %ebx
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movb %al,%bl
	movl 20(%ebp),%eax
	addl $48,%esp
	shrl $5,%eax
	andl $7,%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	sall $6,-8(%ebp)
	movl -8(%ebp),%edx
	movb %al,-9(%ebp)
	addl $48,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	movl -8(%ebp),%eax
	sall $2,%eax
	pushl %eax
	call ___infix_sub__F6B
	movl -4(%ebp),%edx
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %edx
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	movw $2,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	addl $16,%esp
	addl $-4,%esp
	xorl %eax,%eax
	movb -9(%ebp),%al
	pushl %eax
	pushl %ebx
	xorl %eax,%eax
	movw ___desc_video,%ax
	pushl %eax
	call __farpokeb
	addl $16,%esp
	movw $1,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	jmp L20531
	.p2align 2
L20555:
	call _get_line__0Y0
	addl $-8,%esp
	pushl $___dj_stdout
	pushl $78
	call _fputc
	addl $16,%esp
	addl $-12,%esp
	pushl $1
	call _exit
	.p2align 2
L20532:
	movl (%edx),%eax
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L20560
	jmp *L20572(,%ecx,4)
	.p2align 2
L20572:
	.long L20571
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20563
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20560
	.long L20571
	.long L20571
	.long L20571
	.long L20560
	.long L20571
	.long L20570
	.long L20571
	.long L20571
	.long L20571
	.long L20571
	.p2align 2
L20563:
	movl 60(%edx),%edi
	jmp L20560
	.p2align 2
L20570:
L20571:
	movl 64(%edx),%edi
L20560:
	movl -4(%ebp),%ebx
	subl %edi,%ebx
	leal -17(%eax),%ecx
	cmpl $70,%ecx
	ja L20575
	jmp *L20587(,%ecx,4)
	.p2align 2
L20587:
	.long L20586
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20578
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20575
	.long L20586
	.long L20586
	.long L20586
	.long L20575
	.long L20586
	.long L20585
	.long L20586
	.long L20586
	.long L20586
	.long L20586
	.p2align 2
L20578:
	movl 64(%edx),%esi
	jmp L20575
	.p2align 2
L20585:
L20586:
	movl 68(%edx),%esi
L20575:
	movl -8(%ebp),%ecx
	subl %esi,%ecx
	addl $-17,%eax
	cmpl $70,%eax
	ja L20531
	jmp *L20602(,%eax,4)
	.p2align 2
L20602:
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20598
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.long L20531
	.p2align 2
L20598:
	movl 20(%ebp),%eax
	pushl %eax
	pushl %ecx
	pushl %ebx
	pushl %edx
	call _slave_pixel_hard__color__6P7B
L20531:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_pixel__ES1:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	addl $-8,%esp
	movl 32(%edi),%esi
	movl 16(%edi),%ebx
	movl 24(%edi),%eax
	movl %eax,-4(%ebp)
	movl $0,-8(%ebp)
	pushl %ebx
	pushl %esi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%esi
	sete %al
	orb %dl,%al
	je L20607
	movl -4(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-8(%ebp)
L20607:
	cmpb $0,-8(%ebp)
	je L20605
	movl 36(%edi),%esi
	movl 20(%edi),%ebx
	movl 28(%edi),%eax
	movl %eax,-12(%ebp)
	movl $0,-16(%ebp)
	addl $-8,%esp
	pushl %ebx
	pushl %esi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%esi
	sete %al
	orb %dl,%al
	je L20610
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-16(%ebp)
L20610:
	cmpb $0,-16(%ebp)
	je L20605
	movl 32(%edi),%ecx
	movl _parent_video__C2,%eax
	movl 36(%edi),%edx
	cmpl $16,(%eax)
	jne L20612
	movl 32(%eax),%eax
	jmp L20613
	.p2align 2
L20612:
	movl 28(%eax),%eax
L20613:
	pushl %eax
	pushl %edx
	pushl %ecx
	pushl %edi
	call _pixel_hard__color__DI1
L20605:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_crash_with_message__CHNB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl _lower__2WK,%ebx
	movl 4(%edi),%esi
	cmpl %esi,%ebx
	jg L20654
	.p2align 2
L20638:
	addl $-12,%esp
	addl $-8,%esp
	movl %ebx,%eax
	subl $1,%eax
	pushl %eax
	movl (%edi),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	movsbl %al,%eax
	pushl %eax
	call _put_character__WOB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L20638
L20654:
	movl _parent_video__C2,%eax
	movl _exit_failure_code__QN,%edx
	cmpl $16,(%eax)
	jne L20650
	addl $-12,%esp
	pushl %edx
	call _exit__2QB
	jmp L20652
	.p2align 2
L20650:
	addl $-12,%esp
	pushl %edx
	call _exit__2QB
L20652:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_crash_with_message__E7Q:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl _lower__2WK,%ebx
	movl 4(%edi),%esi
	cmpl %esi,%ebx
	jg L20698
	.p2align 2
L20684:
	addl $-12,%esp
	addl $-8,%esp
	movl %ebx,%eax
	subl $1,%eax
	pushl %eax
	movl (%edi),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	movsbl %al,%eax
	pushl %eax
	call _put_character__WOB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L20684
L20698:
	movl _parent_video__C2,%eax
	movl _exit_failure_code__QN,%edx
	cmpl $16,(%eax)
	jne L20696
	addl $-12,%esp
	pushl %edx
	call _die_with_code__87Q
	jmp L20697
	.p2align 2
L20696:
	addl $-12,%esp
	pushl %edx
	call _die_with_code__87Q
L20697:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_crash_with_message__0FV:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl _lower__2WK,%ebx
	movl 4(%edi),%esi
	cmpl %esi,%ebx
	jg L20716
	.p2align 2
L20702:
	addl $-12,%esp
	addl $-8,%esp
	movl %ebx,%eax
	subl $1,%eax
	pushl %eax
	movl (%edi),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	movsbl %al,%eax
	pushl %eax
	call _put_character__WOB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L20702
L20716:
	movl _parent_video__C2,%eax
	movl _exit_failure_code__QN,%edx
	cmpl $16,(%eax)
	jne L20714
	addl $-12,%esp
	pushl %edx
	call _die_with_code__UGV
	jmp L20715
	.p2align 2
L20714:
	addl $-12,%esp
	pushl %edx
	call _die_with_code__UGV
L20715:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_crash_with_message__AN7B:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl _lower__2WK,%ebx
	movl 4(%edi),%esi
	cmpl %esi,%ebx
	jg L20738
	.p2align 2
L20724:
	addl $-12,%esp
	addl $-8,%esp
	movl %ebx,%eax
	subl $1,%eax
	pushl %eax
	movl (%edi),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	movsbl %al,%eax
	pushl %eax
	call _put_character__WOB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L20724
L20738:
	movl _parent_video__C2,%eax
	movl _exit_failure_code__QN,%edx
	cmpl $16,(%eax)
	jne L20736
	addl $-12,%esp
	pushl %edx
	call _die_with_code__1N7B
	jmp L20737
	.p2align 2
L20736:
	addl $-12,%esp
	pushl %edx
	call _die_with_code__1N7B
L20737:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_pixel__W1OB:
	pushl %ebp
	movl %esp,%ebp
	subl $28,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	addl $-8,%esp
	movl 32(%edi),%esi
	movl 16(%edi),%ebx
	movl 24(%edi),%eax
	movl %eax,-4(%ebp)
	movl $0,-8(%ebp)
	pushl %ebx
	pushl %esi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%esi
	sete %al
	orb %dl,%al
	je L20742
	movl -4(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-8(%ebp)
L20742:
	cmpb $0,-8(%ebp)
	je L20740
	movl 36(%edi),%esi
	movl 20(%edi),%ebx
	movl 28(%edi),%eax
	movl %eax,-12(%ebp)
	movl $0,-16(%ebp)
	addl $-8,%esp
	pushl %ebx
	pushl %esi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%esi
	sete %al
	orb %dl,%al
	je L20745
	movl -12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %esi
	call ___infix_less_equal_diese__8AK
	addl $16,%esp
	testb %al,%al
	setne %al
	xorl %edx,%edx
	movb %al,%dl
	movl %edx,-16(%ebp)
L20745:
	cmpb $0,-16(%ebp)
	je L20740
	movl 32(%edi),%ecx
	movl _parent_video__C2,%eax
	movl 36(%edi),%edx
	cmpl $16,(%eax)
	jne L20747
	movl 32(%eax),%eax
	jmp L20748
	.p2align 2
L20747:
	movl 28(%eax),%eax
L20748:
	pushl %eax
	pushl %edx
	pushl %ecx
	pushl %edi
	call _pixel_hard__color__5PNB
L20740:
	leal -40(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_crash_with_message__ZPSB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl _lower__2WK,%ebx
	movl 4(%edi),%esi
	cmpl %esi,%ebx
	jg L20766
	.p2align 2
L20752:
	addl $-12,%esp
	addl $-8,%esp
	movl %ebx,%eax
	subl $1,%eax
	pushl %eax
	movl (%edi),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	movsbl %al,%eax
	pushl %eax
	call _put_character__WOB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L20752
L20766:
	movl _parent_video__C2,%eax
	movl _exit_failure_code__QN,%edx
	cmpl $16,(%eax)
	jne L20764
	addl $-12,%esp
	pushl %edx
	call _die_with_code__TQSB
	jmp L20765
	.p2align 2
L20764:
	addl $-12,%esp
	pushl %edx
	call _die_with_code__TQSB
L20765:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_crash_with_message__9LXB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl _lower__2WK,%ebx
	movl 4(%edi),%esi
	cmpl %esi,%ebx
	jg L20784
	.p2align 2
L20770:
	addl $-12,%esp
	addl $-8,%esp
	movl %ebx,%eax
	subl $1,%eax
	pushl %eax
	movl (%edi),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	movsbl %al,%eax
	pushl %eax
	call _put_character__WOB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L20770
L20784:
	movl _parent_video__C2,%eax
	movl _exit_failure_code__QN,%edx
	cmpl $16,(%eax)
	jne L20782
	addl $-12,%esp
	pushl %edx
	call _die_with_code__3MXB
	jmp L20783
	.p2align 2
L20782:
	addl $-12,%esp
	pushl %edx
	call _die_with_code__3MXB
L20783:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_crash_with_message__NQ1B:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl _lower__2WK,%ebx
	movl 4(%edi),%esi
	cmpl %esi,%ebx
	jg L20802
	.p2align 2
L20788:
	addl $-12,%esp
	addl $-8,%esp
	movl %ebx,%eax
	subl $1,%eax
	pushl %eax
	movl (%edi),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	movsbl %al,%eax
	pushl %eax
	call _put_character__WOB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L20788
L20802:
	movl _parent_video__C2,%eax
	movl _exit_failure_code__QN,%edx
	cmpl $16,(%eax)
	jne L20800
	addl $-12,%esp
	pushl %edx
	call _die_with_code__HR1B
	jmp L20801
	.p2align 2
L20800:
	addl $-12,%esp
	pushl %edx
	call _die_with_code__HR1B
L20801:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_crash_with_message__C1K:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl _lower__2WK,%ebx
	movl 4(%edi),%esi
	cmpl %esi,%ebx
	jg L20820
	.p2align 2
L20806:
	addl $-12,%esp
	addl $-8,%esp
	movl %ebx,%eax
	subl $1,%eax
	pushl %eax
	movl (%edi),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	movsbl %al,%eax
	pushl %eax
	call _put_character__WOB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L20806
L20820:
	movl _parent_video__C2,%eax
	movl _exit_failure_code__QN,%edx
	cmpl $16,(%eax)
	jne L20818
	addl $-12,%esp
	pushl %edx
	call _die_with_code__56K
	jmp L20819
	.p2align 2
L20818:
	addl $-12,%esp
	pushl %edx
	call _die_with_code__56K
L20819:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_crash_with_message__NZ0:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl _lower__2WK,%ebx
	movl 4(%edi),%esi
	cmpl %esi,%ebx
	jg L20842
	.p2align 2
L20828:
	addl $-12,%esp
	addl $-8,%esp
	movl %ebx,%eax
	subl $1,%eax
	pushl %eax
	movl (%edi),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	movsbl %al,%eax
	pushl %eax
	call _put_character__WOB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L20828
L20842:
	movl _parent_video__C2,%eax
	movl _exit_failure_code__QN,%edx
	cmpl $16,(%eax)
	jne L20840
	addl $-12,%esp
	pushl %edx
	call _die_with_code__H00
	jmp L20841
	.p2align 2
L20840:
	addl $-12,%esp
	pushl %edx
	call _die_with_code__H00
L20841:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
.comm ___desc_video,4
	.p2align 2
.globl ___init_video_320x200
___init_video_320x200:
	pushl %ebp
	movl %esp,%ebp
	subl $56,%esp
	addl $-12,%esp
	pushl $1
	call ___dpmi_allocate_ldt_descriptors
	movw %ax,___desc_video
	addl $-4,%esp
	pushl $655360
	pushl $64000
	pushl $655360
	call ___djgpp_map_physical_memory
	addl $32,%esp
	addl $-8,%esp
	pushl $655360
	xorl %eax,%eax
	movw ___desc_video,%ax
	pushl %eax
	call ___dpmi_set_segment_base_address
	addl $-8,%esp
	pushl $63999
	xorl %eax,%eax
	movw ___desc_video,%ax
	pushl %eax
	call ___dpmi_set_segment_limit
	addl $32,%esp
	addl $-8,%esp
	pushl $16627
	xorl %eax,%eax
	movw ___desc_video,%ax
	pushl %eax
	call ___dpmi_set_descriptor_access_rights
	movw $19,-8(%ebp)
	addl $-4,%esp
	leal -36(%ebp),%eax
	pushl %eax
	pushl %eax
	pushl $16
	call _int86
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
.globl ___init_video_text
___init_video_text:
	pushl %ebp
	movl %esp,%ebp
	subl $56,%esp
	movw $3,-8(%ebp)
	addl $-4,%esp
	leal -36(%ebp),%eax
	pushl %eax
	pushl %eax
	pushl $16
	call _int86
	movl %ebp,%esp
	popl %ebp
	ret
.comm ___in_mouse,36
	.p2align 2
.globl _print_char
_print_char:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	addl $-8,%esp
	pushl $___dj_stdout
	movsbl 8(%ebp),%eax
	pushl %eax
	call _fputc
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
.globl _die_with_code
_die_with_code:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _exit
.comm _pointer_size__OD,4
.comm _lower__2WK,4
.comm _ABSTRACT_STRING__,8
.comm _STRING_CONSTANT__,8
.comm _black__4R,4
.comm _white__5R,4
.comm _red__6R,4
.comm _gray__CS,4
.comm _parent_video__C2,4
.comm _list_plan__J3,4
.comm _list_x__K3,4
.comm _list_y__L3,4
.comm _stack_plan__N3,4
.comm _last_clip__O3,4
.comm _first_clip__P3,4
.comm _top_clip__Q3,4
.comm _screen__GL,4
.comm _focus__LL,4
.comm _storage_message__NL,4
.comm _INPUT__,4
.comm _p_beg__4L,4
.comm _p_end__5L,4
.comm _p_beg__1VM,4
.comm _p_end__2VM,4
.comm _INPUT_KEYBOARD__,8
.comm _cmin__OM,4
.comm _cmaj__PM,4
.comm _cmm__QM,4
.comm _caltgr__RM,4
.comm _keynum0__SM,4
.comm _ext_key__UM,4
.comm _buf_extk__VM,4
.comm _exit__8M,4
.comm _check_list__9M,4
.comm _exit_success_code__PN,4
.comm _exit_failure_code__QN,4
.comm _get_begin_memory__EP,4
.comm _get_capacity_memory__FP,4
.comm _object_size__NP,4
.comm _small_fat__C5,4
.comm _first_free__D5,4
.comm _begin_memory__E5,4
.comm _end_memory__F5,4
.comm _capacity__G5,4
.comm _last_block__H5,4
.comm _object_size__97,4
.comm _MEM_BLOCK__,20
.comm _object_size__3QD,4
.comm _CLIP__,36
.comm _PLAN__,36
.comm _LIMIT_X__,16
.comm _LIMIT_Y__,20
.comm _ARRAYED_COLLECTION__PLAN__,12
.comm _FIXED_ARRAY__PLAN__,12
.comm _BMP_LINE__,12
.comm _gui_buffer_event__HXL,4
.comm _gui_p_beg__IXL,4
.comm _gui_p_end__JXL,4
.comm _MAP_FIXED_ARRAY__EVENT_MOUSE__,4
.comm _EVENT__,4
.comm _lower__1HM,4
.comm _LINKED_COLLECTION__INBOX__,4
.comm _LINKED_LIST__INBOX__,20
.comm _LINK__INBOX__,8
.comm _ARRAYED_COLLECTION__USMALLINT__,16
.comm _FIXED_ARRAY__USMALLINT__,16
.comm _MAP_FIXED_ARRAY__EVENT_KEYBOARD__,4
.comm _color_dark__M2N,4
.comm _color_light__N2N,4
.comm _color_back__O2N,4
.comm _color_back_light__P2N,4
.comm _ITEM__,80
.comm _lower__FQX,4
.comm _LINKED_COLLECTION__GUI_CHECK_LIST__,4
.comm _LINKED_LIST__GUI_CHECK_LIST__,20
.comm _text_tmp__4ZN,4
.comm _lower__R0N,4
.comm _LINK__GUI_CHECK_LIST__,8
.comm _ARRAYED_COLLECTION__EDGE__,12
.comm _FIXED_ARRAY__EDGE__,12
.comm _EDGE__,32
.comm _alias__Q26,4
.comm _string_tmp__Y26,4
.comm _ABSTRACT_ENTRY__,28
.comm _ENTRY__,28
.comm _tmp_buffer__WABB,4
.comm _ABSTRACT_FILE__,12
.comm _STD_FILE__,16
.comm _pos_buffer__J06,4
.comm _bmp_buffer__K06,4
.comm _header__L06,4
.comm _color_map__M06,4
.comm _BMP_FILE__,16
.comm _BITMAP_24__,76
.comm _default_size__O36,4
.comm _DICTIONARY__ENTRY__ABSTRACT_STRING__,12
.comm _DICTIONARY_NODE__ENTRY__ABSTRACT_STRING__,12
.comm _STRING__,12
.comm _BMP_HEADER__,56
.comm _ARRAYED_COLLECTION__BMP_LINE__,12
.comm _FIXED_ARRAY__BMP_LINE__,12
.comm _BMP_LINE_24__,16
.comm _PIXEL_24__,4
.comm _MAP_FIXED_ARRAY__PIXEL_24__,4
.comm _LINKED_COLLECTION__EVENT__,4
.comm _LINKED_LIST__EVENT__,16
.comm _LINK__EVENT__,8
.comm _MAP_FIXED_ARRAY__EVENT_GUI__,4
.comm _EVENT_GUI__,8
	.p2align 2
_to_uinteger__SDB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_integer__4N:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_realloc_c__CEB:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%eax
	addl $-8,%esp
	addl $15,%eax
	pushl %eax
	pushl %ebx
	call _realloc
	movl %eax,%esi
	addl $16,%esp
	testl %ebx,%ebx
	je L542
	cmpl %ebx,%esi
	je L542
	addl $-12,%esp
	pushl %ebx
	call _print_nbx__AFB
	addl $-12,%esp
	pushl $10
	call _print__ENB
	addl $32,%esp
	addl $-12,%esp
	pushl %esi
	call _print_nbx__AFB
	addl $-12,%esp
	pushl $10
	call _print__ENB
	addl $32,%esp
	addl $-12,%esp
	pushl $1
	call _exit__2QB
L542:
	leal -24(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_greater__PWB:
	pushl %ebp
	movl %esp,%ebp
	movl 12(%ebp),%eax
	cmpl %eax,8(%ebp)
	setg %al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_greater__G2F:
	pushl %ebp
	movl %esp,%ebp
	movl 12(%ebp),%eax
	cmpl %eax,8(%ebp)
	setg %al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_greater_equal__W2F:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	cmpl %eax,%edx
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	movsbl %bl,%eax
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clear__to__Z3F:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl 16(%ebp),%esi
	movl 12(%ebp),%ebx
	jmp L676
	.p2align 2
L678:
	addl $-8,%esp
	pushl %ebx
	pushl %edi
	call _put__to__HYF
	addl $-8,%esp
	addl $16,%esp
	pushl $1
	pushl %ebx
	call ___infix_add__Q5B
	movl %eax,%ebx
	addl $16,%esp
L676:
	addl $-8,%esp
	pushl %esi
	pushl %ebx
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	jne L678
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_sub__D1:
	pushl %ebp
	movl %esp,%ebp
	movl 12(%ebp),%eax
	movl 8(%ebp),%edx
	subl %eax,%edx
	movl %edx,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_add__N0B:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__DTB
	pushl %eax
	pushl %ebx
	call ___infix_sub__STB
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_minimum__QJ4:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call _to_longint__1J4
	pushl %edx
	pushl %eax
	addl $-12,%esp
	pushl $0
	call _to_longint__1J4
	addl $16,%esp
	pushl %edx
	pushl %eax
	call ___infix_sub__8K4
	pushl %edx
	pushl %eax
	call _maximum__XJ4
	pushl %edx
	pushl %eax
	call ___infix_sub__8K4
	pushl %edx
	pushl %eax
	call _force_conversion__IL4
	movl %eax,%edx
	sarl $31,%edx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_integer__3L4:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call _force_conversion__IL4
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___prefix_sub__50:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	negl %eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clone__VZM:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	addl $-12,%esp
	pushl $16
	call _allocation__C7
	movl %eax,%ebx
	addl $-4,%esp
	pushl $16
	pushl $_FIXED_ARRAY__USMALLINT__
	pushl %ebx
	call _copy__from__size__NPD
	movl %ebx,%eax
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_create__AGCB:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	call _clone__X68
	movl %eax,%ebx
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_greater__3W
	addl $16,%esp
	testb %al,%al
	je L864
	addl $-8,%esp
	pushl %esi
	movl 8(%ebx),%eax
	pushl %eax
	call ___infix_less__6TH
	addl $16,%esp
	testb %al,%al
	je L864
	addl $-12,%esp
	pushl %esi
	call _calloc__3O8
	movl %eax,(%ebx)
	movl %esi,8(%ebx)
L864:
	movl $0,4(%ebx)
	leal -24(%ebp),%esp
	movl %ebx,%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_new_intern__OWK:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%ebx
	call _clone__OYK
	movl %eax,%edi
	addl $-4,%esp
	pushl %ebx
	pushl %esi
	pushl %edi
	call _set_storage__count__Z0K
	leal -24(%ebp),%esp
	movl %edi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_make__98DC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl $0,4(%eax)
	movl $0,(%eax)
	movl $0,8(%eax)
	movl $0,12(%eax)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_maximum__XJ4:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	addl $-12,%esp
	pushl $2147483647
	call _to_longint__1J4
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_object_size__GQGC:
	pushl %ebp
	movl %esp,%ebp
	movl $8,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_mul__YWF:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	imull 12(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_sub__0YB:
	pushl %ebp
	movl %esp,%ebp
	movl 12(%ebp),%eax
	movl 8(%ebp),%edx
	subl %eax,%edx
	movl %edx,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_greater_equal__FWB:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	cmpl %eax,%edx
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	movsbl %bl,%eax
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_item__3RGC:
	pushl %ebp
	movl %esp,%ebp
	movl 12(%ebp),%eax
	sall $3,%eax
	addl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_pointer__VTGC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_usmallint__RU:
	pushl %ebp
	movl %esp,%ebp
	xorl %eax,%eax
	movb 8(%ebp),%al
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_ushortint__ZV:
	pushl %ebp
	movl %esp,%ebp
	xorl %eax,%eax
	movw 8(%ebp),%ax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_putb__to__EW:
	pushl %ebp
	movl %esp,%ebp
	pushl %ebx
	movl 12(%ebp),%ecx
	movb 8(%ebp),%bl
/APP
	movw %cx,%dx 
      movb %bl,%al     
      outb %al,%dx  
/NO_APP
	popl %ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_less_equal__WW:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %edx
	call ___infix_greater__3W
	testb %al,%al
	sete %al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_and__GZ:
	pushl %ebp
	movl %esp,%ebp
	movb 8(%ebp),%al
	andb 12(%ebp),%al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_greater_greater__PZ:
	pushl %ebp
	movl %esp,%ebp
	xorl %eax,%eax
	movl 12(%ebp),%ecx
	movb 8(%ebp),%al
	sarl %cl,%eax
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_less_less__A0:
	pushl %ebp
	movl %esp,%ebp
	xorl %eax,%eax
	movl 12(%ebp),%ecx
	movb 8(%ebp),%al
	sall %cl,%eax
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_add__00:
	pushl %ebp
	movl %esp,%ebp
	movl 12(%ebp),%eax
	movl 8(%ebp),%edx
	negl %eax
	subl %eax,%edx
	movl %edx,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clone__04:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl _parent_video__C2,%eax
	call _object_size__R6
	movl %eax,%ebx
	testl %ebx,%ebx
	jne L898
	movl $_AREA__,%eax
	jmp L899
	.p2align 2
L898:
	addl $-12,%esp
	pushl %ebx
	call _allocation__C7
	movl %eax,%esi
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L900
	call _to_pointer__8OD
	jmp L901
	.p2align 2
L900:
	call _to_pointer__8OD
L901:
	addl $-4,%esp
	pushl %ebx
	pushl %eax
	pushl %esi
	call _copy__from__size__NPD
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L902
	addl $-12,%esp
	pushl %esi
	call _force_conversion__M7D
	jmp L899
	.p2align 2
L902:
	addl $-12,%esp
	pushl %esi
	call _force_conversion__M7D
L899:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clipping_off__JDE:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl $0,12(%eax)
	movl $0,16(%eax)
	movl %ebp,%esp
	movl 8(%eax),%edx
	decl %edx
	movl %edx,20(%eax)
	movl 4(%eax),%edx
	decl %edx
	movl %edx,24(%eax)
	popl %ebp
	ret
	.p2align 2
___infix_add__KKE:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clipping_off__UKI:
	pushl %ebp
	movl _INTERFACE__+12,%eax
	decl %eax
	movl %eax,_INTERFACE__+24
	movl _INTERFACE__+8,%eax
	movl %esp,%ebp
	movl $0,_INTERFACE__+16
	movl $0,_INTERFACE__+20
	decl %eax
	movl %eax,_INTERFACE__+28
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_display_on__3UK:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movw $1,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_object_size__P6L:
	pushl %ebp
	movl %esp,%ebp
	movl $24,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_item__C8L:
	pushl %ebp
	movl %esp,%ebp
	imull $24,12(%ebp),%eax
	addl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_pointer__49L:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_item__DEM:
	pushl %ebp
	movl %esp,%ebp
	imull $24,12(%ebp),%edx
	movl 8(%ebp),%eax
	addl (%eax),%edx
	movl %edx,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_and__P6B:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	andl 12(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_create__SHM:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	addl $-12,%esp
	pushl $20
	call _allocation__C7
	movl %eax,%ebx
	addl $-4,%esp
	pushl $20
	pushl $_LINKED_LIST__INBOX__
	pushl %ebx
	call _copy__from__size__NPD
	movl $0,4(%ebx)
	movl $0,(%ebx)
	movl $0,8(%ebx)
	movl $0,12(%ebx)
	movl $0,16(%ebx)
	movl %ebx,%eax
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_add_last__PNM:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	cmpl $0,4(%ebx)
	jne L1764
	call _create__next__ZPM
	movl %eax,4(%ebx)
	movl $1,(%ebx)
	movl %eax,8(%ebx)
	movl $1,12(%ebx)
	movl %eax,16(%ebx)
	jmp L1767
	.p2align 2
L1764:
	call _create__next__ZPM
	movl %eax,%esi
	movl 8(%ebx),%eax
	movl %esi,4(%eax)
	addl $-8,%esp
	pushl $1
	movl (%ebx),%eax
	pushl %eax
	call ___infix_add__Q5B
	movl %eax,(%ebx)
	movl %esi,8(%ebx)
L1767:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clear__to__8AN:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl 16(%ebp),%esi
	movl 12(%ebp),%ebx
	jmp L1770
	.p2align 2
L1772:
	addl $-4,%esp
	pushl %ebx
	pushl $0
	pushl %edi
	call _put__to__I4D
	addl $-8,%esp
	addl $16,%esp
	pushl $1
	pushl %ebx
	call ___infix_add__Q5B
	movl %eax,%ebx
	addl $16,%esp
L1770:
	addl $-8,%esp
	pushl %esi
	pushl %ebx
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	jne L1772
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_object_size__QLN:
	pushl %ebp
	movl %esp,%ebp
	movl $12,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_item__DNN:
	pushl %ebp
	movl %esp,%ebp
	imull $12,12(%ebp),%eax
	addl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_pointer__5ON:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_item__GTN:
	pushl %ebp
	movl %esp,%ebp
	imull $12,12(%ebp),%edx
	movl 8(%ebp),%eax
	addl (%eax),%edx
	movl %edx,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clone__X2N:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl _parent_video__C2,%eax
	call _object_size__03N
	movl %eax,%ebx
	testl %ebx,%ebx
	jne L1787
	movl $_GUI_BUTTON__,%eax
	jmp L1788
	.p2align 2
L1787:
	addl $-12,%esp
	pushl %ebx
	call _allocation__C7
	movl %eax,%esi
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L1789
	call _to_pointer__R4N
	jmp L1790
	.p2align 2
L1789:
	call _to_pointer__R4N
L1790:
	addl $-4,%esp
	pushl %ebx
	pushl %eax
	pushl %esi
	call _copy__from__size__NPD
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L1791
	addl $-12,%esp
	pushl %esi
	call _force_conversion__D5N
	jmp L1788
	.p2align 2
L1791:
	addl $-12,%esp
	pushl %esi
	call _force_conversion__D5N
L1788:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_prev__BAO:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,48(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_prev__PRBC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,48(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_prev__XRBC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,48(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_prev__5RBC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,48(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_prev__DSBC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,48(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_prev__KSBC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,48(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_prev__RSBC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,48(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_prev__ZSBC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,48(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_prev__7SBC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,48(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_prev__FTBC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,48(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_prev__RLYC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,44(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_child__MAO:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,40(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_child__RAO:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,44(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_child__UTBC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,44(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clipping_off__FBO:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl $0,16(%eax)
	movl $0,20(%eax)
	movl %ebp,%esp
	movl 12(%eax),%edx
	decl %edx
	movl %edx,24(%eax)
	movl 8(%eax),%edx
	decl %edx
	movl %edx,28(%eax)
	popl %ebp
	ret
	.p2align 2
_clip_type1__JRO:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%ebx
	addl $-12,%esp
	pushl %ebx
	call _clip_next_child__SRO
	addl $16,%esp
	movl 40(%ebx),%edx
	testl %edx,%edx
	je L1928
	movl (%edx),%eax
	cmpl $28,%eax
	je L1930
	ja L1935
	cmpl $17,%eax
	je L1931
	jmp L1928
	.p2align 2
L1935:
	cmpl $78,%eax
	je L1932
	jmp L1928
	.p2align 2
L1930:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__MEF
	jmp L1928
	.p2align 2
L1931:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__Z0I
	jmp L1928
	.p2align 2
L1932:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__YW5B
L1928:
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_refresh__XBQ:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%eax
	addl $-12,%esp
	movl 8(%eax),%edx
	decl %edx
	pushl %edx
	movl 12(%eax),%edx
	decl %edx
	pushl %edx
	pushl $0
	pushl $0
	pushl %eax
	call _draw__to__WCQ
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_font_width__9OS:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%edx
	movl _parent_video__C2,%eax
	movl 4(%edx),%ecx
	cmpl $16,(%eax)
	jne L1944
	addl $-8,%esp
	pushl %ecx
	pushl %edx
	call _font_width__size__MPS
	jmp L1945
	.p2align 2
L1944:
	addl $-8,%esp
	pushl %ecx
	pushl %edx
	call _font_width__size__MPS
L1945:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_add__Q5B:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clone__XTS:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl _parent_video__C2,%eax
	call _object_size__0US
	movl %eax,%ebx
	testl %ebx,%ebx
	jne L1950
	movl $_GUI_CHECK__,%eax
	jmp L1951
	.p2align 2
L1950:
	addl $-12,%esp
	pushl %ebx
	call _allocation__C7
	movl %eax,%esi
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L1952
	call _to_pointer__RVS
	jmp L1953
	.p2align 2
L1952:
	call _to_pointer__RVS
L1953:
	addl $-4,%esp
	pushl %ebx
	pushl %eax
	pushl %esi
	call _copy__from__size__NPD
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L1954
	addl $-12,%esp
	pushl %esi
	call _force_conversion__DWS
	jmp L1951
	.p2align 2
L1954:
	addl $-12,%esp
	pushl %esi
	call _force_conversion__DWS
L1951:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clipping_off__Q2S:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl $0,16(%eax)
	movl $0,20(%eax)
	movl %ebp,%esp
	movl 12(%eax),%edx
	decl %edx
	movl %edx,24(%eax)
	movl 8(%eax),%edx
	decl %edx
	movl %edx,28(%eax)
	popl %ebp
	ret
	.p2align 2
_refresh__IEU:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%eax
	addl $-12,%esp
	movl 8(%eax),%edx
	decl %edx
	pushl %edx
	movl 12(%eax),%edx
	decl %edx
	pushl %edx
	pushl $0
	pushl $0
	pushl %eax
	call _draw__to__HFU
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clone__7W6:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl _parent_video__C2,%eax
	call _object_size__AY6
	movl %eax,%ebx
	testl %ebx,%ebx
	jne L2334
	movl $_GUI_IMAGE__,%eax
	jmp L2335
	.p2align 2
L2334:
	addl $-12,%esp
	pushl %ebx
	call _allocation__C7
	movl %eax,%esi
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L2336
	call _to_pointer__1Y6
	jmp L2337
	.p2align 2
L2336:
	call _to_pointer__1Y6
L2337:
	addl $-4,%esp
	pushl %ebx
	pushl %eax
	pushl %esi
	call _copy__from__size__NPD
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L2338
	addl $-12,%esp
	pushl %esi
	call _force_conversion__NZ6
	jmp L2335
	.p2align 2
L2338:
	addl $-12,%esp
	pushl %esi
	call _force_conversion__NZ6
L2335:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_is_file__9OAB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	cmpb $0,16(%eax)
	sete %al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_message__64AB:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _print__B5AB
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_die_with_code__R8AB:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _exit__2QB
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_open_bmp__48AB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	addl $-8,%esp
	addl $-12,%esp
	movl 12(%edi),%ebx
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,12(%edi)
	movl 24(%edi),%eax
	addl $32,%esp
	testl %eax,%eax
	jne L2427
	addl $-12,%esp
	pushl $16
	call _allocation__C7
	movl %eax,%ebx
	addl $-4,%esp
	pushl $16
	pushl $_BMP_FILE__
	pushl %ebx
	call _copy__from__size__NPD
	addl $32,%esp
	movl %ebx,%esi
	movl %esi,24(%edi)
	jmp L2430
	.p2align 2
L2427:
	movl %eax,%esi
L2430:
	movl 24(%edi),%ebx
	movl %edi,(%ebx)
	movl (%edi),%eax
	addl $-12,%esp
	pushl %eax
	call _to_external__I48
	addl $-8,%esp
	pushl $LC27
	pushl %eax
	call _fopen
	movl %eax,12(%ebx)
	testl %eax,%eax
	jne L2432
	xorl %esi,%esi
	movl $0,24(%edi)
L2432:
	leal -24(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_is_valid_bmp__T3CB:
	pushl %ebp
	movl _header__L06,%edx
	movl %esp,%ebp
	xorl %eax,%eax
	cmpb $66,(%edx)
	jne L2500
	cmpb $77,1(%edx)
	sete %al
	andl $255,%eax
L2500:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_message__D5CB:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _print__S1K
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clipping_off__O3HB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl $0,16(%eax)
	movl $0,20(%eax)
	movl %ebp,%esp
	movl 12(%eax),%edx
	decl %edx
	movl %edx,24(%eax)
	movl 8(%eax),%edx
	decl %edx
	movl %edx,28(%eax)
	popl %ebp
	ret
	.p2align 2
_draw__to__RHJB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%edi
	movl 16(%ebp),%esi
	movl 20(%ebp),%ecx
	movl _parent_video__C2,%eax
	movl 24(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	pushl %ecx
	pushl %esi
	pushl %edi
	pushl %ebx
	call _clipping__to__8HJB
	addl $32,%esp
	movl _parent_video__C2,%eax
	movl 84(%ebx),%edx
	cmpl $16,(%eax)
	jne L3089
	pushl $0
	pushl $0
	pushl %edx
	pushl %ebx
	call _put_bitmap__to__8KJB
	jmp L3090
	.p2align 2
L3089:
	pushl $0
	pushl $0
	pushl %edx
	pushl %ebx
	call _put_bitmap__to__8KJB
L3090:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clone__5LKB:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl _parent_video__C2,%eax
	call _object_size__8MKB
	movl %eax,%ebx
	testl %ebx,%ebx
	jne L3094
	movl $_GUI_ICONE__,%eax
	jmp L3095
	.p2align 2
L3094:
	addl $-12,%esp
	pushl %ebx
	call _allocation__C7
	movl %eax,%esi
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L3096
	call _to_pointer__ZNKB
	jmp L3097
	.p2align 2
L3096:
	call _to_pointer__ZNKB
L3097:
	addl $-4,%esp
	pushl %ebx
	pushl %eax
	pushl %esi
	call _copy__from__size__NPD
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L3098
	addl $-12,%esp
	pushl %esi
	call _force_conversion__LOKB
	jmp L3095
	.p2align 2
L3098:
	addl $-12,%esp
	pushl %esi
	call _force_conversion__LOKB
L3095:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_die_with_code__NRKB:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _exit__2QB
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clipping_off__G0KB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl $0,16(%eax)
	movl $0,20(%eax)
	movl %ebp,%esp
	movl 12(%eax),%edx
	decl %edx
	movl %edx,24(%eax)
	movl 8(%eax),%edx
	decl %edx
	movl %edx,28(%eax)
	popl %ebp
	ret
	.p2align 2
_refresh__8DMB:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%eax
	addl $-12,%esp
	movl 8(%eax),%edx
	decl %edx
	pushl %edx
	movl 12(%eax),%edx
	decl %edx
	pushl %edx
	pushl $0
	pushl $0
	pushl %eax
	call _draw__to__7EMB
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clone__ESPB:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl _parent_video__C2,%eax
	call _object_size__HTPB
	movl %eax,%ebx
	testl %ebx,%ebx
	jne L3428
	movl $_GUI_IN_INTEGER__,%eax
	jmp L3429
	.p2align 2
L3428:
	addl $-12,%esp
	pushl %ebx
	call _allocation__C7
	movl %eax,%esi
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L3430
	call _to_pointer__8TPB
	jmp L3431
	.p2align 2
L3430:
	call _to_pointer__8TPB
L3431:
	addl $-4,%esp
	pushl %ebx
	pushl %eax
	pushl %esi
	call _copy__from__size__NPD
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L3432
	addl $-12,%esp
	pushl %esi
	call _force_conversion__UUPB
	jmp L3429
	.p2align 2
L3432:
	addl $-12,%esp
	pushl %esi
	call _force_conversion__UUPB
L3429:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clipping_off__N2PB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl $0,16(%eax)
	movl $0,20(%eax)
	movl %ebp,%esp
	movl 12(%eax),%edx
	decl %edx
	movl %edx,24(%eax)
	movl 8(%eax),%edx
	decl %edx
	movl %edx,28(%eax)
	popl %ebp
	ret
	.p2align 2
_refresh__3GRB:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%eax
	addl $-12,%esp
	movl 8(%eax),%edx
	decl %edx
	pushl %edx
	movl 12(%eax),%edx
	decl %edx
	pushl %edx
	pushl $0
	pushl $0
	pushl %eax
	call _draw__to__2HRB
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clone__SNUB:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl _parent_video__C2,%eax
	call _object_size__VOUB
	movl %eax,%ebx
	testl %ebx,%ebx
	jne L3761
	movl $_GUI_IN_TEXT__,%eax
	jmp L3762
	.p2align 2
L3761:
	addl $-12,%esp
	pushl %ebx
	call _allocation__C7
	movl %eax,%esi
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L3763
	call _to_pointer__MPUB
	jmp L3764
	.p2align 2
L3763:
	call _to_pointer__MPUB
L3764:
	addl $-4,%esp
	pushl %ebx
	pushl %eax
	pushl %esi
	call _copy__from__size__NPD
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L3765
	addl $-12,%esp
	pushl %esi
	call _force_conversion__8PUB
	jmp L3762
	.p2align 2
L3765:
	addl $-12,%esp
	pushl %esi
	call _force_conversion__8PUB
L3762:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_less_less__1SK:
	pushl %ebp
	movl %esp,%ebp
	movl 12(%ebp),%ecx
	movl 8(%ebp),%eax
	sall %cl,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_create__N68:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	call _clone__X68
	movl %eax,%ebx
	testl %esi,%esi
	jle L3769
	addl $-8,%esp
	pushl %esi
	movl 8(%ebx),%eax
	pushl %eax
	call ___infix_less__48E
	addl $16,%esp
	testb %al,%al
	je L3769
	addl $-12,%esp
	pushl %esi
	call _calloc__3O8
	movl %eax,(%ebx)
	movl %esi,8(%ebx)
L3769:
	movl $0,4(%ebx)
	leal -24(%ebp),%esp
	movl %ebx,%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clipping_off__EYUB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl $0,16(%eax)
	movl $0,20(%eax)
	movl %ebp,%esp
	movl 12(%eax),%edx
	decl %edx
	movl %edx,24(%eax)
	movl 8(%eax),%edx
	decl %edx
	movl %edx,28(%eax)
	popl %ebp
	ret
	.p2align 2
_refresh__IDWB:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%eax
	addl $-12,%esp
	movl 8(%eax),%edx
	decl %edx
	pushl %edx
	movl 12(%eax),%edx
	decl %edx
	pushl %edx
	pushl $0
	pushl $0
	pushl %eax
	call _draw__to__HEWB
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clone__Z2YB:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl _parent_video__C2,%eax
	call _object_size__23YB
	movl %eax,%ebx
	testl %ebx,%ebx
	jne L4102
	movl $_GUI_ELEVATOR__,%eax
	jmp L4103
	.p2align 2
L4102:
	addl $-12,%esp
	pushl %ebx
	call _allocation__C7
	movl %eax,%esi
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L4104
	call _to_pointer__T4YB
	jmp L4105
	.p2align 2
L4104:
	call _to_pointer__T4YB
L4105:
	addl $-4,%esp
	pushl %ebx
	pushl %eax
	pushl %esi
	call _copy__from__size__NPD
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L4106
	addl $-12,%esp
	pushl %esi
	call _force_conversion__F5YB
	jmp L4103
	.p2align 2
L4106:
	addl $-12,%esp
	pushl %esi
	call _force_conversion__F5YB
L4103:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clipping_off__WDZB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl $0,16(%eax)
	movl $0,20(%eax)
	movl %ebp,%esp
	movl 12(%eax),%edx
	decl %edx
	movl %edx,24(%eax)
	movl 8(%eax),%edx
	decl %edx
	movl %edx,28(%eax)
	popl %ebp
	ret
	.p2align 2
_refresh__OT0B:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%eax
	addl $-12,%esp
	movl 8(%eax),%edx
	decl %edx
	pushl %edx
	movl 12(%eax),%edx
	decl %edx
	pushl %edx
	pushl $0
	pushl $0
	pushl %eax
	call _draw__to__NU0B
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clone__D24B:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl _parent_video__C2,%eax
	call _object_size__F34B
	movl %eax,%ebx
	testl %ebx,%ebx
	jne L4436
	movl $_GUI_WINDOW__,%eax
	jmp L4437
	.p2align 2
L4436:
	addl $-12,%esp
	pushl %ebx
	call _allocation__C7
	movl %eax,%esi
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L4438
	call _to_pointer__534B
	jmp L4439
	.p2align 2
L4438:
	call _to_pointer__534B
L4439:
	addl $-4,%esp
	pushl %ebx
	pushl %eax
	pushl %esi
	call _copy__from__size__NPD
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L4440
	addl $-12,%esp
	pushl %esi
	call _force_conversion__Q44B
	jmp L4437
	.p2align 2
L4440:
	addl $-12,%esp
	pushl %esi
	call _force_conversion__Q44B
L4437:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_min__TNE:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	cmpl %edx,%eax
	jle L4443
	movl %edx,%eax
L4443:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_less_equal__NLE:
	pushl %ebp
	movl %esp,%ebp
	movl 12(%ebp),%eax
	cmpl %eax,8(%ebp)
	setle %al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_item__H4K:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	addl $-8,%esp
	decl %edx
	pushl %edx
	movl (%eax),%eax
	pushl %eax
	call _item__J5K
	movsbl %al,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_integer__BAS:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	addl $-12,%esp
	movsbl 8(%ebp),%eax
	pushl %eax
	call _code__1LB
	movsbl %al,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_less__6TH:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	cmpl %eax,%edx
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	sete %al
	movl -24(%ebp),%ebx
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_sub__F6B:
	pushl %ebp
	movl %esp,%ebp
	movl 12(%ebp),%eax
	movl 8(%ebp),%edx
	subl %eax,%edx
	movl %edx,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clipping_off__9F5B:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl $0,16(%eax)
	movl $0,20(%eax)
	movl %ebp,%esp
	movl 12(%eax),%edx
	decl %edx
	movl %edx,24(%eax)
	movl 8(%eax),%edx
	decl %edx
	movl %edx,28(%eax)
	popl %ebp
	ret
	.p2align 2
_clip_type1__EW5B:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%ebx
	addl $-12,%esp
	pushl %ebx
	call _clip_next_child__MW5B
	addl $16,%esp
	movl 40(%ebx),%edx
	testl %edx,%edx
	je L4590
	movl (%edx),%eax
	cmpl $28,%eax
	je L4592
	ja L4597
	cmpl $17,%eax
	je L4593
	jmp L4590
	.p2align 2
L4597:
	cmpl $78,%eax
	je L4594
	jmp L4590
	.p2align 2
L4592:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__MEF
	jmp L4590
	.p2align 2
L4593:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__Z0I
	jmp L4590
	.p2align 2
L4594:
	addl $-12,%esp
	pushl %edx
	call _creat_clip__YW5B
L4590:
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_refresh__ST6B:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%eax
	addl $-12,%esp
	movl 8(%eax),%edx
	decl %edx
	pushl %edx
	movl 12(%eax),%edx
	decl %edx
	pushl %edx
	pushl $0
	pushl $0
	pushl %eax
	call _draw__to__PU6B
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_itemb__9WBC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%ecx
/APP
	movw %cx,%dx 
	inb %dx,%al 
	movw %ax,%cx  
/NO_APP
	movb %cl,%al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_sub__OXBC:
	pushl %ebp
	movl %esp,%ebp
	movb 12(%ebp),%al
	movb 8(%ebp),%dl
	subb %al,%dl
	movb %dl,%al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_equal_equal__MW9:
	pushl %ebp
	movl %esp,%ebp
	movb 12(%ebp),%al
	cmpb %al,8(%ebp)
	sete %al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_usmallint__2UCC:
	pushl %ebp
	movl %esp,%ebp
	xorl %eax,%eax
	movb 8(%ebp),%al
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_numeric__4VD:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_add__I28:
	pushl %ebp
	movl %esp,%ebp
	movl 12(%ebp),%eax
	movl 8(%ebp),%edx
	negl %eax
	subl %eax,%edx
	movl %edx,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_equal_equal__C3CC:
	pushl %ebp
	movl %esp,%ebp
	movb 12(%ebp),%al
	cmpb %al,8(%ebp)
	sete %al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_print__S1K:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl _lower__2WK,%ebx
	movl 4(%edi),%esi
	cmpl %esi,%ebx
	jg L20855
	.p2align 2
L4858:
	addl $-12,%esp
	addl $-8,%esp
	movl %ebx,%eax
	subl $1,%eax
	pushl %eax
	movl (%edi),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	movsbl %al,%eax
	pushl %eax
	call _put_character__WOB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L4858
L20855:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_exit__2QB:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _exit
	.p2align 2
___infix_add__0U9:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	xorl %eax,%eax
	pushl %ebx
	xorl %ebx,%ebx
	movb 8(%ebp),%bl
	addl $-8,%esp
	addl $-12,%esp
	movb 12(%ebp),%al
	pushl %eax
	call ___prefix_sub__VRK
	andl $255,%eax
	pushl %eax
	pushl %ebx
	call ___infix_sub__ASK
	movl -24(%ebp),%ebx
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_integer__8QFB:
	pushl %ebp
	movl %esp,%ebp
	xorl %eax,%eax
	movb 8(%ebp),%al
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_mul__3QFB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	imull 12(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_ushortint__SQDC:
	pushl %ebp
	movl %esp,%ebp
	xorl %eax,%eax
	movb 8(%ebp),%al
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_less_less__S0C:
	pushl %ebp
	movl %esp,%ebp
	xorl %eax,%eax
	movl 12(%ebp),%ecx
	movw 8(%ebp),%ax
	sall %cl,%eax
	andl $65535,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___prefix_logicnot__SRDC:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	xorl %eax,%eax
	movw 8(%ebp),%ax
	addl $-8,%esp
	pushl %eax
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__P4C
	addl $16,%esp
	andl $65535,%eax
	pushl %eax
	call ___infix_sub__44C
	andl $65535,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_and__LJS:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	andl 12(%ebp),%eax
	andl $65535,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_item__RVDC:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%edi
	movl 12(%esi),%eax
	cmpl %eax,%edi
	je L4877
	cmpl %edi,%eax
	jle L4878
	movl 4(%esi),%eax
	movl $1,12(%esi)
	movl %eax,16(%esi)
L4878:
	cmpl 12(%esi),%edi
	je L4877
	.p2align 2
L4883:
	movl 16(%esi),%eax
	movl 12(%esi),%ebx
	addl $-8,%esp
	addl $-12,%esp
	movl 4(%eax),%eax
	movl %eax,16(%esi)
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	movl %eax,12(%esi)
	cmpl %eax,%edi
	jne L4883
L4877:
	movl 16(%esi),%eax
	leal -24(%ebp),%esp
	movl (%eax),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_create__next__1CEC:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%ebx
	call _clone__ADEC
	movl %ebx,(%eax)
	movl $0,4(%eax)
	popl %ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_next__5FEC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,4(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_div__5RCB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	cltd
	idivl 12(%ebp)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_max__1ME:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	cmpl %eax,%edx
	jle L4891
	movl %edx,%eax
L4891:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_destination__8URC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,4(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_destination__NSJC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,4(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_receive__KBTC:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 12(%ebp),%ebx
	movl %ebx,%edx
	cmpl $77,(%ebx)
	jne L5659
	xorl %edx,%edx
L5659:
	testl %edx,%edx
	je L5661
	movl 12(%edx),%eax
	addl $-4,%esp
	pushl %eax
	movl 8(%edx),%eax
	pushl %eax
	pushl $_INTERFACE__
	call _get_object__SEFC
	addl $16,%esp
	cmpl 8(%ebp),%eax
	je L5661
	addl $-8,%esp
	pushl %ebx
	pushl $_INTERFACE__
	call _receive__6ZRC
L5661:
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_print__ENB:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	addl $-12,%esp
	movsbl 8(%ebp),%eax
	pushl %eax
	call _put_character__WOB
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_sub__WSB:
	pushl %ebp
	movl %esp,%ebp
	movl 12(%ebp),%eax
	movl 8(%ebp),%edx
	subl %eax,%edx
	movl %edx,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_add__6SB:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__DTB
	pushl %eax
	pushl %ebx
	call ___infix_sub__STB
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___prefix_logicnot__2TB:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	addl $16,%esp
	pushl %eax
	call ___infix_sub__STB
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_and__PUB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	andl 12(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_put__to__BXB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl $0,(%edx,%eax,4)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_block__30B:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_sub__STB:
	pushl %ebp
	movl %esp,%ebp
	movl 12(%ebp),%eax
	movl 8(%ebp),%edx
	subl %eax,%edx
	movl %edx,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_make__21B:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	movl %edx,(%eax)
	movl $0,12(%eax)
	movl $0,8(%eax)
	movl $0,4(%eax)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_less_equal__Z4B:
	pushl %ebp
	movl %esp,%ebp
	movl 12(%ebp),%eax
	cmpl %eax,8(%ebp)
	setle %al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_uinteger__X6B:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_greater_greater__47B:
	pushl %ebp
	movl %esp,%ebp
	movl 12(%ebp),%ecx
	movl 8(%ebp),%eax
	shrl %cl,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_is_small_busy__W5C:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	addl $-12,%esp
	pushl %ebx
	call _size__HEC
	addl $16,%esp
	movl %eax,%esi
	addl $-12,%esp
	xorl %eax,%eax
	movw 16(%ebx),%ax
	pushl %eax
	call _to_uinteger__D5C
	addl $16,%esp
	subl %eax,%esi
	pushl %esi
	call ___infix_less__VEC
	leal -24(%ebp),%esp
	movsbl %al,%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_and__UDC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	andl 12(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_size__HEC:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%eax
	addl $-8,%esp
	pushl $-2
	movl (%eax),%eax
	pushl %eax
	call ___infix_and__THB
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_less__VEC:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %edx
	call ___infix_greater_equal__4EC
	testb %al,%al
	sete %al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_and__THB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	andl 12(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_is_free__HJC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	testb $1,(%eax)
	sete %al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_size__GKC:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%edx
	addl $-8,%esp
	movl (%ebx),%eax
	andl $1,%eax
	pushl %eax
	pushl %edx
	call ___infix_or__KLC
	movl %eax,(%ebx)
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_prev__UMC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,4(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_next_same__ZMC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,12(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_prev_same__BNC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,8(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_busy__AOC:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%ebx
	addl $-8,%esp
	pushl $1
	movl (%ebx),%eax
	pushl %eax
	call ___infix_or__5OC
	movl %eax,(%ebx)
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_numeric__5QC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_add__WQC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	subl $-128,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_greater__JRC:
	pushl %ebp
	movl %esp,%ebp
	movl 12(%ebp),%eax
	cmpl %eax,8(%ebp)
	seta %al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_adress__1RC:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%ebx
	movl _object_size__97,%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__DTB
	pushl %eax
	pushl %ebx
	call ___infix_sub__STB
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_next__8SC:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl _object_size__97,%eax
	xorl %edi,%edi
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__DTB
	pushl %eax
	pushl %ebx
	call ___infix_sub__STB
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	pushl $-2
	movl (%ebx),%eax
	pushl %eax
	call ___infix_and__THB
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__DTB
	pushl %eax
	pushl %esi
	call ___infix_sub__STB
	movl _end_memory__F5,%ebx
	movl %eax,%esi
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	pushl %eax
	pushl %ebx
	call ___infix_sub__STB
	cmpl %eax,%esi
	je L5890
	movl %esi,%edi
L5890:
	leal -24(%ebp),%esp
	movl %edi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_put__to__1VC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%ecx
	movl 12(%ebp),%edx
	movl 16(%ebp),%eax
	movl %edx,(%ecx,%eax,4)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_prev_same__ZXC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,8(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_memory__01C:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%ebx
	movl _object_size__97,%eax
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__DTB
	pushl %eax
	pushl %ebx
	call ___infix_sub__STB
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_ushortint__K3C:
	pushl %ebp
	movl %esp,%ebp
	xorl %eax,%eax
	movw 8(%ebp),%ax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___prefix_sub__P4C:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	xorl %eax,%eax
	movw 8(%ebp),%ax
	addl $-8,%esp
	pushl %eax
	pushl $0
	call ___infix_sub__44C
	andl $65535,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_sub__44C:
	pushl %ebp
	movl %esp,%ebp
	movl 12(%ebp),%eax
	movl 8(%ebp),%edx
	subl %eax,%edx
	movl %edx,%eax
	andl $65535,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_uinteger__D5C:
	pushl %ebp
	movl %esp,%ebp
	xorl %eax,%eax
	movw 8(%ebp),%ax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_uinteger__5TD:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_greater_greater__KUD:
	pushl %ebp
	movl %esp,%ebp
	movl 12(%ebp),%ecx
	movl 8(%ebp),%eax
	sarl %cl,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_force_conversion__9UD:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_item__TWD:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	movl (%edx,%eax,4),%eax
	ret
	.p2align 2
_put__to__KXD:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%ecx
	movl 12(%ebp),%edx
	movl 16(%ebp),%eax
	movl %edx,(%ecx,%eax,4)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_add__R0D:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call ___prefix_sub__DTB
	subl %eax,%ebx
	movl %ebx,%eax
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_force_conversion__F2D:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_item__R3D:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	movb (%eax,%edx),%al
	andl $255,%eax
	ret
	.p2align 2
_put__to__I4D:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%ecx
	movl 12(%ebp),%edx
	movl 16(%ebp),%eax
	movb %dl,(%eax,%ecx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_element_sizeof__KWF:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	call _pointer_size__TWF
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_put__to__HYF:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl $0,(%edx,%eax,4)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_equal_equal__WWB:
	pushl %ebp
	movl %esp,%ebp
	movl 12(%ebp),%eax
	cmpl %eax,8(%ebp)
	sete %al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___prefix_sub__DTB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	negl %eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_longint__1J4:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %eax,%edx
	sarl $31,%edx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_sub__8K4:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	subl 16(%ebp),%eax
	sbbl 20(%ebp),%edx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_force_conversion__IL4:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_pointer_size__TWF:
	pushl %ebp
	movl %esp,%ebp
	movl $4,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_put__to__947:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%ecx
	movl 12(%ebp),%edx
	movl 16(%ebp),%eax
	movl %edx,(%ecx,%eax,4)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clone__X68:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	addl $-12,%esp
	pushl $12
	call _allocation__C7
	movl %eax,%ebx
	addl $-4,%esp
	pushl $12
	pushl $_STRING__
	pushl %ebx
	call _copy__from__size__NPD
	movl %ebx,%eax
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_greater__3W:
	pushl %ebp
	movl %esp,%ebp
	movl 12(%ebp),%eax
	cmpl %eax,8(%ebp)
	setg %al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clone__OYK:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	addl $-12,%esp
	pushl $8
	call _allocation__C7
	movl %eax,%ebx
	addl $-4,%esp
	pushl $8
	pushl $_STRING_CONSTANT__
	pushl %ebx
	call _copy__from__size__NPD
	movl %ebx,%eax
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_storage__count__Z0K:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	movl 16(%ebp),%ecx
	movl %edx,(%eax)
	movl %ecx,4(%eax)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_object_size__R6:
	pushl %ebp
	movl %esp,%ebp
	movl $68,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_pointer__8OD:
	pushl %ebp
	movl %esp,%ebp
	movl $_AREA__,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_force_conversion__M7D:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clone__1OE:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	addl $-12,%esp
	pushl $36
	call _allocation__C7
	movl %eax,%ebx
	addl $-4,%esp
	pushl $36
	pushl $_PLAN__
	pushl %ebx
	call _copy__from__size__NPD
	movl %ebx,%eax
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_next__QWI:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,28(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_level__QTE:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,4(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_next__1TE:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,28(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_prev__HWI:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,32(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_inc_level__XXI:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	addl $-8,%esp
	addl $-12,%esp
	movl 4(%ebx),%esi
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,4(%ebx)
	movl 28(%ebx),%eax
	addl $32,%esp
	testl %eax,%eax
	je L5965
	addl $-12,%esp
	pushl %eax
	call _inc_level__XXI
L5965:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_create__plan__VUE:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%ebx
	addl $-12,%esp
	pushl $16
	call _allocation__C7
	movl %eax,%edi
	addl $-4,%esp
	pushl $16
	pushl $_LIMIT_X__
	pushl %edi
	call _copy__from__size__NPD
	movl %ebx,4(%edi)
	movl %esi,(%edi)
	leal -24(%ebp),%esp
	movl %edi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_x0__HXE:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,12(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_next__L4E:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,8(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_prev__X4E:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,12(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_x1__90E:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,16(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_append__E1E:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%ecx
	xorl %edi,%edi
	testl %ecx,%ecx
	je L5976
	movl 12(%ecx),%edi
	movl (%ecx),%edx
	movl (%ebx),%eax
	movl %eax,%esi
	cmpl %esi,%edx
	jg L5976
	movl %esi,-4(%ebp)
	.p2align 2
L5982:
	cmpl -4(%ebp),%edx
	jne L5977
	movl 4(%ebx),%edx
	movl 4(%ecx),%eax
	movl 4(%edx),%edx
	cmpl %edx,4(%eax)
	jle L5976
L5977:
	movl %ecx,%edi
	movl 8(%ecx),%ecx
	testl %ecx,%ecx
	je L5976
	movl (%ecx),%edx
	cmpl %esi,%edx
	jle L5982
L5976:
	movl %ecx,8(%ebx)
	movl %edi,12(%ebx)
	movl %ebx,%eax
	testl %edi,%edi
	je L5984
	movl 12(%ebp),%eax
	movl %ebx,8(%edi)
L5984:
	testl %ecx,%ecx
	je L5986
	movl %ebx,12(%ecx)
L5986:
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_create_top__plan__74E:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%ebx
	call _clone__H5E
	movb $1,8(%eax)
	movl %ebx,4(%eax)
	movl %esi,(%eax)
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_y0__W7E:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,20(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_less__48E:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	cmpl %eax,%edx
	setg %bl
	addl $-8,%esp
	pushl %eax
	pushl %edx
	call ___infix_equal_equal__WWB
	orb %al,%bl
	sete %al
	movl -24(%ebp),%ebx
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_next__FDF:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,12(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_prev__RDF:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,16(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_create_bottom__plan__PAF:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%ebx
	call _clone__H5E
	movb $0,8(%eax)
	movl %ebx,4(%eax)
	movl %esi,(%eax)
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_y1__BBF:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,24(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_append__GBF:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl 12(%ebp),%esi
	movl $0,-4(%ebp)
	jmp L5998
	.p2align 2
L6000:
	movl %esi,-4(%ebp)
	movl 12(%esi),%esi
L5998:
	testl %esi,%esi
	je L5999
	movl (%esi),%eax
	movl (%edi),%edx
	cmpl %edx,%eax
	setg %bl
	addl $-8,%esp
	pushl %edx
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L6000
L5999:
	movl %esi,12(%edi)
	movl -4(%ebp),%eax
	movl %eax,16(%edi)
	movl %edi,%eax
	cmpl $0,-4(%ebp)
	je L6007
	movl 12(%ebp),%eax
	movl -4(%ebp),%edx
	movl %edi,12(%edx)
L6007:
	testl %esi,%esi
	je L6009
	movl %edi,16(%esi)
L6009:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_active_y__65I:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movb $1,1(%eax)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_item__P5O:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	movl %ebp,%esp
	movl (%eax),%eax
	popl %ebp
	movl (%eax,%edx,4),%eax
	ret
	.p2align 2
_force__to__L7O:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 16(%ebp),%edi
	cmpl 8(%esi),%edi
	jg L6548
	addl $-4,%esp
	pushl %edi
	movl 12(%ebp),%eax
	pushl %eax
	movl (%esi),%eax
	pushl %eax
	call _put__to__LMH
	movb $1,%al
	addl $16,%esp
	jmp L6551
	.p2align 2
L6548:
	movb $0,%al
L6551:
	testb %al,%al
	jne L6553
	movl 8(%esi),%ebx
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	cmpl %eax,%edi
	jne L6554
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call _add_last__GDG
	jmp L6553
	.p2align 2
L6554:
	addl $-8,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	pushl %esi
	call _resize__TAP
	addl $-4,%esp
	pushl %edi
	movl 12(%ebp),%eax
	pushl %eax
	movl (%esi),%eax
	pushl %eax
	call _put__to__LMH
L6553:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_add_clip__from__to__0D6B:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%ebx
	movl 16(%ebp),%ecx
	movl 24(%ebp),%esi
	movl 28(%ebp),%edx
	movl _top_clip__Q3,%eax
	testl %eax,%eax
	je L6561
	cmpl %ecx,(%eax)
	jne L6561
	cmpl %esi,8(%eax)
	jne L6561
	cmpl %ebx,16(%eax)
	jne L6561
	movl %eax,%ebx
	addl $-8,%esp
	movl 24(%ebx),%eax
	movl %eax,_top_clip__Q3
	pushl %edx
	pushl %ebx
	call _set_y_max__YGJ
	addl $-12,%esp
	pushl %ebx
	call _set_right__3GJ
	addl $32,%esp
	jmp L6564
	.p2align 2
L6561:
	addl $-12,%esp
	pushl %edx
	pushl %esi
	movl 20(%ebp),%eax
	pushl %eax
	pushl %ecx
	pushl %ebx
	call _create__at__to__CH6B
	movl %eax,%ebx
	movl _last_clip__O3,%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _set_left__FIJ
	movl _top_clip__Q3,%eax
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _set_top__LIJ
	movl _top_clip__Q3,%eax
	addl $32,%esp
	jmp L20856
	.p2align 2
L6567:
	addl $-8,%esp
	pushl %ebx
	movl _top_clip__Q3,%eax
	pushl %eax
	call _set_bottom__OJJ
	movl _top_clip__Q3,%eax
	addl $16,%esp
	movl 24(%eax),%eax
	movl %eax,_top_clip__Q3
L20856:
	testl %eax,%eax
	je L6566
	cmpl %esi,8(%eax)
	jle L6567
L6566:
	cmpl $0,20(%ebx)
	jne L6564
	cmpl $0,28(%ebx)
	jne L6564
	movl 8(%ebp),%eax
	movl %ebx,60(%eax)
L6564:
	movl _last_clip__O3,%eax
	testl %eax,%eax
	jne L6573
	movl %ebx,_first_clip__P3
	jmp L6574
	.p2align 2
L6573:
	addl $-8,%esp
	pushl %ebx
	pushl %eax
	call _set_right__3KJ
L6574:
	leal -24(%ebp),%esp
	movl %ebx,_last_clip__O3
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_active_x__IMJ:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movb $1,(%eax)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_desactive_y__SMJ:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movb $0,1(%eax)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_desactive_x__WMJ:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movb $0,(%eax)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_add_clip__from__to__QPUC:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%ebx
	movl 16(%ebp),%ecx
	movl 24(%ebp),%esi
	movl 28(%ebp),%edx
	movl _top_clip__Q3,%eax
	testl %eax,%eax
	je L6620
	cmpl %ecx,(%eax)
	jne L6620
	cmpl %esi,8(%eax)
	jne L6620
	cmpl %ebx,16(%eax)
	jne L6620
	movl %eax,%ebx
	addl $-8,%esp
	movl 24(%ebx),%eax
	movl %eax,_top_clip__Q3
	pushl %edx
	pushl %ebx
	call _set_y_max__YGJ
	addl $-12,%esp
	pushl %ebx
	call _set_right__3GJ
	addl $32,%esp
	jmp L6623
	.p2align 2
L6620:
	addl $-12,%esp
	pushl %edx
	pushl %esi
	movl 20(%ebp),%eax
	pushl %eax
	pushl %ecx
	pushl %ebx
	call _create__at__to__CH6B
	movl %eax,%ebx
	movl _last_clip__O3,%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _set_left__FIJ
	movl _top_clip__Q3,%eax
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _set_top__LIJ
	movl _top_clip__Q3,%eax
	addl $32,%esp
	jmp L20857
	.p2align 2
L6626:
	addl $-8,%esp
	pushl %ebx
	movl _top_clip__Q3,%eax
	pushl %eax
	call _set_bottom__OJJ
	movl _top_clip__Q3,%eax
	addl $16,%esp
	movl 24(%eax),%eax
	movl %eax,_top_clip__Q3
L20857:
	testl %eax,%eax
	je L6625
	cmpl %esi,8(%eax)
	jle L6626
L6625:
	cmpl $0,20(%ebx)
	jne L6623
	cmpl $0,28(%ebx)
	jne L6623
	movl 8(%ebp),%eax
	movl %ebx,56(%eax)
L6623:
	movl _last_clip__O3,%eax
	testl %eax,%eax
	jne L6632
	movl %ebx,_first_clip__P3
	jmp L6633
	.p2align 2
L6632:
	addl $-8,%esp
	pushl %ebx
	pushl %eax
	call _set_right__3KJ
L6633:
	leal -24(%ebp),%esp
	movl %ebx,_last_clip__O3
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_y_max__YGJ:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,12(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_right__3GJ:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl $0,24(%eax)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clone__S7H:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	addl $-12,%esp
	pushl $36
	call _allocation__C7
	movl %eax,%ebx
	addl $-4,%esp
	pushl $36
	pushl $_CLIP__
	pushl %ebx
	call _copy__from__size__NPD
	movl %ebx,%eax
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_bottom__OJJ:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,32(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_right__3KJ:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,24(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_add_clip__from__to__H9UC:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%ebx
	movl 16(%ebp),%ecx
	movl 24(%ebp),%esi
	movl 28(%ebp),%edx
	movl _top_clip__Q3,%eax
	testl %eax,%eax
	je L6642
	cmpl %ecx,(%eax)
	jne L6642
	cmpl %esi,8(%eax)
	jne L6642
	cmpl %ebx,16(%eax)
	jne L6642
	movl %eax,%ebx
	movl 24(%ebx),%eax
	movl %eax,_top_clip__Q3
	movl %edx,12(%ebx)
	movl $0,24(%ebx)
	jmp L6647
	.p2align 2
L6642:
	addl $-12,%esp
	pushl %edx
	pushl %esi
	movl 20(%ebp),%eax
	pushl %eax
	pushl %ecx
	pushl %ebx
	call _create__at__to__CH6B
	movl %eax,%ebx
	movl _last_clip__O3,%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _set_left__FIJ
	movl _top_clip__Q3,%eax
	addl $-8,%esp
	pushl %eax
	pushl %ebx
	call _set_top__LIJ
	movl _top_clip__Q3,%eax
	testl %eax,%eax
	je L6649
	cmpl %esi,8(%eax)
	jg L6649
	.p2align 2
L6650:
	movl %ebx,32(%eax)
	movl 24(%eax),%eax
	testl %eax,%eax
	je L20858
	cmpl %esi,8(%eax)
	jle L6650
L20858:
	movl %eax,_top_clip__Q3
L6649:
	cmpl $0,20(%ebx)
	jne L6647
	cmpl $0,28(%ebx)
	jne L6647
	movl 8(%ebp),%eax
	movl %ebx,60(%eax)
L6647:
	movl _last_clip__O3,%eax
	testl %eax,%eax
	jne L6657
	movl %ebx,_first_clip__P3
	jmp L6658
	.p2align 2
L6657:
	movl %ebx,24(%eax)
L6658:
	leal -24(%ebp),%esp
	movl %ebx,_last_clip__O3
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_left__FIJ:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,20(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_top__LIJ:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,28(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___prefix_sub__05B:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	negl %eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_rectangle_fill__to__color__1UJ:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%edi
	movl 20(%ebp),%esi
	movl 24(%ebp),%ebx
	movl _parent_video__C2,%eax
	movl 28(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _color__EVJ
	addl $16,%esp
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L6693
	addl $-12,%esp
	pushl %ebx
	pushl %esi
	pushl %edi
	movl 12(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _rectangle_fill__to__TVJ
	jmp L6694
	.p2align 2
L6693:
	addl $-12,%esp
	pushl %ebx
	pushl %esi
	pushl %edi
	movl 12(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _rectangle_fill__to__TVJ
L6694:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_rectangle__to__color__RAL:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%edi
	movl 20(%ebp),%esi
	movl 24(%ebp),%ebx
	movl _parent_video__C2,%eax
	movl 28(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _color__EVJ
	addl $16,%esp
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L6698
	addl $-12,%esp
	pushl %ebx
	pushl %esi
	pushl %edi
	movl 12(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _rectangle__to__DBL
	jmp L6699
	.p2align 2
L6698:
	addl $-12,%esp
	pushl %ebx
	pushl %esi
	pushl %edi
	movl 12(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _rectangle__to__DBL
L6699:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_create__next__ZPM:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	addl $-12,%esp
	pushl $8
	call _allocation__C7
	movl %eax,%ebx
	addl $-4,%esp
	pushl $8
	pushl $_LINK__INBOX__
	pushl %ebx
	call _copy__from__size__NPD
	movl $_INTERFACE__,(%ebx)
	movl $0,4(%ebx)
	movl %ebx,%eax
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_object_size__03N:
	pushl %ebp
	movl %esp,%ebp
	movl $84,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_pointer__R4N:
	pushl %ebp
	movl %esp,%ebp
	movl $_GUI_BUTTON__,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_force_conversion__D5N:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_object_size__0US:
	pushl %ebp
	movl %esp,%ebp
	movl $84,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_pointer__RVS:
	pushl %ebp
	movl %esp,%ebp
	movl $_GUI_CHECK__,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_force_conversion__DWS:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_add_clip__from__to__1YT:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	movl 24(%ebp),%esi
	movl _top_clip__Q3,%eax
	testl %eax,%eax
	je L6837
	movl 16(%ebp),%edx
	cmpl %edx,(%eax)
	jne L6837
	cmpl %esi,8(%eax)
	jne L6837
	cmpl %edi,16(%eax)
	jne L6837
	movl %eax,%edx
	movl 24(%edx),%eax
	movl %eax,_top_clip__Q3
	movl 28(%ebp),%eax
	movl %eax,12(%edx)
	movl $0,24(%edx)
	jmp L6842
	.p2align 2
L6837:
	addl $-12,%esp
	pushl $36
	call _allocation__C7
	movl %eax,%ebx
	addl $-4,%esp
	pushl $36
	pushl $_CLIP__
	pushl %ebx
	call _copy__from__size__NPD
	movl 16(%ebp),%edx
	movl %edi,16(%ebx)
	movl %edx,(%ebx)
	movl 20(%ebp),%eax
	movl %eax,4(%ebx)
	movl 28(%ebp),%eax
	movl %eax,12(%ebx)
	movl _last_clip__O3,%eax
	movl %esi,8(%ebx)
	movl %ebx,%edx
	movl %eax,20(%edx)
	movl _top_clip__Q3,%eax
	movl %eax,28(%edx)
	testl %eax,%eax
	je L6849
	cmpl %esi,8(%eax)
	jg L6849
	.p2align 2
L6850:
	movl %ebx,32(%eax)
	movl 24(%eax),%eax
	testl %eax,%eax
	je L20859
	cmpl %esi,8(%eax)
	jle L6850
L20859:
	movl %eax,_top_clip__Q3
L6849:
	cmpl $0,20(%ebx)
	jne L6842
	cmpl $0,28(%ebx)
	jne L6842
	movl 8(%ebp),%eax
	movl %ebx,60(%eax)
L6842:
	movl _last_clip__O3,%eax
	testl %eax,%eax
	jne L6857
	movl %edx,_first_clip__P3
	jmp L6858
	.p2align 2
L6857:
	movl %edx,24(%eax)
L6858:
	leal -24(%ebp),%esp
	movl %edx,_last_clip__O3
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clone__UWX:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl _parent_video__C2,%eax
	call _object_size__XXX
	movl %eax,%ebx
	testl %ebx,%ebx
	jne L6975
	movl $_GUI_CHECK_LIST__,%eax
	jmp L6976
	.p2align 2
L6975:
	addl $-12,%esp
	pushl %ebx
	call _allocation__C7
	movl %eax,%esi
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L6977
	call _to_pointer__OYX
	jmp L6978
	.p2align 2
L6977:
	call _to_pointer__OYX
L6978:
	addl $-4,%esp
	pushl %ebx
	pushl %eax
	pushl %esi
	call _copy__from__size__NPD
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L6979
	addl $-12,%esp
	pushl %esi
	call _force_conversion__AZX
	jmp L6976
	.p2align 2
L6979:
	addl $-12,%esp
	pushl %esi
	call _force_conversion__AZX
L6976:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_create__next__D2X:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	addl $-12,%esp
	pushl $8
	call _allocation__C7
	movl %eax,%esi
	addl $-4,%esp
	pushl $8
	pushl $_LINK__GUI_CHECK_LIST__
	pushl %esi
	call _copy__from__size__NPD
	movl %ebx,(%esi)
	movl $0,4(%esi)
	leal -24(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_font_width__B8X:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%edx
	movl _parent_video__C2,%eax
	movl 4(%edx),%ecx
	cmpl $16,(%eax)
	jne L6985
	addl $-8,%esp
	pushl %ecx
	pushl %edx
	call _font_width__size__O8X
	jmp L6986
	.p2align 2
L6985:
	addl $-8,%esp
	pushl %ecx
	pushl %edx
	call _font_width__size__O8X
L6986:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clipping_off__8IY:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl $0,16(%eax)
	movl $0,20(%eax)
	movl %ebp,%esp
	movl 12(%eax),%edx
	decl %edx
	movl %edx,24(%eax)
	movl 8(%eax),%edx
	decl %edx
	movl %edx,28(%eax)
	popl %ebp
	ret
	.p2align 2
_refresh__OVZ:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%eax
	addl $-12,%esp
	movl 8(%eax),%edx
	decl %edx
	pushl %edx
	movl 12(%eax),%edx
	decl %edx
	pushl %edx
	pushl $0
	pushl $0
	pushl %eax
	call _draw__to__NWZ
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_object_size__AY6:
	pushl %ebp
	movl %esp,%ebp
	movl $88,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_pointer__1Y6:
	pushl %ebp
	movl %esp,%ebp
	movl $_GUI_IMAGE__,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_force_conversion__NZ6:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_mod__YG8:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%ebx
	addl $-8,%esp
	pushl %ebx
	pushl %esi
	call ___infix_div__AZ5
	imull %eax,%ebx
	leal -24(%ebp),%esp
	subl %ebx,%esi
	movl %esi,%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_item__IH8:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	movl (%edx,%eax,4),%eax
	ret
	.p2align 2
___infix_equal_equal__4GWC:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	movb $0,%al
	pushl %ebx
	movl 8(%ebp),%edx
	movl 12(%ebp),%ebx
	movl 4(%edx),%ecx
	cmpl 4(%ebx),%ecx
	jne L7263
	movl (%edx),%edx
	addl $-4,%esp
	pushl %ecx
	movl (%ebx),%eax
	pushl %eax
	pushl %edx
	call _fast_memcmp__until__MPHB
L7263:
	movl -24(%ebp),%ebx
	movsbl %al,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_copy_from__until__5V8:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	movl 16(%ebp),%esi
L20860:
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L7266
	addl $-4,%esp
	pushl %esi
	addl $-8,%esp
	pushl %esi
	pushl %edi
	call _item__J5K
	addl $16,%esp
	movsbl %al,%eax
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _put__to__MS8
	addl $16,%esp
	subl $1,%esi
	jmp L20860
	.p2align 2
L7266:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_fast_reverse_index_of__from__2Z8:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl 12(%ebp),%esi
	jmp L7280
	.p2align 2
L7290:
	addl $-8,%esp
	pushl %esi
	pushl %edi
	call _item__J5K
	addl $16,%esp
	cmpb $47,%al
	je L7281
	subl $1,%esi
L7280:
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	jne L7290
L7281:
	leal -24(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_date__ZT9:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	xorl %eax,%eax
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	addl $-8,%esp
	pushl $1900
	movw 20(%esi),%ax
	pushl %eax
	call ___infix_add__HU9
	movl %eax,%edi
	addl $16,%esp
	xorl %ebx,%ebx
	movb 16(%esi),%bl
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__VRK
	andl $255,%eax
	pushl %eax
	pushl %ebx
	call ___infix_sub__ASK
	movb %al,-2(%ebp)
	addl $32,%esp
	movb 12(%esi),%al
	movb %al,-1(%ebp)
	movb 24(%esi),%bl
	addl $-12,%esp
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	call _in_range__to__KV9
	addl $16,%esp
	testb %al,%al
	jne L7335
	movl $1,%ebx
L7335:
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	xorl %eax,%eax
	movb -1(%ebp),%al
	pushl %eax
	xorl %eax,%eax
	movb -2(%ebp),%al
	pushl %eax
	xorl %eax,%eax
	movw %di,%ax
	pushl %eax
	call _create__1X9
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_time__729:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%edx
	addl $-4,%esp
	xorl %eax,%eax
	movb (%edx),%al
	pushl %eax
	xorl %eax,%eax
	movb 4(%edx),%al
	pushl %eax
	xorl %eax,%eax
	movb 8(%edx),%al
	pushl %eax
	call _create__G39
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_next__KJWC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,8(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_realloc__with__8K9:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%ebx
	movl _pointer_size__OD,%edx
	movl %ebx,%eax
	imull %edx,%eax
	movl 12(%ebp),%esi
	imull %esi,%edx
	movl 8(%ebp),%ecx
	addl $-4,%esp
	pushl %eax
	pushl %edx
	pushl %ecx
	call _realloc__size__to__TLG
	movl %eax,%edi
	addl $16,%esp
	subl $1,%ebx
	cmpl %ebx,%esi
	jg L20861
	.p2align 2
L7346:
	addl $-4,%esp
	pushl %esi
	pushl $0
	pushl %edi
	call _put__to__MS8
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	cmpl %ebx,%esi
	jle L7346
L20861:
	leal -24(%ebp),%esp
	movl %edi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_copy__to__until__3TAB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 20(%ebp),%edi
	movl 16(%ebp),%esi
	xorl %ebx,%ebx
	cmpl %edi,%ebx
	je L7354
	.p2align 2
L7355:
	addl $-4,%esp
	pushl %esi
	addl $-8,%esp
	pushl %ebx
	movl 12(%ebp),%eax
	pushl %eax
	call _item__J5K
	addl $16,%esp
	movsbl %al,%eax
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _put__to__MS8
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	cmpl %edi,%ebx
	jne L7355
L7354:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_print__B5AB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl _lower__2WK,%ebx
	movl 4(%edi),%esi
	cmpl %esi,%ebx
	jg L20862
	.p2align 2
L7395:
	addl $-12,%esp
	addl $-8,%esp
	pushl %ebx
	pushl %edi
	call _item__UF9
	movsbl %al,%eax
	pushl %eax
	call _put_character__WOB
	addl $32,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L7395
L20862:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_integer__HJBB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_capacity__2OBB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 4(%eax),%ebx
	cmpl %ebx,12(%ebp)
	jle L7403
	testl %ebx,%ebx
	jne L7405
	movl 12(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _calloc__53M
	movl 8(%ebp),%edx
	movl %eax,(%edx)
	jmp L7406
	.p2align 2
L7405:
	movl 8(%ebp),%eax
	movl _object_size__NP,%edx
	movl (%eax),%ecx
	movl 12(%ebp),%eax
	imull %edx,%eax
	imull %ebx,%edx
	addl $-4,%esp
	pushl %eax
	pushl %edx
	pushl %ecx
	call _realloc__size__to__TLG
	movl 12(%ebp),%esi
	movl %eax,%edi
	addl $16,%esp
	subl $1,%esi
	jmp L7411
	.p2align 2
L7413:
	addl $-4,%esp
	pushl %ebx
	pushl $0
	pushl %edi
	call _put__to__I4D
	addl $-8,%esp
	addl $16,%esp
	pushl $1
	pushl %ebx
	call ___infix_add__Q5B
	movl %eax,%ebx
	addl $16,%esp
L7411:
	addl $-8,%esp
	pushl %esi
	pushl %ebx
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	jne L7413
	movl 8(%ebp),%edx
	movl %edi,(%edx)
L7406:
	movl 12(%ebp),%edx
	movl 8(%ebp),%eax
	movl %edx,4(%eax)
L7403:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clear__FVBB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl $-1,8(%eax)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_count__RXBB:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	movl 8(%eax),%ebx
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_add__VYBB:
	pushl %ebp
	movl %esp,%ebp
	movl 12(%ebp),%eax
	movl 8(%ebp),%edx
	negl %eax
	subl %eax,%edx
	movl %edx,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_mul__X2BB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	imull 12(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_greater__EFC:
	pushl %ebp
	movl %esp,%ebp
	movl 12(%ebp),%eax
	cmpl %eax,8(%ebp)
	seta %al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_basic_seek__33BB:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	addl $-4,%esp
	movl 12(%eax),%eax
	pushl $0
	pushl %edx
	pushl %eax
	call _fseek
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_make_with_map_object__65BB:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _force_conversion__86BB
	movl %eax,(%ebx)
	movl _object_size__3QD,%eax
	movl %eax,4(%ebx)
	movl $-1,8(%ebx)
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_less__08BB:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %edx
	call ___infix_greater_equal__4EC
	testb %al,%al
	sete %al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_basic_read__size__T9BB:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%eax
	movl 12(%ebp),%ecx
	movl 16(%ebp),%edx
	movl 12(%eax),%eax
	pushl %eax
	pushl %edx
	pushl $1
	pushl %ecx
	call _fread
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_upper__BBCB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,8(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_div__AZ5:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	cltd
	idivl 12(%ebp)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_force_conversion__86BB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_object_size__Q3CB:
	pushl %ebp
	movl %esp,%ebp
	movl $54,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_put__to__VKDB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl $0,(%edx,%eax,4)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_create__TVDB:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	call _clone__TWDB
	movl %eax,%esi
	movl %ebx,4(%esi)
	leal -1(%ebx),%eax
	movl %eax,(%esi)
	addl $-12,%esp
	pushl %ebx
	call _calloc__S0DB
	movl %eax,12(%esi)
	leal -24(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_put__to__UAEB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 16(%ebp),%edi
	addl $-8,%esp
	addl $-12,%esp
	movl 8(%esi),%ebx
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl (%esi),%eax
	movl 12(%ebp),%edx
	leal -24(%ebp),%esp
	movl %edx,(%eax,%edi,4)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_is_8bit__UMEB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	cmpw $8,28(%eax)
	sete %al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_nb_colors__PPEB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 46(%edx),%eax
	testl %eax,%eax
	jne L7510
	movw 28(%edx),%dx
	movl $256,%eax
	cmpw $8,%dx
	je L7510
	movl $2,%eax
	cmpw $4,%dx
	jne L7510
	movl $16,%eax
L7510:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_mul__XUH:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	imull 12(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_item__ZXEB:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl (%edx),%eax
	pushl %eax
	call _item__64DB
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_item__2YEB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	movl %ebp,%esp
	movl (%eax),%eax
	popl %ebp
	movb (%edx,%eax),%al
	andl $255,%eax
	ret
	.p2align 2
_color_rgb__A0EB:
	pushl %ebp
	movl %esp,%ebp
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	movl 16(%ebp),%ecx
	movl 20(%ebp),%ebx
	movb %dl,2(%eax)
	movb %cl,1(%eax)
	movb %bl,(%eax)
	popl %ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_buf_item__W3EB:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl _bmp_buffer__K06,%eax
	movl _pos_buffer__J06,%ebx
	addl $-8,%esp
	movl (%eax),%eax
	addl $-12,%esp
	movzbl (%ebx,%eax),%esi
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,_pos_buffer__J06
	leal -24(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_numeric__WNFB:
	pushl %ebp
	movl %esp,%ebp
	xorl %eax,%eax
	movb 8(%ebp),%al
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_item__ZIFB:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl 12(%edx),%eax
	pushl %eax
	call _item__64DB
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_item__OOFB:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	xorl %ebx,%ebx
	movb 12(%ebp),%bl
	movl (%eax),%esi
	call _object_size__J3DB
	imull %eax,%ebx
	leal (%ebx,%esi),%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_copy__ORFB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%ecx
	movl 12(%ebp),%edx
	movl %ebp,%esp
	movb (%edx),%al
	movb %al,(%ecx)
	movb 1(%edx),%al
	movb %al,1(%ecx)
	movb 2(%edx),%al
	movb %al,2(%ecx)
	popl %ebp
	ret
	.p2align 2
_copy__ZJFB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%ecx
	movl 12(%ebp),%edx
	movl %ebp,%esp
	movb (%edx),%al
	movb %al,(%ecx)
	movb 1(%edx),%al
	movb %al,1(%ecx)
	movb 2(%edx),%al
	movb %al,2(%ecx)
	popl %ebp
	ret
	.p2align 2
_clone__TWDB:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	addl $-12,%esp
	pushl $16
	call _allocation__C7
	movl %eax,%ebx
	addl $-4,%esp
	pushl $16
	pushl $_BMP_LINE_24__
	pushl %ebx
	call _copy__from__size__NPD
	movl %ebx,%eax
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_cursor__30FB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,4(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clear__TUGB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl $-1,(%eax)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_date__T2GB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	xorl %eax,%eax
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	addl $-8,%esp
	pushl $1900
	movw 20(%esi),%ax
	pushl %eax
	call ___infix_add__HU9
	movl %eax,%edi
	addl $16,%esp
	xorl %ebx,%ebx
	movb 16(%esi),%bl
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__VRK
	andl $255,%eax
	pushl %eax
	pushl %ebx
	call ___infix_sub__ASK
	movb %al,-2(%ebp)
	addl $32,%esp
	movb 12(%esi),%al
	movb %al,-1(%ebp)
	movb 24(%esi),%bl
	addl $-12,%esp
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	call _in_range__to__KV9
	addl $16,%esp
	testb %al,%al
	jne L7682
	movl $1,%ebx
L7682:
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	xorl %eax,%eax
	movb -1(%ebp),%al
	pushl %eax
	xorl %eax,%eax
	movb -2(%ebp),%al
	pushl %eax
	xorl %eax,%eax
	movw %di,%ax
	pushl %eax
	call _create__1X9
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_time__L4GB:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%edx
	addl $-4,%esp
	xorl %eax,%eax
	movb (%edx),%al
	pushl %eax
	xorl %eax,%eax
	movb 4(%edx),%al
	pushl %eax
	xorl %eax,%eax
	movb 8(%edx),%al
	pushl %eax
	call _create__G39
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_equal_equal__CKCB:
	pushl %ebp
	movl %esp,%ebp
	movl 12(%ebp),%eax
	cmpl %eax,8(%ebp)
	sete %al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_equal_equal__BOHB:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	movb $0,%al
	pushl %ebx
	movl 8(%ebp),%edx
	movl 12(%ebp),%ebx
	movl 4(%edx),%ecx
	cmpl 4(%ebx),%ecx
	jne L7740
	movl (%edx),%edx
	addl $-4,%esp
	pushl %ecx
	movl (%ebx),%eax
	pushl %eax
	pushl %edx
	call _fast_memcmp__until__MPHB
L7740:
	movl -24(%ebp),%ebx
	movsbl %al,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_add_clip__from__to__Z0IB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	movl 24(%ebp),%esi
	movl _top_clip__Q3,%eax
	testl %eax,%eax
	je L7742
	movl 16(%ebp),%edx
	cmpl %edx,(%eax)
	jne L7742
	cmpl %esi,8(%eax)
	jne L7742
	cmpl %edi,16(%eax)
	jne L7742
	movl %eax,%edx
	movl 24(%edx),%eax
	movl %eax,_top_clip__Q3
	movl 28(%ebp),%eax
	movl %eax,12(%edx)
	movl $0,24(%edx)
	jmp L7747
	.p2align 2
L7742:
	addl $-12,%esp
	pushl $36
	call _allocation__C7
	movl %eax,%ebx
	addl $-4,%esp
	pushl $36
	pushl $_CLIP__
	pushl %ebx
	call _copy__from__size__NPD
	movl 16(%ebp),%edx
	movl %edi,16(%ebx)
	movl %edx,(%ebx)
	movl 20(%ebp),%eax
	movl %eax,4(%ebx)
	movl 28(%ebp),%eax
	movl %eax,12(%ebx)
	movl _last_clip__O3,%eax
	movl %esi,8(%ebx)
	movl %ebx,%edx
	movl %eax,20(%edx)
	movl _top_clip__Q3,%eax
	movl %eax,28(%edx)
	testl %eax,%eax
	je L7754
	cmpl %esi,8(%eax)
	jg L7754
	.p2align 2
L7755:
	movl %ebx,32(%eax)
	movl 24(%eax),%eax
	testl %eax,%eax
	je L20864
	cmpl %esi,8(%eax)
	jle L7755
L20864:
	movl %eax,_top_clip__Q3
L7754:
	cmpl $0,20(%ebx)
	jne L7747
	cmpl $0,28(%ebx)
	jne L7747
	movl 8(%ebp),%eax
	movl %ebx,60(%eax)
L7747:
	movl _last_clip__O3,%eax
	testl %eax,%eax
	jne L7762
	movl %edx,_first_clip__P3
	jmp L7763
	.p2align 2
L7762:
	movl %edx,24(%eax)
L7763:
	leal -24(%ebp),%esp
	movl %edx,_last_clip__O3
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_object_size__8MKB:
	pushl %ebp
	movl %esp,%ebp
	movl $88,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_pointer__ZNKB:
	pushl %ebp
	movl %esp,%ebp
	movl $_GUI_ICONE__,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_force_conversion__LOKB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_add_clip__from__to__9XLB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	movl 24(%ebp),%esi
	movl _top_clip__Q3,%eax
	testl %eax,%eax
	je L7958
	movl 16(%ebp),%edx
	cmpl %edx,(%eax)
	jne L7958
	cmpl %esi,8(%eax)
	jne L7958
	cmpl %edi,16(%eax)
	jne L7958
	movl %eax,%edx
	movl 24(%edx),%eax
	movl %eax,_top_clip__Q3
	movl 28(%ebp),%eax
	movl %eax,12(%edx)
	movl $0,24(%edx)
	jmp L7963
	.p2align 2
L7958:
	addl $-12,%esp
	pushl $36
	call _allocation__C7
	movl %eax,%ebx
	addl $-4,%esp
	pushl $36
	pushl $_CLIP__
	pushl %ebx
	call _copy__from__size__NPD
	movl 16(%ebp),%edx
	movl %edi,16(%ebx)
	movl %edx,(%ebx)
	movl 20(%ebp),%eax
	movl %eax,4(%ebx)
	movl 28(%ebp),%eax
	movl %eax,12(%ebx)
	movl _last_clip__O3,%eax
	movl %esi,8(%ebx)
	movl %ebx,%edx
	movl %eax,20(%edx)
	movl _top_clip__Q3,%eax
	movl %eax,28(%edx)
	testl %eax,%eax
	je L7970
	cmpl %esi,8(%eax)
	jg L7970
	.p2align 2
L7971:
	movl %ebx,32(%eax)
	movl 24(%eax),%eax
	testl %eax,%eax
	je L20865
	cmpl %esi,8(%eax)
	jle L7971
L20865:
	movl %eax,_top_clip__Q3
L7970:
	cmpl $0,20(%ebx)
	jne L7963
	cmpl $0,28(%ebx)
	jne L7963
	movl 8(%ebp),%eax
	movl %ebx,60(%eax)
L7963:
	movl _last_clip__O3,%eax
	testl %eax,%eax
	jne L7978
	movl %edx,_first_clip__P3
	jmp L7979
	.p2align 2
L7978:
	movl %edx,24(%eax)
L7979:
	leal -24(%ebp),%esp
	movl %edx,_last_clip__O3
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_object_size__HTPB:
	pushl %ebp
	movl %esp,%ebp
	movl $100,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_pointer__8TPB:
	pushl %ebp
	movl %esp,%ebp
	movl $_GUI_IN_INTEGER__,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_force_conversion__UUPB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_add_clip__from__to__Y0QB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	movl 24(%ebp),%esi
	movl _top_clip__Q3,%eax
	testl %eax,%eax
	je L8049
	movl 16(%ebp),%edx
	cmpl %edx,(%eax)
	jne L8049
	cmpl %esi,8(%eax)
	jne L8049
	cmpl %edi,16(%eax)
	jne L8049
	movl %eax,%edx
	movl 24(%edx),%eax
	movl %eax,_top_clip__Q3
	movl 28(%ebp),%eax
	movl %eax,12(%edx)
	movl $0,24(%edx)
	jmp L8054
	.p2align 2
L8049:
	addl $-12,%esp
	pushl $36
	call _allocation__C7
	movl %eax,%ebx
	addl $-4,%esp
	pushl $36
	pushl $_CLIP__
	pushl %ebx
	call _copy__from__size__NPD
	movl 16(%ebp),%edx
	movl %edi,16(%ebx)
	movl %edx,(%ebx)
	movl 20(%ebp),%eax
	movl %eax,4(%ebx)
	movl 28(%ebp),%eax
	movl %eax,12(%ebx)
	movl _last_clip__O3,%eax
	movl %esi,8(%ebx)
	movl %ebx,%edx
	movl %eax,20(%edx)
	movl _top_clip__Q3,%eax
	movl %eax,28(%edx)
	testl %eax,%eax
	je L8061
	cmpl %esi,8(%eax)
	jg L8061
	.p2align 2
L8062:
	movl %ebx,32(%eax)
	movl 24(%eax),%eax
	testl %eax,%eax
	je L20866
	cmpl %esi,8(%eax)
	jle L8062
L20866:
	movl %eax,_top_clip__Q3
L8061:
	cmpl $0,20(%ebx)
	jne L8054
	cmpl $0,28(%ebx)
	jne L8054
	movl 8(%ebp),%eax
	movl %ebx,60(%eax)
L8054:
	movl _last_clip__O3,%eax
	testl %eax,%eax
	jne L8069
	movl %edx,_first_clip__P3
	jmp L8070
	.p2align 2
L8069:
	movl %edx,24(%eax)
L8070:
	leal -24(%ebp),%esp
	movl %edx,_last_clip__O3
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_object_size__VOUB:
	pushl %ebp
	movl %esp,%ebp
	movl $92,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_pointer__MPUB:
	pushl %ebp
	movl %esp,%ebp
	movl $_GUI_IN_TEXT__,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_force_conversion__8PUB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_add_clip__from__to__7WVB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	movl 24(%ebp),%esi
	movl _top_clip__Q3,%eax
	testl %eax,%eax
	je L8190
	movl 16(%ebp),%edx
	cmpl %edx,(%eax)
	jne L8190
	cmpl %esi,8(%eax)
	jne L8190
	cmpl %edi,16(%eax)
	jne L8190
	movl %eax,%edx
	movl 24(%edx),%eax
	movl %eax,_top_clip__Q3
	movl 28(%ebp),%eax
	movl %eax,12(%edx)
	movl $0,24(%edx)
	jmp L8195
	.p2align 2
L8190:
	addl $-12,%esp
	pushl $36
	call _allocation__C7
	movl %eax,%ebx
	addl $-4,%esp
	pushl $36
	pushl $_CLIP__
	pushl %ebx
	call _copy__from__size__NPD
	movl 16(%ebp),%edx
	movl %edi,16(%ebx)
	movl %edx,(%ebx)
	movl 20(%ebp),%eax
	movl %eax,4(%ebx)
	movl 28(%ebp),%eax
	movl %eax,12(%ebx)
	movl _last_clip__O3,%eax
	movl %esi,8(%ebx)
	movl %ebx,%edx
	movl %eax,20(%edx)
	movl _top_clip__Q3,%eax
	movl %eax,28(%edx)
	testl %eax,%eax
	je L8202
	cmpl %esi,8(%eax)
	jg L8202
	.p2align 2
L8203:
	movl %ebx,32(%eax)
	movl 24(%eax),%eax
	testl %eax,%eax
	je L20867
	cmpl %esi,8(%eax)
	jle L8203
L20867:
	movl %eax,_top_clip__Q3
L8202:
	cmpl $0,20(%ebx)
	jne L8195
	cmpl $0,28(%ebx)
	jne L8195
	movl 8(%ebp),%eax
	movl %ebx,60(%eax)
L8195:
	movl _last_clip__O3,%eax
	testl %eax,%eax
	jne L8210
	movl %edx,_first_clip__P3
	jmp L8211
	.p2align 2
L8210:
	movl %edx,24(%eax)
L8211:
	leal -24(%ebp),%esp
	movl %edx,_last_clip__O3
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_object_size__23YB:
	pushl %ebp
	movl %esp,%ebp
	movl $96,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_pointer__T4YB:
	pushl %ebp
	movl %esp,%ebp
	movl $_GUI_ELEVATOR__,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_force_conversion__F5YB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_add_clip__from__to__7C0B:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	movl 24(%ebp),%esi
	movl _top_clip__Q3,%eax
	testl %eax,%eax
	je L8336
	movl 16(%ebp),%edx
	cmpl %edx,(%eax)
	jne L8336
	cmpl %esi,8(%eax)
	jne L8336
	cmpl %edi,16(%eax)
	jne L8336
	movl %eax,%edx
	movl 24(%edx),%eax
	movl %eax,_top_clip__Q3
	movl 28(%ebp),%eax
	movl %eax,12(%edx)
	movl $0,24(%edx)
	jmp L8341
	.p2align 2
L8336:
	addl $-12,%esp
	pushl $36
	call _allocation__C7
	movl %eax,%ebx
	addl $-4,%esp
	pushl $36
	pushl $_CLIP__
	pushl %ebx
	call _copy__from__size__NPD
	movl 16(%ebp),%edx
	movl %edi,16(%ebx)
	movl %edx,(%ebx)
	movl 20(%ebp),%eax
	movl %eax,4(%ebx)
	movl 28(%ebp),%eax
	movl %eax,12(%ebx)
	movl _last_clip__O3,%eax
	movl %esi,8(%ebx)
	movl %ebx,%edx
	movl %eax,20(%edx)
	movl _top_clip__Q3,%eax
	movl %eax,28(%edx)
	testl %eax,%eax
	je L8348
	cmpl %esi,8(%eax)
	jg L8348
	.p2align 2
L8349:
	movl %ebx,32(%eax)
	movl 24(%eax),%eax
	testl %eax,%eax
	je L20868
	cmpl %esi,8(%eax)
	jle L8349
L20868:
	movl %eax,_top_clip__Q3
L8348:
	cmpl $0,20(%ebx)
	jne L8341
	cmpl $0,28(%ebx)
	jne L8341
	movl 8(%ebp),%eax
	movl %ebx,60(%eax)
L8341:
	movl _last_clip__O3,%eax
	testl %eax,%eax
	jne L8356
	movl %edx,_first_clip__P3
	jmp L8357
	.p2align 2
L8356:
	movl %edx,24(%eax)
L8357:
	leal -24(%ebp),%esp
	movl %edx,_last_clip__O3
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_object_size__F34B:
	pushl %ebp
	movl %esp,%ebp
	movl $84,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_pointer__534B:
	pushl %ebp
	movl %esp,%ebp
	movl $_GUI_WINDOW__,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_force_conversion__Q44B:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_item__J5K:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	movsbl (%eax,%edx),%eax
	ret
	.p2align 2
_code__1LB:
	pushl %ebp
	movl %esp,%ebp
	movsbl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_item__G5BC:
	pushl %ebp
	movl %esp,%ebp
	xorl %edx,%edx
	movl 8(%ebp),%eax
	movb 12(%ebp),%dl
	movl %ebp,%esp
	movl (%eax),%eax
	popl %ebp
	movb (%edx,%eax),%al
	andl $255,%eax
	ret
	.p2align 2
___infix_less_less__B7BC:
	pushl %ebp
	movl %esp,%ebp
	xorl %ecx,%ecx
	movl $1,%eax
	movb 8(%ebp),%cl
	sall %cl,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___prefix_logicnot__E7BC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	xorl $-1,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_or__S7BC:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	xorl %eax,%eax
	pushl %ebx
	xorl %ebx,%ebx
	movb 8(%ebp),%bl
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	movb 12(%ebp),%al
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	pushl %ebx
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movl -24(%ebp),%ebx
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_put__to__L8BC:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	movl 8(%ebp),%eax
	xorl %ebx,%ebx
	movb 16(%ebp),%bl
	addl $-8,%esp
	addl $-12,%esp
	movl 8(%eax),%esi
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl 8(%ebp),%edx
	leal -24(%ebp),%esp
	movl (%edx),%eax
	movl %edi,%edx
	movb %dl,(%ebx,%eax)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_xor__QPCC:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	xorl %ebx,%ebx
	movb 8(%ebp),%bl
	addl $-8,%esp
	addl $-8,%esp
	addl $-12,%esp
	movzbl 12(%ebp),%esi
	pushl %esi
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	pushl %ebx
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	addl $-8,%esp
	pushl %esi
	addl $-12,%esp
	pushl %ebx
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_or__5QK
	leal -24(%ebp),%esp
	andl $255,%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_less_equal__GTCC:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	addl $-8,%esp
	xorl %eax,%eax
	movb 12(%ebp),%al
	pushl %eax
	xorl %eax,%eax
	movb 8(%ebp),%al
	pushl %eax
	call ___infix_greater__STCC
	testb %al,%al
	sete %al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_less__L2CC:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movb 8(%ebp),%al
	movb %al,-1(%ebp)
	movb 12(%ebp),%bl
	addl $-8,%esp
	xorl %eax,%eax
	movb %bl,%al
	pushl %eax
	xorl %eax,%eax
	movb -1(%ebp),%al
	pushl %eax
	call ___infix_greater__STCC
	movb %al,%dl
	cmpb %bl,-1(%ebp)
	sete %al
	movl -24(%ebp),%ebx
	orb %dl,%al
	sete %al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___prefix_sub__VRK:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	addl $-8,%esp
	xorl %eax,%eax
	movb 8(%ebp),%al
	pushl %eax
	pushl $0
	call ___infix_sub__ASK
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_sub__ASK:
	pushl %ebp
	movl %esp,%ebp
	movb 12(%ebp),%al
	movb 8(%ebp),%dl
	subb %al,%dl
	movb %dl,%al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_put_character__WOB:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	addl $-8,%esp
	pushl $___dj_stdout
	movsbl 8(%ebp),%eax
	pushl %eax
	call _fputc
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clone__ADEC:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	addl $-12,%esp
	pushl $8
	call _allocation__C7
	movl %eax,%ebx
	addl $-4,%esp
	pushl $8
	pushl $_LINK__EVENT__
	pushl %ebx
	call _copy__from__size__NPD
	movl %ebx,%eax
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_create__next__AOJC:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	addl $-12,%esp
	pushl $8
	call _allocation__C7
	movl %eax,%esi
	addl $-4,%esp
	pushl $8
	pushl $_LINK__EVENT__
	pushl %esi
	call _copy__from__size__NPD
	movl %ebx,(%esi)
	movl $0,4(%esi)
	leal -24(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clear__QPTB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl $0,4(%eax)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_or__TCKC:
	pushl %ebp
	movl %esp,%ebp
	movl 12(%ebp),%eax
	orl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_left_up__CHKC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 20(%edx),%eax
	xorl %ecx,%ecx
	cmpb $0,17(%eax)
	jne L8921
	cmpb $0,17(%edx)
	setne %al
	movb %al,%cl
L8921:
	movl %ecx,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_item__OKKC:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%edi
	movl 12(%esi),%eax
	cmpl %eax,%edi
	je L8923
	cmpl %edi,%eax
	jle L8924
	movl 4(%esi),%eax
	movl $1,12(%esi)
	movl %eax,16(%esi)
L8924:
	cmpl 12(%esi),%edi
	je L8923
	.p2align 2
L8929:
	movl 16(%esi),%eax
	movl 12(%esi),%ebx
	addl $-8,%esp
	addl $-12,%esp
	movl 4(%eax),%eax
	movl %eax,16(%esi)
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	movl %eax,12(%esi)
	cmpl %eax,%edi
	jne L8929
L8923:
	movl 16(%esi),%eax
	leal -24(%ebp),%esp
	movl (%eax),%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_stat__NLKC:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,76(%edx)
	addl $-12,%esp
	movl 8(%edx),%eax
	decl %eax
	pushl %eax
	movl 12(%edx),%eax
	decl %eax
	pushl %eax
	pushl $0
	pushl $0
	pushl %edx
	call _draw__to__NWZ
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_is_moving_only__MSKC:
	pushl %ebp
	movl %esp,%ebp
	pushl %ebx
	movl 8(%ebp),%ecx
	movl 20(%ecx),%edx
	movw 16(%edx),%ax
	cmpw %ax,16(%ecx)
	jne L8962
	movl 8(%edx),%eax
	movb $0,%bl
	cmpl %eax,8(%ecx)
	jne L8964
	movl 12(%edx),%eax
	cmpl %eax,12(%ecx)
	je L8965
L8964:
	movb $1,%bl
	jmp L8965
	.p2align 2
L8962:
	movb $0,%bl
L8965:
	movsbl %bl,%eax
	popl %ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_dx__OUKC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	movl 20(%eax),%edx
	movl 8(%eax),%eax
	movl 8(%edx),%edx
	subl %edx,%eax
	ret
	.p2align 2
_dy__ZUKC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	movl 20(%eax),%edx
	movl 12(%eax),%eax
	movl 12(%edx),%edx
	subl %edx,%eax
	ret
	.p2align 2
_y_max__800B:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	movl 8(%eax),%eax
	decl %eax
	ret
	.p2align 2
___infix_or__YLIC:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%eax
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__7F8
	pushl %eax
	addl $-12,%esp
	pushl %ebx
	call ___prefix_logicnot__7F8
	addl $16,%esp
	pushl %eax
	call ___infix_and__DGIC
	pushl %eax
	call ___prefix_logicnot__7F8
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_max__2RJ:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	cmpl %eax,%edx
	jle L9074
	movl %edx,%eax
L9074:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_count__WF2B:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%eax
	movl _lower__R0N,%edx
	addl $-8,%esp
	addl $-12,%esp
	movl 84(%eax),%ebx
	subl %edx,%ebx
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_real_16_16__7E2B:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%eax
	addl $-12,%esp
	sall $16,%eax
	pushl %eax
	call _to_raw_real_16_16__KF2B
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_div_diese__IG2B:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%ebx
	addl $-12,%esp
	addl $-12,%esp
	pushl %eax
	call _to_raw_integer__RG2B
	cltd
	idivl %ebx
	addl $16,%esp
	pushl %eax
	call _to_raw_real_16_16__KF2B
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_mul_diese__AH2B:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%ebx
	addl $-12,%esp
	addl $-12,%esp
	pushl %eax
	call _to_raw_integer__RG2B
	imull %eax,%ebx
	addl $16,%esp
	pushl %ebx
	call _to_raw_real_16_16__KF2B
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_integer__RH2B:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _to_raw_integer__RG2B
	sarl $16,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_xor__23QC:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%ebx
	addl $-8,%esp
	pushl %ebx
	addl $-12,%esp
	pushl %esi
	call ___prefix_logicnot__7F8
	addl $16,%esp
	pushl %eax
	call ___infix_and__DGIC
	movl %eax,%edi
	addl $-8,%esp
	addl $-12,%esp
	pushl %ebx
	call ___prefix_logicnot__7F8
	pushl %eax
	pushl %esi
	call ___infix_and__DGIC
	addl $48,%esp
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl %eax
	call ___prefix_logicnot__7F8
	pushl %eax
	addl $-12,%esp
	pushl %edi
	call ___prefix_logicnot__7F8
	addl $16,%esp
	pushl %eax
	call ___infix_and__DGIC
	pushl %eax
	call ___prefix_logicnot__7F8
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_greater_greater__PRTC:
	pushl %ebp
	movl %esp,%ebp
	xorl %eax,%eax
	movb 9(%ebp),%al
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_usmallint__QRTC:
	pushl %ebp
	movl %esp,%ebp
	xorl %eax,%eax
	movb 8(%ebp),%al
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_and__VRTC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	andl 12(%ebp),%eax
	andl $65535,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_character__1RTC:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	addl $-12,%esp
	movsbl 8(%ebp),%eax
	pushl %eax
	call _to_character__TKB
	movsbl %al,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_greater_equal__5BGC:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	addl $-8,%esp
	pushl $48
	movsbl 8(%ebp),%esi
	pushl %esi
	call ___infix_greater__YJB
	movb %al,%bl
	addl $-8,%esp
	pushl $48
	pushl %esi
	call ___infix_equal_equal__5JB
	orb %al,%bl
	leal -24(%ebp),%esp
	movsbl %bl,%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_less_equal__5CGC:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	addl $-8,%esp
	pushl $57
	movsbl 8(%ebp),%eax
	pushl %eax
	call ___infix_greater__YJB
	testb %al,%al
	sete %al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_insert__to__O9TB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 16(%ebp),%edi
	movb 12(%ebp),%al
	movb %al,-1(%ebp)
	addl $-8,%esp
	movl 4(%esi),%ebx
	pushl $32
	pushl %esi
	call _extend__RKCB
	addl $16,%esp
	cmpl %edi,%ebx
	je L9154
	.p2align 2
L9155:
	addl $-4,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	addl $-8,%esp
	pushl %ebx
	pushl %esi
	call _item__UF9
	addl $16,%esp
	movsbl %al,%eax
	pushl %eax
	pushl %esi
	call _put__to__6G9
	addl $16,%esp
	subl $1,%ebx
	cmpl %edi,%ebx
	jne L9155
L9154:
	addl $-4,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %edi
	call ___infix_sub__F6B
	addl $32,%esp
	pushl %eax
	movsbl -1(%ebp),%eax
	pushl %eax
	pushl %esi
	call _put__to__6G9
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_create__next__H2RC:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	addl $-12,%esp
	pushl $8
	call _allocation__C7
	movl %eax,%esi
	addl $-4,%esp
	pushl $8
	pushl $_LINK__EVENT__
	pushl %esi
	call _copy__from__size__NPD
	movl %ebx,(%esi)
	movl $0,4(%esi)
	leal -24(%ebp),%esp
	movl %esi,%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_smallint__GJB:
	pushl %ebp
	movl %esp,%ebp
	movsbl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_greater__YJB:
	pushl %ebp
	movl %esp,%ebp
	movb 12(%ebp),%al
	cmpb %al,8(%ebp)
	setg %al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_equal_equal__5JB:
	pushl %ebp
	movl %esp,%ebp
	movb 12(%ebp),%al
	cmpb %al,8(%ebp)
	sete %al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_character__TKB:
	pushl %ebp
	movl %esp,%ebp
	movsbl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_add__TLB:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	addl $-8,%esp
	movsbl 12(%ebp),%eax
	pushl %eax
	movsbl 8(%ebp),%eax
	pushl %eax
	call ___infix_add__KMB
	movsbl %al,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_greater_equal__4EC:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	cmpl %eax,%edx
	seta %bl
	addl $-8,%esp
	pushl %eax
	pushl %edx
	call ___infix_equal_equal__LFC
	orb %al,%bl
	movsbl %bl,%eax
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_or__KLC:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%ebx
	addl $-8,%esp
	pushl %eax
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	addl $16,%esp
	pushl %eax
	call ___infix_sub__STB
	movl %eax,%esi
	addl $16,%esp
	addl $-8,%esp
	pushl %ebx
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	addl $16,%esp
	pushl %eax
	call ___infix_sub__STB
	addl $16,%esp
	andl %eax,%esi
	addl $-8,%esp
	pushl %esi
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	addl $16,%esp
	pushl %eax
	call ___infix_sub__STB
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_or__5OC:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%ebx
	addl $-8,%esp
	pushl %eax
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	addl $16,%esp
	pushl %eax
	call ___infix_sub__STB
	movl %eax,%esi
	addl $16,%esp
	addl $-8,%esp
	pushl %ebx
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	addl $16,%esp
	pushl %eax
	call ___infix_sub__STB
	addl $16,%esp
	andl %eax,%esi
	addl $-8,%esp
	pushl %esi
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	addl $16,%esp
	pushl %eax
	call ___infix_sub__STB
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_put__to__MS8:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%ecx
	movl 12(%ebp),%edx
	movl 16(%ebp),%eax
	movb %dl,(%eax,%ecx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clone__H5E:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	addl $-12,%esp
	pushl $20
	call _allocation__C7
	movl %eax,%ebx
	addl $-4,%esp
	pushl $20
	pushl $_LIMIT_Y__
	pushl %ebx
	call _copy__from__size__NPD
	movl %ebx,%eax
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_add_clip__from__to__5KP:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	movl 24(%ebp),%esi
	movl _top_clip__Q3,%eax
	testl %eax,%eax
	je L9198
	movl 16(%ebp),%edx
	cmpl %edx,(%eax)
	jne L9198
	cmpl %esi,8(%eax)
	jne L9198
	cmpl %edi,16(%eax)
	jne L9198
	movl %eax,%edx
	movl 24(%edx),%eax
	movl %eax,_top_clip__Q3
	movl 28(%ebp),%eax
	movl %eax,12(%edx)
	movl $0,24(%edx)
	jmp L9203
	.p2align 2
L9198:
	addl $-12,%esp
	pushl $36
	call _allocation__C7
	movl %eax,%ebx
	addl $-4,%esp
	pushl $36
	pushl $_CLIP__
	pushl %ebx
	call _copy__from__size__NPD
	movl 16(%ebp),%edx
	movl %edi,16(%ebx)
	movl %edx,(%ebx)
	movl 20(%ebp),%eax
	movl %eax,4(%ebx)
	movl 28(%ebp),%eax
	movl %eax,12(%ebx)
	movl _last_clip__O3,%eax
	movl %esi,8(%ebx)
	movl %ebx,%edx
	movl %eax,20(%edx)
	movl _top_clip__Q3,%eax
	movl %eax,28(%edx)
	testl %eax,%eax
	je L9210
	cmpl %esi,8(%eax)
	jg L9210
	.p2align 2
L9211:
	movl %ebx,32(%eax)
	movl 24(%eax),%eax
	testl %eax,%eax
	je L20869
	cmpl %esi,8(%eax)
	jle L9211
L20869:
	movl %eax,_top_clip__Q3
L9210:
	cmpl $0,20(%ebx)
	jne L9203
	cmpl $0,28(%ebx)
	jne L9203
	movl 8(%ebp),%eax
	movl %ebx,60(%eax)
L9203:
	movl _last_clip__O3,%eax
	testl %eax,%eax
	jne L9218
	movl %edx,_first_clip__P3
	jmp L9219
	.p2align 2
L9218:
	movl %edx,24(%eax)
L9219:
	leal -24(%ebp),%esp
	movl %edx,_last_clip__O3
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_add_clip__from__to__1FZ:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	movl 24(%ebp),%esi
	movl _top_clip__Q3,%eax
	testl %eax,%eax
	je L9222
	movl 16(%ebp),%edx
	cmpl %edx,(%eax)
	jne L9222
	cmpl %esi,8(%eax)
	jne L9222
	cmpl %edi,16(%eax)
	jne L9222
	movl %eax,%edx
	movl 24(%edx),%eax
	movl %eax,_top_clip__Q3
	movl 28(%ebp),%eax
	movl %eax,12(%edx)
	movl $0,24(%edx)
	jmp L9227
	.p2align 2
L9222:
	addl $-12,%esp
	pushl $36
	call _allocation__C7
	movl %eax,%ebx
	addl $-4,%esp
	pushl $36
	pushl $_CLIP__
	pushl %ebx
	call _copy__from__size__NPD
	movl 16(%ebp),%edx
	movl %edi,16(%ebx)
	movl %edx,(%ebx)
	movl 20(%ebp),%eax
	movl %eax,4(%ebx)
	movl 28(%ebp),%eax
	movl %eax,12(%ebx)
	movl _last_clip__O3,%eax
	movl %esi,8(%ebx)
	movl %ebx,%edx
	movl %eax,20(%edx)
	movl _top_clip__Q3,%eax
	movl %eax,28(%edx)
	testl %eax,%eax
	je L9234
	cmpl %esi,8(%eax)
	jg L9234
	.p2align 2
L9235:
	movl %ebx,32(%eax)
	movl 24(%eax),%eax
	testl %eax,%eax
	je L20870
	cmpl %esi,8(%eax)
	jle L9235
L20870:
	movl %eax,_top_clip__Q3
L9234:
	cmpl $0,20(%ebx)
	jne L9227
	cmpl $0,28(%ebx)
	jne L9227
	movl 8(%ebp),%eax
	movl %ebx,60(%eax)
L9227:
	movl _last_clip__O3,%eax
	testl %eax,%eax
	jne L9242
	movl %edx,_first_clip__P3
	jmp L9243
	.p2align 2
L9242:
	movl %edx,24(%eax)
L9243:
	leal -24(%ebp),%esp
	movl %edx,_last_clip__O3
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_put__to__WAG:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_count__NEG:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	movl 8(%eax),%ebx
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_realloc__with__TIG:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%ebx
	addl $-4,%esp
	call _pointer_size__TWF
	imull 16(%ebp),%eax
	pushl %eax
	call _pointer_size__TWF
	imull %ebx,%eax
	pushl %eax
	pushl %esi
	call _realloc__size__to__TLG
	movl %eax,%edi
	movl 16(%ebp),%eax
	addl $16,%esp
	subl $1,%eax
	movl %eax,-4(%ebp)
	movl %ebx,%esi
	jmp L9280
	.p2align 2
L9282:
	addl $-8,%esp
	pushl %esi
	pushl %edi
	call _put__to__HYF
	addl $-8,%esp
	addl $16,%esp
	pushl $1
	pushl %esi
	call ___infix_add__Q5B
	movl %eax,%esi
	addl $16,%esp
L9280:
	movl -4(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call ___infix_less_equal__NLE
	addl $16,%esp
	testb %al,%al
	jne L9282
	leal -24(%ebp),%esp
	movl %edi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_put__to__LMH:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%ecx
	movl 12(%ebp),%edx
	movl 16(%ebp),%eax
	movl %edx,(%ecx,%eax,4)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_create__at__to__CH6B:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%esi
	addl $-12,%esp
	pushl $36
	call _allocation__C7
	movl %eax,%edi
	addl $-4,%esp
	pushl $36
	pushl $_CLIP__
	pushl %edi
	call _copy__from__size__NPD
	movl 16(%ebp),%eax
	movl %eax,4(%edi)
	movl 20(%ebp),%eax
	movl %eax,8(%edi)
	movl 24(%ebp),%eax
	movl %ebx,16(%edi)
	movl %esi,(%edi)
	movl %eax,12(%edi)
	leal -24(%ebp),%esp
	movl %edi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_mul__EIG:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	imull 12(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_color__EVJ:
	pushl %ebp
	movl %esp,%ebp
	movl _parent_video__C2,%eax
	movl 8(%ebp),%edx
	cmpl $16,(%eax)
	jne L9351
	movl %edx,32(%eax)
	jmp L9352
	.p2align 2
L9351:
	movl %edx,28(%eax)
L9352:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_rectangle_fill__to__TVJ:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%ecx
	movl 16(%ebp),%edx
	movl 20(%ebp),%edi
	movl _parent_video__C2,%eax
	movl 24(%ebp),%esi
	addl $-4,%esp
	pushl %edx
	pushl %ecx
	pushl %ebx
	call _move_to__6VJ
	addl $16,%esp
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L9356
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %ebx
	call _rectangle_fill_to__KWJ
	jmp L9357
	.p2align 2
L9356:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %ebx
	call _rectangle_fill_to__KWJ
L9357:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_rectangle__to__DBL:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%ecx
	movl 16(%ebp),%edx
	movl 20(%ebp),%edi
	movl _parent_video__C2,%eax
	movl 24(%ebp),%esi
	addl $-4,%esp
	pushl %edx
	pushl %ecx
	pushl %ebx
	call _move_to__6VJ
	addl $16,%esp
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L9361
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %ebx
	call _rectangle_to__XBL
	jmp L9362
	.p2align 2
L9361:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %ebx
	call _rectangle_to__XBL
L9362:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_x_max__DHQ:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	movl 12(%eax),%eax
	decl %eax
	ret
	.p2align 2
_y_max__SHQ:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	movl 8(%eax),%eax
	decl %eax
	ret
	.p2align 2
_color__5IQ:
	pushl %ebp
	movl %esp,%ebp
	movl _parent_video__C2,%eax
	movl 8(%ebp),%edx
	cmpl $16,(%eax)
	jne L9411
	movl %edx,32(%eax)
	jmp L9412
	.p2align 2
L9411:
	movl %edx,28(%eax)
L9412:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_move_to__KJQ:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	movl 16(%ebp),%ecx
	movl %edx,32(%eax)
	movl %ecx,36(%eax)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_rectangle_fill__to__color__OVR:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	movl 16(%ebp),%esi
	movl 20(%ebp),%ebx
	movl 24(%ebp),%ecx
	movl _parent_video__C2,%eax
	movl 28(%ebp),%edx
	cmpl $16,(%eax)
	jne L9453
	movl %edx,32(%eax)
	jmp L9457
	.p2align 2
L9453:
	movl %edx,28(%eax)
L9457:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L9461
	addl $-12,%esp
	pushl %ecx
	pushl %ebx
	pushl %esi
	pushl %edi
	movl 8(%ebp),%eax
	pushl %eax
	call _rectangle_fill__to__CWR
	jmp L9462
	.p2align 2
L9461:
	addl $-12,%esp
	pushl %ecx
	pushl %ebx
	pushl %esi
	pushl %edi
	movl 8(%ebp),%eax
	pushl %eax
	call _rectangle_fill__to__CWR
L9462:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_font_width__A8R:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%edx
	movl _parent_video__C2,%eax
	movl 4(%edx),%ecx
	cmpl $16,(%eax)
	jne L9464
	addl $-8,%esp
	pushl %ecx
	pushl %edx
	call _font_width__size__Q8R
	jmp L9465
	.p2align 2
L9464:
	addl $-8,%esp
	pushl %ecx
	pushl %edx
	call _font_width__size__Q8R
L9465:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_rectangle__to__color__BKU:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%edi
	movl 20(%ebp),%esi
	movl 24(%ebp),%ebx
	movl _parent_video__C2,%eax
	movl 28(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _color__PKU
	addl $16,%esp
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L9560
	addl $-12,%esp
	pushl %ebx
	pushl %esi
	pushl %edi
	movl 12(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _rectangle__to__6KU
	jmp L9561
	.p2align 2
L9560:
	addl $-12,%esp
	pushl %ebx
	pushl %esi
	pushl %edi
	movl 12(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _rectangle__to__6KU
L9561:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_color__PKU:
	pushl %ebp
	movl %esp,%ebp
	movl _parent_video__C2,%eax
	movl 8(%ebp),%edx
	cmpl $16,(%eax)
	jne L9563
	movl %edx,32(%eax)
	jmp L9564
	.p2align 2
L9563:
	movl %edx,28(%eax)
L9564:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_move_to__KLU:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	movl 16(%ebp),%ecx
	movl %edx,32(%eax)
	movl %ecx,36(%eax)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_rectangle_fill__to__color__I3V:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	movl 16(%ebp),%esi
	movl 20(%ebp),%ebx
	movl 24(%ebp),%ecx
	movl _parent_video__C2,%eax
	movl 28(%ebp),%edx
	cmpl $16,(%eax)
	jne L9605
	movl %edx,32(%eax)
	jmp L9609
	.p2align 2
L9605:
	movl %edx,28(%eax)
L9609:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L9613
	addl $-12,%esp
	pushl %ecx
	pushl %ebx
	pushl %esi
	pushl %edi
	movl 8(%ebp),%eax
	pushl %eax
	call _rectangle_fill__to__63V
	jmp L9614
	.p2align 2
L9613:
	addl $-12,%esp
	pushl %ecx
	pushl %ebx
	pushl %esi
	pushl %edi
	movl 8(%ebp),%eax
	pushl %eax
	call _rectangle_fill__to__63V
L9614:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line__to__2EW:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edx
	movl 12(%ebp),%ecx
	movl 16(%ebp),%ebx
	movl 20(%ebp),%edi
	movl _parent_video__C2,%eax
	movl 24(%ebp),%esi
	movl %ecx,32(%edx)
	movl %ebx,36(%edx)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L9620
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %edx
	call _line_to__OFW
	jmp L9621
	.p2align 2
L9620:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %edx
	call _line_to__OFW
L9621:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_object_size__XXX:
	pushl %ebp
	movl %esp,%ebp
	movl $88,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_pointer__OYX:
	pushl %ebp
	movl %esp,%ebp
	movl $_GUI_CHECK_LIST__,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_force_conversion__AZX:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_numeric__FD8:
	pushl %ebp
	movl %esp,%ebp
	movsbl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_add__6C8:
	pushl %ebp
	movl %esp,%ebp
	movl 12(%ebp),%eax
	movl 8(%ebp),%edx
	negl %eax
	subl %eax,%edx
	movl %edx,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___prefix_logicnot__7F8:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	xorl $-1,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_fast_memcmp__until__MPHB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	movl 16(%ebp),%esi
	decl %esi
	jmp L9831
	.p2align 2
L9833:
	subl $1,%esi
L9831:
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	addl $16,%esp
	testb %bl,%bl
	je L9832
	movl 8(%ebp),%edx
	movb (%esi,%edi),%al
	cmpb %al,(%esi,%edx)
	je L9833
L9832:
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	sete %al
	leal -24(%ebp),%esp
	movsbl %al,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_item__UF9:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	decl %edx
	movl %ebp,%esp
	movl (%eax),%eax
	popl %ebp
	movsbl (%edx,%eax),%eax
	ret
	.p2align 2
_put__to__6G9:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl 12(%ebp),%ecx
	movl 16(%ebp),%edx
	decl %edx
	movl %ebp,%esp
	movl (%eax),%eax
	movb %cl,(%edx,%eax)
	popl %ebp
	ret
	.p2align 2
___infix_add__HU9:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	xorl %eax,%eax
	pushl %ebx
	movl 8(%ebp),%ebx
	movw 12(%ebp),%ax
	addl $-8,%esp
	pushl %eax
	pushl $0
	call ___infix_sub__44C
	subl %eax,%ebx
	xorl %eax,%eax
	movw %bx,%ax
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_in_range__to__KV9:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movb 8(%ebp),%bl
	xorl %edi,%edi
	addl $-8,%esp
	pushl $1
	movl %ebx,%esi
	andl $255,%esi
	pushl %esi
	call ___infix_greater_diese__5V9
	movb %al,%dl
	addl $16,%esp
	cmpb $1,%bl
	sete %al
	orb %dl,%al
	je L9860
	addl $-8,%esp
	pushl $7
	pushl %esi
	call ___infix_greater_diese__5V9
	testb %al,%al
	sete %al
	movl %eax,%edi
	andl $255,%edi
L9860:
	leal -24(%ebp),%esp
	movl %edi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_extend__RKCB:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%edx
	addl $-8,%esp
	movsbl 12(%ebp),%eax
	pushl %eax
	pushl %edx
	call _add_last__8I9
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_mod__3MCB:
	pushl %ebp
	movl %esp,%ebp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ecx
	movl 12(%ebp),%esi
	movl %ecx,%eax
	cltd
	idivl %esi
	movl %eax,%edi
	imull %esi,%edi
	popl %ebx
	subl %edi,%ecx
	movl %ecx,%eax
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_digit__RNCB:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	addl $-8,%esp
	pushl $48
	movsbl 8(%ebp),%eax
	pushl %eax
	call ___infix_add__KMB
	movsbl %al,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_swap__with__9SCB:
	pushl %ebp
	movl %esp,%ebp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%ebx
	movl 16(%ebp),%ecx
	decl %ebx
	movl (%esi),%eax
	decl %ecx
	movsbl (%ebx,%eax),%edi
	movsbl (%ecx,%eax),%edx
	movb %dl,(%ebx,%eax)
	movl (%esi),%eax
	movl %edi,%edx
	movb %dl,(%ecx,%eax)
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_element_sizeof__J2DB:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	call _object_size__J3DB
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_item__64DB:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%ebx
	call _object_size__J3DB
	imull %eax,%ebx
	leal (%ebx,%esi),%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_pointer__Y6DB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_object_size__J3DB:
	pushl %ebp
	movl %esp,%ebp
	movl $3,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_in_range__to__T9J:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%ebx
	xorl %edi,%edi
	addl $-8,%esp
	pushl %ebx
	pushl %esi
	call ___infix_greater_diese__EAK
	movb %al,%dl
	addl $16,%esp
	cmpl %ebx,%esi
	sete %al
	orb %dl,%al
	je L10105
	movl 16(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	pushl %esi
	call ___infix_less_equal_diese__8AK
	testb %al,%al
	setne %al
	movl %eax,%edi
	andl $255,%edi
L10105:
	leal -24(%ebp),%esp
	movl %edi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_line__HCFB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	movl 72(%eax),%eax
	movl %ebp,%esp
	movl (%eax),%eax
	popl %ebp
	movl (%eax,%edx,4),%eax
	ret
	.p2align 2
_count__P2FB:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	movl (%eax),%ebx
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_element_sizeof__0FGB:
	pushl %ebp
	movl %esp,%ebp
	movl $3,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_storage__1LGB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	movl 12(%eax),%eax
	ret
	.p2align 2
_item__EMGB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	movl %ebp,%esp
	movl (%eax),%eax
	popl %ebp
	movb (%edx,%eax),%al
	andl $255,%eax
	ret
	.p2align 2
_display_off__KTK:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movw $2,___in_mouse+28
	addl $-4,%esp
	pushl $___in_mouse
	pushl $___in_mouse
	pushl $51
	call _int86
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_usmallint__NOK:
	pushl %ebp
	movl %esp,%ebp
	xorl %eax,%eax
	movb 8(%ebp),%al
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_or__5QK:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	xorl %eax,%eax
	pushl %ebx
	xorl %ebx,%ebx
	movb 8(%ebp),%bl
	addl $-12,%esp
	addl $-8,%esp
	addl $-12,%esp
	movb 12(%ebp),%al
	pushl %eax
	call ___prefix_logicnot__FRK
	andl $255,%eax
	pushl %eax
	addl $-12,%esp
	pushl %ebx
	call ___prefix_logicnot__FRK
	addl $16,%esp
	andl $255,%eax
	pushl %eax
	call ___infix_and__NSK
	andl $255,%eax
	pushl %eax
	call ___prefix_logicnot__FRK
	movl -24(%ebp),%ebx
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_line__YFKB:
	pushl %ebp
	movl _parent_video__C2,%eax
	movl %esp,%ebp
	subl $8,%esp
	cmpl $16,(%eax)
	jne L10212
	call _deferred__7FKB
	jmp L10213
	.p2align 2
L10212:
	call _deferred__7FKB
L10213:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_x_max__FKMB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	movl 12(%eax),%eax
	decl %eax
	ret
	.p2align 2
_y_max__UKMB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	movl 8(%eax),%eax
	decl %eax
	ret
	.p2align 2
_rectangle__to__color__NLMB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%edi
	movl 20(%ebp),%esi
	movl 24(%ebp),%ebx
	movl _parent_video__C2,%eax
	movl 28(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _color__1LMB
	addl $16,%esp
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L10310
	addl $-12,%esp
	pushl %ebx
	pushl %esi
	pushl %edi
	movl 12(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _rectangle__to__IMMB
	jmp L10311
	.p2align 2
L10310:
	addl $-12,%esp
	pushl %ebx
	pushl %esi
	pushl %edi
	movl 12(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _rectangle__to__IMMB
L10311:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_color__1LMB:
	pushl %ebp
	movl %esp,%ebp
	movl _parent_video__C2,%eax
	movl 8(%ebp),%edx
	cmpl $16,(%eax)
	jne L10313
	movl %edx,32(%eax)
	jmp L10314
	.p2align 2
L10313:
	movl %edx,28(%eax)
L10314:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_move_to__WMMB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	movl 16(%ebp),%ecx
	movl %edx,32(%eax)
	movl %ecx,36(%eax)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line__to__color__TROB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	movl 16(%ebp),%esi
	movl 20(%ebp),%ebx
	movl 24(%ebp),%ecx
	movl _parent_video__C2,%eax
	movl 28(%ebp),%edx
	cmpl $16,(%eax)
	jne L10655
	movl %edx,32(%eax)
	jmp L10659
	.p2align 2
L10655:
	movl %edx,28(%eax)
L10659:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L10663
	addl $-12,%esp
	pushl %ecx
	pushl %ebx
	pushl %esi
	pushl %edi
	movl 8(%ebp),%eax
	pushl %eax
	call _line__to__HSOB
	jmp L10664
	.p2align 2
L10663:
	addl $-12,%esp
	pushl %ecx
	pushl %ebx
	pushl %esi
	pushl %edi
	movl 8(%ebp),%eax
	pushl %eax
	call _line__to__HSOB
L10664:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_font_width__NNRB:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%edx
	movl _parent_video__C2,%eax
	movl 4(%edx),%ecx
	cmpl $16,(%eax)
	jne L10707
	addl $-8,%esp
	pushl %ecx
	pushl %edx
	call _font_width__size__0NRB
	jmp L10708
	.p2align 2
L10707:
	addl $-8,%esp
	pushl %ecx
	pushl %edx
	call _font_width__size__0NRB
L10708:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_color__CSRB:
	pushl %ebp
	movl %esp,%ebp
	movl _parent_video__C2,%eax
	movl 8(%ebp),%edx
	cmpl $16,(%eax)
	jne L10710
	movl %edx,32(%eax)
	jmp L10711
	.p2align 2
L10710:
	movl %edx,28(%eax)
L10711:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_y_max__NSRB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	movl 8(%eax),%eax
	decl %eax
	ret
	.p2align 2
_rectangle_fill__to__ETRB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%ecx
	movl 16(%ebp),%edx
	movl 20(%ebp),%edi
	movl _parent_video__C2,%eax
	movl 24(%ebp),%esi
	addl $-4,%esp
	pushl %edx
	pushl %ecx
	pushl %ebx
	call _move_to__STRB
	addl $16,%esp
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L10718
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %ebx
	call _rectangle_fill_to__9TRB
	jmp L10719
	.p2align 2
L10718:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %ebx
	call _rectangle_fill_to__9TRB
L10719:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_move_to__STRB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	movl 16(%ebp),%ecx
	movl %edx,32(%eax)
	movl %ecx,36(%eax)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_x_max__ZGTB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	movl 12(%eax),%eax
	decl %eax
	ret
	.p2align 2
_font_width__BXTB:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%edx
	movl _parent_video__C2,%eax
	movl 4(%edx),%ecx
	cmpl $16,(%eax)
	jne L10819
	addl $-8,%esp
	pushl %ecx
	pushl %edx
	call _font_width__size__OXTB
	jmp L10820
	.p2align 2
L10819:
	addl $-8,%esp
	pushl %ecx
	pushl %edx
	call _font_width__size__OXTB
L10820:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_font_width__XJWB:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%edx
	movl _parent_video__C2,%eax
	movl 4(%edx),%ecx
	cmpl $16,(%eax)
	jne L10914
	addl $-8,%esp
	pushl %ecx
	pushl %edx
	call _font_width__size__AKWB
	jmp L10915
	.p2align 2
L10914:
	addl $-8,%esp
	pushl %ecx
	pushl %edx
	call _font_width__size__AKWB
L10915:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_color__MOWB:
	pushl %ebp
	movl %esp,%ebp
	movl _parent_video__C2,%eax
	movl 8(%ebp),%edx
	cmpl $16,(%eax)
	jne L10917
	movl %edx,32(%eax)
	jmp L10918
	.p2align 2
L10917:
	movl %edx,28(%eax)
L10918:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_y_max__XOWB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	movl 8(%eax),%eax
	decl %eax
	ret
	.p2align 2
_rectangle_fill__to__OPWB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%ecx
	movl 16(%ebp),%edx
	movl 20(%ebp),%edi
	movl _parent_video__C2,%eax
	movl 24(%ebp),%esi
	addl $-4,%esp
	pushl %edx
	pushl %ecx
	pushl %ebx
	call _move_to__2PWB
	addl $16,%esp
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L10925
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %ebx
	call _rectangle_fill_to__JQWB
	jmp L10926
	.p2align 2
L10925:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %ebx
	call _rectangle_fill_to__JQWB
L10926:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_move_to__2PWB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	movl 16(%ebp),%ecx
	movl %edx,32(%eax)
	movl %ecx,36(%eax)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_x_max__LDYB:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	movl 12(%eax),%eax
	decl %eax
	ret
	.p2align 2
_rectangle_fill__to__color__EN2B:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%edi
	movl 20(%ebp),%esi
	movl 24(%ebp),%ebx
	movl _parent_video__C2,%eax
	movl 28(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _color__E20B
	addl $16,%esp
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11187
	addl $-12,%esp
	pushl %ebx
	pushl %esi
	pushl %edi
	movl 12(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _rectangle_fill__to__2N2B
	jmp L11188
	.p2align 2
L11187:
	addl $-12,%esp
	pushl %ebx
	pushl %esi
	pushl %edi
	movl 12(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _rectangle_fill__to__2N2B
L11188:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_color__E20B:
	pushl %ebp
	movl %esp,%ebp
	movl _parent_video__C2,%eax
	movl 8(%ebp),%edx
	cmpl $16,(%eax)
	jne L11190
	movl %edx,32(%eax)
	jmp L11191
	.p2align 2
L11190:
	movl %edx,28(%eax)
L11191:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_color__5Y6B:
	pushl %ebp
	movl %esp,%ebp
	movl _parent_video__C2,%eax
	movl 8(%ebp),%edx
	cmpl $16,(%eax)
	jne L11591
	movl %edx,32(%eax)
	jmp L11592
	.p2align 2
L11591:
	movl %edx,28(%eax)
L11592:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_v__until__SZ6B:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%ecx
	movl 16(%ebp),%edx
	movl _parent_video__C2,%eax
	movl 20(%ebp),%esi
	addl $-4,%esp
	pushl %edx
	pushl %ecx
	pushl %ebx
	call _move_to__4Z6B
	addl $16,%esp
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11596
	addl $-8,%esp
	pushl %esi
	pushl %ebx
	call _line_v_until__H06B
	jmp L11597
	.p2align 2
L11596:
	addl $-8,%esp
	pushl %esi
	pushl %ebx
	call _line_v_until__H06B
L11597:
	leal -24(%ebp),%esp
	movsbl %al,%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_x_max__FU7B:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	movl 12(%eax),%eax
	decl %eax
	ret
	.p2align 2
_y_max__2R7B:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	movl 8(%eax),%eax
	decl %eax
	ret
	.p2align 2
_rectangle__to__color__4H9B:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%edi
	movl 16(%ebp),%esi
	movl 20(%ebp),%ebx
	movl 24(%ebp),%ecx
	movl _parent_video__C2,%eax
	movl 28(%ebp),%edx
	cmpl $16,(%eax)
	jne L11884
	movl %edx,32(%eax)
	jmp L11888
	.p2align 2
L11884:
	movl %edx,28(%eax)
L11888:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11892
	addl $-12,%esp
	pushl %ecx
	pushl %ebx
	pushl %esi
	pushl %edi
	movl 8(%ebp),%eax
	pushl %eax
	call _rectangle__to__QI9B
	jmp L11893
	.p2align 2
L11892:
	addl $-12,%esp
	pushl %ecx
	pushl %ebx
	pushl %esi
	pushl %edi
	movl 8(%ebp),%eax
	pushl %eax
	call _rectangle__to__QI9B
L11893:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_v_until__color__IS9B:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%ecx
	movl _parent_video__C2,%eax
	movl 16(%ebp),%edx
	cmpl $16,(%eax)
	jne L11917
	movl %edx,32(%eax)
	jmp L11921
	.p2align 2
L11917:
	movl %edx,28(%eax)
L11921:
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11925
	addl $-8,%esp
	pushl %ecx
	pushl %ebx
	call _line_v_until__H06B
	jmp L11926
	.p2align 2
L11925:
	addl $-8,%esp
	pushl %ecx
	pushl %ebx
	call _line_v_until__H06B
L11926:
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_rectangle__to__QI9B:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%ecx
	movl 16(%ebp),%edx
	movl 20(%ebp),%edi
	movl _parent_video__C2,%eax
	movl 24(%ebp),%esi
	addl $-4,%esp
	pushl %edx
	pushl %ecx
	pushl %ebx
	call _move_to__4Z6B
	addl $16,%esp
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L11930
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %ebx
	call _rectangle_to__AJ9B
	jmp L11931
	.p2align 2
L11930:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %ebx
	call _rectangle_to__AJ9B
L11931:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___prefix_logicnot__FRK:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movb 8(%ebp),%bl
	addl $-8,%esp
	pushl $1
	pushl $0
	call ___infix_sub__ASK
	subb %bl,%al
	movl -24(%ebp),%ebx
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_and__NSK:
	pushl %ebp
	movl %esp,%ebp
	movb 8(%ebp),%al
	andb 12(%ebp),%al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_greater__STCC:
	pushl %ebp
	movl %esp,%ebp
	movb 12(%ebp),%al
	cmpb %al,8(%ebp)
	seta %al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_decimal_value__97FC:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	addl $-12,%esp
	movsbl 8(%ebp),%eax
	pushl %eax
	call _code__1LB
	movsbl %al,%eax
	subl $48,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_item__HXGC:
	pushl %ebp
	movl %esp,%ebp
	xorl %eax,%eax
	movl 8(%ebp),%edx
	movb 12(%ebp),%al
	sall $3,%eax
	movl %ebp,%esp
	popl %ebp
	addl (%edx),%eax
	ret
	.p2align 2
_receive__L0GC:
	pushl %ebp
	movl %esp,%ebp
	subl $56,%esp
	movl 8(%ebp),%edx
	movl _exit__8M,%eax
	cmpl %eax,4(%edx)
	jne L12741
	movw $3,-8(%ebp)
	addl $-4,%esp
	leal -36(%ebp),%eax
	pushl %eax
	pushl %eax
	pushl $16
	call _int86
	movl _exit_success_code__PN,%eax
	addl $16,%esp
	addl $-12,%esp
	pushl %eax
	call _exit
	.p2align 2
L12741:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_abs__NTPC:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	testl %esi,%esi
	setg %bl
	addl $-8,%esp
	pushl $0
	pushl %esi
	call ___infix_equal_equal__WWB
	orb %al,%bl
	jne L12903
	movl %esi,%eax
	negl %eax
	jmp L12911
	.p2align 2
L12903:
	movl %esi,%eax
L12911:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_and__DGIC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	andl 12(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_raw_real_16_16__KF2B:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_raw_integer__RG2B:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_add__KMB:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movsbl 8(%ebp),%ebx
	addl $-8,%esp
	addl $-8,%esp
	movsbl 12(%ebp),%eax
	pushl %eax
	pushl $0
	call ___infix_sub__6MB
	movsbl %al,%eax
	pushl %eax
	pushl %ebx
	call ___infix_sub__6MB
	movl -24(%ebp),%ebx
	movsbl %al,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_equal_equal__LFC:
	pushl %ebp
	movl %esp,%ebp
	movl 12(%ebp),%eax
	cmpl %eax,8(%ebp)
	sete %al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_move_to__6VJ:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	movl 16(%ebp),%ecx
	movl %edx,32(%eax)
	movl %ecx,36(%eax)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_rectangle_fill__to__CWR:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edx
	movl 12(%ebp),%ecx
	movl 16(%ebp),%ebx
	movl 20(%ebp),%edi
	movl _parent_video__C2,%eax
	movl 24(%ebp),%esi
	movl %ecx,32(%edx)
	movl %ebx,36(%edx)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L13385
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %edx
	call _rectangle_fill_to__YWR
	jmp L13386
	.p2align 2
L13385:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %edx
	call _rectangle_fill_to__YWR
L13386:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_pixel_to__0JS:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 12(%ebp),%ecx
	movl _parent_video__C2,%eax
	movl 16(%ebp),%ebx
	movl %ecx,32(%edx)
	movl %ebx,36(%edx)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L13428
	addl $-12,%esp
	pushl %edx
	call _pixel__IKS
	jmp L13429
	.p2align 2
L13428:
	addl $-12,%esp
	pushl %edx
	call _pixel__IKS
L13429:
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_rectangle__to__6KU:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edx
	movl 12(%ebp),%ecx
	movl 16(%ebp),%ebx
	movl 20(%ebp),%edi
	movl _parent_video__C2,%eax
	movl 24(%ebp),%esi
	movl %ecx,32(%edx)
	movl %ebx,36(%edx)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L13435
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %edx
	call _rectangle_to__1LU
	jmp L13436
	.p2align 2
L13435:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %edx
	call _rectangle_to__1LU
L13436:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_rectangle_fill__to__63V:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edx
	movl 12(%ebp),%ecx
	movl 16(%ebp),%ebx
	movl 20(%ebp),%edi
	movl _parent_video__C2,%eax
	movl 24(%ebp),%esi
	movl %ecx,32(%edx)
	movl %ebx,36(%edx)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L13639
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %edx
	call _rectangle_fill_to__S4V
	jmp L13640
	.p2align 2
L13639:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %edx
	call _rectangle_fill_to__S4V
L13640:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_pixel_to__ZNW:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 12(%ebp),%ecx
	movl _parent_video__C2,%eax
	movl 16(%ebp),%ebx
	movl %ecx,32(%edx)
	movl %ebx,36(%edx)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L13907
	addl $-12,%esp
	pushl %edx
	call _pixel__HOW
	jmp L13908
	.p2align 2
L13907:
	addl $-12,%esp
	pushl %edx
	call _pixel__HOW
L13908:
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_rectangle_fill__to__color__71Z:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%edi
	movl 20(%ebp),%esi
	movl 24(%ebp),%ebx
	movl _parent_video__C2,%eax
	movl 28(%ebp),%edx
	addl $-12,%esp
	pushl %edx
	call _color__L2Z
	addl $16,%esp
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L13953
	addl $-12,%esp
	pushl %ebx
	pushl %esi
	pushl %edi
	movl 12(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _rectangle_fill__to__22Z
	jmp L13954
	.p2align 2
L13953:
	addl $-12,%esp
	pushl %ebx
	pushl %esi
	pushl %edi
	movl 12(%ebp),%eax
	pushl %eax
	movl 8(%ebp),%eax
	pushl %eax
	call _rectangle_fill__to__22Z
L13954:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_color__L2Z:
	pushl %ebp
	movl %esp,%ebp
	movl _parent_video__C2,%eax
	movl 8(%ebp),%edx
	cmpl $16,(%eax)
	jne L13956
	movl %edx,32(%eax)
	jmp L13957
	.p2align 2
L13956:
	movl %edx,28(%eax)
L13957:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_move_to__G3Z:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	movl 16(%ebp),%ecx
	movl %edx,32(%eax)
	movl %ecx,36(%eax)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_greater_diese__5V9:
	pushl %ebp
	movl %esp,%ebp
	movb 12(%ebp),%al
	cmpb %al,8(%ebp)
	seta %al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_less_less__I09:
	pushl %ebp
	movl %esp,%ebp
	movl 12(%ebp),%ecx
	movl 8(%ebp),%eax
	sall %cl,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_uinteger__M09:
	pushl %ebp
	movl %esp,%ebp
	xorl %eax,%eax
	movb 8(%ebp),%al
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_or__C19:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%ebx
	addl $-8,%esp
	pushl %eax
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	addl $16,%esp
	pushl %eax
	call ___infix_sub__STB
	movl %eax,%esi
	addl $16,%esp
	addl $-8,%esp
	pushl %ebx
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	addl $16,%esp
	pushl %eax
	call ___infix_sub__STB
	addl $16,%esp
	andl %eax,%esi
	addl $-8,%esp
	pushl %esi
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__DTB
	addl $16,%esp
	pushl %eax
	call ___infix_sub__STB
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_greater_diese__JUG:
	pushl %ebp
	movl %esp,%ebp
	movl 12(%ebp),%eax
	cmpl %eax,8(%ebp)
	seta %al
	movsbl %al,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_put__to__91G:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%ecx
	movl 12(%ebp),%edx
	movl 16(%ebp),%eax
	movl %edx,(%ecx,%eax,4)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_free__P9G:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	andb $254,(%eax)
	popl %ebp
	ret
	.p2align 2
___infix_greater_diese__EAK:
	pushl %ebp
	movl %esp,%ebp
	movl 12(%ebp),%eax
	cmpl %eax,8(%ebp)
	setg %al
	movsbl %al,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_less_equal_diese__8AK:
	pushl %ebp
	movl %esp,%ebp
	movl 12(%ebp),%eax
	cmpl %eax,8(%ebp)
	setle %al
	andl $255,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_deferred__7FKB:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl ___string_26,%ebx
	call _clone__OYK
	movl %eax,%esi
	addl $-4,%esp
	pushl $15
	pushl %ebx
	pushl %esi
	call _set_storage__count__Z0K
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L14656
	addl $-12,%esp
	pushl %esi
	call _crash_with_message__LGKB
	jmp L14657
	.p2align 2
L14656:
	addl $-12,%esp
	pushl %esi
	call _crash_with_message__LGKB
L14657:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_in_range__to__NS7B:
	pushl %ebp
	movl %esp,%ebp
	pushl %ebx
	xorl %ebx,%ebx
	movl 8(%ebp),%ecx
	movl 12(%ebp),%eax
	cmpl %eax,%ecx
	setg %dl
	sete %al
	orb %al,%dl
	je L14790
	cmpl 16(%ebp),%ecx
	setle %al
	movb %al,%bl
L14790:
	movl %ebx,%eax
	popl %ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_rectangle__to__IMMB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edx
	movl 12(%ebp),%ecx
	movl 16(%ebp),%ebx
	movl 20(%ebp),%edi
	movl _parent_video__C2,%eax
	movl 24(%ebp),%esi
	movl %ecx,32(%edx)
	movl %ebx,36(%edx)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L14803
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %edx
	call _rectangle_to__DNMB
	jmp L14804
	.p2align 2
L14803:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %edx
	call _rectangle_to__DNMB
L14804:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_line__PGNB:
	pushl %ebp
	movl _parent_video__C2,%eax
	movl %esp,%ebp
	subl $8,%esp
	cmpl $16,(%eax)
	jne L14965
	call _deferred__YGNB
	jmp L14966
	.p2align 2
L14965:
	call _deferred__YGNB
L14966:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line__to__HSOB:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edx
	movl 12(%ebp),%ecx
	movl 16(%ebp),%ebx
	movl 20(%ebp),%edi
	movl _parent_video__C2,%eax
	movl 24(%ebp),%esi
	movl %ecx,32(%edx)
	movl %ebx,36(%edx)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L15032
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %edx
	call _line_to__3SOB
	jmp L15033
	.p2align 2
L15032:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %edx
	call _line_to__3SOB
L15033:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_pixel_to__I0SB:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 12(%ebp),%ecx
	movl _parent_video__C2,%eax
	movl 16(%ebp),%ebx
	movl %ecx,32(%edx)
	movl %ebx,36(%edx)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L15114
	addl $-12,%esp
	pushl %edx
	call _pixel__00SB
	jmp L15115
	.p2align 2
L15114:
	addl $-12,%esp
	pushl %edx
	call _pixel__00SB
L15115:
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_pixel_to__YWXB:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 12(%ebp),%ecx
	movl _parent_video__C2,%eax
	movl 16(%ebp),%ebx
	movl %ecx,32(%edx)
	movl %ebx,36(%edx)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L15430
	addl $-12,%esp
	pushl %edx
	call _pixel__GXXB
	jmp L15431
	.p2align 2
L15430:
	addl $-12,%esp
	pushl %edx
	call _pixel__GXXB
L15431:
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_move_to__T20B:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	movl 16(%ebp),%ecx
	movl %edx,32(%eax)
	movl %ecx,36(%eax)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_rectangle_fill__to__2N2B:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edx
	movl 12(%ebp),%ecx
	movl 16(%ebp),%ebx
	movl 20(%ebp),%edi
	movl _parent_video__C2,%eax
	movl 24(%ebp),%esi
	movl %ecx,32(%edx)
	movl %ebx,36(%edx)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L15757
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %edx
	call _rectangle_fill_to__OO2B
	jmp L15758
	.p2align 2
L15757:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %edx
	call _rectangle_fill_to__OO2B
L15758:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clone__GC3:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	addl $-12,%esp
	pushl $32
	call _allocation__C7
	movl %eax,%ebx
	addl $-4,%esp
	pushl $32
	pushl $_EDGE__
	pushl %ebx
	call _copy__from__size__NPD
	movl %ebx,%eax
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_put__to__KE3:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 12(%ebp),%edi
	movl 16(%ebp),%ebx
	addl $-12,%esp
	pushl %esi
	call _count__YE3
	addl $-4,%esp
	pushl %ebx
	pushl %edi
	movl (%esi),%eax
	pushl %eax
	call _put__to__NG3
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_item__L13:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	addl $-8,%esp
	pushl %eax
	movl (%edx),%eax
	pushl %eax
	call _item__F23
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_make__add__ND4:
	pushl %ebp
	movl %esp,%ebp
	pushl %ebx
	movl 8(%ebp),%eax
	movl 12(%ebp),%ecx
	movl 16(%ebp),%ebx
	movl 20(%ebp),%edx
	movl $0,20(%eax)
	movb $1,17(%eax)
	movl %edx,12(%eax)
	movl $0,8(%eax)
	movl %ecx,4(%eax)
	movl %ebx,(%eax)
	popl %ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_make__to__YF4:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 24(%ebp),%edi
	movl $0,20(%esi)
	movb $0,17(%esi)
	cmpl %edi,16(%ebp)
	setg %bl
	addl $-8,%esp
	pushl %edi
	movl 16(%ebp),%eax
	pushl %eax
	call ___infix_equal_equal__WWB
	orb %al,%bl
	sete %al
	andl $255,%eax
	movb %al,16(%esi)
	testb %al,%al
	je L15900
	movl 16(%ebp),%eax
	movl %eax,(%esi)
	movl 12(%ebp),%eax
	movl %eax,4(%esi)
	movl 20(%ebp),%eax
	movl %eax,12(%esi)
	movl %edi,8(%esi)
	jmp L15901
	.p2align 2
L15900:
	movl 20(%ebp),%eax
	movl %eax,4(%esi)
	movl 12(%ebp),%eax
	movl %eax,12(%esi)
	movl 16(%ebp),%eax
	movl %edi,(%esi)
	movl %eax,8(%esi)
L15901:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_count__YE3:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%eax
	addl $-8,%esp
	addl $-12,%esp
	movl 8(%eax),%ebx
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_next_y__LO4:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,20(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_put__to__HP4:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 16(%ebp),%edi
	addl $-8,%esp
	addl $-12,%esp
	movl 8(%esi),%ebx
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	addl $32,%esp
	addl $-4,%esp
	pushl %edi
	movl 12(%ebp),%eax
	pushl %eax
	movl (%esi),%eax
	pushl %eax
	call _put__to__C83
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_first__4R5:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl %ebp,%esp
	movl (%eax),%eax
	popl %ebp
	movl (%eax),%eax
	ret
	.p2align 2
_new_step__D85:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	addl $-8,%esp
	addl $-12,%esp
	movl 4(%ebx),%esi
	movl 12(%ebx),%eax
	decl 8(%ebx)
	pushl %eax
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	leal -24(%ebp),%esp
	movl %eax,4(%ebx)
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_next_x__4A6:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,28(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_prev_x__GB6:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,24(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_next_line__XB6:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 12(%ebp),%esi
	movl 20(%ebx),%eax
	testl %eax,%eax
	jne L16120
	movl 28(%ebx),%edx
	testl %edx,%edx
	je L16121
	movl 24(%ebx),%eax
	movl %eax,24(%edx)
L16121:
	movl 24(%ebx),%edx
	testl %edx,%edx
	je L16123
	movl 28(%ebx),%eax
	jmp L20871
	.p2align 2
L16123:
	movl 28(%ebx),%eax
	jmp L16126
	.p2align 2
L16120:
	addl $-12,%esp
	pushl %eax
	call _to_run__CX5
	movl 20(%ebx),%edx
	movl 28(%ebx),%eax
	movl %eax,28(%edx)
	movl 20(%ebx),%edx
	movl 24(%ebx),%eax
	movl %eax,24(%edx)
	movl 28(%ebx),%edx
	testl %edx,%edx
	je L16129
	movl 20(%ebx),%eax
	movl %eax,24(%edx)
L16129:
	movl 24(%ebx),%edx
	testl %edx,%edx
	je L16131
	movl 20(%ebx),%eax
L20871:
	movl %eax,28(%edx)
	movl %esi,%eax
	jmp L16126
	.p2align 2
L16131:
	movl 20(%ebx),%eax
L16126:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clear__PH6:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl $-1,8(%eax)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_move_to__4Z6B:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%eax
	movl 12(%ebp),%edx
	movl 16(%ebp),%ecx
	movl %edx,32(%eax)
	movl %ecx,36(%eax)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_pixel_to__7R8B:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 12(%ebp),%ecx
	movl _parent_video__C2,%eax
	movl 16(%ebp),%ebx
	movl %ecx,32(%edx)
	movl %ebx,36(%edx)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L16291
	addl $-12,%esp
	pushl %edx
	call _pixel__NS8B
	jmp L16292
	.p2align 2
L16291:
	addl $-12,%esp
	pushl %edx
	call _pixel__NS8B
L16292:
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_remove_plan__A4KC:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%ebx
	movl 56(%ebx),%edx
	testl %edx,%edx
	je L17065
	movl 12(%edx),%eax
	addl $-8,%esp
	pushl %eax
	movl 16(%edx),%eax
	pushl %eax
	call _remove__E5KC
	movl _list_x__K3,%eax
	addl $-8,%esp
	pushl %eax
	movl 56(%ebx),%eax
	movl 12(%eax),%eax
	pushl %eax
	call _remove__E5KC
	movl 56(%ebx),%edx
	movl %eax,_list_x__K3
	addl $32,%esp
	addl $-8,%esp
	movl 20(%edx),%eax
	pushl %eax
	movl 24(%edx),%eax
	pushl %eax
	call _remove__06KC
	movl _list_y__L3,%eax
	addl $-8,%esp
	pushl %eax
	movl 56(%ebx),%eax
	movl 20(%eax),%eax
	pushl %eax
	call _remove__06KC
	movl %eax,_list_y__L3
	movl _list_plan__J3,%eax
	addl $32,%esp
	addl $-8,%esp
	pushl %eax
	movl 56(%ebx),%eax
	pushl %eax
	call _remove__M8KC
	movl %eax,_list_plan__J3
	movl $0,56(%ebx)
L17065:
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_value__TFLC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_remove__E5KC:
	pushl %ebp
	movl %esp,%ebp
	pushl %ebx
	movl 8(%ebp),%ecx
	movl 12(%ecx),%edx
	testl %edx,%edx
	jne L17068
	movl 8(%ecx),%ebx
	jmp L17069
	.p2align 2
L17068:
	movl 8(%ecx),%eax
	movl 12(%ebp),%ebx
	movl %eax,8(%edx)
L17069:
	movl 8(%ecx),%edx
	testl %edx,%edx
	je L17070
	movl 12(%ecx),%eax
	movl %eax,12(%edx)
L17070:
	movl %ebx,%eax
	popl %ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_set_value__VGLC:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %eax,(%edx)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_remove__06KC:
	pushl %ebp
	movl %esp,%ebp
	pushl %ebx
	movl 8(%ebp),%ecx
	movl 16(%ecx),%edx
	testl %edx,%edx
	jne L17073
	movl 12(%ecx),%ebx
	jmp L17074
	.p2align 2
L17073:
	movl 12(%ecx),%eax
	movl 12(%ebp),%ebx
	movl %eax,12(%edx)
L17074:
	movl 12(%ecx),%edx
	testl %edx,%edx
	je L17075
	movl 16(%ecx),%eax
	movl %eax,16(%edx)
L17075:
	movl %ebx,%eax
	popl %ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
___infix_sub__6MB:
	pushl %ebp
	movl %esp,%ebp
	movb 12(%ebp),%al
	movb 8(%ebp),%dl
	subb %al,%dl
	movb %dl,%al
	movsbl %al,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_h__until__7RL:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edx
	movl 12(%ebp),%ecx
	movl 16(%ebp),%ebx
	movl _parent_video__C2,%eax
	movl 20(%ebp),%esi
	movl %ecx,32(%edx)
	movl %ebx,36(%edx)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L19105
	addl $-8,%esp
	pushl %esi
	pushl %edx
	call _line_h_until__4CL
	jmp L19106
	.p2align 2
L19105:
	addl $-8,%esp
	pushl %esi
	pushl %edx
	call _line_h_until__4CL
L19106:
	leal -24(%ebp),%esp
	movsbl %al,%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_v__until__1TL:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edx
	movl 12(%ebp),%ecx
	movl 16(%ebp),%ebx
	movl _parent_video__C2,%eax
	movl 20(%ebp),%esi
	movl %ecx,32(%edx)
	movl %ebx,36(%edx)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L19112
	addl $-8,%esp
	pushl %esi
	pushl %edx
	call _line_v_until__XHL
	jmp L19113
	.p2align 2
L19112:
	addl $-8,%esp
	pushl %esi
	pushl %edx
	call _line_v_until__XHL
L19113:
	leal -24(%ebp),%esp
	movsbl %al,%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_line__R6Q:
	pushl %ebp
	movl _parent_video__C2,%eax
	movl %esp,%ebp
	subl $8,%esp
	cmpl $16,(%eax)
	jne L19115
	call _deferred__06Q
	jmp L19116
	.p2align 2
L19115:
	call _deferred__06Q
L19116:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_line__DFV:
	pushl %ebp
	movl _parent_video__C2,%eax
	movl %esp,%ebp
	subl $8,%esp
	cmpl $16,(%eax)
	jne L19254
	call _deferred__MFV
	jmp L19255
	.p2align 2
L19254:
	call _deferred__MFV
L19255:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_rectangle_fill__to__22Z:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edx
	movl 12(%ebp),%ecx
	movl 16(%ebp),%ebx
	movl 20(%ebp),%edi
	movl _parent_video__C2,%eax
	movl 24(%ebp),%esi
	movl %ecx,32(%edx)
	movl %ebx,36(%edx)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L19310
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %edx
	call _rectangle_fill_to__X3Z
	jmp L19311
	.p2align 2
L19310:
	addl $-4,%esp
	pushl %esi
	pushl %edi
	pushl %edx
	call _rectangle_fill_to__X3Z
L19311:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_pixel_to__WR1:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 12(%ebp),%ecx
	movl _parent_video__C2,%eax
	movl 16(%ebp),%ebx
	movl %ecx,32(%edx)
	movl %ebx,36(%edx)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L19361
	addl $-12,%esp
	pushl %edx
	call _pixel__ES1
	jmp L19362
	.p2align 2
L19361:
	addl $-12,%esp
	pushl %edx
	call _pixel__ES1
L19362:
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_line__PM7B:
	pushl %ebp
	movl _parent_video__C2,%eax
	movl %esp,%ebp
	subl $8,%esp
	cmpl $16,(%eax)
	jne L19605
	call _deferred__XM7B
	jmp L19606
	.p2align 2
L19605:
	call _deferred__XM7B
L19606:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_deferred__YGNB:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl ___string_26,%ebx
	call _clone__OYK
	movl %eax,%esi
	addl $-4,%esp
	pushl $15
	pushl %ebx
	pushl %esi
	call _set_storage__count__Z0K
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L19656
	addl $-12,%esp
	pushl %esi
	call _crash_with_message__CHNB
	jmp L19657
	.p2align 2
L19656:
	addl $-12,%esp
	pushl %esi
	call _crash_with_message__CHNB
L19657:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_line__CPSB:
	pushl %ebp
	movl _parent_video__C2,%eax
	movl %esp,%ebp
	subl $8,%esp
	cmpl $16,(%eax)
	jne L19930
	call _deferred__LPSB
	jmp L19931
	.p2align 2
L19930:
	call _deferred__LPSB
L19931:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_line__MLXB:
	pushl %ebp
	movl _parent_video__C2,%eax
	movl %esp,%ebp
	subl $8,%esp
	cmpl $16,(%eax)
	jne L19943
	call _deferred__VLXB
	jmp L19944
	.p2align 2
L19943:
	call _deferred__VLXB
L19944:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_line__0P1B:
	pushl %ebp
	movl _parent_video__C2,%eax
	movl %esp,%ebp
	subl $8,%esp
	cmpl $16,(%eax)
	jne L19946
	call _deferred__9P1B
	jmp L19947
	.p2align 2
L19946:
	call _deferred__9P1B
L19947:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clone__NN2:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	addl $-12,%esp
	pushl $12
	call _allocation__C7
	movl %eax,%ebx
	addl $-4,%esp
	pushl $12
	pushl $_FIXED_ARRAY__EDGE__
	pushl %ebx
	call _copy__from__size__NPD
	movl %ebx,%eax
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_clear__to__Y02:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edi
	movl 16(%ebp),%esi
	movl 12(%ebp),%ebx
	cmpl %esi,%ebx
	jg L20872
	.p2align 2
L20012:
	addl $-8,%esp
	pushl %ebx
	pushl %edi
	call _put__to__HW2
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %ebx
	call ___infix_sub__F6B
	movl %eax,%ebx
	addl $32,%esp
	cmpl %esi,%ebx
	jle L20012
L20872:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_put__to__NG3:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%ecx
	movl 12(%ebp),%edx
	movl 16(%ebp),%eax
	movl %edx,(%ecx,%eax,4)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_realloc__with__OU3:
	pushl %ebp
	movl %esp,%ebp
	subl $12,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%esi
	movl 16(%ebp),%ebx
	addl $-4,%esp
	call _element_sizeof__MU2
	imull %ebx,%eax
	pushl %eax
	call _element_sizeof__MU2
	imull 12(%ebp),%eax
	pushl %eax
	pushl %esi
	call _realloc__size__to__TLG
	movl 12(%ebp),%esi
	movl %eax,%edi
	addl $16,%esp
	subl $1,%ebx
	cmpl %ebx,%esi
	jg L20873
	.p2align 2
L20026:
	addl $-8,%esp
	pushl %esi
	pushl %edi
	call _put__to__HW2
	addl $16,%esp
	addl $-8,%esp
	addl $-12,%esp
	pushl $1
	call ___prefix_sub__05B
	pushl %eax
	pushl %esi
	call ___infix_sub__F6B
	movl %eax,%esi
	addl $32,%esp
	cmpl %ebx,%esi
	jle L20026
L20873:
	leal -24(%ebp),%esp
	movl %edi,%eax
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_item__F23:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl %ebp,%esp
	popl %ebp
	movl (%edx,%eax,4),%eax
	ret
	.p2align 2
_put__to__C83:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%ecx
	movl 12(%ebp),%edx
	movl 16(%ebp),%eax
	movl %edx,(%ecx,%eax,4)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_to_run__CX5:
	pushl %ebp
	movl %esp,%ebp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%ecx
	cmpb $0,17(%ecx)
	je L20052
	sall $8,4(%ecx)
	jmp L20054
	.p2align 2
L20052:
	movl (%ecx),%edx
	movl 8(%ecx),%ebx
	movl 4(%ecx),%esi
	movl 12(%ecx),%eax
	subl %edx,%ebx
	subl %esi,%eax
	sall $8,%eax
	cltd
	idivl %ebx
	sall $8,%esi
	movl %esi,4(%ecx)
	movl %eax,12(%ecx)
	cmpl $0,20(%ecx)
	je L20874
	decl %ebx
L20874:
	movl %ebx,8(%ecx)
L20054:
	popl %ebx
	popl %esi
	popl %edi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_h__until__SL9B:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edx
	movl 12(%ebp),%ecx
	movl 16(%ebp),%ebx
	movl _parent_video__C2,%eax
	movl 20(%ebp),%esi
	movl %ecx,32(%edx)
	movl %ebx,36(%edx)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L20161
	addl $-8,%esp
	pushl %esi
	pushl %edx
	call _line_h_until__TW7B
	jmp L20162
	.p2align 2
L20161:
	addl $-8,%esp
	pushl %esi
	pushl %edx
	call _line_h_until__TW7B
L20162:
	leal -24(%ebp),%esp
	movsbl %al,%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_remove__M8KC:
	pushl %ebp
	movl %esp,%ebp
	pushl %ebx
	movl 8(%ebp),%ecx
	movl 32(%ecx),%edx
	testl %edx,%edx
	jne L20164
	movl 28(%ecx),%ebx
	jmp L20165
	.p2align 2
L20164:
	movl 28(%ecx),%eax
	movl 12(%ebp),%ebx
	movl %eax,28(%edx)
L20165:
	movl 28(%ecx),%edx
	testl %edx,%edx
	je L20169
	movl 32(%ecx),%eax
	movl %eax,32(%edx)
	movl 28(%ecx),%eax
	testl %eax,%eax
	je L20169
L20170:
	decl 4(%eax)
	movl 28(%eax),%eax
	testl %eax,%eax
	jne L20170
L20169:
	movl %ebx,%eax
	popl %ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_line__9VK:
	pushl %ebp
	movl _parent_video__C2,%eax
	movl %esp,%ebp
	subl $8,%esp
	cmpl $16,(%eax)
	jne L20465
	call _deferred__HWK
	jmp L20466
	.p2align 2
L20465:
	call _deferred__HWK
L20466:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_deferred__06Q:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl ___string_26,%ebx
	call _clone__OYK
	movl %eax,%esi
	addl $-4,%esp
	pushl $15
	pushl %ebx
	pushl %esi
	call _set_storage__count__Z0K
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L20469
	addl $-12,%esp
	pushl %esi
	call _crash_with_message__E7Q
	jmp L20470
	.p2align 2
L20469:
	addl $-12,%esp
	pushl %esi
	call _crash_with_message__E7Q
L20470:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_h__until__EVV:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edx
	movl 12(%ebp),%ecx
	movl 16(%ebp),%ebx
	movl _parent_video__C2,%eax
	movl 20(%ebp),%esi
	movl %ecx,32(%edx)
	movl %ebx,36(%edx)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L20476
	addl $-8,%esp
	pushl %esi
	pushl %edx
	call _line_h_until__BNU
	jmp L20477
	.p2align 2
L20476:
	addl $-8,%esp
	pushl %esi
	pushl %edx
	call _line_h_until__BNU
L20477:
	leal -24(%ebp),%esp
	movsbl %al,%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_v__until__CXV:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edx
	movl 12(%ebp),%ecx
	movl 16(%ebp),%ebx
	movl _parent_video__C2,%eax
	movl 20(%ebp),%esi
	movl %ecx,32(%edx)
	movl %ebx,36(%edx)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L20483
	addl $-8,%esp
	pushl %esi
	pushl %edx
	call _line_v_until__AKV
	jmp L20484
	.p2align 2
L20483:
	addl $-8,%esp
	pushl %esi
	pushl %edx
	call _line_v_until__AKV
L20484:
	leal -24(%ebp),%esp
	movsbl %al,%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_deferred__MFV:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl ___string_26,%ebx
	call _clone__OYK
	movl %eax,%esi
	addl $-4,%esp
	pushl $15
	pushl %ebx
	pushl %esi
	call _set_storage__count__Z0K
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L20487
	addl $-12,%esp
	pushl %esi
	call _crash_with_message__0FV
	jmp L20488
	.p2align 2
L20487:
	addl $-12,%esp
	pushl %esi
	call _crash_with_message__0FV
L20488:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_get_line__0Y0:
	pushl %ebp
	movl _parent_video__C2,%eax
	movl %esp,%ebp
	subl $8,%esp
	cmpl $16,(%eax)
	jne L20615
	call _deferred__9Y0
	jmp L20616
	.p2align 2
L20615:
	call _deferred__9Y0
L20616:
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_deferred__XM7B:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl ___string_26,%ebx
	call _clone__OYK
	movl %eax,%esi
	addl $-4,%esp
	pushl $15
	pushl %ebx
	pushl %esi
	call _set_storage__count__Z0K
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L20619
	addl $-12,%esp
	pushl %esi
	call _crash_with_message__AN7B
	jmp L20620
	.p2align 2
L20619:
	addl $-12,%esp
	pushl %esi
	call _crash_with_message__AN7B
L20620:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_h__until__KXNB:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edx
	movl 12(%ebp),%ecx
	movl 16(%ebp),%ebx
	movl _parent_video__C2,%eax
	movl 20(%ebp),%esi
	movl %ecx,32(%edx)
	movl %ebx,36(%edx)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L20626
	addl $-8,%esp
	pushl %esi
	pushl %edx
	call _line_h_until__NOMB
	jmp L20627
	.p2align 2
L20626:
	addl $-8,%esp
	pushl %esi
	pushl %edx
	call _line_h_until__NOMB
L20627:
	leal -24(%ebp),%esp
	movsbl %al,%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_line_v__until__IZNB:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl 8(%ebp),%edx
	movl 12(%ebp),%ecx
	movl 16(%ebp),%ebx
	movl _parent_video__C2,%eax
	movl 20(%ebp),%esi
	movl %ecx,32(%edx)
	movl %ebx,36(%edx)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L20633
	addl $-8,%esp
	pushl %esi
	pushl %edx
	call _line_v_until__YLNB
	jmp L20634
	.p2align 2
L20633:
	addl $-8,%esp
	pushl %esi
	pushl %edx
	call _line_v_until__YLNB
L20634:
	leal -24(%ebp),%esp
	movsbl %al,%eax
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_pixel_to__E1OB:
	pushl %ebp
	movl %esp,%ebp
	subl $20,%esp
	pushl %ebx
	movl 8(%ebp),%edx
	movl 12(%ebp),%ecx
	movl _parent_video__C2,%eax
	movl 16(%ebp),%ebx
	movl %ecx,32(%edx)
	movl %ebx,36(%edx)
	movl _parent_video__C2,%eax
	cmpl $16,(%eax)
	jne L20660
	addl $-12,%esp
	pushl %edx
	call _pixel__W1OB
	jmp L20661
	.p2align 2
L20660:
	addl $-12,%esp
	pushl %edx
	call _pixel__W1OB
L20661:
	movl -24(%ebp),%ebx
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_deferred__LPSB:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl ___string_26,%ebx
	call _clone__OYK
	movl %eax,%esi
	addl $-4,%esp
	pushl $15
	pushl %ebx
	pushl %esi
	call _set_storage__count__Z0K
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L20664
	addl $-12,%esp
	pushl %esi
	call _crash_with_message__ZPSB
	jmp L20665
	.p2align 2
L20664:
	addl $-12,%esp
	pushl %esi
	call _crash_with_message__ZPSB
L20665:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_deferred__VLXB:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl ___string_26,%ebx
	call _clone__OYK
	movl %eax,%esi
	addl $-4,%esp
	pushl $15
	pushl %ebx
	pushl %esi
	call _set_storage__count__Z0K
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L20668
	addl $-12,%esp
	pushl %esi
	call _crash_with_message__9LXB
	jmp L20669
	.p2align 2
L20668:
	addl $-12,%esp
	pushl %esi
	call _crash_with_message__9LXB
L20669:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_deferred__9P1B:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl ___string_26,%ebx
	call _clone__OYK
	movl %eax,%esi
	addl $-4,%esp
	pushl $15
	pushl %ebx
	pushl %esi
	call _set_storage__count__Z0K
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L20672
	addl $-12,%esp
	pushl %esi
	call _crash_with_message__NQ1B
	jmp L20673
	.p2align 2
L20672:
	addl $-12,%esp
	pushl %esi
	call _crash_with_message__NQ1B
L20673:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_element_sizeof__MU2:
	pushl %ebp
	movl %esp,%ebp
	movl $4,%eax
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_put__to__HW2:
	pushl %ebp
	movl %esp,%ebp
	movl 8(%ebp),%edx
	movl 12(%ebp),%eax
	movl $0,(%edx,%eax,4)
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_deferred__HWK:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl ___string_26,%ebx
	call _clone__OYK
	movl %eax,%esi
	addl $-4,%esp
	pushl $15
	pushl %ebx
	pushl %esi
	call _set_storage__count__Z0K
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L20679
	addl $-12,%esp
	pushl %esi
	call _crash_with_message__C1K
	jmp L20680
	.p2align 2
L20679:
	addl $-12,%esp
	pushl %esi
	call _crash_with_message__C1K
L20680:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_deferred__9Y0:
	pushl %ebp
	movl %esp,%ebp
	subl $16,%esp
	pushl %esi
	pushl %ebx
	movl ___string_26,%ebx
	call _clone__OYK
	movl %eax,%esi
	addl $-4,%esp
	pushl $15
	pushl %ebx
	pushl %esi
	call _set_storage__count__Z0K
	movl _parent_video__C2,%eax
	addl $16,%esp
	cmpl $16,(%eax)
	jne L20719
	addl $-12,%esp
	pushl %esi
	call _crash_with_message__NZ0
	jmp L20720
	.p2align 2
L20719:
	addl $-12,%esp
	pushl %esi
	call _crash_with_message__NZ0
L20720:
	leal -24(%ebp),%esp
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
	.p2align 2
_die_with_code__87Q:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _exit
	.p2align 2
_die_with_code__UGV:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _exit
	.p2align 2
_die_with_code__1N7B:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _exit
	.p2align 2
_die_with_code__TQSB:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _exit
	.p2align 2
_die_with_code__3MXB:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _exit
	.p2align 2
_die_with_code__HR1B:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _exit
	.p2align 2
_die_with_code__56K:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _exit
	.p2align 2
_die_with_code__H00:
	pushl %ebp
	movl %esp,%ebp
	subl $8,%esp
	movl 8(%ebp),%eax
	addl $-12,%esp
	pushl %eax
	call _exit
	.p2align 2
.globl _copy_object
_copy_object:
	pushl %ebp
	movl %esp,%ebp
	pushl %esi
	pushl %ebx
	movl 16(%ebp),%esi
	movl 8(%ebp),%ebx
	movl 12(%ebp),%ecx
	movl %esi,%eax
	sarl $2,%eax
	testl %eax,%eax
	jle L17
	movl %eax,%edx
	.p2align 2
L19:
	movl (%ecx),%eax
	movl %eax,(%ebx)
	addl $4,%ebx
	addl $4,%ecx
	decl %edx
	jnz L19
L17:
	movl %esi,%eax
	andl $3,%eax
	movl %ecx,%esi
	movl %ebx,%ecx
	je L22
	movl %eax,%edx
	.p2align 2
L24:
	movb (%ecx),%al
	movb %al,(%esi)
	incl %esi
	incl %ecx
	decl %edx
	jnz L24
L22:
	popl %ebx
	popl %esi
	movl %ebp,%esp
	popl %ebp
	ret
