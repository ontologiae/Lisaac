/***************************************************************************
*                      Isaac Object Operating System                       *
*                             Isaac Library                                *
*                      LORIA - UHP - INRIA - FRANCE                        *
*                   Jerome BOUTET  - boutet@loria.fr                       *
*                   Benoit SONNTAG - bsonntag@loria.fr                     *
*                          http://www.IsaacOS.com                          *
****************************************************************************/
/*
Copyright (C) 2005  Benoit Sonntag

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/
section HEADER
  
  + name        := BORDER;
  
  - comment     := "Border plateform.";
  
  - category    := MICRO;
  
  - bibliography:= "http://IsaacOS.com";
  
  - author      := "Benoit Sonntag (bsonntag@loria.fr)";
  
  // BSBS: A revoir (c'est un group, + pb d'affichage)
  
section INHERIT
  
  * parent_item:ITEM;
    
section PUBLIC  
  
  //
  // Creation.
  //
  
  - create_in f:AREA at x,y:INTEGER size w,h:INTEGER label txt:ABSTRACT_STRING :SELF <-
  ( + result:SELF;
        
    result:=clone;
    result.make_in f at x,y size w,h label txt action self;
    
    result
  );
  
  //
  // Action.
  // 
  
  - receive msg:EVENT <-
  (
    receive_nothing msg;
  );
  
  //
  // Display.
  //
  
  - draw x0,y0:INTEGER to x1,y1:INTEGER <-
  ( + len:INTEGER;
    clipping x0,y0 to x1,y1;
    
    rectangle_fill 0,0 to x_max,y_max color color_back;
    
    // Border.
    color color_dark;
    move_to 0,y_max;
    line_v_until 7;
    line_h_until x_max;
    color color_light;
    line_v_until y_max;
    line_h_until 0;
    
    color color_light;
    move_to 1,(y_max-1);
    line_v_until 8;
    line_h_until (x_max-1);
    color color_dark;
    line_v_until (y_max-1);
    line_h_until 0;
    
    len := font_width name;
    rectangle_fill 5,7 to (len+5),8 color color_back;
    color black;
    print name to 6,0;
  );
  





