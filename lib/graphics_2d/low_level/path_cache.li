Section Header
  
  + name := PATH_CACHE;
  
Section Inherit
  
  - parent_object:OBJECT := OBJECT;
  
Section Public
    
  + paths:ARRAY PATH;  
  + vertexes:ARRAY VERTEX;
  
  + x_min:REAL_32; // 0
  + y_min:REAL_32; // 1
  + x_max:REAL_32; // 2
  + y_max:REAL_32; // 3
    
  - create:SELF <-
  ( + result:SELF;
    result := clone;
    result.make;    
    result
  );
  
  - make <-
  (
    paths    := ARRAY PATH  .create_with_capacity 16;
    vertexes := ARRAY VERTEX.create_with_capacity 256;
  );
  
  - delete <-
  (
    0.to (paths.upper) do { i:INTEGER;
      paths.item i.free;
    };
    paths.clear;
    vertexes.clear;
  );
    
  - flatten_paths cmds:ARRAY PEN_CMD <-
  ( + path:PATH;
    + tx_min,ty_min,tx_max,ty_max:REAL_32;

    // Flatten
    0.to (cmds.upper) do { i:INTEGER;
      cmds.item i.to_path Self;      
    };
    x_min := y_min :=  1000_000;
    x_max := y_max := -1000_000;        
    // Calculate the direction and length of line segments.
    0.to (paths.upper) do { j:INTEGER;
      path := paths.item j;
      (tx_min,ty_min,tx_max,ty_max) := path.flatten;
      (x_min,y_min) := (x_min.min tx_min,y_min.min ty_min);
      (x_max,y_max) := (x_max.max tx_max,y_max.max ty_max);      
    };
  );
  
  - max_vert_count:INTEGER <-
  ( + count:INTEGER;
    + path:PATH;
    0.to (paths.upper) do { i:INTEGER;
      path := paths.item i;
      count := count + path.nfill + path.nstroke;
    };
    count
  );

  