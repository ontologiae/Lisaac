Section Header

  + name    := DESK;


  - copyright   := "2003-2005 JÃ©rome Boutet, 2003-2007 Benoit Sonntag";

  - bibliography:="http://IsaacOS.com";
  - author      :="Sonntag Benoit (bsonntag@loria.fr)";
  - comment     :="User Interface and Events managment.";

  - version := 1;
  - date    := "2003/04";

Section Inherit

  + parent_g_raw:Expanded G_GROUP;

Section Public

  - physical_screen:AREA;

  - virtual_screen:VIRTUAL_SCREEN;

  //   Video.width
  // +----------+
  // | Physical |
  // |  Screen  | Video.height
  // +----------+
  //   /      \
  // |\     +----------+
  //  L     |   Desk   |
  // Mouse  |          |
  //        +----------+
  //             |
  //             |  Video.width * w
  //        +-----------------------+
  //        |   Virtual Screen      | Video.height * h
  //        |                       |
  //        +-----------------------+

  - make bmp:ABSTRACT_BITMAP with elt:G_EXPR <-
  (
    make bmp scale (1,1) with elt;
  );

  - make bmp:ABSTRACT_BITMAP scale (w,h:INTEGER) with elt:G_EXPR <-
  [
    -? {w > 0};
    -? {h > 0};
  ]
  ( + msg:EVENT;
    + input:INPUT;

    //set_video_support bmp; // BSBS: Warning Perf !!! (-all_warning) Fixed with VIDEO!
    physical_screen := AREA.clone;
    physical_screen.make NULL from (0,0) size (bmp.width,bmp.height);
    //
    root := elt;
    //
    EVENT_SYSTEM.make;
    focus := Self;
    //
    set_position physical_screen at (0,0)
    size (physical_screen.width,physical_screen.height);

    virtual_screen := VIRTUAL_SCREEN.create Self scale (w,h);
    connect_to MOUSE;
    connect_to KEYBOARD;
    connect_to TIMER;
    {
      EVENT_SYSTEM.get_event;

      {storage_message.is_empty}.until_do {
	msg := storage_message.first;
	storage_message.remove_first;
	msg.set_destination focus;
	focus.receive msg;
	input ?= msg.source;
	input.acknowledge;
      };
    }.do_while {`1`:BOOLEAN{TRUE,FALSE}}; // Infinity Loop
  );

  //
  // Display.
  //

  - draw_slave bmp:ABSTRACT_BITMAP from (x0,y0:INTEGER) to (x1,y1:INTEGER) <-
  (
    bmp.rectangle_fill (x0,y0) to (x1,y1) color color_back;
  );

  //
  // Connect.
  //

  - connect_to obj:INPUT <-
  (
    obj.make;
    obj.add_client Self;
  );

  - focus:INBOX;

  - set_focus f:INBOX <-
  (
    focus := f;
  );

  - resize_window (w,h:INTEGER) <-
  (
    VIDEO.resize (w,h);
    physical_screen.resize (w,h);
    set_position physical_screen at (0,0) size (w,h);
    virtual_screen.update_size;
  );

  //
  // Message Server.
  //

Section Private

  - storage_message:LINKED_LIST(EVENT) := LINKED_LIST(EVENT).create;

Section Public

  - receive msg:EVENT <-
  ( + mouse:EVENT_MOUSE;
    + win:AREA;

    (msg.destination = NULL).if {
      // Hardware Message.
      storage_message.add_last msg;
    } else {
      // Other message.
      mouse ?= msg;
      (mouse != NULL).if {
	win := get_object (mouse.x_current,mouse.y_current);
	((win != focus) && {win != NULL}).if {
	  focus := win;
          msg.set_destination focus;
	  focus.receive msg;
	};
      };
    };
  );
