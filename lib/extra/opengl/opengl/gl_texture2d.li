Section Header

  + name     := GL_TEXTURE2D;

  - comment  := "OpenGL 2D texture";

Section Inherit

  + parent_abstract_texture:Expanded GL_ABSTRACT_TEXTURE;

Section Public

  - draw (x,y:INTEGER) <-
  (
    + w,h:INTEGER;

    w := width;
    h := height;

    bind;

    `glBegin (GL_QUADS);
    glTexCoord2f (0, 0);
    glVertex2f (@x, @y);
    glTexCoord2f (1, 0);
    glVertex2f (@x + @w, @y);
    glTexCoord2f (1, 1);
    glVertex2f (@x + @w, @y + @h);
    glTexCoord2f (0, 1);
    glVertex2f (@x, @y + @h);
    glEnd ();
    `;
  );

  - draw_strech (x,y,w,h:INTEGER) <-
  (
    bind;

    `glBegin (GL_QUADS);
    glTexCoord2f (0, 0);
    glVertex2f (@x, @y);
    glTexCoord2f (1, 0);
    glVertex2f (@x + @w, @y);
    glTexCoord2f (1, 1);
    glVertex2f (@x + @w, @y + @h);
    glTexCoord2f (0, 1);
    glVertex2f (@x, @y + @h);
    glEnd ();
    `;
  );

  - replace_region (x,y,w,h:INTEGER) with_data (pixels:FAST_ARRAY(UINTEGER_8),type:INTEGER) <-
  ( + p:POINTER;

    p := pixels.to_external;
    `glTexSubImage2D(GL_TEXTURE_2D, 0, @x, @y, @w, @h, @type, GL_UNSIGNED_BYTE, @p)`;
  );

  - replace_region (x,y,w,h:INTEGER) with image:IMAGE <-
  (
    + p:POINTER;
    + type:INTEGER;

    type := image.channels;
    p := image.get_pixels.to_external;
    `glTexSubImage2D(GL_TEXTURE_2D, 0, @x, @y, @w, @h, @type, GL_UNSIGNED_BYTE, @p)`;
  );

  - replace_region (x,y,w,h:INTEGER) with_framebuffer_at (x0,y0:INTEGER) <-
  ( + t:INTEGER;

    t := channels;
    `glCopyTexSubImage2D(GL_TEXTURE_2D, 0, @x,@y, @x0,@y0, @w,@h)`;
  //  `glCopyTexImage2D(GL_TEXTURE_2D, 0, @t, @x, @y, @w, @h, 0)`;
  );

Section GL_ABSTRACT_TEXTURE

  - target:INTEGER <- `GL_TEXTURE_2D`:INTEGER;

  - raw_create (ch,w,h,type:INTEGER) data p:POINTER <-
  (
    `glTexImage2D(GL_TEXTURE_2D, 0, @ch, @w, @h, 0, @type, GL_UNSIGNED_BYTE, @p)`;
  );

  - raw_create_mipmap (ch,w,h,type:INTEGER) data p:POINTER <-
  (
    `gluBuild2DMipmaps(GL_TEXTURE_2D, @ch, @w, @h, @type, GL_UNSIGNED_BYTE, @p)`;
  );

  - raw_copy (x,y,w,h:INTEGER) type t:INTEGER <-
  (
    `glCopyTexImage2D(GL_TEXTURE_2D, 0, @t, @x, @y, @w, @h, 0)`;
  );
