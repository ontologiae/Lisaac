/***************************************************************************
*                      Isaac Object Operating System                       *
*                             Isaac Library                                *
*                      LORIA - UHP - INRIA - FRANCE                        *
*                   Jerome BOUTET  - boutet@loria.fr                       *
*                   Benoit SONNTAG - bsonntag@loria.fr                     *
*                          http://www.IsaacOS.com                          *
****************************************************************************/
section HEADER
  
  + name        := ITM_CHECK;
  
  - comment     := "Check.";
  
  - category    := MICRO;
  
  - bibliography:= "http://IsaacOS.com";
  
  - author      := "Benoit Sonntag (bsonntag@loria.fr)";
  
section INHERIT
  
  * parent_gui_item:GUI_ITEM;
    
section PUBLIC  
  
  - is_check:BOOLEAN <- (stat & 10b) != 0;

  + next_check:ITM_CHECK;
  
  + prev_check:ITM_CHECK;
  
  - is_list:BOOLEAN <- ((next_check != NULL) || {prev_check != NULL});
  
  - set_prev_check p:ITM_CHECK <-
  (
    prev_check := p;
  );
  
  //
  // Creation.
  //
  
  - create_in f:AREA at x,y:INTEGER action a:INBOX with lab:GUI_LABEL :SELF <-
  (
    create_in f at x,y size (lab.width_min + 20),(lab.height_min) action a with lab
  );
  
  - create_in f:AREA at x,y:INTEGER size w,h:INTEGER action a:INBOX with lab:GUI_LABEL :SELF <-
  ( + result:SELF;
        
    result:=clone;
    result.make_in f at x,y size w,h action a with lab;
    
    result
  );
  
  //
  // Auto-position
  //
  
  - create a:INBOX with lab:GUI_LABEL :SELF <-
  (
    + result:SELF;
        
    result:=clone;
    result.make (lab.width_min + 20),(lab.height_min) action a with lab;
    
    result
  );

  //
  // Stat.
  //

  - set_on <-
  (
    set_stat 10b;
  );
  
  - set_off <-
  (
    set_stat 00b;
  );
  
  //
  // Join
  //
  
  - '^' right 80 other:SELF :SELF <-
  (
    next_check := other;
    other.set_prev_check self;
    self
  );
  
  //
  // Action.
  // 
  
  - receive msg:EVENT <-
  ( + mouse:EVENT_MOUSE;
    + win:AREA;    
    + new_stat:INTEGER;
    
    (! is_list).if {
      receive_on_off msg;
    } else {
      mouse ?= msg;
      (mouse != NULL).if {
	win := INTERFACE.get_object (mouse.x_current),(mouse.y_current);
	new_stat := (win = self).to_numeric | (stat & 10b) | (mouse.left_up.to_numeric.to_integer << 1);
	(new_stat != stat).if {
	  (stat != -1).if {
	    ((new_stat = 3) && {(stat & 10b) = 0}).if {
	      desactive;
	      stat := 3;
	      // Action.
	      send action;
	    } else {
	      stat := new_stat;
	    };
	    refresh;
	  };	  
	  ((new_stat & 01b) = 0).if {
	    // Change Focus.
	    INTERFACE.receive msg;
	  };
	};
      };
    };
  );
  
  //
  // Display.
  //
  
  - draw x0,y0:INTEGER to x1,y1:INTEGER <-
  (     
    clipping x0,y0 to x1,y1;
    ((next_check != NULL) || {prev_check != NULL}).if {
      draw_check_list label stat stat;
    } else {
      draw_check label stat stat;
    };
  );

section PRIVATE
  
  - desactive <-
  ( + l:ITM_CHECK;
    + t:INTEGER;
    + is_found:BOOLEAN;
    
    l := next_check;
    {(l != NULL) && {! is_found}}.while_do {
      t := l.stat;
      (((t & 10b) != 0) && {t != -1}).if {
	l.set_stat 0;
	is_found := TRUE;
      };
      l := l.next_check;
    };    
    l := prev_check;
    {(l != NULL) && {! is_found}}.while_do {
      t := l.stat;
      (((t & 10b) != 0) && {t != -1}).if {
	l.set_stat 0;
      };
      l := l.prev_check;
    };
  );
  



