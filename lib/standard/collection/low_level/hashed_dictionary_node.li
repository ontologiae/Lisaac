Section Header

  + name    := HASHED_DICTIONARY_NODE(V,K);


  - copyright   := "2003-2005 JÃ©rome Boutet, 2003-2007 Benoit Sonntag";

  - comment :="Auxilliary class to implement DICTIONARY(V,K).";

Section Inherit

  - parent_any_hashed_dictionary_node:ANY_HASHED_DICTIONARY_NODE := ANY_HASHED_DICTIONARY_NODE;

Section Public

  + item:V;

  + key:K;

  + next:HASHED_DICTIONARY_NODE(V,K);
  // The `next' one when some clash occurs.

  - set_item i:V <-
  (
    item := i;
  )
  [
    +? {item = i};
  ];

  - set_next n:HASHED_DICTIONARY_NODE(V,K) <-
  (
    next := n;
  )
  [
    +? {next = n};
  ];

  - create i:V to k:K next n:HASHED_DICTIONARY_NODE(V,K) :SELF<-
  ( + result:SELF;

    result := clone;
    result.make i to k next n;
    result
  );

  - make i:V to k:K next n:HASHED_DICTIONARY_NODE(V,K) <-
  (
    item := i;
    key  := k;
    next := n;
  )
  [
    +? {item = i};
    +? {key  = k};
    +? {next = n};
  ];

