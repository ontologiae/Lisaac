/***************************************************************************
*                      Isaac Object Operating System                       *
*                             Isaac Library                                *
*                      LORIA - UHP - INRIA - FRANCE                        *
*                   Jerome BOUTET  - boutet@loria.fr                       *
*                   Benoit SONNTAG - bsonntag@loria.fr                     *
*                          http://www.IsaacOS.com                          *
****************************************************************************/
section HEADER
  
  + name        := GUI_MENU;
  
  - comment     := "Menu.";
  
  - category    := MICRO;
  
  - bibliography:= "http://IsaacOS.com";
  
  - author      := "Benoit Sonntag (bsonntag@loria.fr)";
  
section INHERIT
  
  * parent_gui:GUI;
  
section PUBLIC
  
  - create_label lab:ABSTRACT_STRING :SELF <- 
  ( + result:SELF;
    
    result := clone;
    result.make_label lab;
    result
  );
  
  - make_label lab:ABSTRACT_STRING <-
  (
    make_in INTERFACE at 0,0 size 0,0 label lab action self; 
  );
  
  //
  // Show on/off
  //
  
  - open_by obj:AREA <-
  ( + x0,y0,x1,y1,px,py:INTEGER;
    
    update_width_min;
    //
    x0 := obj.x_window;
    y0 := obj.y_window;
    x1 := x0 + obj.width;    
    y1 := y0 + obj.height;
    //
    px := x0.max 0;
    py := y1;
    ((py + height_min + 6) > INTERFACE.y_max).if {
      py := y0 - (height_min + 6);
      (py < 0).if {
	py := 0;
	px := x1;
      };
    };
    ((px + width_min + 2) > INTERFACE.x_max).if {
      px := (INTERFACE.x_max - width_min - 2).max 0;
    };
    open_direct px,py;
  );
  
  - open_at x,y:INTEGER <-
  ( 
    update_width_min;
    open_direct px,py;
  );
  
  - close <-
  (
    resize 0,0;
  );  
  
  //
  // Item manager.
  //
  
  - add itm:ITEM <-
  ( 
    itm.set_position 1,(height_min+6);
    height_min := height_min + itm.height;
  );
   
  //
  // Display.
  //
  
  - draw x0,y0:INTEGER to x1,y1:INTEGER <-
  ( + x:INTEGER;
    + col1, col2:UINTEGER;

    clipping x0,y0 to x1,y1;    
    
    ((stat & 10b) = 0).if {
      col1 := black;
      col2 := color_back;
    } else {
      col1 := red;
      col2 := color_back_light;
    };
    rectangle 0,0 to x_max,y_max color black;
    rectangle 1,1 to (x_max-1),5 color col2;
    line_h 2,2 until (x_max-2);
    line_h 2,4 until (x_max-2);
    x := 2;
    move_to x,3;
    {x <= x_max}.while_do {
      (x.is_even).if {
	color col1;
      } else {
	color col2;
      };
      line_h_until ((x+6).min (x_max-2));
      x := x + 7;
    };
    
  );

  //
  // Event.
  //
  
  - receive msg:EVENT <-  
  ( + evt_mouse:EVENT_MOUSE;
    + win:AREA;
    + new_stat:INTEGER;
    
    evt_mouse ?= msg;
    (evt_mouse != NULL).if { 
      win := INTERFACE.get_object (evt_mouse.x_current),(evt_mouse.y_current);
      (win != self).if {
	((stat & 10b) != 0).if {	  
	  stat := 01b;
	  refresh;
	};
	INTERFACE.receive msg;
      } else {
	new_stat := ((evt_mouse.y_relative < 6).to_numeric.to_integer << 1) | 01b;
	(new_stat != stat).if {
	  stat := new_stat;
	  refresh;
	};
      };
    };
  );
  
section PRIVATE

  + width_min:INTEGER;
  
  + height_min:INTEGER;
    
  - update_width_min <-
  ( + obj:AREA;
    + x:INTEGER;
    + is_change:BOOLEAN;
    
    obj := child;
    x := width_min;
    {obj = NULL}.until_do {
      (is_change := (x != obj.width)).if {
	x := x.max (obj.width);
	obj := obj.next;
      };
    };
    (is_change).if {
      // Update item width.
      obj := child;
      {obj = NULL}.until_do {
	(obj.width != x).if {
	  obj.resize x,(obj.height);
	};
	obj := obj.next;
      };
    };
    width_min  := x;
  );

  - open_direct x,y:INTEGER <-
  (
    set_position x,y;
    resize (width_min+2),(height_min+7);
  );
    
