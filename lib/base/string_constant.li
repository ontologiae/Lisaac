/***************************************************************************
*                             Lisaac Library                               *
*                      (c) INRIA 2003 see 'licence.txt' for more details   *
*                      LORIA - UHP - INRIA - FRANCE                        *
*                   Benoit SONNTAG - bsonntag@loria.fr                     *
*                          http://www.IsaacOS.com                          *
***************************************************************************/

section HEADER
  
  + name        :=STRING_CONSTANT -> STRING;
  
  - category    :=MICRO;
  
  - bibliography:="http://IsaacOS.com";
  - author      :="Sonntag Benoît (bsonntag@loria.fr)";
  - comment     :="String built in.";
  
section INHERIT
  
  * parent_abstract_string:ABSTRACT_STRING;
  
section PUBLIC
  
  - to_string:STRING <-
  ( + new:STRING;
    new := STRING.create capacity;
    new.copy self;
    new
  );
  
section PRIVATE

  - capacity:INTEGER <- count;
  
  //
  // Aliasing String.
  //
  
  - bucket:SET[STRING_CONSTANT] := SET[STRING_CONSTANT].make;
  
  //
  // The Guru section: The Compiler consideration.
  //
  
  - set_storage p:NATIVE_ARRAY[CHARACTER] count nb_char:INTEGER <-
  // Do not use directly.
  (
    storage:=p;
    count  :=nb_char;
  );
  
  - new_intern p:NATIVE_ARRAY[CHARACTER], nb_char:INTEGER :STRING_CONSTANT<-
  // Do not use directly. WARNING: Use by c_string and c_argument (COMMAND_LINE). 
  ( + result:STRING_CONSTANT;
    
    result:=clone;
    result.set_storage p count nb_char;    
    //bucket.add result;
    result
  );
  
  - to_external:NATIVE_ARRAY[CHARACTER] <-
  // Gives C access to the internal `storage' (may be dangerous).
  // To be compatible with C, a null character is added at the end
  // of the internal `storage'. This extra null character is not
  // part of the Lisaac STRING.
  (
    to_string.to_external
  );
