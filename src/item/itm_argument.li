Section Header

  + name        := ITM_ARGUMENT;

  - copyright   := "2003-2007 Benoit Sonntag";


  - author      := "Sonntag Benoit (bsonntag@loria.fr)";
  - comment     := "Parent argument";

Section Inherit

  + parent_itm_code:Expanded ITM_OBJECT;

Section Public

  - lower:INTEGER <- 0;

  - upper:INTEGER <- ( deferred; 0);

  - count:INTEGER <- upper + 1;

  //
  // Running.
  //

  - item idx:INTEGER :ITM_TYPE_MONO <-
  (
    deferred;
    NULL
  );

  - to_run_in arg_lst:FAST_ARRAY(LOCAL) for p:PARAMETER_TO_TYPE <-
  (
    deferred;
  );

  - get_index_type p:ITM_TYPE_PARAMETER :INTEGER <-
  (
    deferred;
  );

  - check larg:FAST_ARRAY(EXPR) index idx:INTEGER for p:PARAMETER_TO_TYPE :INTEGER <-
  (
    deferred;
    0
  );

  //
  // Comparaison.
  //

  - is_equal other:ITM_ARGUMENT <-
    ( + o:SELF;
    + err:STRING_CONSTANT;
    //MHMH : ?? SÃ»r ? plante sur gros...
    ? {other != Self};

    o ?= other;
    (o = NULL).if {
      err := "Invariance number vector argument invalid.";
    }.elseif {name != o.name} then {
      err := "Invariance name argument invalid.";
    }.elseif {type != o.type} then {
      err := "Invariance type argument invalid.";
    };
    (err != NULL).if {
      POSITION.put_error warning text err;
      position.put_position;
      (other.position).put_position;
      POSITION.send_error;
    };
  );

  //
  // Display.
  //

  - append_in buffer:STRING <-
  (
    deferred;
  );

  - shorter_in buf:STRING <-
  (
    deferred;
  );


