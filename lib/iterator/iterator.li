/****************************************************************************
*                             Lisaac Library                               *
*                      (c) INRIA 2003 see 'licence.txt' for more details   *
*                      LORIA - UHP - INRIA - FRANCE                        *
*                   Jerome BOUTET  - boutet@loria.fr                       *
*                   Benoit SONNTAG - bsonntag@loria.fr                     *
*                          http://www.IsaacOS.com                          *
****************************************************************************/

section HEADER
  
  - name        := ITERATOR[E];
  - comment     :=" The iterator pattern at work: this abstract class defines a\
                  \ traversal interface for any kind of aggregates data structure..";
  
  - category    := MICRO;
  
  - bibliography:="http://IsaacOS.com";
  - author      :="Boutet Jerome (boutet@loria.fr)";
  
section INHERIT
  
  - parent_object:OBJECT := OBJECT;
  
section PUBLIC
  
  - start <-
  // Positions the iterator to the first object in the
  // aggregate to be traversed.
  (     
    //  deferred
  );
  
  
  - is_off :BOOLEAN <-
  // Returns true when there are no more objects in the
  // sequence.
  (
    //  deferred
  );
  
  
  - item :E <-
  // Returns the object at the current position in the
  // sequence.
  (
    ? {!si_off};
    // deferred
  );
  
  
  - next <-
  // Positions the iterator to the next object in the
  // sequence.
  (
    ? {! is_off};
    // deferred
  );
