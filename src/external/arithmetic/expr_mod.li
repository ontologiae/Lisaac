Section Header

  + name        := EXPR_MOD;

  - copyright   := "2003-2007 Benoit Sonntag";


  - author      := "Sonntag Benoit (bsonntag@loria.fr)";
  - comment     := "Add Binary Expression.";

Section Inherit

  + parent_expr_binary:Expanded EXPR_BINARY;

Section Public

  + symbol:STRING_CONSTANT := "%";

  //
  // Execute.
  //

  - exec_conservator_right right_cst:INTEGER_CST :EXPR <-
  //-- E %   0 -> Error
  //-- E % 2^n -> E & (2^n -1)
  ( + result:EXPR;

    (right_cst.value = 0).if {
      warning_error (position,"Division by zero.");
    }.elseif {right_cst.to_power != -1} then {
      right_cst.set_value (right_cst.value - 1);
      result := EXPR_AND.create position with left and right_cst;
    };
    result
  );

  - exec left_cst:INTEGER_CST and right_cst:INTEGER_CST :EXPR <-
  //-- C1 % C2 -> C3
  (
    left_cst.set_value (left_cst.value % right_cst.value);
    right_cst.remove;
    left_cst
  );

  - exec:EXPR <-
  //-- E % E -> 0
  ( + result:EXPR;

    (left ~= right).if {
      result := INTEGER_CST.create position value 0 type static_type;
      left.remove;
      right.remove;
    };
    result
  );

  - exec_left  left_cst :INTEGER_CST :EXPR <-
  //-- 0 % E -> 0
  ( + result:EXPR;

    (left_cst.value = 0).if {
      result := left_cst;
      right.remove;
    };
    result
  );

  - exec_right right_cst:INTEGER_CST :EXPR <-
  //-- E %   1 -> 0
  //-- E %  -1 -> 0
  ( + result:EXPR;

    (right_cst.value = 1).if {
      right_cst.set_value 0;
      left.remove;
      result := right_cst;
    }.elseif {right_cst.value = -1} then {
      right_cst.set_value 0;
      result := right_cst;
      left.remove;
    };
    result
  );












