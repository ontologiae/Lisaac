Section Header

  + name    := ITM_STRING;

  - comment := "String constant";

Section Inherit

  + parent_itm_constant:Expanded ITM_CONSTANT;

Section Public

  + string:STRING_ALIAS;

  //
  // Constructor
  //

  - create p:POSITION text n:STRING_ALIAS :SELF <-
  ( + result:SELF;
    result := clone;
    result.make p text n;
    result
  );

  - make p:POSITION text n:STRING_ALIAS <-
  (
    position := p;
    string   := n;
  );

  //
  // Runnable
  //
    
  - to_run_expr:EXPR <-
  ( + result:EXPR;
    + slt:SLOT_DATA;
    + wrt:WRITE;
    + len:INTEGER;

    len := length;
    result := STRING_CST.create position text string length len;
    // upper
    wrt := STRING_CST.slot_upper.write position with (result.my_copy) 
    value (INTEGER_CST.create position value (len-1) type (slt.type));
    wrt.set_quiet_generation;
    list_current.add_last wrt;
    // storage
    wrt := STRING_CST.slot_storage.write position with (result.my_copy) 
    value (NATIVE_ARRAY_CHARACTER_CST.create position text string);
    wrt.set_quiet_generation;
    list_current.add_last wrt;
    //
    result
  );

  //
  // Display.
  //

  - append_in buffer:STRING_BUFFER <-
  (
    buffer.add_last '\"';
    buffer.append string;
    buffer.add_last '\"';
  );

Section Private

  - length:INTEGER <-
  ( + i,result:INTEGER;
    i := string.lower;
    {i <= string.upper}.while_do {
      (string.item i = '\\').if {
        i := i + 1;
        (string.item i.is_digit).if {
          i := i + 1;
          (string.item i.is_digit).if {
            i := i + 2;
          };
        };
      };
      result := result + 1;
      i := i + 1;
    };
    result
  );




