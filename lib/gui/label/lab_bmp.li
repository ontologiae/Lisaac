/***************************************************************************
*                      Isaac Object Operating System                       *
*                             Isaac Library                                *
*                      LORIA - UHP - INRIA - FRANCE                        *
*                   Benoit SONNTAG - bsonntag@loria.fr                     *
*                          http://www.IsaacOS.com                          *
****************************************************************************/
section HEADER
  
  + name        := LAB_BMP;
  
  - comment     := "Label Bitmap.";
  
  - category    := MICRO;
  
  - bibliography:= "http://IsaacOS.com";
  
  - author      := "Benoit Sonntag (bsonntag@loria.fr)";
  
section INHERIT
  
  * parent_g_label:GUI_LABEL;
  
section PUBLIC
  
  + bitmap:BITMAP;
  
  //
  // Creation.
  //
  
  - create filename:ABSTRACT_STRING :SELF <-
  ( + result:SELF;
    + entry:ENTRY;
    + bmp_file:BMP_FILE;
    + w,h:INTEGER;
    + bmp:BITMAP;
    
    entry := ENTRY.get_entry filename;
    ((entry = NULL) || {! entry.is_file}).if {
      VIDEO.message ("ERROR: File '" + filename + "' not found.\n");
      die_with_code exit_failure_code;
    };
    bmp_file := entry.open_bmp;
    bmp_file.read_header;
    (! bmp_file.is_valid_bmp).if {
      VIDEO.message "Error: BMP format invalid.\n";
      die_with_code exit_failure_code;      
    };
    w := bmp_file.header.width;
    h := bmp_file.header.height;
    bmp := BITMAP_24.create w,h;
    bmp_file.fill_bitmap bmp;    
    // Close file.
    bmp_file.close;
    //
    result := clone;
    result.make filename with bmp;
    result
  );
  
  - create n:ABSTRACT_STRING with bmp:BITMAP :SELF <-
  ( + result:SELF;
    
    result := clone;
    result.make n with bmp;
    result
  );
    
  - make n:ABSTRACT_STRING with bmp:BITMAP <-
  ( 
    name   := n;
    bitmap := bmp;
  );
    
section G_LABEL
  
  - my_width_min :INTEGER <- bitmap.width;
  
  - my_height_min:INTEGER <- bitmap.height;
  
  - my_display_in bmp:GUI_ITEM to x,y:INTEGER <- 
  (
    bmp.put_bitmap bitmap to x,y;
  );

