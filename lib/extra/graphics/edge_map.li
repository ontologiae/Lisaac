Section Header

  + name        := EDGE_MAP;


  - copyright   := "2003-2005 JÃ©rome Boutet, 2003-2007 Benoit Sonntag";

  - comment     := "Sub prototype for BITMAP.polygone";

Section Inherit

  - parent_object:OBJECT := OBJECT;

Section Public

  // Make.

  + y:INTEGER;
  + x:INTEGER;
  + yb:INTEGER;
  + xb:INTEGER;

  + width:INTEGER;
  + dx:INTEGER;  // REAL_16_16
  + dxb:INTEGER;
  + dyb:INTEGER;

  + is_down:BOOLEAN;
  + is_point:BOOLEAN;

  - x0:INTEGER <- x;
  - y0:INTEGER <- y;
  - x1:INTEGER <- dx;
  - y1:INTEGER <- width;

  + next_y:EDGE_MAP;

  + prev_x:EDGE_MAP;  // doubly linked list
  + next_x:EDGE_MAP;

  //
  // Function.
  //

  - make (xx,yy:INTEGER) add inc:INTEGER on (xxb,yyb:INTEGER) <-
  // Flat.
  (
    next_y   := NULL;
    is_point := TRUE;
    dx       := inc;
    width    := 0;
    x := xx;
    y := yy;
    xb := xxb;
    yb := yyb;
  );

  - make (xx,yy:INTEGER) to (xx1,yy1:INTEGER)
  on (xxb,yyb:INTEGER) to (xx1b,yy1b:INTEGER) <-
  // Line.
  (
    next_y   := NULL;
    is_point := FALSE;
    (is_down := yy < yy1).if {
      // Down.
      y  := yy;
      x  := xx;
      dx := xx1;
      width := yy1;
      //
      xb  := xxb;
      yb  := yyb;
      dxb := xx1b;
      dyb := yy1b;
    } else {
      // up.
      y  := yy1;
      x  := xx1;
      dx := xx;
      width := yy;
      //
      xb  := xx1b;
      yb  := yy1b;
      dxb := xxb;
      dyb := yyb;
    };
  );

  - set_next_x new:EDGE_MAP <-
  (
    next_x:=new;
  );

  - set_prev_x new:EDGE_MAP <-
  (
    prev_x:=new;
  );

  - set_next_y new:EDGE_MAP <-
  (
    next_y := new;
  );

  - add old_root:EDGE_MAP :EDGE_MAP <-
  // Double link and sort with X.
  ( + pos,prv:EDGE_MAP;
    + new_root:EDGE_MAP;

    to_run;
    pos:=old_root;
    {(pos!=NULL) && {(pos.x<x) || {(pos.x=x) && {pos.dx<dx}} } }.while_do {
      prv := pos;
      pos := pos.next_x;
    };
    next_x := pos;
    prev_x := prv;
    (next_x != NULL).if {
      next_x.set_prev_x Self;
    };
    (prev_x!=NULL).if {
      prev_x.set_next_x Self;
      new_root:=old_root;
    } else {
      new_root:=Self;
    };

    new_root
  );

  - next_line old_root:EDGE_MAP :EDGE_MAP <-
  // Remove double link.
  ( + new_root:EDGE_MAP;

    (next_y = NULL).if {
      // Remove
      (next_x!=NULL).if {
	next_x.set_prev_x prev_x;
      };
      (prev_x!=NULL).if {
	prev_x.set_next_x next_x;
	new_root:=old_root;
      } else {
	new_root:=next_x;
      };
    } else {
      // Replace next_y
      next_y.to_run;
      next_y.set_next_x next_x;
      next_y.set_prev_x prev_x;
      (next_x!=NULL).if {
	next_x.set_prev_x next_y;
      };
      (prev_x!=NULL).if {
	prev_x.set_next_x next_y;
	new_root:=old_root;
      } else {
	new_root:=next_y;
      };
    };
    new_root
  );

  - new_step <-
  (
    width:=width-1;
    x  := x  + dx;
    xb := xb + dxb;
    yb := yb + dyb;
  );

Section Private

  - to_run <-
  ( + dy:INTEGER;

    (is_point).if {
      // Point (Flat)
      x  := x0 << 16;
      xb := xb << 16;
      yb := yb << 16;
    } else {
      // Line
      dy := y1 - y0;
      dx := ((x1 - x0)<<16) / dy;
      x  := x0 << 16;
      //
      dxb := ((dxb - xb) << 16) / dy;
      dyb := ((dyb - yb) << 16) / dy;
      xb  := xb << 16;
      yb  := yb << 16;
      //
      (next_y = NULL).if {
	width := dy;
      } else {
	width := dy - 1;
      };
    };
  );

  - display <-
  (
    '{'.print;
    x0.print;
    ','.print;
    y0.print;
    '-'.print;
    x1.print;
    ','.print;
    y1.print;
    '}'.print;
  );

  - display_2 <-
  (
    '{'.print;
    (x>>8).print;
    ','.print;
    y.print;
    'W'.print;
    width.print;
    'D'.print;
    dx.print;
    'N'.print;
    (next_y=NULL).if {
      "null".print;
    } else {
      "=>".print;
    };
    '@'.print;
    INTEGER.force_conversion Self .print;
    '}'.print;
  );






