Section Header
  
  + name     := MY_SCENE3;
  
  - comment   := "first program";
  
Section Inherit
  
  + parent_scene:Expanded SCENE;
  
  - parent_test_any:TEST_ANY := TEST_ANY;
  
Section Public  
  
  - main <-
  (
    start_test Self using CAPABILITIES;
  );
  
Section Public
  
  //
  //  test texturing & blending
  //
  
  + tex1:TEXTURE;
  + tex2:TEXTURE;
  
  + vertex_array:VERTEX_BUFFER;
  + texel_array:VERTEX_BUFFER;
  
  + bl:BLENDING;
  
  + alpha:REAL_32;
  
  - initialize:BOOLEAN <-
  (    
    + x,y:REAL_32;
      
    tex1 := renderer.texture2d.create_from (IMAGE.create "data/texture.tga");
    tex2 := renderer.texture2d.create_from (IMAGE.create "data/flare.bmp");
    
    bl := renderer.blending;
    
    OPENGL.use_arb_vertex_buffer_object.if_false {
      log.append "Cannot support ARB_vertex_buffer_object extension";
    };
    OPENGL.use_arb_multitexture.if_false {
      log.append "Cannot support ARB_multitexture extension";
    };
    
    x := 40;
    y := 150;
    // create two array for vertice & texels
    vertex_array := renderer.vertex_array.create 6;
    vertex_array.new_triangles {
      vertex_array.add_vertex2f (x, y);
      vertex_array.add_vertex2f (x+256, y);
      vertex_array.add_vertex2f (x+256, y+256);
      
      vertex_array.add_vertex2f (x, y);
      vertex_array.add_vertex2f (x, y+256);
      vertex_array.add_vertex2f (x+256, y+256);
    };
    texel_array := vertex_array.create_subarray;
    texel_array.new_triangles {
      texel_array.add_texel2f (0, 0);
      texel_array.add_texel2f (1, 0);
      texel_array.add_texel2f (1, 1);
      
      texel_array.add_texel2f (0, 0);
      texel_array.add_texel2f (0, 1);
      texel_array.add_texel2f (1, 1);
    };
    TRUE
  );
 
  - render t:REAL_32 <-
  (       
    + x,y:INTEGER;
   
    renderer.font.print_zone {
      renderer.color_buffer.set_color3f (1,0,0);
      out.print "MultiTexture test" at (100, 80);
      out.print "Blending test" at (400, 80);
    };  
    
    // orthographic mode (2d)
    renderer.transform.ortho_mode (renderer.width,renderer.height) do {
      
      //
      //  Multitexture test
      //
      
      // set geometry
      vertex_array.bind;
      
      // first texture
      tex1.bind_unit 0;
      texel_array.bind_unit 0;
      
      // second texture
      tex2.bind_unit 1;
      texel_array.bind_unit 1;
      
      // draw arrays
      vertex_array.draw;
      
      // disable multitexturing
      renderer.texture2d.disable_unit 1;
      renderer.texture2d.disable_unit 0;

      //
      // Blending test
      //
      
      bl.enable;
      bl.apply (bl.one, bl.zero); // <=> no blending
      
      x := 400;
      y := 150;
      tex1.draw_strech (x, y, 256, 256);
      bl.apply (bl.src_alpha, bl.one_minus_src_alpha);
      bl.set_alpha_value alpha;
      
      tex2.draw_strech (x, y, 256, 256);
      
      // fading effect
      alpha := alpha + 0.02;
      (alpha > 1.0).if {
        alpha := 0;
      };      
      
      bl.disable;
    }; 
  );
  
