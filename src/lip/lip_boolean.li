///////////////////////////////////////////////////////////////////////////////
//                             Lisaac Compiler                               //
//                                                                           //
//                   LSIIT - ULP - CNRS - INRIA - FRANCE                     //
//                                                                           //
//   This program is free software: you can redistribute it and/or modify    //
//   it under the terms of the GNU General Public License as published by    //
//   the Free Software Foundation, either version 3 of the License, or       //
//   (at your option) any later version.                                     //
//                                                                           //
//   This program is distributed in the hope that it will be useful,         //
//   but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           //
//   GNU General Public License for more details.                            //
//                                                                           //
//   You should have received a copy of the GNU General Public License       //
//   along with this program.  If not, see <http://www.gnu.org/licenses/>.   //
//                                                                           //
//                     http://isaacproject.u-strasbg.fr/                     //
///////////////////////////////////////////////////////////////////////////////
Section Header
  
  + name      := LIP_BOOLEAN;

  - copyright := "2003-2008 Sonntag Benoit";

  - author    := "Sonntag Benoit (sonntag@icps.u-strasbg.fr)";
  - comment   := "The main prototype";

Section Inherit

  + parent_lip_constant:Expanded LIP_CONSTANT;
  
Section Private
  
  - true:LIP_BOOLEAN := 
  ( + result:LIP_BOOLEAN;
    result := clone;
    result.set_value TRUE;
    result
  );
  
  - false:LIP_BOOLEAN := LIP_BOOLEAN;
  
  - set_value i:BOOLEAN <-
  (
    value := i;
  );
  
Section Public

  + value:BOOLEAN;
  
  //
  // Creation.
  //
  
  - get b:BOOLEAN :LIP_BOOLEAN <-
  ( + result:LIP_BOOLEAN;
    b.if {
      result := true;
    } else {
      result := false;
    };
    result
  );
  
  - free; // Nothing.
  
  //
  // Operation.
  //
  
  - name:STRING_CONSTANT <- "BOOLEAN";
  
  - '!' Self:SELF :LIP_CONSTANT <- get (! value);
  
  - copy:LIP_CONSTANT <- Self;
  
  - print <-
  (
    value.print;
  );

Section LIP_CONSTANT
  
  - my_copy other:SELF :LIP_CONSTANT <- other;
           
  - Self:SELF '|#'  other:SELF :LIP_CONSTANT <- 
  ( 
    get (value | other.value)
  );
  
  - Self:SELF '&#'  other:SELF :LIP_CONSTANT <- 
  ( 
    get (value & other.value)
  );
      
  - Self:SELF '=#'  other:SELF :LIP_CONSTANT <- 
  ( 
    get (value = other.value)
  );
  
  - Self:SELF '!=#' other:SELF :LIP_CONSTANT <- 
  ( 
    get (value != other.value)
  );
  