%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 318 446 485 551 
%%LanguageLevel: 1
%%Creator: CorelDRAW 9
%%Title: isaaclogo2.eps
%%CreationDate: Sun Aug 05 00:21:47 2007
%%For: cora
%%DocumentProcessColors: Cyan Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Build: CorelDRAW 9 Version 9.337
%Color profile: Désactivé
%%BeginResource: procset wCorel9Dict 9.0 0
/wCorel9Dict 300 dict def wCorel9Dict begin
% Copyright (c)1992-1999 Corel Corporation
% All rights reserved.     v9.0 r0.5
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CurrentInkName_5 where{pop}{/CurrentInkName_5(Composite)def}
ifelse/$ink_5 where{pop}{/$ink_5 -1 def}ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0
def/$t 1 def/$n _ def/$o 0 def/$fil 0 def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def
/$T 1 def/$N _ def/$O 0 def/$PF false def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0
def/s1t 0 def/s1n _ def/$bkg false def/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op
false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm
matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/p{/$pm xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}
bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}ifelse}bd
/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp}bd
/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}bd
/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld/GetRgb
/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2 systemdict
/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def/SetHsb
systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get def
/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/setcustomcolor where{pop}{/setcustomcolor{exch aload pop SepMode_5 0 eq{pop
@tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll 5 rp 1
sub neg SetGry}ifelse}bd}ifelse/@scc_5{dup type/booleantype eq{setoverprint}{1
eq setoverprint}ifelse dup _ eq{pop setprocesscolor_5 pop}{findcmykcustomcolor
exch setcustomcolor}ifelse SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint
and not}ifelse}bd/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{
/ncolors xd/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop
pop exch pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd
/daqC xd pop pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}
ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub
{dup 3 mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index
2 add get 255 div rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length 3 idiv getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4
mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add
get 255 div $dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop
$dat 3 1 roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}
image}ifelse}bd}ifelse/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5
/$ffpnt xd}bd/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/@sft{$tllx
$pxf add dup $tllx gt{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt{$phei
add}if/$ty xd}bd/@stb{pathbbox/$ury xd/$urx xd/$lly xd/$llx xd}bd/@ep{{cvx exec
}forall}bd/@tp{@sv/$in true def 2 copy dup $lly le{/$in false def}if $phei sub
$ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add $llx le{/$in
false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg 0 rl 0 $phei
rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1 roll 3 index
sub Tl matrix currentmatrix/$ctm xd @ep pop pop pop pop}{pop pop}ifelse @rs}bd
/@th{@sft 0 1 $tly 1 sub{dup $psx mul $tx add{dup $llx gt{$pwid sub}{exit}
ifelse}loop exch $phei mul $ty exch sub 0 1 $tlx 1 sub{$pwid mul 3 copy 3 -1
roll add exch @tp pop}for pop pop}for}bd/@tv{@sft 0 1 $tlx 1 sub{dup $pwid mul
$tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}{exit}ifelse}loop 0 1
$tly 1 sub{$phei mul 3 copy sub @tp pop}for pop pop}for}bd/$fm 0 def/wfill{1
$fm eq{fill}{eofill}ifelse}bd/wclip{1 $fm eq{clip}{eoclip}ifelse}bd/@pf{@gs
$ctm setmatrix $pm concat @stb wclip @sv Bburx Bbury $pm itransform/$tury xd
/$turx xd Bbllx Bblly $pm itransform/$tlly xd/$tllx xd newpath $tllx $tlly m
$tllx $tury l $turx $tury l $turx $tlly l $tllx $tlly m @cp pathbbox @rs/$tury
xd/$turx xd/$tlly xd/$tllx xd/$wid $turx $tllx sub def/$hei $tury $tlly sub def
@gs $vectpat{1 0 0 0 0 _ $o @scc_5{wfill}if}{$t $c $m $y $k $n $o @scc_5{
SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei scale <00> 8 1 false[8 0 0 1 0
0]{}imagemask}{/$bkg true def}ifelse}if}ifelse @gr $wid 0 gt $hei 0 gt and{$pn
cvlit load aload pop/$pd xd 3 -1 roll sub/$phei xd exch sub/$pwid xd $wid $pwid
div ceiling 1 add/$tlx xd $hei $phei div ceiling 1 add/$tly xd $psx 0 eq{@tv}{
@th}ifelse}if @gr @np/$bkg false def}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{@pf}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$t $c $m $y $k $n $o @scc_5{wfill}
{@np}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp
F}bd/S{matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M
$Y $K $N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}
{@np}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}
bd/b{@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat
readhexstring pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd
/Bblly xd/Bbllx xd}bd/@c{@cp}bd/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true
def}{@gs $t $c $m $y $k $n $o @scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd
/$pyf xd/$pxf xd/$pn xd}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd
}bd/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/tcc{@cc}def/@i{@sm @gs @ii 6 index 1 ne
{/$frg true def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg
false def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd
/$lly xd/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi
string def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub
$ury $lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts
1 eq{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load
$bts 1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{7 -2 roll pop pop @I}
ifelse}ifelse}ifelse}bd systemdict/pdfmark known not{/pdfmark/cleartomark ld}
if
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix @@txt @gr @np stringwidth pop 3 -1 roll add exch m}
forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp @ss}if $fil 1 eq
{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq{/@@txt/@Pf ld
@ftx}{$t $c $m $y $k $n $o @scc_5{show}{pop}ifelse}ifelse}ifelse}ifelse $sdf
{$dsf $dsa $dsp @ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF
$SCA $SCP @ss}if $T $C $M $Y $K $N $O @scc_5{{currentpoint 3 -1 roll(0)dup 3 -1
roll 0 exch put dup @gs true charpath $ctm setmatrix $ptm concat stroke @gr @np
stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp
@ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup
@gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}
def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm
matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat
ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd
/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null def
/_bithibyte 0 def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel9Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
360.22394 475.38935 371.16595 542.81906 @E
 0 O 0 @g
0.50 0.00 0.50 0.50 k
/$fm 0 def
365.81839 542.81906 m
364.92945 542.49704 364.34891 538.03502 363.74513 534.61587 c
362.08063 525.18954 360.60491 520.69436 360.28346 510.96529 c
359.99688 502.29609 360.69477 488.31052 363.30605 480.50759 c
364.16154 477.95102 365.02157 475.33635 365.98195 475.38935 C
366.99052 475.36129 367.76636 478.24951 368.51329 480.71962 c
370.84819 488.43950 371.38791 502.50331 371.09225 510.89584 c
370.74671 520.70967 369.32797 525.20598 367.71959 534.73691 c
367.13197 538.21814 366.68948 542.69263 365.81839 542.81906 C
@c
F

@rax 318.43219 446.13439 484.20057 472.84072 @E
[0.00014512 0.00000000 0.00000000 0.00016051 318.43217733 451.08310161] @tm
 0 O 0 @g
0.50 0.00 0.50 0.50 k
e

% FontChange:/_LucidaSans 146119.00000 z
%CHAR: 0 0 (O) @t
54502 -2630 m
42886 -2630 33559 877 26496 7866 c
19434 14855 15903 24694 15903 37382 c
15903 49461 18703 60956 24280 71842 c
29881 82728 37504 91519 47148 98192 c
56816 104889 67726 108225 79903 108225 c
91884 108225 101382 104694 108396 97656 c
115410 90618 118917 80804 118917 68213 c
118917 56037 116067 44469 110344 33510 c
104646 22551 96999 13784 87428 7209 c
77833 658 66874 -2630 54502 -2630 c
@c
57279 8572 m
65169 8572 72524 11105 79318 16171 c
86137 21236 91787 28542 96268 38113 c
100773 47659 103014 57376 103014 67288 c
103014 75787 100773 82874 96317 88524 c
91836 94198 85480 97023 77248 97023 c
69699 97023 62466 94515 55598 89498 c
48731 84481 43032 77175 38551 67604 c
34046 58009 31805 48268 31805 38308 c
31805 29711 34070 22600 38624 16999 c
43154 11373 49388 8572 57279 8572 c
@c
F
T
@rax 318.43219 446.13439 484.20057 472.84072 @E
[0.00014512 0.00000000 0.00000000 0.00016051 318.43217733 451.08310161] @tm
 0 O 0 @g
0.50 0.00 0.50 0.50 k
e

% FontChange:/_LucidaSans 134161.00000 z
%CHAR: 117287 0 (b) @t
130189 0 m
150783 103438 L
163684 103438 L
151453 42059 L
156976 51317 163014 58740 169610 64330 c
176206 69920 182400 72715 188146 72715 c
192261 72715 195548 70949 198007 67438 c
200489 63928 201719 59992 201719 55610 c
201719 46934 199282 37833 194407 28308 c
189555 18783 183585 11404 176497 6194 c
169431 984 161896 -1632 153913 -1632 c
152370 -1632 150715 -1498 148927 -1207 c
147138 -917 145192 -514 143091 0 c
130189 0 L
@c
148390 26676 m
145103 10084 L
146713 9302 148345 8698 150022 8296 c
151677 7871 153376 7670 155120 7670 c
160017 7670 165048 9727 170169 13819 c
175312 17933 179560 23903 182914 31774 c
186290 39622 187967 46755 187967 53128 c
187967 55118 187520 56817 186626 58159 c
185731 59523 184412 60194 182668 60194 c
176117 60194 164691 49013 148390 26676 C
@c
F
%CHAR: 202370 0 (j) @t
187970 -25468 m
190139 -14534 L
194902 -16658 199083 -17732 202705 -17732 c
207334 -17732 211247 -15898 214400 -12231 c
217575 -8564 219766 -3622 220996 2571 c
234636 71150 L
247515 71150 L
235396 9637 l
233384 -380 230812 -7781 227682 -12522 c
224574 -17284 220638 -20951 215898 -23568 c
211158 -26184 206015 -27503 200469 -27503 c
196199 -27503 192040 -26832 187970 -25468 C
@c
237207 84052 m
239756 96954 L
252703 96954 L
250087 84052 L
237207 84052 L
@c
F
%CHAR: 249463 0 (e) @t
316879 7133 m
305609 1297 294988 -1632 285038 -1632 c
277570 -1632 271801 559 267709 4919 c
263617 9279 261582 15227 261582 22740 c
261582 30902 263460 38795 267217 46442 c
270973 54089 276072 60372 282511 65314 c
288951 70256 295950 72715 303508 72715 c
308762 72715 312765 71463 315560 68981 c
318355 66499 319763 62989 319763 58494 c
319763 53128 318042 48186 314621 43669 c
311199 39153 306079 35307 299281 32176 c
292484 29023 284255 27056 274551 26273 C
274551 20214 275870 15742 278509 12902 c
281147 10062 284591 8653 288839 8653 c
292193 8653 296710 9548 302367 11314 c
308024 13081 313681 15831 319361 19588 C
316879 7133 L
@c
275736 35910 m
283562 36648 289555 37923 293714 39712 c
297895 41500 301182 43893 303597 46889 c
306034 49863 307242 52748 307242 55498 c
307242 57242 306526 58874 305117 60372 c
303686 61871 301875 62631 299639 62631 c
296621 62631 293624 61669 290606 59746 c
288168 58226 285910 56213 283853 53731 c
282198 51764 280745 49617 279470 47269 c
278196 44944 276966 41143 275736 35910 C
@c
F
%CHAR: 323947 0 (c) @t
385527 4852 m
375666 537 366901 -1632 359254 -1632 c
351785 -1632 346061 537 342059 4875 c
338056 9235 336066 15406 336066 23389 c
336066 31863 338146 39868 342327 47426 c
346486 54984 352031 61088 358941 65739 c
365828 70390 372960 72715 380295 72715 c
385259 72715 390826 71933 396931 70367 C
394829 60015 L
389686 62005 384744 63011 380026 63011 c
374749 63011 369830 61423 365313 58226 c
360797 55051 357085 50266 354178 43893 c
351271 37498 349818 30946 349818 24171 c
349818 18850 351092 15004 353619 12678 c
356146 10330 359276 9168 362988 9168 c
364821 9168 367057 9481 369696 10084 c
372357 10688 375197 11538 378260 12589 c
381301 13640 384588 15160 388076 17173 C
385527 4852 L
@c
F
%CHAR: 394965 0 (t) @t
441720 -313 m
438657 -1185 435795 -1632 433201 -1632 c
427097 -1632 422423 -224 419159 2616 c
415894 5456 414262 9056 414262 13438 c
414262 16233 414664 19655 415447 23724 c
422960 61446 L
412339 61446 L
414239 71150 L
424883 71150 L
427454 84052 L
440736 85684 L
437852 71150 L
455941 71150 L
453862 61446 L
435906 61446 L
428125 22315 l
427387 18715 427007 16323 427007 15160 c
427007 13327 427656 11672 428930 10241 c
430227 8788 432552 8072 435929 8072 c
438210 8072 440759 8519 443621 9391 C
441720 -313 L
@c
F
%CHAR: 492234 0 (P) @t
504733 0 m
524030 96954 L
551690 96954 l
560813 96954 567543 95165 571881 91610 c
576196 88054 578365 83202 578365 77031 c
578365 70882 576353 64621 572328 58293 c
568326 51965 562892 47135 556050 43781 c
549208 40450 541874 38773 534003 38773 c
526065 38773 L
518351 0 L
504733 0 L
@c
528122 49058 m
534338 49058 l
544132 49058 551511 51920 556475 57645 c
561461 63369 563943 69428 563943 75868 c
563943 80407 562266 83336 558934 84678 c
555580 85997 550549 86668 543797 86668 c
535613 86668 L
528122 49058 L
@c
F
%CHAR: 572867 0 (r) @t
585769 0 m
599923 71150 L
612825 71150 L
607056 42059 L
610432 47918 614412 53351 618996 58405 c
623580 63458 627672 67103 631294 69384 c
634939 71642 638941 72782 643369 72782 c
644308 72782 645403 72715 646633 72581 C
643816 58427 L
641938 59076 640283 59411 638829 59411 c
634603 59411 630131 57086 625436 52457 c
620740 47828 613495 38683 603724 25021 C
598671 0 L
585769 0 L
@c
F
%CHAR: 640397 0 (o) @t
675637 -1632 m
667721 -1632 661840 671 657972 5255 c
654104 9838 652181 15540 652181 22338 c
652181 30768 654193 39108 658240 47359 c
662288 55610 667341 61915 673423 66231 c
679527 70546 686660 72715 694822 72715 c
703028 72715 709020 70412 712799 65806 c
716578 61200 718456 55520 718456 48812 c
718456 40427 716466 32132 712464 23948 c
708461 15764 703453 9458 697438 5009 c
691401 581 684133 -1632 675637 -1632 c
@c
678499 8072 m
685766 8072 691937 12007 697035 19901 c
702156 27771 704705 36492 704705 46062 c
704705 51719 703632 55967 701463 58785 c
699294 61602 696051 63011 691736 63011 c
684804 63011 678767 59098 673624 51294 c
668504 43468 665932 34748 665932 25088 c
665932 19520 667006 15272 669175 12388 c
671343 9503 674452 8072 678499 8072 c
@c
F
%CHAR: 719845 0 (t) @t
766600 -313 m
763537 -1185 760675 -1632 758081 -1632 c
751977 -1632 747303 -224 744039 2616 c
740774 5456 739142 9056 739142 13438 c
739142 16233 739544 19655 740327 23724 c
747840 61446 L
737219 61446 L
739119 71150 L
749763 71150 L
752334 84052 L
765616 85684 L
762732 71150 L
780821 71150 L
778742 61446 L
760786 61446 L
753005 22315 l
752267 18715 751887 16323 751887 15160 c
751887 13327 752536 11672 753810 10241 c
755107 8788 757432 8072 760809 8072 c
763090 8072 765639 8519 768501 9391 C
766600 -313 L
@c
F
%CHAR: 774674 0 (o) @t
809914 -1632 m
801998 -1632 796117 671 792249 5255 c
788381 9838 786458 15540 786458 22338 c
786458 30768 788470 39108 792517 47359 c
796565 55610 801618 61915 807700 66231 c
813804 70546 820937 72715 829099 72715 c
837305 72715 843297 70412 847076 65806 c
850855 61200 852733 55520 852733 48812 c
852733 40427 850743 32132 846741 23948 c
842738 15764 837730 9458 831715 5009 c
825678 581 818410 -1632 809914 -1632 c
@c
812776 8072 m
820043 8072 826214 12007 831312 19901 c
836433 27771 838982 36492 838982 46062 c
838982 51719 837909 55967 835740 58785 c
833571 61602 830328 63011 826013 63011 c
819081 63011 813044 59098 807901 51294 c
802781 43468 800209 34748 800209 25088 c
800209 19520 801283 15272 803452 12388 c
805620 9503 808729 8072 812776 8072 c
@c
F
%CHAR: 854122 0 (t) @t
900877 -313 m
897814 -1185 894952 -1632 892358 -1632 c
886254 -1632 881580 -224 878316 2616 c
875051 5456 873419 9056 873419 13438 c
873419 16233 873821 19655 874604 23724 c
882117 61446 L
871496 61446 L
873396 71150 L
884040 71150 L
886611 84052 L
899893 85684 L
897009 71150 L
915098 71150 L
913019 61446 L
895063 61446 L
887282 22315 l
886544 18715 886164 16323 886164 15160 c
886164 13327 886813 11672 888087 10241 c
889384 8788 891709 8072 895086 8072 c
897367 8072 899916 8519 902778 9391 C
900877 -313 L
@c
F
%CHAR: 908951 0 (y) @t
922322 -25871 m
938534 67 L
926683 71150 L
939920 71150 L
949020 16479 L
983030 71150 L
995418 71150 L
934688 -25871 L
922322 -25871 L
@c
F
%CHAR: 986185 0 (p) @t
994190 -25871 m
1013487 71150 L
1026389 71150 L
1020597 42059 L
1026053 51317 1032068 58740 1038664 64330 c
1045261 69920 1051410 72715 1057111 72715 c
1061203 72715 1064468 70971 1066928 67505 c
1069387 64040 1070617 60037 1070617 55498 c
1070617 46889 1068202 37856 1063395 28375 c
1058587 18894 1052639 11515 1045574 6261 c
1038508 1006 1030950 -1632 1022945 -1632 c
1019949 -1632 1016371 -1096 1012235 0 C
1007092 -25871 L
994190 -25871 L
@c
1017534 26676 m
1014247 10084 L
1017422 8475 1020754 7670 1024220 7670 c
1029094 7670 1034103 9727 1039201 13819 c
1044321 17933 1048548 23903 1051902 31774 c
1055256 39622 1056933 46755 1056933 53128 c
1056933 55163 1056485 56862 1055569 58204 c
1054652 59523 1053333 60194 1051588 60194 c
1045104 60194 1033767 49013 1017534 26676 C
@c
F
%CHAR: 1071268 0 (e) @t
1138684 7133 m
1127414 1297 1116793 -1632 1106843 -1632 c
1099375 -1632 1093606 559 1089514 4919 c
1085422 9279 1083387 15227 1083387 22740 c
1083387 30902 1085265 38795 1089022 46442 c
1092778 54089 1097877 60372 1104316 65314 c
1110756 70256 1117755 72715 1125313 72715 c
1130567 72715 1134570 71463 1137365 68981 c
1140160 66499 1141568 62989 1141568 58494 c
1141568 53128 1139847 48186 1136426 43669 c
1133004 39153 1127884 35307 1121086 32176 c
1114289 29023 1106060 27056 1096356 26273 C
1096356 20214 1097675 15742 1100314 12902 c
1102952 10062 1106396 8653 1110644 8653 c
1113998 8653 1118515 9548 1124172 11314 c
1129829 13081 1135486 15831 1141166 19588 C
1138684 7133 L
@c
1097541 35910 m
1105367 36648 1111360 37923 1115519 39712 c
1119700 41500 1122987 43893 1125402 46889 c
1127839 49863 1129047 52748 1129047 55498 c
1129047 57242 1128331 58874 1126922 60372 c
1125491 61871 1123680 62631 1121444 62631 c
1118426 62631 1115429 61669 1112411 59746 c
1109973 58226 1107715 56213 1105658 53731 c
1104003 51764 1102550 49617 1101275 47269 c
1100001 44944 1098771 41143 1097541 35910 C
@c
F
T
@rax %Note: Object
434.30740 475.48176 458.49458 539.58954 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 1 def
452.73345 512.33131 m
452.36154 512.04217 452.15461 511.91235 451.77137 511.72951 C
449.12466 510.46696 446.33452 508.07877 443.58151 505.72261 C
442.15739 504.50428 440.71427 503.26838 439.28504 502.16910 C
438.23140 494.99943 437.41956 486.80561 436.96800 477.34583 C
434.30740 475.48176 L
435.02740 490.56123 436.67631 502.61414 438.73427 512.13487 C
441.44617 524.68016 444.90841 532.93294 447.91739 537.95282 C
448.55291 539.01326 449.82142 540.03288 450.26164 539.38857 C
453.46394 534.70205 455.70217 525.86787 457.02709 515.37685 C
458.51272 503.61392 458.85487 489.75846 458.12438 477.33704 C
455.46605 475.49055 L
456.19285 487.85017 455.85411 501.62513 454.37839 513.30813 C
453.18614 522.74665 451.25433 530.81546 448.54724 535.65732 C
446.12391 530.84239 443.52283 523.74416 441.35405 513.71036 C
440.69698 510.66935 440.09008 507.45373 439.53392 503.87528 C
440.89483 504.90567 442.29005 506.10161 443.71701 507.32249 C
446.63698 509.82180 449.58869 512.35257 452.61723 513.91162 C
452.73345 512.33131 L
@c
F

@rax %Note: Object
320.36825 468.26617 474.16025 550.22513 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 1 def
424.83458 493.25159 m
424.59789 493.01773 424.36035 492.83603 424.09446 492.62655 C
416.64076 486.75572 409.22986 480.97814 401.31439 476.48835 C
394.14047 472.41893 383.63556 468.26617 375.82072 468.26617 C
354.97701 468.26617 336.79587 479.99537 320.37364 480.27005 C
320.36825 550.08539 L
417.05802 550.08539 L
420.03751 550.06129 443.54636 552.38485 474.16025 538.99115 C
472.57398 538.06054 L
456.70620 543.62665 444.28337 547.98378 415.44454 547.36271 C
395.72079 546.93808 375.93496 542.01203 358.98208 533.17644 C
343.73112 525.22809 330.86835 514.11458 322.63228 500.31043 C
334.10721 500.25827 341.27631 493.29581 348.63761 486.14428 C
356.40000 478.60299 364.38094 470.84967 377.80838 470.87461 C
377.78712 470.87603 L
386.78003 471.45146 394.83439 474.48935 402.43975 478.80369 C
402.86069 479.04236 403.28731 479.29465 403.70655 479.54154 C
404.63433 493.08038 406.34419 504.33307 408.37861 513.37134 C
411.02362 525.12265 414.26192 533.25694 417.07644 537.95282 C
417.71197 539.01326 418.98047 540.03288 419.42069 539.38857 C
422.61279 534.71707 424.81928 525.92882 426.11641 515.48769 C
427.58050 503.70350 427.89118 489.79446 427.15786 477.32655 C
424.49953 475.48006 L
424.83713 481.22079 424.95279 487.24951 424.83458 493.25159 C
@c
424.80170 494.68592 m
424.63417 501.16224 424.19197 507.56003 423.46375 513.42293 C
422.29928 522.79569 420.40205 530.80696 417.72047 535.63011 C
415.48932 531.04961 413.08384 524.20224 410.99669 514.92983 C
408.97276 505.93776 407.27225 494.70775 406.35411 481.15899 C
412.52967 485.06230 418.49291 489.71849 424.49868 494.44866 C
424.60809 494.53483 424.69597 494.60598 424.80170 494.68592 C
@c
F

@rax %Note: Object
382.52183 475.17307 398.03953 538.54668 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 0.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
397.16872 538.08265 m
395.63065 538.54668 L
395.33471 538.20397 394.68416 537.57383 394.11269 536.99499 C
390.90217 533.74365 385.48687 528.25946 385.48687 522.28800 C
385.48687 520.57871 387.42406 515.73487 389.72948 509.97090 C
390.21109 508.76617 390.70970 507.52035 391.20917 506.25609 C
392.40709 503.22416 393.41197 500.63301 394.10702 498.01635 C
394.80378 495.39373 395.20488 492.71499 395.20488 489.49087 C
395.20488 486.57940 394.00101 484.42394 392.22028 482.74214 C
390.25474 480.88573 387.45496 479.33093 384.68381 477.95584 C
383.86460 477.54935 383.04482 477.14258 382.63209 475.95657 C
382.21937 474.77055 383.03915 475.17732 383.85836 475.58381 C
387.13068 477.20778 390.50731 479.11039 393.20617 481.65931 C
396.08986 484.38255 398.03953 487.58258 398.03953 491.46605 C
398.03953 494.80441 397.62850 497.56167 396.91446 500.24948 C
396.19871 502.94409 395.19184 505.54176 393.99279 508.57654 C
393.49332 509.84079 392.99471 511.08661 392.51310 512.29134 C
390.23546 517.98614 388.32151 522.77131 388.32151 524.26318 C
388.32151 529.04013 392.73647 533.51150 395.35370 536.16217 C
396.04252 536.85978 396.71915 537.56164 397.16872 538.08265 C
@c
B

@rax %Note: Object
464.15764 475.42394 482.97458 537.04063 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 0.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
479.90494 475.42394 m
482.97458 477.67153 L
478.67868 479.41342 474.37200 483.44740 471.27883 489.19776 C
468.58479 494.20687 466.82561 500.51622 466.82561 507.74287 C
466.82561 514.67953 468.59754 520.99795 471.22894 526.09493 C
473.85156 531.17461 476.89569 534.44268 479.87802 536.29483 C
478.30337 537.04063 L
474.75269 534.38258 471.55039 530.43732 468.90907 525.32164 C
466.06961 519.82157 464.15764 513.08901 464.15764 505.80964 C
464.15764 498.42283 465.95480 491.97572 468.70724 486.85805 C
471.67200 481.34608 475.75701 477.37106 479.90494 475.42394 C
@c
B

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel9Dict 9.0 0
%%EOF
