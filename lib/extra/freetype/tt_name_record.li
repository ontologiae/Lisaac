Section Header

  + name        := TT_NAME_RECORD;

  - comment     :="Name record.";

  - bibliography:="http://IsaacOS.com";
  - author      :="Boutet Jerome (boutet@loria.fr)";

Section Inherit

  - parent:OBJECT := OBJECT;

Section Mapping

  + platform_id:UINTEGER_16;
  + encoding_id:UINTEGER_16;
  + language_id:UINTEGER_16;
  + name_id:UINTEGER_16;
  + string_length:UINTEGER_16;
  + string_offset:UINTEGER_16;

Section Public

  - to_big_endian <-
  (
    platform_id := PROCESSOR.to_motorola_ushort platform_id;
    encoding_id := PROCESSOR.to_motorola_ushort encoding_id;
    language_id := PROCESSOR.to_motorola_ushort language_id;
    name_id := PROCESSOR.to_motorola_ushort name_id;
    string_length := PROCESSOR.to_motorola_ushort string_length;
    string_offset := PROCESSOR.to_motorola_ushort string_offset;
  );

  - print <-
  (
    "\n       Platform: ".print;
    platform.print;
    "\n       Encoding ID: ".print;
    encoding_id.print;
    
    "\n       Language: ".print;    
    language_id.to_hexadecimal.print;
    "h ".print;
    language.print;
    
    "\n       Name ID: ".print;
    name_id.to_hexadecimal.print;
    "h ".print;
    name.print;
    
    "\n       Str length: ".print;
    string_length.print;
    "\n       Str offset: ".print;
    string_offset.print;
  );

  - platform:STRING_CONSTANT <-
  ( + result:STRING_CONSTANT;

    platform_id.when 0 then { result := "0.Apple"; }
    .when 1 then { result := "1.Mac"; }
    .when 2 then { result := "2.Iso"; }
    .when 3 then { result := "3.Microsoft"; };

    result
  );

  - language:STRING_CONSTANT <-  
  ( + result:STRING_CONSTANT;
    (language_id)
    .when 00 then { result := "English"; }	.when 59 then { result := "Pashto"; }
    .when 01 then { result := "French"; }	.when 60 then { result := "Kurdish"; }
    .when 02 then { result := "German"; }	.when 61 then { result := "Kashmiri"; }
    .when 03 then { result := "Italian"; }	.when 62 then { result := "Sindhi"; }
    .when 04 then { result := "Dutch"; }	.when 63 then { result := "Tibetan"; }
    .when 05 then { result := "Swedish"; }	.when 64 then { result := "Nepali"; }
    .when 06 then { result := "Spanish"; }	.when 65 then { result := "Sanskrit"; }
    .when 07 then { result := "Danish"; }	.when 66 then { result := "Marathi"; }
    .when 08 then { result := "Portuguese"; }	.when 67 then { result := "Bengali"; }
    .when 09 then { result := "Norwegian"; }	.when 68 then { result := "Assamese"; }
    .when 10 then { result := "Hebrew"; }	.when 69 then { result := "Gujarati"; }
    .when 11 then { result := "Japanese"; }	.when 70 then { result := "Punjabi"; }
    .when 12 then { result := "Arabic"; }	.when 71 then { result := "Oriya"; }
    .when 13 then { result := "Finnish"; }	.when 72 then { result := "Malayalam"; }
    .when 14 then { result := "Greek"; }	.when 73 then { result := "Kannada"; }
    .when 15 then { result := "Icelandic"; }	.when 74 then { result := "Tamil"; }
    .when 16 then { result := "Maltese"; }	.when 75 then { result := "Telugu"; }
    .when 17 then { result := "Turkish"; }	.when 76 then { result := "Sinhalese"; }
    .when 18 then { result := "Croatian"; }	.when 77 then { result := "Burmese"; }
    .when 19 then { result := "Chinese (traditional)"; }.when 78 then { result := "Khmer"; }
    .when 20 then { result := "Urdu"; }		.when 79 then { result := "Lao"; }
    .when 21 then { result := "Hindi"; }	.when 80 then { result := "Vietnamese"; }
    .when 22 then { result := "Thai"; }		.when 81 then { result := "Indonesian"; }
    .when 23 then { result := "Korean"; }	.when 82 then { result := "Tagalog"; }
    .when 24 then { result := "Lithuanian"; }	.when 83 then { result := "Malay (Roman script)"; }
    .when 25 then { result := "Polish"; }	.when 84 then { result := "Malay (Arabic script)"; }
    .when 26 then { result := "Hungarian"; }	.when 85 then { result := "Amharic"; }
    .when 27 then { result := "Estonian"; }	.when 86 then { result := "Tigrinya"; }
    .when 28 then { result := "Latvian"; }	.when 87 then { result := "Galla"; }
    .when 29 then { result := "Sami"; }		.when 88 then { result := "Somali"; }
    .when 30 then { result := "Faroese"; }	.when 89 then { result := "Swahili"; }
    .when 31 then { result := "Farsi/Persian"; }.when 90 then { result := "Kinyarwanda/Ruanda"; }
    .when 32 then { result := "Russian"; }	.when 91 then { result := "Rundi"; }
    .when 33 then { result := "Chinese (simplified)"; }.when 92 then { result := "Nyanja/Chewa"; }
    .when 34 then { result := "Flemish"; }	.when 93 then { result := "Malagasy"; }
    .when 35 then { result := "Irish Gaelic"; }	.when 94 then { result := "Esperanto"; }
    .when 36 then { result := "Albanian"; }	.when 128 then { result := "Welsh"; }
    .when 37 then { result := "Romanian"; }	.when 129 then { result := "Basque"; }
    .when 38 then { result := "Czech"; }	.when 130 then { result := "Catalan"; }
    .when 39 then { result := "Slovak"; }	.when 131 then { result := "Latin"; }
    .when 40 then { result := "Slovenian"; }	.when 132 then { result := "Quechua"; }
    .when 41 then { result := "Yiddish"; }	.when 133 then { result := "Guarani"; }
    .when 42 then { result := "Serbian"; }	.when 134 then { result := "Aymara"; }
    .when 43 then { result := "Macedonian"; }	.when 135 then { result := "Tatar"; }
    .when 44 then { result := "Bulgarian"; }	.when 136 then { result := "Uighur"; }
    .when 45 then { result := "Ukrainian"; }	.when 137 then { result := "Dzongkha"; }
    .when 46 then { result := "Byelorussian"; }	.when 138 then { result := "Javanese (Roman)"; }
    .when 47 then { result := "Uzbek"; }	.when 139 then { result := "Sundanese (Roman)"; }
    .when 48 then { result := "Kazakh"; }	.when 140 then { result := "Galician"; }
    .when 49 then { result := "Azerbaijani (Cyrillic)"; }.when 141 then { result := "Afrikaans"; }
    .when 50 then { result := "Azerbaijani (Arabic)"; }.when 142 then { result := "Breton"; }
    .when 51 then { result := "Armenian"; }	.when 143 then { result := "Inuktitut"; }
    .when 52 then { result := "Georgian"; }	.when 144 then { result := "Scottish Gaelic"; }
    .when 53 then { result := "Moldavian"; }	.when 145 then { result := "Manx Gaelic"; }
    .when 54 then { result := "Kirghiz"; }	.when 146 then { result := "Irish Gaelic (with dot above)"; }
    .when 55 then { result := "Tajiki"; }	.when 147 then { result := "Tongan"; }
    .when 56 then { result := "Turkmen"; }	.when 148 then { result := "Greek (polytonic)"; }
    .when 57 then { result := "Mongolian (Mongolian)"; }.when 149 then { result := "Greenlandic"; }
    .when 58 then { result := "Mongolian (Cyrillic)"; }.when 150 then { result := "Azerbaijani (Roman)"; };
    result
  );

  - name:STRING_CONSTANT <-
  ( + result:STRING_CONSTANT;
    (name_id)
    .when 00 then { result := "Copyright notice."; }
    .when 01 then { result := "Font Family."; }
    .when 02 then { result := "Font Subfamily."; }
    .when 03 then { result := "Unique subfamily identification."; }
    .when 04 then { result := "Full name of the font."; }
    .when 05 then { result := "Version of the name table."; }
    .when 06 then { result := "PostScript name of the font."; }
    .when 07 then { result := "Trademark notice."; }
    .when 08 then { result := "Manufacturer name."; }
    .when 09 then { result := "Designer; name of the designer of the typeface."; }
    .when 10 then { result := "Description; description of the typeface (revision information, usage recommendations, history, features, ...)."; }
    .when 11 then { result := "URL of the font vendor."; }
    .when 12 then { result := "URL of the font designer (with protocol, e.g., http://, ftp://)"; }
    .when 13 then { result := "License description"; }
    .when 14 then { result := "License information URL"; }
    .when 15 then { result := "Reserved"; }
    .when 16 then { result := "The Preferred Family IDs allow font designers to include the preferred family/subfamily groupings."; }
    .when 17 then { result := "The Preferred Subfamily IDs allow font designers to include the preferred family/subfamily groupings."; }
    .when 18 then { result := "Compatible Full (Macintosh only)."; }
    .when 19 then { result := "Sample text."; }
    .when 20 to 022 then { result := "Defined by OpenType."; }
    .when 23 to 255 then { result := "Reserved for future expansion."; }
    .when 256 to 32767 then { result := "Font-specific names (layout features and settings, variations, track names, etc.)"; };
    result
  );



