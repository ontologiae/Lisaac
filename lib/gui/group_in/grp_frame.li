/***************************************************************************
*                      Isaac Object Operating System                       *
*                             Isaac Library                                *
*                      LORIA - UHP - INRIA - FRANCE                        *
*                   Benoit SONNTAG - bsonntag@loria.fr                     *
*                          http://www.IsaacOS.com                          *
****************************************************************************/
section HEADER
  
  + name        := GRP_FRAME;
  
  - comment     := "Frame representation";
  
  - category    := MICRO;
  
  - bibliography:= "http://IsaacOS.com";
  
  - author      := "Benoit Sonntag (bsonntag@loria.fr)";
  
section INHERIT
  
  * parent_gui:GUI;
  
section PUBLIC
  
  + root_item:GUI_ITEM;  
  
  + area_intern:GUI_INTERN;
  
  - bmp_tree:AREA <- area_intern.area;
  
  //
  // Creation
  //
  
  - create_in f:AREA at x,y:INTEGER with itm:GUI_ITEM :SELF <- 
  ( + result:SELF;
    
    result := clone;
    result.make_in f at x,y size (itm.width_min),(itm.height_min) with itm;
    result
  );
  
  - create_in f:AREA at x,y:INTEGER size w,h:INTEGER with itm:GUI_ITEM :SELF <- 
  ( + result:SELF;
    
    result := clone;
    result.make_in f at x,y size w,h with itm;
    result
  );

  - make_in f:AREA at x,y:INTEGER size w,h:INTEGER with itm:GUI_ITEM <-
  (
    root_item := itm;
    make_in f at x,y size w,h action self;
    // Clipping intern:    
    area_intern := GUI_INTERN.create_in self at 0,0 size w,h;
    area_intern.resize_area (itm.width_min),(itm.height_min);
    set_position itm at 0,0 size (itm.width_min),(itm.height_min);    
    refresh;
  );
  
  //
  // Line manager.
  //

  - set_position rac:GUI_ITEM at x,y:INTEGER size w,h:INTEGER <-
  ( + grp:ITM_GROUP;
            
    grp ?= rac;
    (grp = NULL).if {
      rac.make bmp_tree from x,y size w,h;
    } else {
      (grp.operator = '|').if {
	set_position (grp.itm_left) at x,y 
	size (grp.itm_left.width_min),h;
	
	set_position (grp.itm_right) at (x+grp.itm_left.width_min),y 
	size (w-grp.itm_left.width_min),h;
      } else {
	set_position (grp.itm_left) at x,y                  
	size w,(grp.itm_left.height_min);
	
	set_position (grp.itm_right) at x,(y+grp.itm_left.height_min) 
	size w,(h-grp.itm_left.height_min);
      };
    };    
  );

  //
  // Display.
  //
  
  - draw x0,y0:INTEGER to x1,y1:INTEGER <-
  (     
    // Nothing.
    //clipping x0,y0 to x1,y1;    
  );
            
  //
  // Event.
  //  

  - receive msg:EVENT <-  
  (     
    receive_nothing msg;
  );
  