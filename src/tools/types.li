Section Header

  + name        := TYPES;

  - comment     := "Aliser TYPE collection.";

Section Inherit

  - parent_any:ANY := ANY;
  
Section Public
  
  - first_index:INTEGER <- (deferred; -1);
  
  - count:INTEGER <- (deferred; 0);
  
  - next_index i:INTEGER :INTEGER <- -1;
  
  - is_empty:BOOLEAN <- count = 0;
    
  - first:TYPE <- (deferred; NULL);

  - item i:INTEGER :TYPE <-
  (
    deferred;
    NULL
  );

  - intersection_is_empty other:TYPES :BOOLEAN <-
  ( + i1,i2:INTEGER;
    + result:BOOLEAN;
    
    (
      (is_empty) || {other.is_empty} ||
      {item (count-1).index < other.first.index} || {first.index > other.item (other.count-1).index}
    ).if {
      result := TRUE;
    } else {
      {
        {(i1 < count) && {item i1.index < other.item i2.index}}.while_do { i1 := i1 + 1; };
        (i1 < count).if {
          {(i2 < other.count) && {other.item i2.index < item i1.index}}.while_do { i2 := i2 + 1; };
        };
      }.do_while {(i1 < count) && {i2 < other.count} && {item i1 != other.item i2}};
      result := (i1 >= count) || {i2 >= other.count};
    };
    result
  );

  //
  // Display.
  //

  - types_append_in buf:STRING_BUFFER <-
  ( 
    deferred;
  );

  - types_print <-
  (
    string_tmp.clear;
    types_append_in string_tmp;
    string_tmp.print;
  );

