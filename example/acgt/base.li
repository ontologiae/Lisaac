///////////////////////////////////////////////////////////////////////////////
//                             Lisaac Example                                //
//                                                                           //
//                   LSIIT - ULP - CNRS - INRIA - FRANCE                     //
//                                                                           //
//   This program is free software: you can redistribute it and/or modify    //
//   it under the terms of the GNU General Public License as published by    //
//   the Free Software Foundation, either version 3 of the License, or       //
//   (at your option) any later version.                                     //
//                                                                           //
//   This program is distributed in the hope that it will be useful,         //
//   but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           //
//   GNU General Public License for more details.                            //
//                                                                           //
//   You should have received a copy of the GNU General Public License       //
//   along with this program.  If not, see <http://www.gnu.org/licenses/>.   //
//                                                                           //
//                     http://isaacproject.u-strasbg.fr/                     //
///////////////////////////////////////////////////////////////////////////////
Section Header
  
  + name      := Expanded BASE;

  - copyright := "2003-2008 Sonntag Benoit";

  - author    := "Sonntag Benoit (sonntag@icps.u-strasbg.fr)";
  - comment   := "The main prototype";
  
  - type := `unsigned char`;
  
  - default := `0`:BASE;
  
Section Insert

  - parent_object:OBJECT := OBJECT;
  
Section Public
  
  - value:UINTEGER_8 <- CONVERT(BASE,UINTEGER_8).on Self;
  
  //
  // Creation.
  //
  
  - create c:UINTEGER_8 :SELF <-
  (
    CONVERT(UINTEGER_8,SELF).on c
  );
  
  //
  // Print.
  //
  
  - print <-
  (    
    acgt.item ((value>>4) & 11b).print;    
    acgt.item ((value>>2) & 11b).print;
    acgt.item (value      & 11b).print;
  );
  
Section Private
  
  - acgt:FAST_ARRAY(CHARACTER) :=
  ( + result:FAST_ARRAY(CHARACTER);
    
    result := FAST_ARRAY(CHARACTER).create_with_capacity 4;
    result.add_last 'A';
    result.add_last 'C';
    result.add_last 'G';
    result.add_last 'T';
    result    
  );
