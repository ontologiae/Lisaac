///////////////////////////////////////////////////////////////////////////////
//                              Lisaac Example                               //
//                                                                           //
//                   LSIIT - ULP - CNRS - INRIA - FRANCE                     //
//                                                                           //
//   This program is free software: you can redistribute it and/or modify    //
//   it under the terms of the GNU General Public License as published by    //
//   the Free Software Foundation, either version 3 of the License, or       //
//   (at your option) any later version.                                     //
//                                                                           //
//   This program is distributed in the hope that it will be useful,         //
//   but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           //
//   GNU General Public License for more details.                            //
//                                                                           //
//   You should have received a copy of the GNU General Public License       //
//   along with this program.  If not, see <http://www.gnu.org/licenses/>.   //
//                                                                           //
//                     http://isaacproject.u-strasbg.fr/                     //
///////////////////////////////////////////////////////////////////////////////
Section Header

	+ name := PLANET;

	- comment := "Planet prototype for the N-Body shootout benchmark. Based on the C version.";

	- author := "Anthony Pajot <anthony.pajot@etu.enseeiht.fr>";
	
Section Inherit

	- parent_object : OBJECT := OBJECT;
	
Section Private

	- make (x_, y_, z_ : REAL_64) original_speed (vx_, vy_, vz_ : REAL_64) mass mass_ : REAL_64 : SELF <-
	(
		x := x_;
		y := y_;
		z := z_;
		
		set_speed_to (vx_, vy_, vz_);
		
		mass := mass_;
		
		Self
	);
	
Section Public

	//**** TO PUT IN REAL IF NOT ALREADY DONE ****
	- pi : REAL_64 := 3.141592653589793;

	- solar_mass : REAL_64 := 4.0 * pi * pi;
	
	- days_per_year : REAL_64 := 365.24;

	+ x : REAL_64; //it's in double in the C code.
	+ y : REAL_64;
	+ z : REAL_64;
	
	+ vx : REAL_64;
	+ vy : REAL_64;
	+ vz : REAL_64;
	
	+ mass : REAL_64;
	
	- offset_body_by (dx_, dy_, dz_ : REAL_64) <-
	(
		x := x + dx_;
		y := y + dy_;
		z := z + dz_;
	);
	
	- set_speed_to (vx_, vy_, vz_ : REAL_64) <-
	(
		vx := vx_;
		vy := vy_;
		vz := vz_;
	);
	
	- offset_speed_by (dvx_, dvy_, dvz_ : REAL_64) <-
	(
		vx := vx + dvx_;
		vy := vy + dvy_;
		vz := vz + dvz_;
	);
	
	//different planets used in the test.
	
	- sun : PLANET := clone.make (0, 0, 0) original_speed (0,0,0) mass solar_mass;
	
	- jupiter : PLANET := 
	(
		clone.make (4.84143144246472090E+00,
    				-1.16032004402742839E+00,
    				-1.03622044471123109E-01)
    			original_speed
    				(1.66007664274403694E-03 * days_per_year,
    				7.69901118419740425E-03 * days_per_year,
    				-6.90460016972063023E-05 * days_per_year)
    			mass (9.54791938424326609E-04 * solar_mass)
    );
    
    - saturn : PLANET := 
	(
		clone.make (8.34336671824457987E+00,
    				4.12479856412430479E+00,
    				-4.03523417114321381E-01)
    			original_speed
    				(-2.76742510726862411E-03 * days_per_year,
					4.99852801234917238E-03 * days_per_year,
					2.30417297573763929E-05 * days_per_year)
    			mass (2.85885980666130812E-04 * solar_mass)
    );
    
    - uranus : PLANET := 
	(
		clone.make (1.28943695621391310E+01,
					-1.51111514016986312E+01,
					-2.23307578892655734E-01)
    			original_speed
    				(2.96460137564761618E-03 * days_per_year,
					2.37847173959480950E-03 * days_per_year,
					-2.96589568540237556E-05 * days_per_year)
    			mass (4.36624404335156298E-05 * solar_mass)
    );
    
    - neptune : PLANET := 
	(
		clone.make (1.53796971148509165E+01,
					-2.59193146099879641E+01,
					1.79258772950371181E-01)
    			original_speed
    				(2.68067772490389322E-03 * days_per_year,
					1.62824170038242295E-03 * days_per_year,
					-9.51592254519715870E-05 * days_per_year)
    			mass (5.15138902046611451E-05 * solar_mass)
    );
	
	
	
