Section Header

  + name    := PAGE;

  - author  := "Sonntag Benoit (bsonntag@loria.fr)";
  - comment := "Output text for GUI.";

Section Inherit

  + parent_area:Expanded AREA;

  - parent_g_expr:G_EXPR := G_EXPR;

  - parent_any:ANY := ANY;

Section Public

  + width_sheet:INTEGER_32;
  + height_sheet:INTEGER_32;

  + color_sheet:UINTEGER_32;

  + origin_x:INTEGER_32;
  + origin_y:INTEGER_32;

  + zoom:REAL_32;

  + ruler_x:INTEGER_32;
  + ruler_y:INTEGER_32;

  + list_graph:LINKED_LIST(GRAPH);
  + list_select:LINKED_LIST(GRAPH);
  + select:SELECT;

  + list_mark:LINKED_LIST(MARK);

  - set_list_graph lst:LINKED_LIST(GRAPH) <-
  (
    list_graph := lst; // BSBS: Fuite de memory
  );

  //
  // Creation.
  //

  - create (w,h:INTEGER_32) :SELF <-
  ( + result:SELF;
    result := clone;
    result.make (w,h);
    result
  );

  - make (w,h:INTEGER_32) <-
  (
    width_sheet  := w;
    height_sheet := h;
    color_sheet  := 0DC_DC_EBh;
    zoom   := 0.0085;
    origin_x := 500;
    origin_y := 30_000;
    list_graph  := LINKED_LIST(GRAPH).create;
    list_select := LINKED_LIST(GRAPH).create;
    list_mark   := LINKED_LIST(MARK).create;
  );

  //
  // File.
  //

  - make_with buf:FAST_ARRAY(UINTEGER_8) at ps:INTEGER :INTEGER <-
  ( + pos:INTEGER;

    pos := ps;
    width_sheet := read_integer_32 buf at pos;
    pos := pos + 4;
    height_sheet := read_integer_32 buf at pos;
    pos := pos + 4;
    color_sheet := buf.item pos;
    pos := pos + 1;
    color_sheet := (color_sheet << 8) | buf.item pos;
    pos := pos + 1;
    color_sheet := (color_sheet << 8) | buf.item pos;
    pos := pos + 1;
    origin_x := read_integer_32 buf at pos;
    pos := pos + 4;
    origin_y := read_integer_32 buf at pos;
    pos := pos + 4;
    zoom := read_real_32 buf at pos;
    pos := pos + 4;
    ruler_x := read_integer_32 buf at pos;
    pos := pos + 4;
    ruler_y := read_integer_32 buf at pos;
    pos := pos + 4;
    pos
  );

  //
  // Width / Height
  //

  - width_min:INTEGER  <- (zoom * (width_sheet  + 50*400*2).to_real_32).to_integer; // 50cm margin

  - height_min:INTEGER <- (zoom * (height_sheet + 50*400*2).to_real_32).to_integer; // 50cm margin

  //
  // Update position.
  //

  - set_position rac:AREA at (x,y:INTEGER) size (w,h:INTEGER) <-
  (
    update rac from (x,y) size (w,h);
    SELECT.init_select_box;
  );

  //
  // Display.
  //

  - draw (x0,y0:INTEGER) to (x1,y1:INTEGER) <-
  ( + px0,py0,px1,py1:INTEGER;
    clipping (x0,y0) to (x1,y1);
    //
    px0 := ecrx 0;
    py0 := ecry height_sheet;
    px1 := ecrx width_sheet;
    py1 := ecry 0;
    rectangle (px0,py0) to (px1,py1) color black;
    rectangle_fill (px0+1,py0+1) to (px1-1,py1-1) color color_sheet;
    //
    color 0FA_FA_FAh;
    rectangle_fill (x_min,y_min) to (x_max,py0-1);
    rectangle_fill (x_min,py1+1) to (x_max,y_max);
    rectangle_fill (x_min,py0) to (px0-1,py1);
    rectangle_fill (px1+1,py0) to (x_max,py1);
    //
    draw_graph;
    //RULER_HORIZONTAL.refresh;
    //RULER_VERTICAL.refresh;
  );

  //
  // Events.
  //

  - receive msg:EVENT <-
  ( + evt_keyboard:EVENT_KEYBOARD;
    + evt_mouse:EVENT_MOUSE;

    evt_keyboard ?= msg;
    (evt_keyboard != NULL).if {
      keyboard_event (evt_keyboard.key);
    };

    evt_mouse ?= msg;
    (evt_mouse != NULL).if {
      mouse_event evt_mouse;
    };

  );

  - keyboard_event key:UINTEGER_16 <-
  (
    // Nothing.
  );

  - mouse_event evt:EVENT_MOUSE <-
  ( + win:AREA;
    + tmp:INTEGER;
    + xr0,yr0,xr1,yr1:INTEGER_32;
    + xs0,ys0,xs1,ys1:INTEGER_32;
    + xmin,ymin,xmax,ymax:INTEGER_32;
    + area:INTEGER_32;
    + s:SELECT;
    + g:GRAPH;

    win := DESK.get_object (evt.x_current,evt.y_current);
    (win != Self).if {
      DESK.receive evt;
    } else {
      clipping_off;
      (evt.left_up).if {
        x0 := x1 := evt.x_relative;
        y0 := y1 := evt.y_relative;
      };
      (evt.left).if {
        //set_mode mode_xor;
        rectangle (x0,y0) to (x1,y1) color 40_80_80h;
        x1 := evt.x_relative;
        y1 := evt.y_relative;
        rectangle (x0,y0) to (x1,y1) color 40_80_80h;
        //set_mode mode_copy;
      };
      (evt.left_down).if {
        //set_mode mode_xor;
        rectangle (x0,y0) to (x1,y1) color 40_80_80h;
        //set_mode mode_copy;
        // Action.
        (x0 > x1).if {
          tmp := x0;
          x0 := x1;
          x1 := tmp;
        };
        (y0 > y1).if {
          tmp := y0;
          y0 := y1;
          y1 := tmp;
        };
        xr1 := realx x1;
        yr1 := realy y1;
        list_select.clear;
        (((x1-x0) < 8) && {(y1-y0) < 8}).if {
          // Selection with point.
          area := 7FFF_FFFFh;
          tmp := -1;
          (list_graph.lower).to (list_graph.upper) do { j:INTEGER;
            s := list_graph.item j.select;
            (xmin,ymin,xmax,ymax) := s.frame;
            (
              (xr1.in_range xmin to xmax) &&
              {yr1.in_range ymin to ymax} &&
              {s.area < area}
            ).if {
              tmp := j;
              area := s.area;
            };
          };
          (tmp != -1).if {
            g := list_graph.item tmp;
            list_select.add_last g;
            select := g.select;
          } else {
            select := NULL;
          };
        } else {
          // Selection with rectangle.
          xr0 := realx x0;
          yr0 := realy y0;
          xs0 := xr1;
          xs1 := xr0;
          ys0 := yr0;
          ys1 := yr1;
          (list_graph.lower).to (list_graph.upper) do { j:INTEGER;
            g := list_graph.item j;
            s := g.select;
            (xmin,ymin,xmax,ymax) := s.frame;
            (
              (xr0 <= xmin) && {xr1 >= xmax} &&
              {yr1 <= ymin} && {yr0 >= ymax}
            ).if {
              list_select.add_last g;
              xs0 := xs0.min xmin;
              xs1 := xs1.max xmax;
              ys0 := ys0.min ymin;
              ys1 := ys1.max ymax;
            };
          };
          (list_select.is_empty).if {
            select := NULL;
          } else {
            select := SELECT.create (xs0,ys0) to (xs1,ys1);
          };
        };
        (select != NULL).if {
          select.display_rectangle;
        } else {
          SELECT.remove;
        };
      };
    };
  );

Section Private

  - x0:INTEGER;
  - y0:INTEGER;

  - x1:INTEGER;
  - y1:INTEGER;

  - draw_graph <-
  (
    (list_graph.lower).to (list_graph.upper) do { i:INTEGER;
      list_graph.item i.draw_in Self;
    };
  );
