///////////////////////////////////////////////////////////////////////////////
//                             Lisaac Compiler                               //
//                                                                           //
//                   LSIIT - ULP - CNRS - INRIA - FRANCE                     //
//                                                                           //
//   This program is free software: you can redistribute it and/or modify    //
//   it under the terms of the GNU General Public License as published by    //
//   the Free Software Foundation, either version 3 of the License, or       //
//   (at your option) any later version.                                     //
//                                                                           //
//   This program is distributed in the hope that it will be useful,         //
//   but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           //
//   GNU General Public License for more details.                            //
//                                                                           //
//   You should have received a copy of the GNU General Public License       //
//   along with this program.  If not, see <http://www.gnu.org/licenses/>.   //
//                                                                           //
//                     http://isaacproject.u-strasbg.fr/                     //
///////////////////////////////////////////////////////////////////////////////
Section Header
  
  + name        := ITM_LIST_IDF;

  - copyright   := "2003-2007 Benoit Sonntag";

  
  - author      := "Sonntag Benoit (bsonntag@loria.fr)";
  - comment     := "List identifier for assignment.";
    
Section Inherit
  
  + parent_itm_code:Expanded ITM_CODE;
  
Section Public 
  
  - is_affect:POSITION; // Nothing (it s good with 0).
  // BSBS: A quoi ca sert ca ??? (Stop the Whisky)
  
  //
  // Data
  //

  + list_name:FAST_ARRAY(STRING_CONSTANT);

  //
  // Constructor
  //

  - create p:POSITION with lst:FAST_ARRAY(STRING_CONSTANT) :SELF <-
  ( + result:SELF;
    result := clone;
    result.make p with lst;
    result
  );
  
  - make p:POSITION with lst:FAST_ARRAY(STRING_CONSTANT) <-
  (
    position  := p;
    list_name := lst;
  );

  //
  // Runnable
  //
      
  - to_run_expr:EXPR <-
  ( 
    semantic_error (position,"ITM_LIST_IDF.to_run_expr");
    NULL
  );
  
  