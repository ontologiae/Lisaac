///////////////////////////////////////////////////////////////////////////////
//                              Lisaac Example                               //
//                                                                           //
//                   LSIIT - ULP - CNRS - INRIA - FRANCE                     //
//                                                                           //
//   This program is free software: you can redistribute it and/or modify    //
//   it under the terms of the GNU General Public License as published by    //
//   the Free Software Foundation, either version 3 of the License, or       //
//   (at your option) any later version.                                     //
//                                                                           //
//   This program is distributed in the hope that it will be useful,         //
//   but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           //
//   GNU General Public License for more details.                            //
//                                                                           //
//   You should have received a copy of the GNU General Public License       //
//   along with this program.  If not, see <http://www.gnu.org/licenses/>.   //
//                                                                           //
//                     http://isaacproject.u-strasbg.fr/                     //
///////////////////////////////////////////////////////////////////////////////
Section Header
  
  + name     := MASTER; 
     
  - author   := "Sonntag Benoit (bsonntag@loria.fr)";
  - comment  := "";
  
Section Inherit  
    
  - parent_object:OBJECT := OBJECT;
  
Section Private  
  
  - action n:INTEGER if_odd odd_block:BLOCK if_even even_block:BLOCK <-
  (
    (n.is_even).if {
      even_block.value;
    } else {
      odd_block.value;
    };
  );
      
Section Public  

  - main <-
  ( + n:INTEGER;
    
    "Entry a number:\n".print;
    IO.read_integer;    
    n := IO.last_integer;
    action n 
    if_odd  { "This integer is odd.\n".print;  }
    if_even { "This integer is even.\n".print; };         
  );
